   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"printf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._out_buffer,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_out_buffer:
  26              	.LVL0:
  27              	.LFB0:
  28              		.file 1 "lib/printf/printf.c"
   1:lib/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:lib/printf/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:lib/printf/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:lib/printf/printf.c **** //
   5:lib/printf/printf.c **** // \license The MIT License (MIT)
   6:lib/printf/printf.c **** //
   7:lib/printf/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:lib/printf/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:lib/printf/printf.c **** // in the Software without restriction, including without limitation the rights
  10:lib/printf/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:lib/printf/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:lib/printf/printf.c **** // furnished to do so, subject to the following conditions:
  13:lib/printf/printf.c **** //
  14:lib/printf/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:lib/printf/printf.c **** // all copies or substantial portions of the Software.
  16:lib/printf/printf.c **** //
  17:lib/printf/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:lib/printf/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:lib/printf/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:lib/printf/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:lib/printf/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:lib/printf/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:lib/printf/printf.c **** // THE SOFTWARE.
  24:lib/printf/printf.c **** //
  25:lib/printf/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:lib/printf/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:lib/printf/printf.c **** //        safe and reentrant!
  28:lib/printf/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:lib/printf/printf.c **** //        malloc for printf (and may not be thread safe).
  30:lib/printf/printf.c **** //
  31:lib/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:lib/printf/printf.c **** 
  33:lib/printf/printf.c **** #include <stdbool.h>
  34:lib/printf/printf.c **** #include <stdint.h>
  35:lib/printf/printf.c **** 
  36:lib/printf/printf.c **** #include "printf.h"
  37:lib/printf/printf.c **** 
  38:lib/printf/printf.c **** 
  39:lib/printf/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  40:lib/printf/printf.c **** // printf_config.h header file
  41:lib/printf/printf.c **** // default: undefined
  42:lib/printf/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  43:lib/printf/printf.c **** #include "printf_config.h"
  44:lib/printf/printf.c **** #endif
  45:lib/printf/printf.c **** 
  46:lib/printf/printf.c **** 
  47:lib/printf/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  48:lib/printf/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  49:lib/printf/printf.c **** // default: 32 byte
  50:lib/printf/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  51:lib/printf/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  52:lib/printf/printf.c **** #endif
  53:lib/printf/printf.c **** 
  54:lib/printf/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  55:lib/printf/printf.c **** // float number including padded zeros (dynamically created on stack)
  56:lib/printf/printf.c **** // default: 32 byte
  57:lib/printf/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  58:lib/printf/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  59:lib/printf/printf.c **** #endif
  60:lib/printf/printf.c **** 
  61:lib/printf/printf.c **** // support for the floating point type (%f)
  62:lib/printf/printf.c **** // default: activated
  63:lib/printf/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  64:lib/printf/printf.c **** #define PRINTF_SUPPORT_FLOAT
  65:lib/printf/printf.c **** #endif
  66:lib/printf/printf.c **** 
  67:lib/printf/printf.c **** // support for exponential floating point notation (%e/%g)
  68:lib/printf/printf.c **** // default: activated
  69:lib/printf/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  70:lib/printf/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  71:lib/printf/printf.c **** #endif
  72:lib/printf/printf.c **** 
  73:lib/printf/printf.c **** // define the default floating point precision
  74:lib/printf/printf.c **** // default: 6 digits
  75:lib/printf/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  76:lib/printf/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  77:lib/printf/printf.c **** #endif
  78:lib/printf/printf.c **** 
  79:lib/printf/printf.c **** // define the largest float suitable to print with %f
  80:lib/printf/printf.c **** // default: 1e9
  81:lib/printf/printf.c **** #ifndef PRINTF_MAX_FLOAT
  82:lib/printf/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  83:lib/printf/printf.c **** #endif
  84:lib/printf/printf.c **** 
  85:lib/printf/printf.c **** // support for the long long types (%llu or %p)
  86:lib/printf/printf.c **** // default: activated
  87:lib/printf/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  88:lib/printf/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  89:lib/printf/printf.c **** #endif
  90:lib/printf/printf.c **** 
  91:lib/printf/printf.c **** // support for the ptrdiff_t type (%t)
  92:lib/printf/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  93:lib/printf/printf.c **** // default: activated
  94:lib/printf/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  95:lib/printf/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  96:lib/printf/printf.c **** #endif
  97:lib/printf/printf.c **** 
  98:lib/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  99:lib/printf/printf.c **** 
 100:lib/printf/printf.c **** // internal flag definitions
 101:lib/printf/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 102:lib/printf/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 103:lib/printf/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 104:lib/printf/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 105:lib/printf/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 106:lib/printf/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 107:lib/printf/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 108:lib/printf/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 109:lib/printf/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 110:lib/printf/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 111:lib/printf/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 112:lib/printf/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 113:lib/printf/printf.c **** 
 114:lib/printf/printf.c **** 
 115:lib/printf/printf.c **** // import float.h for DBL_MAX
 116:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 117:lib/printf/printf.c **** #include <float.h>
 118:lib/printf/printf.c **** #endif
 119:lib/printf/printf.c **** 
 120:lib/printf/printf.c **** 
 121:lib/printf/printf.c **** // output function type
 122:lib/printf/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 123:lib/printf/printf.c **** 
 124:lib/printf/printf.c **** 
 125:lib/printf/printf.c **** // wrapper (used as buffer) for output function type
 126:lib/printf/printf.c **** typedef struct {
 127:lib/printf/printf.c ****   void  (*fct)(char character, void* arg);
 128:lib/printf/printf.c ****   void* arg;
 129:lib/printf/printf.c **** } out_fct_wrap_type;
 130:lib/printf/printf.c **** 
 131:lib/printf/printf.c **** 
 132:lib/printf/printf.c **** // internal buffer output
 133:lib/printf/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 134:lib/printf/printf.c **** {
  29              		.loc 1 134 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 135:lib/printf/printf.c ****   if (idx < maxlen) {
  34              		.loc 1 135 3 view .LVU1
  35              		.loc 1 135 6 is_stmt 0 view .LVU2
  36 0000 9A42     		cmp	r2, r3
 136:lib/printf/printf.c ****     ((char*)buffer)[idx] = character;
  37              		.loc 1 136 5 is_stmt 1 view .LVU3
  38              		.loc 1 136 26 is_stmt 0 view .LVU4
  39 0002 38BF     		it	cc
  40 0004 8854     		strbcc	r0, [r1, r2]
 137:lib/printf/printf.c ****   }
 138:lib/printf/printf.c **** }
  41              		.loc 1 138 1 view .LVU5
  42 0006 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE0:
  46              		.section	.text._out_null,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	_out_null:
  54              	.LVL1:
  55              	.LFB1:
 139:lib/printf/printf.c **** 
 140:lib/printf/printf.c **** 
 141:lib/printf/printf.c **** // internal null output
 142:lib/printf/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 143:lib/printf/printf.c **** {
  56              		.loc 1 143 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 144:lib/printf/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  61              		.loc 1 144 3 view .LVU7
  62              		.loc 1 144 20 view .LVU8
  63              		.loc 1 144 34 view .LVU9
  64              		.loc 1 144 45 view .LVU10
 145:lib/printf/printf.c **** }
  65              		.loc 1 145 1 is_stmt 0 view .LVU11
  66 0000 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE1:
  70              		.section	.text._ntoa_long,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
  77              	_ntoa_long:
  78              	.LVL2:
  79              	.LFB9:
 146:lib/printf/printf.c **** 
 147:lib/printf/printf.c **** 
 148:lib/printf/printf.c **** // internal _putchar wrapper
 149:lib/printf/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 150:lib/printf/printf.c **** {
 151:lib/printf/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 152:lib/printf/printf.c ****   if (character) {
 153:lib/printf/printf.c ****     _putchar(character);
 154:lib/printf/printf.c ****   }
 155:lib/printf/printf.c **** }
 156:lib/printf/printf.c **** 
 157:lib/printf/printf.c **** 
 158:lib/printf/printf.c **** // internal output function wrapper
 159:lib/printf/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 160:lib/printf/printf.c **** {
 161:lib/printf/printf.c ****   (void)idx; (void)maxlen;
 162:lib/printf/printf.c ****   if (character) {
 163:lib/printf/printf.c ****     // buffer is the output fct pointer
 164:lib/printf/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
 165:lib/printf/printf.c ****   }
 166:lib/printf/printf.c **** }
 167:lib/printf/printf.c **** 
 168:lib/printf/printf.c **** 
 169:lib/printf/printf.c **** // internal secure strlen
 170:lib/printf/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 171:lib/printf/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 172:lib/printf/printf.c **** {
 173:lib/printf/printf.c ****   const char* s;
 174:lib/printf/printf.c ****   for (s = str; *s && maxsize--; ++s);
 175:lib/printf/printf.c ****   return (unsigned int)(s - str);
 176:lib/printf/printf.c **** }
 177:lib/printf/printf.c **** 
 178:lib/printf/printf.c **** 
 179:lib/printf/printf.c **** // internal test if char is a digit (0-9)
 180:lib/printf/printf.c **** // \return true if char is a digit
 181:lib/printf/printf.c **** static inline bool _is_digit(char ch)
 182:lib/printf/printf.c **** {
 183:lib/printf/printf.c ****   return (ch >= '0') && (ch <= '9');
 184:lib/printf/printf.c **** }
 185:lib/printf/printf.c **** 
 186:lib/printf/printf.c **** 
 187:lib/printf/printf.c **** // internal ASCII string to unsigned int conversion
 188:lib/printf/printf.c **** static unsigned int _atoi(const char** str)
 189:lib/printf/printf.c **** {
 190:lib/printf/printf.c ****   unsigned int i = 0U;
 191:lib/printf/printf.c ****   while (_is_digit(**str)) {
 192:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 193:lib/printf/printf.c ****   }
 194:lib/printf/printf.c ****   return i;
 195:lib/printf/printf.c **** }
 196:lib/printf/printf.c **** 
 197:lib/printf/printf.c **** 
 198:lib/printf/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 199:lib/printf/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 200:lib/printf/printf.c **** {
 201:lib/printf/printf.c ****   const size_t start_idx = idx;
 202:lib/printf/printf.c **** 
 203:lib/printf/printf.c ****   // pad spaces up to given width
 204:lib/printf/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 205:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 206:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 207:lib/printf/printf.c ****     }
 208:lib/printf/printf.c ****   }
 209:lib/printf/printf.c **** 
 210:lib/printf/printf.c ****   // reverse string
 211:lib/printf/printf.c ****   while (len) {
 212:lib/printf/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 213:lib/printf/printf.c ****   }
 214:lib/printf/printf.c **** 
 215:lib/printf/printf.c ****   // append pad spaces up to given width
 216:lib/printf/printf.c ****   if (flags & FLAGS_LEFT) {
 217:lib/printf/printf.c ****     while (idx - start_idx < width) {
 218:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 219:lib/printf/printf.c ****     }
 220:lib/printf/printf.c ****   }
 221:lib/printf/printf.c **** 
 222:lib/printf/printf.c ****   return idx;
 223:lib/printf/printf.c **** }
 224:lib/printf/printf.c **** 
 225:lib/printf/printf.c **** 
 226:lib/printf/printf.c **** // internal itoa format
 227:lib/printf/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 228:lib/printf/printf.c **** {
 229:lib/printf/printf.c ****   // pad leading zeros
 230:lib/printf/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 231:lib/printf/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 232:lib/printf/printf.c ****       width--;
 233:lib/printf/printf.c ****     }
 234:lib/printf/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 235:lib/printf/printf.c ****       buf[len++] = '0';
 236:lib/printf/printf.c ****     }
 237:lib/printf/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 238:lib/printf/printf.c ****       buf[len++] = '0';
 239:lib/printf/printf.c ****     }
 240:lib/printf/printf.c ****   }
 241:lib/printf/printf.c **** 
 242:lib/printf/printf.c ****   // handle hash
 243:lib/printf/printf.c ****   if (flags & FLAGS_HASH) {
 244:lib/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 245:lib/printf/printf.c ****       len--;
 246:lib/printf/printf.c ****       if (len && (base == 16U)) {
 247:lib/printf/printf.c ****         len--;
 248:lib/printf/printf.c ****       }
 249:lib/printf/printf.c ****     }
 250:lib/printf/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 251:lib/printf/printf.c ****       buf[len++] = 'x';
 252:lib/printf/printf.c ****     }
 253:lib/printf/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 254:lib/printf/printf.c ****       buf[len++] = 'X';
 255:lib/printf/printf.c ****     }
 256:lib/printf/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 257:lib/printf/printf.c ****       buf[len++] = 'b';
 258:lib/printf/printf.c ****     }
 259:lib/printf/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 260:lib/printf/printf.c ****       buf[len++] = '0';
 261:lib/printf/printf.c ****     }
 262:lib/printf/printf.c ****   }
 263:lib/printf/printf.c **** 
 264:lib/printf/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 265:lib/printf/printf.c ****     if (negative) {
 266:lib/printf/printf.c ****       buf[len++] = '-';
 267:lib/printf/printf.c ****     }
 268:lib/printf/printf.c ****     else if (flags & FLAGS_PLUS) {
 269:lib/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 270:lib/printf/printf.c ****     }
 271:lib/printf/printf.c ****     else if (flags & FLAGS_SPACE) {
 272:lib/printf/printf.c ****       buf[len++] = ' ';
 273:lib/printf/printf.c ****     }
 274:lib/printf/printf.c ****   }
 275:lib/printf/printf.c **** 
 276:lib/printf/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 277:lib/printf/printf.c **** }
 278:lib/printf/printf.c **** 
 279:lib/printf/printf.c **** 
 280:lib/printf/printf.c **** // internal itoa for 'long' type
 281:lib/printf/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 282:lib/printf/printf.c **** {
  80              		.loc 1 282 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 24, pretend = 0, frame = 40
  83              		@ frame_needed = 0, uses_anonymous_args = 0
 283:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
  84              		.loc 1 283 3 view .LVU13
 284:lib/printf/printf.c ****   size_t len = 0U;
  85              		.loc 1 284 3 view .LVU14
 285:lib/printf/printf.c **** 
 286:lib/printf/printf.c ****   // no hash for 0 values
 287:lib/printf/printf.c ****   if (!value) {
  86              		.loc 1 287 3 view .LVU15
 282:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
  87              		.loc 1 282 1 is_stmt 0 view .LVU16
  88 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  89              		.cfi_def_cfa_offset 36
  90              		.cfi_offset 4, -36
  91              		.cfi_offset 5, -32
  92              		.cfi_offset 6, -28
  93              		.cfi_offset 7, -24
  94              		.cfi_offset 8, -20
  95              		.cfi_offset 9, -16
  96              		.cfi_offset 10, -12
  97              		.cfi_offset 11, -8
  98              		.cfi_offset 14, -4
  99 0004 8BB0     		sub	sp, sp, #44
 100              		.cfi_def_cfa_offset 80
 282:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 101              		.loc 1 282 1 view .LVU17
 102 0006 0746     		mov	r7, r0
 103 0008 149C     		ldr	r4, [sp, #80]
 104 000a 9DF854B0 		ldrb	fp, [sp, #84]	@ zero_extendqisi2
 105 000e 1698     		ldr	r0, [sp, #88]
 106              	.LVL3:
 282:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 107              		.loc 1 282 1 view .LVU18
 108 0010 1646     		mov	r6, r2
 109 0012 8846     		mov	r8, r1
 110 0014 DDE91852 		ldrd	r5, r2, [sp, #96]
 111              	.LVL4:
 112              		.loc 1 287 6 view .LVU19
 113 0018 0CB9     		cbnz	r4, .L5
 288:lib/printf/printf.c ****     flags &= ~FLAGS_HASH;
 114              		.loc 1 288 5 is_stmt 1 view .LVU20
 115              		.loc 1 288 11 is_stmt 0 view .LVU21
 116 001a 22F01002 		bic	r2, r2, #16
 117              	.LVL5:
 118              	.L5:
 289:lib/printf/printf.c ****   }
 290:lib/printf/printf.c **** 
 291:lib/printf/printf.c ****   // write if precision != 0 and value is != 0
 292:lib/printf/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 119              		.loc 1 292 3 is_stmt 1 view .LVU22
 120              		.loc 1 292 6 is_stmt 0 view .LVU23
 121 001e 12F48061 		ands	r1, r2, #1024
 122              	.LVL6:
 123              		.loc 1 292 6 view .LVU24
 124 0022 0191     		str	r1, [sp, #4]
 125 0024 00D0     		beq	.L6
 126              		.loc 1 292 34 discriminator 1 view .LVU25
 127 0026 14B3     		cbz	r4, .L7
 128              	.L6:
 129 0028 12F0200F 		tst	r2, #32
 130 002c 14BF     		ite	ne
 131 002e 4FF04109 		movne	r9, #65
 132 0032 4FF06109 		moveq	r9, #97
 133              	.LBB22:
 293:lib/printf/printf.c ****     do {
 294:lib/printf/printf.c ****       const char digit = (char)(value % base);
 295:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 134              		.loc 1 295 54 view .LVU26
 135 0036 A446     		mov	ip, r4
 136 0038 0DF1080A 		add	r10, sp, #8
 137 003c 0024     		movs	r4, #0
 138              		.loc 1 295 18 view .LVU27
 139 003e A9F10A09 		sub	r9, r9, #10
 140              	.LVL7:
 141              	.L10:
 142              		.loc 1 295 18 view .LVU28
 143              	.LBE22:
 293:lib/printf/printf.c ****     do {
 144              		.loc 1 293 5 is_stmt 1 view .LVU29
 145              	.LBB23:
 294:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 146              		.loc 1 294 7 view .LVU30
 294:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 147              		.loc 1 294 39 is_stmt 0 view .LVU31
 148 0042 BCFBF0FE 		udiv	lr, ip, r0
 149 0046 00FB1ECE 		mls	lr, r0, lr, ip
 294:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 150              		.loc 1 294 18 view .LVU32
 151 004a 5FFA8EF1 		uxtb	r1, lr
 152              	.LVL8:
 153              		.loc 1 295 7 is_stmt 1 view .LVU33
 154              		.loc 1 295 18 is_stmt 0 view .LVU34
 155 004e BEF1090F 		cmp	lr, #9
 156 0052 94BF     		ite	ls
 157 0054 3031     		addls	r1, r1, #48
 158              	.LVL9:
 159              		.loc 1 295 18 view .LVU35
 160 0056 4944     		addhi	r1, r1, r9
 161 0058 C9B2     		uxtb	r1, r1
 162              	.LBE23:
 296:lib/printf/printf.c ****       value /= base;
 297:lib/printf/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 163              		.loc 1 297 20 view .LVU36
 164 005a 8445     		cmp	ip, r0
 165              	.LBB24:
 295:lib/printf/printf.c ****       value /= base;
 166              		.loc 1 295 18 view .LVU37
 167 005c 0AF8011B 		strb	r1, [r10], #1
 296:lib/printf/printf.c ****       value /= base;
 168              		.loc 1 296 13 view .LVU38
 169 0060 BCFBF0F1 		udiv	r1, ip, r0
 295:lib/printf/printf.c ****       value /= base;
 170              		.loc 1 295 14 view .LVU39
 171 0064 04F10104 		add	r4, r4, #1
 172              	.LVL10:
 296:lib/printf/printf.c ****       value /= base;
 173              		.loc 1 296 7 is_stmt 1 view .LVU40
 296:lib/printf/printf.c ****       value /= base;
 174              		.loc 1 296 7 is_stmt 0 view .LVU41
 175              	.LBE24:
 176              		.loc 1 297 20 is_stmt 1 view .LVU42
 177 0068 01D3     		bcc	.L7
 178              		.loc 1 297 20 is_stmt 0 discriminator 1 view .LVU43
 179 006a 202C     		cmp	r4, #32
 180 006c 12D1     		bne	.L41
 181              	.LVL11:
 182              	.L7:
 298:lib/printf/printf.c ****   }
 299:lib/printf/printf.c **** 
 300:lib/printf/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 183              		.loc 1 300 3 is_stmt 1 view .LVU44
 184              	.LBB25:
 185              	.LBI25:
 227:lib/printf/printf.c **** {
 186              		.loc 1 227 15 view .LVU45
 187              	.LBB26:
 230:lib/printf/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 188              		.loc 1 230 3 view .LVU46
 230:lib/printf/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 189              		.loc 1 230 6 is_stmt 0 view .LVU47
 190 006e 12F0020A 		ands	r10, r2, #2
 191 0072 23D1     		bne	.L11
 231:lib/printf/printf.c ****       width--;
 192              		.loc 1 231 5 is_stmt 1 view .LVU48
 231:lib/printf/printf.c ****       width--;
 193              		.loc 1 231 25 is_stmt 0 view .LVU49
 194 0074 02F0010E 		and	lr, r2, #1
 231:lib/printf/printf.c ****       width--;
 195              		.loc 1 231 8 view .LVU50
 196 0078 4DB1     		cbz	r5, .L12
 231:lib/printf/printf.c ****       width--;
 197              		.loc 1 231 15 view .LVU51
 198 007a BEF1000F 		cmp	lr, #0
 199 007e 06D0     		beq	.L12
 231:lib/printf/printf.c ****       width--;
 200              		.loc 1 231 42 view .LVU52
 201 0080 BBF1000F 		cmp	fp, #0
 202 0084 02D1     		bne	.L13
 231:lib/printf/printf.c ****       width--;
 203              		.loc 1 231 55 view .LVU53
 204 0086 12F00C0F 		tst	r2, #12
 205 008a 00D0     		beq	.L12
 206              	.L13:
 232:lib/printf/printf.c ****     }
 207              		.loc 1 232 7 is_stmt 1 view .LVU54
 232:lib/printf/printf.c ****     }
 208              		.loc 1 232 12 is_stmt 0 view .LVU55
 209 008c 013D     		subs	r5, r5, #1
 210              	.LVL12:
 211              	.L12:
 235:lib/printf/printf.c ****     }
 212              		.loc 1 235 18 view .LVU56
 213 008e 4FF0300C 		mov	ip, #48
 214 0092 05E0     		b	.L14
 215              	.LVL13:
 216              	.L41:
 235:lib/printf/printf.c ****     }
 217              		.loc 1 235 18 view .LVU57
 218              	.LBE26:
 219              	.LBE25:
 220              	.LBB35:
 296:lib/printf/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 221              		.loc 1 296 13 view .LVU58
 222 0094 8C46     		mov	ip, r1
 223 0096 D4E7     		b	.L10
 224              	.LVL14:
 225              	.L16:
 296:lib/printf/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 226              		.loc 1 296 13 view .LVU59
 227              	.LBE35:
 228              	.LBB36:
 229              	.LBB33:
 235:lib/printf/printf.c ****     }
 230              		.loc 1 235 7 is_stmt 1 view .LVU60
 235:lib/printf/printf.c ****     }
 231              		.loc 1 235 18 is_stmt 0 view .LVU61
 232 0098 02A9     		add	r1, sp, #8
 233              	.LVL15:
 235:lib/printf/printf.c ****     }
 234              		.loc 1 235 18 view .LVU62
 235 009a 01F804C0 		strb	ip, [r1, r4]
 236 009e 0134     		adds	r4, r4, #1
 237              	.LVL16:
 238              	.L14:
 234:lib/printf/printf.c ****       buf[len++] = '0';
 239              		.loc 1 234 25 is_stmt 1 view .LVU63
 240 00a0 1799     		ldr	r1, [sp, #92]
 241 00a2 A142     		cmp	r1, r4
 242 00a4 01D9     		bls	.L15
 234:lib/printf/printf.c ****       buf[len++] = '0';
 243              		.loc 1 234 25 is_stmt 0 view .LVU64
 244 00a6 202C     		cmp	r4, #32
 245 00a8 F6D1     		bne	.L16
 246              	.L15:
 238:lib/printf/printf.c ****     }
 247              		.loc 1 238 18 view .LVU65
 248 00aa 4FF0300C 		mov	ip, #48
 249              	.L17:
 237:lib/printf/printf.c ****       buf[len++] = '0';
 250              		.loc 1 237 53 is_stmt 1 view .LVU66
 251 00ae BEF1000F 		cmp	lr, #0
 252 00b2 03D0     		beq	.L11
 237:lib/printf/printf.c ****       buf[len++] = '0';
 253              		.loc 1 237 36 is_stmt 0 view .LVU67
 254 00b4 A542     		cmp	r5, r4
 255 00b6 01D9     		bls	.L11
 237:lib/printf/printf.c ****       buf[len++] = '0';
 256              		.loc 1 237 53 view .LVU68
 257 00b8 1F2C     		cmp	r4, #31
 258 00ba 45D9     		bls	.L18
 259              	.L11:
 260              	.LVL17:
 243:lib/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 261              		.loc 1 243 3 is_stmt 1 view .LVU69
 243:lib/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 262              		.loc 1 243 6 is_stmt 0 view .LVU70
 263 00bc D106     		lsls	r1, r2, #27
 264 00be 22D5     		bpl	.L19
 244:lib/printf/printf.c ****       len--;
 265              		.loc 1 244 5 is_stmt 1 view .LVU71
 244:lib/printf/printf.c ****       len--;
 266              		.loc 1 244 8 is_stmt 0 view .LVU72
 267 00c0 0199     		ldr	r1, [sp, #4]
 268 00c2 0029     		cmp	r1, #0
 269 00c4 46D1     		bne	.L20
 244:lib/printf/printf.c ****       len--;
 270              		.loc 1 244 36 view .LVU73
 271 00c6 002C     		cmp	r4, #0
 272 00c8 44D0     		beq	.L20
 244:lib/printf/printf.c ****       len--;
 273              		.loc 1 244 43 view .LVU74
 274 00ca 1799     		ldr	r1, [sp, #92]
 275 00cc A142     		cmp	r1, r4
 276 00ce 01D0     		beq	.L21
 244:lib/printf/printf.c ****       len--;
 277              		.loc 1 244 61 view .LVU75
 278 00d0 AC42     		cmp	r4, r5
 279 00d2 3FD1     		bne	.L20
 280              	.L21:
 245:lib/printf/printf.c ****       if (len && (base == 16U)) {
 281              		.loc 1 245 7 is_stmt 1 view .LVU76
 282              	.LVL18:
 246:lib/printf/printf.c ****         len--;
 283              		.loc 1 246 7 view .LVU77
 246:lib/printf/printf.c ****         len--;
 284              		.loc 1 246 10 is_stmt 0 view .LVU78
 285 00d4 611E     		subs	r1, r4, #1
 286              	.LVL19:
 246:lib/printf/printf.c ****         len--;
 287              		.loc 1 246 10 view .LVU79
 288 00d6 3CD0     		beq	.L42
 246:lib/printf/printf.c ****         len--;
 289              		.loc 1 246 15 view .LVU80
 290 00d8 1028     		cmp	r0, #16
 291 00da 46D1     		bne	.L43
 247:lib/printf/printf.c ****       }
 292              		.loc 1 247 9 is_stmt 1 view .LVU81
 247:lib/printf/printf.c ****       }
 293              		.loc 1 247 12 is_stmt 0 view .LVU82
 294 00dc 023C     		subs	r4, r4, #2
 295              	.LVL20:
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 296              		.loc 1 250 5 is_stmt 1 view .LVU83
 297              	.L23:
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 298              		.loc 1 250 23 is_stmt 0 view .LVU84
 299 00de 9106     		lsls	r1, r2, #26
 300 00e0 45D4     		bmi	.L24
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 301              		.loc 1 250 53 view .LVU85
 302 00e2 1F2C     		cmp	r4, #31
 303 00e4 1BD8     		bhi	.L28
 251:lib/printf/printf.c ****     }
 304              		.loc 1 251 7 is_stmt 1 view .LVU86
 305              	.LVL21:
 251:lib/printf/printf.c ****     }
 306              		.loc 1 251 18 is_stmt 0 view .LVU87
 307 00e6 04F12801 		add	r1, r4, #40
 308 00ea 6944     		add	r1, sp, r1
 309 00ec 7820     		movs	r0, #120
 310              	.LVL22:
 311              	.L78:
 257:lib/printf/printf.c ****     }
 312              		.loc 1 257 18 view .LVU88
 313 00ee 01F8200C 		strb	r0, [r1, #-32]
 314              	.LVL23:
 257:lib/printf/printf.c ****     }
 315              		.loc 1 257 14 view .LVU89
 316 00f2 0134     		adds	r4, r4, #1
 317              	.L26:
 318              	.LVL24:
 259:lib/printf/printf.c ****       buf[len++] = '0';
 319              		.loc 1 259 5 is_stmt 1 view .LVU90
 259:lib/printf/printf.c ****       buf[len++] = '0';
 320              		.loc 1 259 8 is_stmt 0 view .LVU91
 321 00f4 1F2C     		cmp	r4, #31
 322 00f6 12D8     		bhi	.L28
 260:lib/printf/printf.c ****     }
 323              		.loc 1 260 7 is_stmt 1 view .LVU92
 324              	.LVL25:
 260:lib/printf/printf.c ****     }
 325              		.loc 1 260 18 is_stmt 0 view .LVU93
 326 00f8 04F12801 		add	r1, r4, #40
 327 00fc 6944     		add	r1, sp, r1
 328 00fe 3020     		movs	r0, #48
 329 0100 01F8200C 		strb	r0, [r1, #-32]
 260:lib/printf/printf.c ****     }
 330              		.loc 1 260 14 view .LVU94
 331 0104 0134     		adds	r4, r4, #1
 332              	.LVL26:
 333              	.L19:
 264:lib/printf/printf.c ****     if (negative) {
 334              		.loc 1 264 3 is_stmt 1 view .LVU95
 264:lib/printf/printf.c ****     if (negative) {
 335              		.loc 1 264 6 is_stmt 0 view .LVU96
 336 0106 1F2C     		cmp	r4, #31
 337 0108 09D8     		bhi	.L28
 265:lib/printf/printf.c ****       buf[len++] = '-';
 338              		.loc 1 265 5 is_stmt 1 view .LVU97
 265:lib/printf/printf.c ****       buf[len++] = '-';
 339              		.loc 1 265 8 is_stmt 0 view .LVU98
 340 010a BBF1000F 		cmp	fp, #0
 341 010e 35D0     		beq	.L30
 266:lib/printf/printf.c ****     }
 342              		.loc 1 266 7 is_stmt 1 view .LVU99
 343              	.LVL27:
 266:lib/printf/printf.c ****     }
 344              		.loc 1 266 18 is_stmt 0 view .LVU100
 345 0110 04F12801 		add	r1, r4, #40
 346 0114 6944     		add	r1, sp, r1
 347 0116 2D20     		movs	r0, #45
 348              	.LVL28:
 349              	.L79:
 272:lib/printf/printf.c ****     }
 350              		.loc 1 272 18 view .LVU101
 351 0118 01F8200C 		strb	r0, [r1, #-32]
 272:lib/printf/printf.c ****     }
 352              		.loc 1 272 14 view .LVU102
 353 011c 0134     		adds	r4, r4, #1
 354              	.L28:
 355              	.LVL29:
 276:lib/printf/printf.c **** }
 356              		.loc 1 276 3 is_stmt 1 view .LVU103
 357              	.LBB27:
 358              	.LBI27:
 199:lib/printf/printf.c **** {
 359              		.loc 1 199 15 view .LVU104
 360              	.LBB28:
 201:lib/printf/printf.c **** 
 361              		.loc 1 201 3 view .LVU105
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 362              		.loc 1 204 3 view .LVU106
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 363              		.loc 1 204 6 is_stmt 0 view .LVU107
 364 011e 9207     		lsls	r2, r2, #30
 365              	.LVL30:
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 366              		.loc 1 204 6 view .LVU108
 367 0120 4DD0     		beq	.L44
 368              	.LBB29:
 369 0122 B146     		mov	r9, r6
 370              	.LVL31:
 371              	.L33:
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 372              		.loc 1 204 6 view .LVU109
 373 0124 A144     		add	r9, r9, r4
 374              	.LVL32:
 375              	.L34:
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 376              		.loc 1 204 6 view .LVU110
 377 0126 4846     		mov	r0, r9
 378 0128 A9EB0402 		sub	r2, r9, r4
 379              	.LVL33:
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 380              		.loc 1 204 6 view .LVU111
 381              	.LBE29:
 211:lib/printf/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 382              		.loc 1 211 10 is_stmt 1 view .LVU112
 383 012c 002C     		cmp	r4, #0
 384 012e 4AD1     		bne	.L37
 216:lib/printf/printf.c ****     while (idx - start_idx < width) {
 385              		.loc 1 216 3 view .LVU113
 216:lib/printf/printf.c ****     while (idx - start_idx < width) {
 386              		.loc 1 216 6 is_stmt 0 view .LVU114
 387 0130 BAF1000F 		cmp	r10, #0
 388 0134 05D0     		beq	.L4
 389 0136 A9EB0609 		sub	r9, r9, r6
 390              	.LVL34:
 391              	.L39:
 217:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 392              		.loc 1 217 28 view .LVU115
 393 013a A945     		cmp	r9, r5
 394 013c 06EB0900 		add	r0, r6, r9
 395              	.LVL35:
 217:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 396              		.loc 1 217 28 is_stmt 1 view .LVU116
 397 0140 49D3     		bcc	.L40
 398              	.LVL36:
 399              	.L4:
 217:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 400              		.loc 1 217 28 is_stmt 0 view .LVU117
 401              	.LBE28:
 402              	.LBE27:
 403              	.LBE33:
 404              	.LBE36:
 301:lib/printf/printf.c **** }
 405              		.loc 1 301 1 view .LVU118
 406 0142 0BB0     		add	sp, sp, #44
 407              		.cfi_remember_state
 408              		.cfi_def_cfa_offset 36
 409              		@ sp needed
 410 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 411              	.LVL37:
 412              	.L18:
 413              		.cfi_restore_state
 414              	.LBB37:
 415              	.LBB34:
 238:lib/printf/printf.c ****     }
 416              		.loc 1 238 7 is_stmt 1 view .LVU119
 238:lib/printf/printf.c ****     }
 417              		.loc 1 238 18 is_stmt 0 view .LVU120
 418 0148 02A9     		add	r1, sp, #8
 419              	.LVL38:
 238:lib/printf/printf.c ****     }
 420              		.loc 1 238 18 view .LVU121
 421 014a 01F804C0 		strb	ip, [r1, r4]
 422 014e 0134     		adds	r4, r4, #1
 423              	.LVL39:
 238:lib/printf/printf.c ****     }
 424              		.loc 1 238 18 view .LVU122
 425 0150 ADE7     		b	.L17
 426              	.LVL40:
 427              	.L42:
 238:lib/printf/printf.c ****     }
 428              		.loc 1 238 18 view .LVU123
 429 0152 0C46     		mov	r4, r1
 430              	.LVL41:
 431              	.L20:
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 432              		.loc 1 250 5 is_stmt 1 view .LVU124
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 433              		.loc 1 250 8 is_stmt 0 view .LVU125
 434 0154 1028     		cmp	r0, #16
 435 0156 C2D0     		beq	.L23
 436              	.L22:
 253:lib/printf/printf.c ****       buf[len++] = 'X';
 437              		.loc 1 253 10 is_stmt 1 view .LVU126
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 438              		.loc 1 256 10 view .LVU127
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 439              		.loc 1 256 13 is_stmt 0 view .LVU128
 440 0158 0228     		cmp	r0, #2
 441 015a CBD1     		bne	.L26
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 442              		.loc 1 256 27 view .LVU129
 443 015c 1F2C     		cmp	r4, #31
 444 015e DED8     		bhi	.L28
 257:lib/printf/printf.c ****     }
 445              		.loc 1 257 7 is_stmt 1 view .LVU130
 446              	.LVL42:
 257:lib/printf/printf.c ****     }
 447              		.loc 1 257 18 is_stmt 0 view .LVU131
 448 0160 04F12801 		add	r1, r4, #40
 449 0164 6944     		add	r1, sp, r1
 450 0166 6220     		movs	r0, #98
 451              	.LVL43:
 257:lib/printf/printf.c ****     }
 452              		.loc 1 257 18 view .LVU132
 453 0168 C1E7     		b	.L78
 454              	.LVL44:
 455              	.L43:
 257:lib/printf/printf.c ****     }
 456              		.loc 1 257 18 view .LVU133
 457 016a 0C46     		mov	r4, r1
 458 016c F4E7     		b	.L22
 459              	.LVL45:
 460              	.L24:
 253:lib/printf/printf.c ****       buf[len++] = 'X';
 461              		.loc 1 253 10 is_stmt 1 view .LVU134
 253:lib/printf/printf.c ****       buf[len++] = 'X';
 462              		.loc 1 253 57 is_stmt 0 view .LVU135
 463 016e 1F2C     		cmp	r4, #31
 464 0170 D5D8     		bhi	.L28
 254:lib/printf/printf.c ****     }
 465              		.loc 1 254 7 is_stmt 1 view .LVU136
 466              	.LVL46:
 254:lib/printf/printf.c ****     }
 467              		.loc 1 254 18 is_stmt 0 view .LVU137
 468 0172 04F12801 		add	r1, r4, #40
 469 0176 6944     		add	r1, sp, r1
 470 0178 5820     		movs	r0, #88
 471              	.LVL47:
 254:lib/printf/printf.c ****     }
 472              		.loc 1 254 18 view .LVU138
 473 017a B8E7     		b	.L78
 474              	.LVL48:
 475              	.L30:
 268:lib/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 476              		.loc 1 268 10 is_stmt 1 view .LVU139
 268:lib/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 477              		.loc 1 268 13 is_stmt 0 view .LVU140
 478 017c 5007     		lsls	r0, r2, #29
 479 017e 04D5     		bpl	.L31
 269:lib/printf/printf.c ****     }
 480              		.loc 1 269 7 is_stmt 1 view .LVU141
 481              	.LVL49:
 269:lib/printf/printf.c ****     }
 482              		.loc 1 269 18 is_stmt 0 view .LVU142
 483 0180 04F12801 		add	r1, r4, #40
 484 0184 6944     		add	r1, sp, r1
 485 0186 2B20     		movs	r0, #43
 486 0188 C6E7     		b	.L79
 487              	.LVL50:
 488              	.L31:
 271:lib/printf/printf.c ****       buf[len++] = ' ';
 489              		.loc 1 271 10 is_stmt 1 view .LVU143
 271:lib/printf/printf.c ****       buf[len++] = ' ';
 490              		.loc 1 271 13 is_stmt 0 view .LVU144
 491 018a 1107     		lsls	r1, r2, #28
 492 018c C7D5     		bpl	.L28
 272:lib/printf/printf.c ****     }
 493              		.loc 1 272 7 is_stmt 1 view .LVU145
 494              	.LVL51:
 272:lib/printf/printf.c ****     }
 495              		.loc 1 272 18 is_stmt 0 view .LVU146
 496 018e 04F12801 		add	r1, r4, #40
 497 0192 6944     		add	r1, sp, r1
 498 0194 2020     		movs	r0, #32
 499 0196 BFE7     		b	.L79
 500              	.LVL52:
 501              	.L35:
 502              	.LBB32:
 503              	.LBB31:
 504              	.LBB30:
 206:lib/printf/printf.c ****     }
 505              		.loc 1 206 7 is_stmt 1 view .LVU147
 206:lib/printf/printf.c ****     }
 506              		.loc 1 206 7 is_stmt 0 view .LVU148
 507 0198 4146     		mov	r1, r8
 508 019a 2020     		movs	r0, #32
 509 019c 0193     		str	r3, [sp, #4]
 510 019e B847     		blx	r7
 511              	.LVL53:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 512              		.loc 1 205 38 is_stmt 1 view .LVU149
 513 01a0 019B     		ldr	r3, [sp, #4]
 514 01a2 09F10109 		add	r9, r9, #1
 515              	.LVL54:
 516              	.L32:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 517              		.loc 1 205 28 is_stmt 0 view .LVU150
 518 01a6 4D45     		cmp	r5, r9
 519 01a8 0BEB0902 		add	r2, fp, r9
 520              	.LVL55:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 521              		.loc 1 205 28 is_stmt 1 view .LVU151
 522 01ac F4D8     		bhi	.L35
 523 01ae A5EB0409 		sub	r9, r5, r4
 524              	.LVL56:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 525              		.loc 1 205 28 is_stmt 0 view .LVU152
 526 01b2 A542     		cmp	r5, r4
 527 01b4 38BF     		it	cc
 528 01b6 4FF00009 		movcc	r9, #0
 529 01ba B144     		add	r9, r9, r6
 530 01bc B2E7     		b	.L33
 531              	.LVL57:
 532              	.L44:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 533              		.loc 1 205 17 view .LVU153
 534 01be A146     		mov	r9, r4
 535 01c0 A6EB040B 		sub	fp, r6, r4
 536              	.LVL58:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 537              		.loc 1 205 17 view .LVU154
 538 01c4 EFE7     		b	.L32
 539              	.LVL59:
 540              	.L37:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 541              		.loc 1 205 17 view .LVU155
 542              	.LBE30:
 212:lib/printf/printf.c ****   }
 543              		.loc 1 212 5 is_stmt 1 view .LVU156
 544 01c6 013C     		subs	r4, r4, #1
 545              	.LVL60:
 212:lib/printf/printf.c ****   }
 546              		.loc 1 212 5 is_stmt 0 view .LVU157
 547 01c8 02A8     		add	r0, sp, #8
 548              	.LVL61:
 212:lib/printf/printf.c ****   }
 549              		.loc 1 212 5 view .LVU158
 550 01ca 4146     		mov	r1, r8
 551 01cc 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 552              	.LVL62:
 212:lib/printf/printf.c ****   }
 553              		.loc 1 212 5 view .LVU159
 554 01ce 0193     		str	r3, [sp, #4]
 555 01d0 B847     		blx	r7
 556              	.LVL63:
 557 01d2 019B     		ldr	r3, [sp, #4]
 558 01d4 A7E7     		b	.L34
 559              	.LVL64:
 560              	.L40:
 218:lib/printf/printf.c ****     }
 561              		.loc 1 218 7 is_stmt 1 view .LVU160
 218:lib/printf/printf.c ****     }
 562              		.loc 1 218 7 is_stmt 0 view .LVU161
 563 01d6 0246     		mov	r2, r0
 564 01d8 4146     		mov	r1, r8
 565 01da 2020     		movs	r0, #32
 566 01dc 0193     		str	r3, [sp, #4]
 567 01de 09F10109 		add	r9, r9, #1
 568 01e2 B847     		blx	r7
 569              	.LVL65:
 570 01e4 019B     		ldr	r3, [sp, #4]
 571 01e6 A8E7     		b	.L39
 572              	.LBE31:
 573              	.LBE32:
 574              	.LBE34:
 575              	.LBE37:
 576              		.cfi_endproc
 577              	.LFE9:
 579              		.section	.text._out_char,"ax",%progbits
 580              		.align	1
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 584              		.fpu fpv4-sp-d16
 586              	_out_char:
 587              	.LVL66:
 588              	.LFB2:
 150:lib/printf/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 589              		.loc 1 150 1 is_stmt 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 151:lib/printf/printf.c ****   if (character) {
 594              		.loc 1 151 3 view .LVU163
 151:lib/printf/printf.c ****   if (character) {
 595              		.loc 1 151 17 view .LVU164
 151:lib/printf/printf.c ****   if (character) {
 596              		.loc 1 151 28 view .LVU165
 152:lib/printf/printf.c ****     _putchar(character);
 597              		.loc 1 152 3 view .LVU166
 152:lib/printf/printf.c ****     _putchar(character);
 598              		.loc 1 152 6 is_stmt 0 view .LVU167
 599 0000 08B1     		cbz	r0, .L80
 153:lib/printf/printf.c ****   }
 600              		.loc 1 153 5 is_stmt 1 view .LVU168
 601 0002 FFF7FEBF 		b	_putchar
 602              	.LVL67:
 603              	.L80:
 155:lib/printf/printf.c **** 
 604              		.loc 1 155 1 is_stmt 0 view .LVU169
 605 0006 7047     		bx	lr
 606              		.cfi_endproc
 607              	.LFE2:
 609              		.section	.text._out_fct,"ax",%progbits
 610              		.align	1
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	_out_fct:
 617              	.LVL68:
 618              	.LFB3:
 160:lib/printf/printf.c ****   (void)idx; (void)maxlen;
 619              		.loc 1 160 1 is_stmt 1 view -0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 161:lib/printf/printf.c ****   if (character) {
 624              		.loc 1 161 3 view .LVU171
 161:lib/printf/printf.c ****   if (character) {
 625              		.loc 1 161 14 view .LVU172
 162:lib/printf/printf.c ****     // buffer is the output fct pointer
 626              		.loc 1 162 3 view .LVU173
 162:lib/printf/printf.c ****     // buffer is the output fct pointer
 627              		.loc 1 162 6 is_stmt 0 view .LVU174
 628 0000 10B1     		cbz	r0, .L82
 629              	.LVL69:
 630              	.LBB40:
 631              	.LBI40:
 159:lib/printf/printf.c **** {
 632              		.loc 1 159 20 is_stmt 1 view .LVU175
 633              	.LBB41:
 164:lib/printf/printf.c ****   }
 634              		.loc 1 164 5 view .LVU176
 164:lib/printf/printf.c ****   }
 635              		.loc 1 164 6 is_stmt 0 view .LVU177
 636 0002 D1E90031 		ldrd	r3, r1, [r1]
 637              	.LVL70:
 164:lib/printf/printf.c ****   }
 638              		.loc 1 164 6 view .LVU178
 639 0006 1847     		bx	r3	@ indirect register sibling call
 640              	.LVL71:
 641              	.L82:
 164:lib/printf/printf.c ****   }
 642              		.loc 1 164 6 view .LVU179
 643              	.LBE41:
 644              	.LBE40:
 166:lib/printf/printf.c **** 
 645              		.loc 1 166 1 view .LVU180
 646 0008 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE3:
 650              		.section	.text._vsnprintf,"ax",%progbits
 651              		.align	1
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv4-sp-d16
 657              	_vsnprintf:
 658              	.LVL72:
 659              	.LFB10:
 302:lib/printf/printf.c **** 
 303:lib/printf/printf.c **** 
 304:lib/printf/printf.c **** // internal itoa for 'long long' type
 305:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 306:lib/printf/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 307:lib/printf/printf.c **** {
 308:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 309:lib/printf/printf.c ****   size_t len = 0U;
 310:lib/printf/printf.c **** 
 311:lib/printf/printf.c ****   // no hash for 0 values
 312:lib/printf/printf.c ****   if (!value) {
 313:lib/printf/printf.c ****     flags &= ~FLAGS_HASH;
 314:lib/printf/printf.c ****   }
 315:lib/printf/printf.c **** 
 316:lib/printf/printf.c ****   // write if precision != 0 and value is != 0
 317:lib/printf/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 318:lib/printf/printf.c ****     do {
 319:lib/printf/printf.c ****       const char digit = (char)(value % base);
 320:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 321:lib/printf/printf.c ****       value /= base;
 322:lib/printf/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 323:lib/printf/printf.c ****   }
 324:lib/printf/printf.c **** 
 325:lib/printf/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 326:lib/printf/printf.c **** }
 327:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 328:lib/printf/printf.c **** 
 329:lib/printf/printf.c **** 
 330:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 331:lib/printf/printf.c **** 
 332:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 333:lib/printf/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 334:lib/printf/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 335:lib/printf/printf.c **** #endif
 336:lib/printf/printf.c **** 
 337:lib/printf/printf.c **** 
 338:lib/printf/printf.c **** // internal ftoa for fixed decimal floating point
 339:lib/printf/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 340:lib/printf/printf.c **** {
 341:lib/printf/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 342:lib/printf/printf.c ****   size_t len  = 0U;
 343:lib/printf/printf.c ****   double diff = 0.0;
 344:lib/printf/printf.c **** 
 345:lib/printf/printf.c ****   // powers of 10
 346:lib/printf/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 347:lib/printf/printf.c **** 
 348:lib/printf/printf.c ****   // test for special values
 349:lib/printf/printf.c ****   if (value != value)
 350:lib/printf/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 351:lib/printf/printf.c ****   if (value < -DBL_MAX)
 352:lib/printf/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 353:lib/printf/printf.c ****   if (value > DBL_MAX)
 354:lib/printf/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 355:lib/printf/printf.c **** 
 356:lib/printf/printf.c ****   // test for very large values
 357:lib/printf/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 358:lib/printf/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 359:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 360:lib/printf/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 361:lib/printf/printf.c **** #else
 362:lib/printf/printf.c ****     return 0U;
 363:lib/printf/printf.c **** #endif
 364:lib/printf/printf.c ****   }
 365:lib/printf/printf.c **** 
 366:lib/printf/printf.c ****   // test for negative
 367:lib/printf/printf.c ****   bool negative = false;
 368:lib/printf/printf.c ****   if (value < 0) {
 369:lib/printf/printf.c ****     negative = true;
 370:lib/printf/printf.c ****     value = 0 - value;
 371:lib/printf/printf.c ****   }
 372:lib/printf/printf.c **** 
 373:lib/printf/printf.c ****   // set default precision, if not set explicitly
 374:lib/printf/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 375:lib/printf/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 376:lib/printf/printf.c ****   }
 377:lib/printf/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 378:lib/printf/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 379:lib/printf/printf.c ****     buf[len++] = '0';
 380:lib/printf/printf.c ****     prec--;
 381:lib/printf/printf.c ****   }
 382:lib/printf/printf.c **** 
 383:lib/printf/printf.c ****   int whole = (int)value;
 384:lib/printf/printf.c ****   double tmp = (value - whole) * pow10[prec];
 385:lib/printf/printf.c ****   unsigned long frac = (unsigned long)tmp;
 386:lib/printf/printf.c ****   diff = tmp - frac;
 387:lib/printf/printf.c **** 
 388:lib/printf/printf.c ****   if (diff > 0.5) {
 389:lib/printf/printf.c ****     ++frac;
 390:lib/printf/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 391:lib/printf/printf.c ****     if (frac >= pow10[prec]) {
 392:lib/printf/printf.c ****       frac = 0;
 393:lib/printf/printf.c ****       ++whole;
 394:lib/printf/printf.c ****     }
 395:lib/printf/printf.c ****   }
 396:lib/printf/printf.c ****   else if (diff < 0.5) {
 397:lib/printf/printf.c ****   }
 398:lib/printf/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 399:lib/printf/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 400:lib/printf/printf.c ****     ++frac;
 401:lib/printf/printf.c ****   }
 402:lib/printf/printf.c **** 
 403:lib/printf/printf.c ****   if (prec == 0U) {
 404:lib/printf/printf.c ****     diff = value - (double)whole;
 405:lib/printf/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 406:lib/printf/printf.c ****       // exactly 0.5 and ODD, then round up
 407:lib/printf/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 408:lib/printf/printf.c ****       ++whole;
 409:lib/printf/printf.c ****     }
 410:lib/printf/printf.c ****   }
 411:lib/printf/printf.c ****   else {
 412:lib/printf/printf.c ****     unsigned int count = prec;
 413:lib/printf/printf.c ****     // now do fractional part, as an unsigned number
 414:lib/printf/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 415:lib/printf/printf.c ****       --count;
 416:lib/printf/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 417:lib/printf/printf.c ****       if (!(frac /= 10U)) {
 418:lib/printf/printf.c ****         break;
 419:lib/printf/printf.c ****       }
 420:lib/printf/printf.c ****     }
 421:lib/printf/printf.c ****     // add extra 0s
 422:lib/printf/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 423:lib/printf/printf.c ****       buf[len++] = '0';
 424:lib/printf/printf.c ****     }
 425:lib/printf/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 426:lib/printf/printf.c ****       // add decimal
 427:lib/printf/printf.c ****       buf[len++] = '.';
 428:lib/printf/printf.c ****     }
 429:lib/printf/printf.c ****   }
 430:lib/printf/printf.c **** 
 431:lib/printf/printf.c ****   // do whole part, number is reversed
 432:lib/printf/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 433:lib/printf/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 434:lib/printf/printf.c ****     if (!(whole /= 10)) {
 435:lib/printf/printf.c ****       break;
 436:lib/printf/printf.c ****     }
 437:lib/printf/printf.c ****   }
 438:lib/printf/printf.c **** 
 439:lib/printf/printf.c ****   // pad leading zeros
 440:lib/printf/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 441:lib/printf/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 442:lib/printf/printf.c ****       width--;
 443:lib/printf/printf.c ****     }
 444:lib/printf/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 445:lib/printf/printf.c ****       buf[len++] = '0';
 446:lib/printf/printf.c ****     }
 447:lib/printf/printf.c ****   }
 448:lib/printf/printf.c **** 
 449:lib/printf/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 450:lib/printf/printf.c ****     if (negative) {
 451:lib/printf/printf.c ****       buf[len++] = '-';
 452:lib/printf/printf.c ****     }
 453:lib/printf/printf.c ****     else if (flags & FLAGS_PLUS) {
 454:lib/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 455:lib/printf/printf.c ****     }
 456:lib/printf/printf.c ****     else if (flags & FLAGS_SPACE) {
 457:lib/printf/printf.c ****       buf[len++] = ' ';
 458:lib/printf/printf.c ****     }
 459:lib/printf/printf.c ****   }
 460:lib/printf/printf.c **** 
 461:lib/printf/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 462:lib/printf/printf.c **** }
 463:lib/printf/printf.c **** 
 464:lib/printf/printf.c **** 
 465:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 466:lib/printf/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 467:lib/printf/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 468:lib/printf/printf.c **** {
 469:lib/printf/printf.c ****   // check for NaN and special values
 470:lib/printf/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 471:lib/printf/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 472:lib/printf/printf.c ****   }
 473:lib/printf/printf.c **** 
 474:lib/printf/printf.c ****   // determine the sign
 475:lib/printf/printf.c ****   const bool negative = value < 0;
 476:lib/printf/printf.c ****   if (negative) {
 477:lib/printf/printf.c ****     value = -value;
 478:lib/printf/printf.c ****   }
 479:lib/printf/printf.c **** 
 480:lib/printf/printf.c ****   // default precision
 481:lib/printf/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 482:lib/printf/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 483:lib/printf/printf.c ****   }
 484:lib/printf/printf.c **** 
 485:lib/printf/printf.c ****   // determine the decimal exponent
 486:lib/printf/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 487:lib/printf/printf.c ****   union {
 488:lib/printf/printf.c ****     uint64_t U;
 489:lib/printf/printf.c ****     double   F;
 490:lib/printf/printf.c ****   } conv;
 491:lib/printf/printf.c **** 
 492:lib/printf/printf.c ****   conv.F = value;
 493:lib/printf/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 494:lib/printf/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 495:lib/printf/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 496:lib/printf/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 497:lib/printf/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 498:lib/printf/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 499:lib/printf/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 500:lib/printf/printf.c ****   const double z2 = z * z;
 501:lib/printf/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 502:lib/printf/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 503:lib/printf/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 504:lib/printf/printf.c ****   // correct for rounding errors
 505:lib/printf/printf.c ****   if (value < conv.F) {
 506:lib/printf/printf.c ****     expval--;
 507:lib/printf/printf.c ****     conv.F /= 10;
 508:lib/printf/printf.c ****   }
 509:lib/printf/printf.c **** 
 510:lib/printf/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 511:lib/printf/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 512:lib/printf/printf.c **** 
 513:lib/printf/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 514:lib/printf/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 515:lib/printf/printf.c ****     // do we want to fall-back to "%f" mode?
 516:lib/printf/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 517:lib/printf/printf.c ****       if ((int)prec > expval) {
 518:lib/printf/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 519:lib/printf/printf.c ****       }
 520:lib/printf/printf.c ****       else {
 521:lib/printf/printf.c ****         prec = 0;
 522:lib/printf/printf.c ****       }
 523:lib/printf/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 524:lib/printf/printf.c ****       // no characters in exponent
 525:lib/printf/printf.c ****       minwidth = 0U;
 526:lib/printf/printf.c ****       expval   = 0;
 527:lib/printf/printf.c ****     }
 528:lib/printf/printf.c ****     else {
 529:lib/printf/printf.c ****       // we use one sigfig for the whole part
 530:lib/printf/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 531:lib/printf/printf.c ****         --prec;
 532:lib/printf/printf.c ****       }
 533:lib/printf/printf.c ****     }
 534:lib/printf/printf.c ****   }
 535:lib/printf/printf.c **** 
 536:lib/printf/printf.c ****   // will everything fit?
 537:lib/printf/printf.c ****   unsigned int fwidth = width;
 538:lib/printf/printf.c ****   if (width > minwidth) {
 539:lib/printf/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 540:lib/printf/printf.c ****     fwidth -= minwidth;
 541:lib/printf/printf.c ****   } else {
 542:lib/printf/printf.c ****     // not enough characters, so go back to default sizing
 543:lib/printf/printf.c ****     fwidth = 0U;
 544:lib/printf/printf.c ****   }
 545:lib/printf/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 546:lib/printf/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 547:lib/printf/printf.c ****     fwidth = 0U;
 548:lib/printf/printf.c ****   }
 549:lib/printf/printf.c **** 
 550:lib/printf/printf.c ****   // rescale the float value
 551:lib/printf/printf.c ****   if (expval) {
 552:lib/printf/printf.c ****     value /= conv.F;
 553:lib/printf/printf.c ****   }
 554:lib/printf/printf.c **** 
 555:lib/printf/printf.c ****   // output the floating part
 556:lib/printf/printf.c ****   const size_t start_idx = idx;
 557:lib/printf/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 558:lib/printf/printf.c **** 
 559:lib/printf/printf.c ****   // output the exponent part
 560:lib/printf/printf.c ****   if (minwidth) {
 561:lib/printf/printf.c ****     // output the exponential symbol
 562:lib/printf/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 563:lib/printf/printf.c ****     // output the exponent value
 564:lib/printf/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 565:lib/printf/printf.c ****     // might need to right-pad spaces
 566:lib/printf/printf.c ****     if (flags & FLAGS_LEFT) {
 567:lib/printf/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 568:lib/printf/printf.c ****     }
 569:lib/printf/printf.c ****   }
 570:lib/printf/printf.c ****   return idx;
 571:lib/printf/printf.c **** }
 572:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 573:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 574:lib/printf/printf.c **** 
 575:lib/printf/printf.c **** 
 576:lib/printf/printf.c **** // internal vsnprintf
 577:lib/printf/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 578:lib/printf/printf.c **** {
 660              		.loc 1 578 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 4, pretend = 0, frame = 24
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		.loc 1 578 1 is_stmt 0 view .LVU182
 665 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 666              		.cfi_def_cfa_offset 36
 667              		.cfi_offset 4, -36
 668              		.cfi_offset 5, -32
 669              		.cfi_offset 6, -28
 670              		.cfi_offset 7, -24
 671              		.cfi_offset 8, -20
 672              		.cfi_offset 9, -16
 673              		.cfi_offset 10, -12
 674              		.cfi_offset 11, -8
 675              		.cfi_offset 14, -4
 676 0004 8DB0     		sub	sp, sp, #52
 677              		.cfi_def_cfa_offset 88
 678              		.loc 1 578 1 view .LVU183
 679 0006 1F46     		mov	r7, r3
 579:lib/printf/printf.c ****   unsigned int flags, width, precision, n;
 580:lib/printf/printf.c ****   size_t idx = 0U;
 581:lib/printf/printf.c **** 
 582:lib/printf/printf.c ****   if (!buffer) {
 583:lib/printf/printf.c ****     // use null output function
 584:lib/printf/printf.c ****     out = _out_null;
 680              		.loc 1 584 9 view .LVU184
 681 0008 AA4B     		ldr	r3, .L207
 682              	.LVL73:
 683              		.loc 1 584 9 view .LVU185
 684 000a 169E     		ldr	r6, [sp, #88]
 685 000c 0029     		cmp	r1, #0
 578:lib/printf/printf.c ****   unsigned int flags, width, precision, n;
 686              		.loc 1 578 1 view .LVU186
 687 000e 9146     		mov	r9, r2
 688              	.LVL74:
 579:lib/printf/printf.c ****   unsigned int flags, width, precision, n;
 689              		.loc 1 579 3 is_stmt 1 view .LVU187
 580:lib/printf/printf.c **** 
 690              		.loc 1 580 3 view .LVU188
 582:lib/printf/printf.c ****     // use null output function
 691              		.loc 1 582 3 view .LVU189
 692              		.loc 1 584 9 is_stmt 0 view .LVU190
 693 0010 14BF     		ite	ne
 694 0012 8346     		movne	fp, r0
 695 0014 9B46     		moveq	fp, r3
 696              	.LVL75:
 585:lib/printf/printf.c ****   }
 586:lib/printf/printf.c **** 
 587:lib/printf/printf.c ****   while (*format)
 588:lib/printf/printf.c ****   {
 589:lib/printf/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 590:lib/printf/printf.c ****     if (*format != '%') {
 591:lib/printf/printf.c ****       // no
 592:lib/printf/printf.c ****       out(*format, buffer, idx++, maxlen);
 593:lib/printf/printf.c ****       format++;
 594:lib/printf/printf.c ****       continue;
 595:lib/printf/printf.c ****     }
 596:lib/printf/printf.c ****     else {
 597:lib/printf/printf.c ****       // yes, evaluate it
 598:lib/printf/printf.c ****       format++;
 599:lib/printf/printf.c ****     }
 600:lib/printf/printf.c **** 
 601:lib/printf/printf.c ****     // evaluate flags
 602:lib/printf/printf.c ****     flags = 0U;
 603:lib/printf/printf.c ****     do {
 604:lib/printf/printf.c ****       switch (*format) {
 605:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 606:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 607:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 608:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 609:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 610:lib/printf/printf.c ****         default :                                   n = 0U; break;
 611:lib/printf/printf.c ****       }
 612:lib/printf/printf.c ****     } while (n);
 613:lib/printf/printf.c **** 
 614:lib/printf/printf.c ****     // evaluate width field
 615:lib/printf/printf.c ****     width = 0U;
 616:lib/printf/printf.c ****     if (_is_digit(*format)) {
 617:lib/printf/printf.c ****       width = _atoi(&format);
 618:lib/printf/printf.c ****     }
 619:lib/printf/printf.c ****     else if (*format == '*') {
 620:lib/printf/printf.c ****       const int w = va_arg(va, int);
 621:lib/printf/printf.c ****       if (w < 0) {
 622:lib/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 623:lib/printf/printf.c ****         width = (unsigned int)-w;
 624:lib/printf/printf.c ****       }
 625:lib/printf/printf.c ****       else {
 626:lib/printf/printf.c ****         width = (unsigned int)w;
 627:lib/printf/printf.c ****       }
 628:lib/printf/printf.c ****       format++;
 629:lib/printf/printf.c ****     }
 630:lib/printf/printf.c **** 
 631:lib/printf/printf.c ****     // evaluate precision field
 632:lib/printf/printf.c ****     precision = 0U;
 633:lib/printf/printf.c ****     if (*format == '.') {
 634:lib/printf/printf.c ****       flags |= FLAGS_PRECISION;
 635:lib/printf/printf.c ****       format++;
 636:lib/printf/printf.c ****       if (_is_digit(*format)) {
 637:lib/printf/printf.c ****         precision = _atoi(&format);
 638:lib/printf/printf.c ****       }
 639:lib/printf/printf.c ****       else if (*format == '*') {
 640:lib/printf/printf.c ****         const int prec = (int)va_arg(va, int);
 641:lib/printf/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 642:lib/printf/printf.c ****         format++;
 643:lib/printf/printf.c ****       }
 644:lib/printf/printf.c ****     }
 645:lib/printf/printf.c **** 
 646:lib/printf/printf.c ****     // evaluate length field
 647:lib/printf/printf.c ****     switch (*format) {
 648:lib/printf/printf.c ****       case 'l' :
 649:lib/printf/printf.c ****         flags |= FLAGS_LONG;
 650:lib/printf/printf.c ****         format++;
 651:lib/printf/printf.c ****         if (*format == 'l') {
 652:lib/printf/printf.c ****           flags |= FLAGS_LONG_LONG;
 653:lib/printf/printf.c ****           format++;
 654:lib/printf/printf.c ****         }
 655:lib/printf/printf.c ****         break;
 656:lib/printf/printf.c ****       case 'h' :
 657:lib/printf/printf.c ****         flags |= FLAGS_SHORT;
 658:lib/printf/printf.c ****         format++;
 659:lib/printf/printf.c ****         if (*format == 'h') {
 660:lib/printf/printf.c ****           flags |= FLAGS_CHAR;
 661:lib/printf/printf.c ****           format++;
 662:lib/printf/printf.c ****         }
 663:lib/printf/printf.c ****         break;
 664:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 665:lib/printf/printf.c ****       case 't' :
 666:lib/printf/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 667:lib/printf/printf.c ****         format++;
 668:lib/printf/printf.c ****         break;
 669:lib/printf/printf.c **** #endif
 670:lib/printf/printf.c ****       case 'j' :
 671:lib/printf/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 672:lib/printf/printf.c ****         format++;
 673:lib/printf/printf.c ****         break;
 674:lib/printf/printf.c ****       case 'z' :
 675:lib/printf/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 676:lib/printf/printf.c ****         format++;
 677:lib/printf/printf.c ****         break;
 678:lib/printf/printf.c ****       default :
 679:lib/printf/printf.c ****         break;
 680:lib/printf/printf.c ****     }
 681:lib/printf/printf.c **** 
 682:lib/printf/printf.c ****     // evaluate specifier
 683:lib/printf/printf.c ****     switch (*format) {
 684:lib/printf/printf.c ****       case 'd' :
 685:lib/printf/printf.c ****       case 'i' :
 686:lib/printf/printf.c ****       case 'u' :
 687:lib/printf/printf.c ****       case 'x' :
 688:lib/printf/printf.c ****       case 'X' :
 689:lib/printf/printf.c ****       case 'o' :
 690:lib/printf/printf.c ****       case 'b' : {
 691:lib/printf/printf.c ****         // set the base
 692:lib/printf/printf.c ****         unsigned int base;
 693:lib/printf/printf.c ****         if (*format == 'x' || *format == 'X') {
 694:lib/printf/printf.c ****           base = 16U;
 695:lib/printf/printf.c ****         }
 696:lib/printf/printf.c ****         else if (*format == 'o') {
 697:lib/printf/printf.c ****           base =  8U;
 698:lib/printf/printf.c ****         }
 699:lib/printf/printf.c ****         else if (*format == 'b') {
 700:lib/printf/printf.c ****           base =  2U;
 701:lib/printf/printf.c ****         }
 702:lib/printf/printf.c ****         else {
 703:lib/printf/printf.c ****           base = 10U;
 704:lib/printf/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 705:lib/printf/printf.c ****         }
 706:lib/printf/printf.c ****         // uppercase
 707:lib/printf/printf.c ****         if (*format == 'X') {
 708:lib/printf/printf.c ****           flags |= FLAGS_UPPERCASE;
 709:lib/printf/printf.c ****         }
 710:lib/printf/printf.c **** 
 711:lib/printf/printf.c ****         // no plus or space flag for u, x, X, o, b
 712:lib/printf/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 713:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 714:lib/printf/printf.c ****         }
 715:lib/printf/printf.c **** 
 716:lib/printf/printf.c ****         // ignore '0' flag when precision is given
 717:lib/printf/printf.c ****         if (flags & FLAGS_PRECISION) {
 718:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 719:lib/printf/printf.c ****         }
 720:lib/printf/printf.c **** 
 721:lib/printf/printf.c ****         // convert the integer
 722:lib/printf/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 723:lib/printf/printf.c ****           // signed
 724:lib/printf/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 725:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 726:lib/printf/printf.c ****             const long long value = va_arg(va, long long);
 727:lib/printf/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 728:lib/printf/printf.c **** #endif
 729:lib/printf/printf.c ****           }
 730:lib/printf/printf.c ****           else if (flags & FLAGS_LONG) {
 731:lib/printf/printf.c ****             const long value = va_arg(va, long);
 732:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 733:lib/printf/printf.c ****           }
 734:lib/printf/printf.c ****           else {
 735:lib/printf/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 736:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 737:lib/printf/printf.c ****           }
 738:lib/printf/printf.c ****         }
 739:lib/printf/printf.c ****         else {
 740:lib/printf/printf.c ****           // unsigned
 741:lib/printf/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 742:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 743:lib/printf/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 744:lib/printf/printf.c **** #endif
 745:lib/printf/printf.c ****           }
 746:lib/printf/printf.c ****           else if (flags & FLAGS_LONG) {
 747:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 748:lib/printf/printf.c ****           }
 749:lib/printf/printf.c ****           else {
 750:lib/printf/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 751:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 752:lib/printf/printf.c ****           }
 753:lib/printf/printf.c ****         }
 754:lib/printf/printf.c ****         format++;
 755:lib/printf/printf.c ****         break;
 756:lib/printf/printf.c ****       }
 757:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 758:lib/printf/printf.c ****       case 'f' :
 759:lib/printf/printf.c ****       case 'F' :
 760:lib/printf/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 761:lib/printf/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 762:lib/printf/printf.c ****         format++;
 763:lib/printf/printf.c ****         break;
 764:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 765:lib/printf/printf.c ****       case 'e':
 766:lib/printf/printf.c ****       case 'E':
 767:lib/printf/printf.c ****       case 'g':
 768:lib/printf/printf.c ****       case 'G':
 769:lib/printf/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 770:lib/printf/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 771:lib/printf/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 772:lib/printf/printf.c ****         format++;
 773:lib/printf/printf.c ****         break;
 774:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 775:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 776:lib/printf/printf.c ****       case 'c' : {
 777:lib/printf/printf.c ****         unsigned int l = 1U;
 778:lib/printf/printf.c ****         // pre padding
 779:lib/printf/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 780:lib/printf/printf.c ****           while (l++ < width) {
 781:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 782:lib/printf/printf.c ****           }
 783:lib/printf/printf.c ****         }
 784:lib/printf/printf.c ****         // char output
 785:lib/printf/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 786:lib/printf/printf.c ****         // post padding
 787:lib/printf/printf.c ****         if (flags & FLAGS_LEFT) {
 788:lib/printf/printf.c ****           while (l++ < width) {
 789:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 790:lib/printf/printf.c ****           }
 791:lib/printf/printf.c ****         }
 792:lib/printf/printf.c ****         format++;
 793:lib/printf/printf.c ****         break;
 794:lib/printf/printf.c ****       }
 795:lib/printf/printf.c **** 
 796:lib/printf/printf.c ****       case 's' : {
 797:lib/printf/printf.c ****         const char* p = va_arg(va, char*);
 798:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 799:lib/printf/printf.c ****         // pre padding
 800:lib/printf/printf.c ****         if (flags & FLAGS_PRECISION) {
 801:lib/printf/printf.c ****           l = (l < precision ? l : precision);
 802:lib/printf/printf.c ****         }
 803:lib/printf/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 804:lib/printf/printf.c ****           while (l++ < width) {
 805:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 806:lib/printf/printf.c ****           }
 807:lib/printf/printf.c ****         }
 808:lib/printf/printf.c ****         // string output
 809:lib/printf/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 810:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 811:lib/printf/printf.c ****         }
 812:lib/printf/printf.c ****         // post padding
 813:lib/printf/printf.c ****         if (flags & FLAGS_LEFT) {
 814:lib/printf/printf.c ****           while (l++ < width) {
 815:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 816:lib/printf/printf.c ****           }
 817:lib/printf/printf.c ****         }
 818:lib/printf/printf.c ****         format++;
 819:lib/printf/printf.c ****         break;
 820:lib/printf/printf.c ****       }
 821:lib/printf/printf.c **** 
 822:lib/printf/printf.c ****       case 'p' : {
 823:lib/printf/printf.c ****         width = sizeof(void*) * 2U;
 824:lib/printf/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 825:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 826:lib/printf/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 827:lib/printf/printf.c ****         if (is_ll) {
 828:lib/printf/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 829:lib/printf/printf.c ****         }
 830:lib/printf/printf.c ****         else {
 831:lib/printf/printf.c **** #endif
 832:lib/printf/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 833:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 834:lib/printf/printf.c ****         }
 835:lib/printf/printf.c **** #endif
 836:lib/printf/printf.c ****         format++;
 837:lib/printf/printf.c ****         break;
 838:lib/printf/printf.c ****       }
 839:lib/printf/printf.c **** 
 840:lib/printf/printf.c ****       case '%' :
 841:lib/printf/printf.c ****         out('%', buffer, idx++, maxlen);
 842:lib/printf/printf.c ****         format++;
 843:lib/printf/printf.c ****         break;
 844:lib/printf/printf.c **** 
 845:lib/printf/printf.c ****       default :
 846:lib/printf/printf.c ****         out(*format, buffer, idx++, maxlen);
 697              		.loc 1 846 9 view .LVU191
 698 0016 0025     		movs	r5, #0
 699              	.LVL76:
 700              	.L158:
 587:lib/printf/printf.c ****   {
 701              		.loc 1 587 10 is_stmt 1 view .LVU192
 702 0018 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 703 001a 58B9     		cbnz	r0, .L159
 847:lib/printf/printf.c ****         format++;
 848:lib/printf/printf.c ****         break;
 849:lib/printf/printf.c ****     }
 850:lib/printf/printf.c ****   }
 851:lib/printf/printf.c **** 
 852:lib/printf/printf.c ****   // termination
 853:lib/printf/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 704              		.loc 1 853 3 view .LVU193
 705 001c 4D45     		cmp	r5, r9
 706 001e 2CBF     		ite	cs
 707 0020 09F1FF32 		addcs	r2, r9, #-1
 708 0024 2A46     		movcc	r2, r5
 709 0026 4B46     		mov	r3, r9
 710 0028 0020     		movs	r0, #0
 711 002a D847     		blx	fp
 712              	.LVL77:
 854:lib/printf/printf.c **** 
 855:lib/printf/printf.c ****   // return written chars without terminating \0
 856:lib/printf/printf.c ****   return (int)idx;
 713              		.loc 1 856 3 view .LVU194
 857:lib/printf/printf.c **** }
 714              		.loc 1 857 1 is_stmt 0 view .LVU195
 715 002c 2846     		mov	r0, r5
 716 002e 0DB0     		add	sp, sp, #52
 717              		.cfi_remember_state
 718              		.cfi_def_cfa_offset 36
 719              		@ sp needed
 720 0030 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 721              	.LVL78:
 722              	.L159:
 723              		.cfi_restore_state
 590:lib/printf/printf.c ****       // no
 724              		.loc 1 590 5 is_stmt 1 view .LVU196
 590:lib/printf/printf.c ****       // no
 725              		.loc 1 590 8 is_stmt 0 view .LVU197
 726 0034 2528     		cmp	r0, #37
 593:lib/printf/printf.c ****       continue;
 727              		.loc 1 593 13 view .LVU198
 728 0036 07F10107 		add	r7, r7, #1
 729              	.LVL79:
 590:lib/printf/printf.c ****       // no
 730              		.loc 1 590 8 view .LVU199
 731 003a 06D0     		beq	.L161
 732              	.LVL80:
 733              	.L114:
 846:lib/printf/printf.c ****         format++;
 734              		.loc 1 846 9 is_stmt 1 view .LVU200
 735 003c 2A46     		mov	r2, r5
 736 003e 6C1C     		adds	r4, r5, #1
 737              	.LVL81:
 846:lib/printf/printf.c ****         format++;
 738              		.loc 1 846 9 is_stmt 0 view .LVU201
 739 0040 4B46     		mov	r3, r9
 740 0042 0691     		str	r1, [sp, #24]
 741 0044 D847     		blx	fp
 742              	.LVL82:
 847:lib/printf/printf.c ****         break;
 743              		.loc 1 847 9 is_stmt 1 view .LVU202
 848:lib/printf/printf.c ****     }
 744              		.loc 1 848 9 view .LVU203
 846:lib/printf/printf.c ****         format++;
 745              		.loc 1 846 9 is_stmt 0 view .LVU204
 746 0046 2546     		mov	r5, r4
 747 0048 20E1     		b	.L204
 748              	.LVL83:
 749              	.L161:
 602:lib/printf/printf.c ****     do {
 750              		.loc 1 602 11 view .LVU205
 751 004a 0023     		movs	r3, #0
 752 004c 06E0     		b	.L86
 753              	.LVL84:
 754              	.L89:
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 755              		.loc 1 604 7 view .LVU206
 756 004e 2D2A     		cmp	r2, #45
 757 0050 15D0     		beq	.L93
 758 0052 302A     		cmp	r2, #48
 759 0054 0CD1     		bne	.L92
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 760              		.loc 1 605 19 is_stmt 1 view .LVU207
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 761              		.loc 1 605 25 is_stmt 0 view .LVU208
 762 0056 43F00103 		orr	r3, r3, #1
 763              	.LVL85:
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 764              		.loc 1 605 43 is_stmt 1 view .LVU209
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 765              		.loc 1 605 53 view .LVU210
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 766              		.loc 1 605 61 view .LVU211
 612:lib/printf/printf.c **** 
 767              		.loc 1 612 14 view .LVU212
 768              	.L97:
 769              	.LBB64:
 628:lib/printf/printf.c ****     }
 770              		.loc 1 628 13 is_stmt 0 view .LVU213
 771 005a 0746     		mov	r7, r0
 772              	.LVL86:
 773              	.L86:
 628:lib/printf/printf.c ****     }
 774              		.loc 1 628 13 view .LVU214
 775              	.LBE64:
 603:lib/printf/printf.c ****       switch (*format) {
 776              		.loc 1 603 5 is_stmt 1 view .LVU215
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 777              		.loc 1 604 7 view .LVU216
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 778              		.loc 1 604 15 is_stmt 0 view .LVU217
 779 005c 3846     		mov	r0, r7
 780 005e 10F8012B 		ldrb	r2, [r0], #1	@ zero_extendqisi2
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 781              		.loc 1 604 7 view .LVU218
 782 0062 2B2A     		cmp	r2, #43
 783 0064 0ED0     		beq	.L88
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 784              		.loc 1 604 7 view .LVU219
 785 0066 F2D8     		bhi	.L89
 786 0068 202A     		cmp	r2, #32
 787 006a 0ED0     		beq	.L90
 788 006c 232A     		cmp	r2, #35
 789 006e 0FD0     		beq	.L91
 790              	.L92:
 791              	.LVL87:
 612:lib/printf/printf.c **** 
 792              		.loc 1 612 14 is_stmt 1 view .LVU220
 615:lib/printf/printf.c ****     if (_is_digit(*format)) {
 793              		.loc 1 615 5 view .LVU221
 616:lib/printf/printf.c ****       width = _atoi(&format);
 794              		.loc 1 616 5 view .LVU222
 795              	.LBB65:
 796              	.LBI65:
 181:lib/printf/printf.c **** {
 797              		.loc 1 181 20 view .LVU223
 798              	.LBB66:
 183:lib/printf/printf.c **** }
 799              		.loc 1 183 3 view .LVU224
 183:lib/printf/printf.c **** }
 800              		.loc 1 183 3 is_stmt 0 view .LVU225
 801              	.LBE66:
 802              	.LBE65:
 616:lib/printf/printf.c ****       width = _atoi(&format);
 803              		.loc 1 616 8 view .LVU226
 804 0070 A2F13004 		sub	r4, r2, #48
 805 0074 092C     		cmp	r4, #9
 806 0076 2AD8     		bhi	.L198
 807              	.LBB67:
 808              	.LBB68:
 190:lib/printf/printf.c ****   while (_is_digit(**str)) {
 809              		.loc 1 190 16 view .LVU227
 810 0078 4FF00008 		mov	r8, #0
 811 007c 11E0     		b	.L95
 812              	.LVL88:
 813              	.L93:
 190:lib/printf/printf.c ****   while (_is_digit(**str)) {
 814              		.loc 1 190 16 view .LVU228
 815              	.LBE68:
 816              	.LBE67:
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 817              		.loc 1 606 19 is_stmt 1 view .LVU229
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 818              		.loc 1 606 25 is_stmt 0 view .LVU230
 819 007e 43F00203 		orr	r3, r3, #2
 820              	.LVL89:
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 821              		.loc 1 606 43 is_stmt 1 view .LVU231
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 822              		.loc 1 606 53 view .LVU232
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 823              		.loc 1 606 61 view .LVU233
 612:lib/printf/printf.c **** 
 824              		.loc 1 612 14 view .LVU234
 825 0082 EAE7     		b	.L97
 826              	.LVL90:
 827              	.L88:
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 828              		.loc 1 607 19 view .LVU235
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 829              		.loc 1 607 25 is_stmt 0 view .LVU236
 830 0084 43F00403 		orr	r3, r3, #4
 831              	.LVL91:
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 832              		.loc 1 607 43 is_stmt 1 view .LVU237
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 833              		.loc 1 607 53 view .LVU238
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 834              		.loc 1 607 61 view .LVU239
 612:lib/printf/printf.c **** 
 835              		.loc 1 612 14 view .LVU240
 836 0088 E7E7     		b	.L97
 837              	.LVL92:
 838              	.L90:
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 839              		.loc 1 608 19 view .LVU241
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 840              		.loc 1 608 25 is_stmt 0 view .LVU242
 841 008a 43F00803 		orr	r3, r3, #8
 842              	.LVL93:
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 843              		.loc 1 608 43 is_stmt 1 view .LVU243
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 844              		.loc 1 608 53 view .LVU244
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 845              		.loc 1 608 61 view .LVU245
 612:lib/printf/printf.c **** 
 846              		.loc 1 612 14 view .LVU246
 847 008e E4E7     		b	.L97
 848              	.LVL94:
 849              	.L91:
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 850              		.loc 1 609 19 view .LVU247
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 851              		.loc 1 609 25 is_stmt 0 view .LVU248
 852 0090 43F01003 		orr	r3, r3, #16
 853              	.LVL95:
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 854              		.loc 1 609 43 is_stmt 1 view .LVU249
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 855              		.loc 1 609 53 view .LVU250
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 856              		.loc 1 609 61 view .LVU251
 612:lib/printf/printf.c **** 
 857              		.loc 1 612 14 view .LVU252
 858 0094 E1E7     		b	.L97
 859              	.LVL96:
 860              	.L98:
 861              	.LBB72:
 862              	.LBB71:
 192:lib/printf/printf.c ****   }
 863              		.loc 1 192 5 view .LVU253
 192:lib/printf/printf.c ****   }
 864              		.loc 1 192 5 is_stmt 0 view .LVU254
 865 0096 0A24     		movs	r4, #10
 866 0098 04FB0822 		mla	r2, r4, r8, r2
 192:lib/printf/printf.c ****   }
 867              		.loc 1 192 7 view .LVU255
 868 009c A2F13008 		sub	r8, r2, #48
 869              	.LVL97:
 192:lib/printf/printf.c ****   }
 870              		.loc 1 192 42 view .LVU256
 871 00a0 0746     		mov	r7, r0
 872              	.LVL98:
 873              	.L95:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 874              		.loc 1 191 10 is_stmt 1 view .LVU257
 875 00a2 3846     		mov	r0, r7
 876 00a4 10F8012B 		ldrb	r2, [r0], #1	@ zero_extendqisi2
 877              	.LVL99:
 878              	.LBB69:
 879              	.LBI69:
 181:lib/printf/printf.c **** {
 880              		.loc 1 181 20 view .LVU258
 881              	.LBB70:
 183:lib/printf/printf.c **** }
 882              		.loc 1 183 3 view .LVU259
 183:lib/printf/printf.c **** }
 883              		.loc 1 183 3 is_stmt 0 view .LVU260
 884              	.LBE70:
 885              	.LBE69:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 886              		.loc 1 191 10 view .LVU261
 887 00a8 A2F13004 		sub	r4, r2, #48
 888 00ac 092C     		cmp	r4, #9
 889 00ae F2D9     		bls	.L98
 890              	.LVL100:
 891              	.L99:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 892              		.loc 1 191 10 view .LVU262
 893              	.LBE71:
 894              	.LBE72:
 632:lib/printf/printf.c ****     if (*format == '.') {
 895              		.loc 1 632 5 is_stmt 1 view .LVU263
 633:lib/printf/printf.c ****       flags |= FLAGS_PRECISION;
 896              		.loc 1 633 5 view .LVU264
 633:lib/printf/printf.c ****       flags |= FLAGS_PRECISION;
 897              		.loc 1 633 8 is_stmt 0 view .LVU265
 898 00b0 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 899 00b2 2E2A     		cmp	r2, #46
 900 00b4 57D1     		bne	.L201
 636:lib/printf/printf.c ****         precision = _atoi(&format);
 901              		.loc 1 636 11 view .LVU266
 902 00b6 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 636:lib/printf/printf.c ****         precision = _atoi(&format);
 903              		.loc 1 636 10 view .LVU267
 904 00b8 A0F13004 		sub	r4, r0, #48
 905 00bc 092C     		cmp	r4, #9
 635:lib/printf/printf.c ****       if (_is_digit(*format)) {
 906              		.loc 1 635 13 view .LVU268
 907 00be 07F10102 		add	r2, r7, #1
 634:lib/printf/printf.c ****       format++;
 908              		.loc 1 634 7 is_stmt 1 view .LVU269
 634:lib/printf/printf.c ****       format++;
 909              		.loc 1 634 13 is_stmt 0 view .LVU270
 910 00c2 43F48063 		orr	r3, r3, #1024
 911              	.LVL101:
 635:lib/printf/printf.c ****       if (_is_digit(*format)) {
 912              		.loc 1 635 7 is_stmt 1 view .LVU271
 636:lib/printf/printf.c ****         precision = _atoi(&format);
 913              		.loc 1 636 7 view .LVU272
 914              	.LBB73:
 915              	.LBI73:
 181:lib/printf/printf.c **** {
 916              		.loc 1 181 20 view .LVU273
 917              	.LBB74:
 183:lib/printf/printf.c **** }
 918              		.loc 1 183 3 view .LVU274
 183:lib/printf/printf.c **** }
 919              		.loc 1 183 3 is_stmt 0 view .LVU275
 920              	.LBE74:
 921              	.LBE73:
 636:lib/printf/printf.c ****         precision = _atoi(&format);
 922              		.loc 1 636 10 view .LVU276
 923 00c6 44D8     		bhi	.L199
 924              	.LBB75:
 925              	.LBB76:
 190:lib/printf/printf.c ****   while (_is_digit(**str)) {
 926              		.loc 1 190 16 view .LVU277
 927 00c8 0020     		movs	r0, #0
 928 00ca 0690     		str	r0, [sp, #24]
 929 00cc 17E0     		b	.L103
 930              	.LVL102:
 931              	.L198:
 190:lib/printf/printf.c ****   while (_is_digit(**str)) {
 932              		.loc 1 190 16 view .LVU278
 933              	.LBE76:
 934              	.LBE75:
 619:lib/printf/printf.c ****       const int w = va_arg(va, int);
 935              		.loc 1 619 10 is_stmt 1 view .LVU279
 619:lib/printf/printf.c ****       const int w = va_arg(va, int);
 936              		.loc 1 619 13 is_stmt 0 view .LVU280
 937 00ce 2A2A     		cmp	r2, #42
 938 00d0 0AD1     		bne	.L163
 939              	.LBB80:
 620:lib/printf/printf.c ****       if (w < 0) {
 940              		.loc 1 620 7 is_stmt 1 view .LVU281
 941              	.LVL103:
 620:lib/printf/printf.c ****       if (w < 0) {
 942              		.loc 1 620 17 is_stmt 0 view .LVU282
 943 00d2 56F8048B 		ldr	r8, [r6], #4
 944              	.LVL104:
 621:lib/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 945              		.loc 1 621 7 is_stmt 1 view .LVU283
 621:lib/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 946              		.loc 1 621 10 is_stmt 0 view .LVU284
 947 00d6 B8F1000F 		cmp	r8, #0
 622:lib/printf/printf.c ****         width = (unsigned int)-w;
 948              		.loc 1 622 9 is_stmt 1 view .LVU285
 622:lib/printf/printf.c ****         width = (unsigned int)-w;
 949              		.loc 1 622 15 is_stmt 0 view .LVU286
 950 00da BCBF     		itt	lt
 951 00dc 43F00203 		orrlt	r3, r3, #2
 952              	.LVL105:
 623:lib/printf/printf.c ****       }
 953              		.loc 1 623 9 is_stmt 1 view .LVU287
 623:lib/printf/printf.c ****       }
 954              		.loc 1 623 31 is_stmt 0 view .LVU288
 955 00e0 C8F10008 		rsblt	r8, r8, #0
 956              	.LVL106:
 628:lib/printf/printf.c ****     }
 957              		.loc 1 628 7 is_stmt 1 view .LVU289
 620:lib/printf/printf.c ****       if (w < 0) {
 958              		.loc 1 620 17 is_stmt 0 view .LVU290
 959 00e4 0746     		mov	r7, r0
 960 00e6 E3E7     		b	.L99
 961              	.LVL107:
 962              	.L163:
 620:lib/printf/printf.c ****       if (w < 0) {
 963              		.loc 1 620 17 view .LVU291
 964              	.LBE80:
 615:lib/printf/printf.c ****     if (_is_digit(*format)) {
 965              		.loc 1 615 11 view .LVU292
 966 00e8 4FF00008 		mov	r8, #0
 967 00ec E0E7     		b	.L99
 968              	.LVL108:
 969              	.L105:
 970              	.LBB81:
 971              	.LBB79:
 192:lib/printf/printf.c ****   }
 972              		.loc 1 192 5 is_stmt 1 view .LVU293
 192:lib/printf/printf.c ****   }
 973              		.loc 1 192 5 is_stmt 0 view .LVU294
 974 00ee 069C     		ldr	r4, [sp, #24]
 975 00f0 0A22     		movs	r2, #10
 976              	.LVL109:
 192:lib/printf/printf.c ****   }
 977              		.loc 1 192 5 view .LVU295
 978 00f2 02FB0400 		mla	r0, r2, r4, r0
 192:lib/printf/printf.c ****   }
 979              		.loc 1 192 7 view .LVU296
 980 00f6 A0F13002 		sub	r2, r0, #48
 981 00fa 0692     		str	r2, [sp, #24]
 982              	.LVL110:
 192:lib/printf/printf.c ****   }
 983              		.loc 1 192 42 view .LVU297
 984 00fc 3A46     		mov	r2, r7
 985              	.LVL111:
 986              	.L103:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 987              		.loc 1 191 10 is_stmt 1 view .LVU298
 988 00fe 1746     		mov	r7, r2
 989 0100 17F8010B 		ldrb	r0, [r7], #1	@ zero_extendqisi2
 990              	.LVL112:
 991              	.LBB77:
 992              	.LBI77:
 181:lib/printf/printf.c **** {
 993              		.loc 1 181 20 view .LVU299
 994              	.LBB78:
 183:lib/printf/printf.c **** }
 995              		.loc 1 183 3 view .LVU300
 183:lib/printf/printf.c **** }
 996              		.loc 1 183 3 is_stmt 0 view .LVU301
 997              	.LBE78:
 998              	.LBE77:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 999              		.loc 1 191 10 view .LVU302
 1000 0104 A0F1300C 		sub	ip, r0, #48
 1001 0108 BCF1090F 		cmp	ip, #9
 1002 010c EFD9     		bls	.L105
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 1003              		.loc 1 191 10 view .LVU303
 1004 010e 1746     		mov	r7, r2
 1005              	.LVL113:
 1006              	.L102:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 1007              		.loc 1 191 10 view .LVU304
 1008              	.LBE79:
 1009              	.LBE81:
 647:lib/printf/printf.c ****       case 'l' :
 1010              		.loc 1 647 5 is_stmt 1 view .LVU305
 647:lib/printf/printf.c ****       case 'l' :
 1011              		.loc 1 647 13 is_stmt 0 view .LVU306
 1012 0110 3A46     		mov	r2, r7
 1013 0112 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 647:lib/printf/printf.c ****       case 'l' :
 1014              		.loc 1 647 5 view .LVU307
 1015 0116 6C28     		cmp	r0, #108
 1016 0118 2DD0     		beq	.L106
 647:lib/printf/printf.c ****       case 'l' :
 1017              		.loc 1 647 5 view .LVU308
 1018 011a 27D8     		bhi	.L107
 1019 011c 6828     		cmp	r0, #104
 1020 011e 31D0     		beq	.L108
 1021 0120 6A28     		cmp	r0, #106
 1022 0122 38D0     		beq	.L109
 1023              	.L202:
 1024 0124 3A46     		mov	r2, r7
 1025              	.L110:
 1026              	.LVL114:
 683:lib/printf/printf.c ****       case 'd' :
 1027              		.loc 1 683 5 is_stmt 1 view .LVU309
 683:lib/printf/printf.c ****       case 'd' :
 1028              		.loc 1 683 13 is_stmt 0 view .LVU310
 1029 0126 1746     		mov	r7, r2
 1030 0128 17F8010B 		ldrb	r0, [r7], #1	@ zero_extendqisi2
 683:lib/printf/printf.c ****       case 'd' :
 1031              		.loc 1 683 5 view .LVU311
 1032 012c 7828     		cmp	r0, #120
 1033 012e 85D8     		bhi	.L114
 683:lib/printf/printf.c ****       case 'd' :
 1034              		.loc 1 683 5 view .LVU312
 1035 0130 6328     		cmp	r0, #99
 1036 0132 33D8     		bhi	.L115
 1037 0134 6228     		cmp	r0, #98
 1038 0136 77D0     		beq	.L167
 1039 0138 6328     		cmp	r0, #99
 1040 013a 00F0BF80 		beq	.L117
 1041 013e 2528     		cmp	r0, #37
 1042 0140 3FF47CAF 		beq	.L114
 1043 0144 5828     		cmp	r0, #88
 1044 0146 7FF479AF 		bne	.L114
 1045              	.LVL115:
 1046              	.LBB82:
 708:lib/printf/printf.c ****         }
 1047              		.loc 1 708 11 is_stmt 1 view .LVU313
 708:lib/printf/printf.c ****         }
 1048              		.loc 1 708 17 is_stmt 0 view .LVU314
 1049 014a 43F02003 		orr	r3, r3, #32
 1050              	.LVL116:
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1051              		.loc 1 712 9 is_stmt 1 view .LVU315
 1052              	.L168:
 694:lib/printf/printf.c ****         }
 1053              		.loc 1 694 16 is_stmt 0 view .LVU316
 1054 014e 1022     		movs	r2, #16
 1055 0150 6BE0     		b	.L123
 1056              	.LVL117:
 1057              	.L199:
 694:lib/printf/printf.c ****         }
 1058              		.loc 1 694 16 view .LVU317
 1059              	.LBE82:
 639:lib/printf/printf.c ****         const int prec = (int)va_arg(va, int);
 1060              		.loc 1 639 12 is_stmt 1 view .LVU318
 639:lib/printf/printf.c ****         const int prec = (int)va_arg(va, int);
 1061              		.loc 1 639 15 is_stmt 0 view .LVU319
 1062 0152 2A28     		cmp	r0, #42
 1063 0154 06D1     		bne	.L166
 1064              	.LBB89:
 640:lib/printf/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 1065              		.loc 1 640 9 is_stmt 1 view .LVU320
 1066              	.LVL118:
 641:lib/printf/printf.c ****         format++;
 1067              		.loc 1 641 9 view .LVU321
 641:lib/printf/printf.c ****         format++;
 1068              		.loc 1 641 51 is_stmt 0 view .LVU322
 1069 0156 56F8044B 		ldr	r4, [r6], #4
 1070              	.LVL119:
 641:lib/printf/printf.c ****         format++;
 1071              		.loc 1 641 51 view .LVU323
 1072 015a 24EAE472 		bic	r2, r4, r4, asr #31
 1073 015e 0692     		str	r2, [sp, #24]
 1074              	.LVL120:
 642:lib/printf/printf.c ****       }
 1075              		.loc 1 642 9 is_stmt 1 view .LVU324
 642:lib/printf/printf.c ****       }
 1076              		.loc 1 642 15 is_stmt 0 view .LVU325
 1077 0160 0237     		adds	r7, r7, #2
 1078              	.LVL121:
 642:lib/printf/printf.c ****       }
 1079              		.loc 1 642 15 view .LVU326
 1080 0162 D5E7     		b	.L102
 1081              	.LVL122:
 1082              	.L166:
 642:lib/printf/printf.c ****       }
 1083              		.loc 1 642 15 view .LVU327
 1084              	.LBE89:
 635:lib/printf/printf.c ****       if (_is_digit(*format)) {
 1085              		.loc 1 635 13 view .LVU328
 1086 0164 1746     		mov	r7, r2
 1087              	.LVL123:
 1088              	.L201:
 632:lib/printf/printf.c ****     if (*format == '.') {
 1089              		.loc 1 632 15 view .LVU329
 1090 0166 0022     		movs	r2, #0
 1091 0168 0692     		str	r2, [sp, #24]
 1092 016a D1E7     		b	.L102
 1093              	.LVL124:
 1094              	.L107:
 647:lib/printf/printf.c ****       case 'l' :
 1095              		.loc 1 647 5 view .LVU330
 1096 016c 7A28     		cmp	r0, #122
 1097 016e D9D1     		bne	.L202
 1098              	.LVL125:
 1099              	.L111:
 675:lib/printf/printf.c ****         format++;
 1100              		.loc 1 675 9 is_stmt 1 view .LVU331
 675:lib/printf/printf.c ****         format++;
 1101              		.loc 1 675 15 is_stmt 0 view .LVU332
 1102 0170 43F48073 		orr	r3, r3, #256
 1103              	.LVL126:
 676:lib/printf/printf.c ****         break;
 1104              		.loc 1 676 9 is_stmt 1 view .LVU333
 677:lib/printf/printf.c ****       default :
 1105              		.loc 1 677 9 view .LVU334
 1106 0174 D7E7     		b	.L110
 1107              	.L106:
 649:lib/printf/printf.c ****         format++;
 1108              		.loc 1 649 9 view .LVU335
 1109              	.LVL127:
 650:lib/printf/printf.c ****         if (*format == 'l') {
 1110              		.loc 1 650 9 view .LVU336
 651:lib/printf/printf.c ****           flags |= FLAGS_LONG_LONG;
 1111              		.loc 1 651 9 view .LVU337
 651:lib/printf/printf.c ****           flags |= FLAGS_LONG_LONG;
 1112              		.loc 1 651 12 is_stmt 0 view .LVU338
 1113 0176 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 1114 0178 6C28     		cmp	r0, #108
 1115 017a F9D1     		bne	.L111
 652:lib/printf/printf.c ****           format++;
 1116              		.loc 1 652 11 is_stmt 1 view .LVU339
 652:lib/printf/printf.c ****           format++;
 1117              		.loc 1 652 17 is_stmt 0 view .LVU340
 1118 017c 43F44073 		orr	r3, r3, #768
 1119              	.LVL128:
 653:lib/printf/printf.c ****         }
 1120              		.loc 1 653 11 is_stmt 1 view .LVU341
 1121              	.L203:
 661:lib/printf/printf.c ****         }
 1122              		.loc 1 661 11 view .LVU342
 661:lib/printf/printf.c ****         }
 1123              		.loc 1 661 17 is_stmt 0 view .LVU343
 1124 0180 BA1C     		adds	r2, r7, #2
 1125              	.LVL129:
 661:lib/printf/printf.c ****         }
 1126              		.loc 1 661 17 view .LVU344
 1127 0182 D0E7     		b	.L110
 1128              	.LVL130:
 1129              	.L108:
 657:lib/printf/printf.c ****         format++;
 1130              		.loc 1 657 9 is_stmt 1 view .LVU345
 658:lib/printf/printf.c ****         if (*format == 'h') {
 1131              		.loc 1 658 9 view .LVU346
 659:lib/printf/printf.c ****           flags |= FLAGS_CHAR;
 1132              		.loc 1 659 9 view .LVU347
 659:lib/printf/printf.c ****           flags |= FLAGS_CHAR;
 1133              		.loc 1 659 12 is_stmt 0 view .LVU348
 1134 0184 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 1135 0186 6828     		cmp	r0, #104
 1136 0188 02D0     		beq	.L113
 657:lib/printf/printf.c ****         format++;
 1137              		.loc 1 657 15 view .LVU349
 1138 018a 43F08003 		orr	r3, r3, #128
 1139              	.LVL131:
 657:lib/printf/printf.c ****         format++;
 1140              		.loc 1 657 15 view .LVU350
 1141 018e CAE7     		b	.L110
 1142              	.LVL132:
 1143              	.L113:
 660:lib/printf/printf.c ****           format++;
 1144              		.loc 1 660 11 is_stmt 1 view .LVU351
 660:lib/printf/printf.c ****           format++;
 1145              		.loc 1 660 17 is_stmt 0 view .LVU352
 1146 0190 43F0C003 		orr	r3, r3, #192
 1147              	.LVL133:
 660:lib/printf/printf.c ****           format++;
 1148              		.loc 1 660 17 view .LVU353
 1149 0194 F4E7     		b	.L203
 1150              	.LVL134:
 1151              	.L109:
 671:lib/printf/printf.c ****         format++;
 1152              		.loc 1 671 9 is_stmt 1 view .LVU354
 671:lib/printf/printf.c ****         format++;
 1153              		.loc 1 671 15 is_stmt 0 view .LVU355
 1154 0196 43F40073 		orr	r3, r3, #512
 1155              	.LVL135:
 672:lib/printf/printf.c ****         break;
 1156              		.loc 1 672 9 is_stmt 1 view .LVU356
 673:lib/printf/printf.c ****       case 'z' :
 1157              		.loc 1 673 9 view .LVU357
 1158 019a C4E7     		b	.L110
 1159              	.LVL136:
 1160              	.L115:
 673:lib/printf/printf.c ****       case 'z' :
 1161              		.loc 1 673 9 is_stmt 0 view .LVU358
 1162 019c A0F1640C 		sub	ip, r0, #100
 1163 01a0 454C     		ldr	r4, .L207+4
 1164 01a2 5FFA8CFC 		uxtb	ip, ip
 1165 01a6 0122     		movs	r2, #1
 1166              	.LVL137:
 673:lib/printf/printf.c ****       case 'z' :
 1167              		.loc 1 673 9 view .LVU359
 1168 01a8 02FA0CF2 		lsl	r2, r2, ip
 1169 01ac 2240     		ands	r2, r2, r4
 1170 01ae 1AD1     		bne	.L120
 1171 01b0 7328     		cmp	r0, #115
 1172 01b2 00F0C380 		beq	.L121
 1173 01b6 7028     		cmp	r0, #112
 1174 01b8 7FF440AF 		bne	.L114
 823:lib/printf/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 1175              		.loc 1 823 9 is_stmt 1 view .LVU360
 1176              	.LVL138:
 824:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1177              		.loc 1 824 9 view .LVU361
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1178              		.loc 1 832 11 view .LVU362
 824:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1179              		.loc 1 824 15 is_stmt 0 view .LVU363
 1180 01bc 43F02103 		orr	r3, r3, #33
 1181              	.LVL139:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1182              		.loc 1 832 17 view .LVU364
 1183 01c0 0593     		str	r3, [sp, #20]
 1184 01c2 0823     		movs	r3, #8
 1185              	.LVL140:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1186              		.loc 1 832 17 view .LVU365
 1187 01c4 0493     		str	r3, [sp, #16]
 1188 01c6 069B     		ldr	r3, [sp, #24]
 1189 01c8 0393     		str	r3, [sp, #12]
 1190 01ca 1023     		movs	r3, #16
 1191 01cc CDE90123 		strd	r2, r3, [sp, #4]
 1192 01d0 56F8043B 		ldr	r3, [r6], #4
 1193              	.LVL141:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1194              		.loc 1 832 17 view .LVU366
 1195 01d4 0093     		str	r3, [sp]
 1196 01d6 2A46     		mov	r2, r5
 1197 01d8 4B46     		mov	r3, r9
 1198 01da 5846     		mov	r0, fp
 1199 01dc 0691     		str	r1, [sp, #24]
 1200              	.LVL142:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1201              		.loc 1 832 17 view .LVU367
 1202 01de FFF7FEFF 		bl	_ntoa_long
 1203              	.LVL143:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1204              		.loc 1 832 17 view .LVU368
 1205 01e2 0546     		mov	r5, r0
 1206              	.LVL144:
 836:lib/printf/printf.c ****         break;
 1207              		.loc 1 836 9 is_stmt 1 view .LVU369
 837:lib/printf/printf.c ****       }
 1208              		.loc 1 837 9 view .LVU370
 1209 01e4 52E0     		b	.L204
 1210              	.LVL145:
 1211              	.L120:
 1212              	.LBB90:
 692:lib/printf/printf.c ****         if (*format == 'x' || *format == 'X') {
 1213              		.loc 1 692 9 view .LVU371
 693:lib/printf/printf.c ****           base = 16U;
 1214              		.loc 1 693 9 view .LVU372
 693:lib/printf/printf.c ****           base = 16U;
 1215              		.loc 1 693 12 is_stmt 0 view .LVU373
 1216 01e6 7828     		cmp	r0, #120
 1217 01e8 B1D0     		beq	.L168
 1218 01ea 6F28     		cmp	r0, #111
 1219 01ec 00F01181 		beq	.L169
 703:lib/printf/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 1220              		.loc 1 703 11 is_stmt 1 view .LVU374
 1221              	.LVL146:
 704:lib/printf/printf.c ****         }
 1222              		.loc 1 704 11 view .LVU375
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1223              		.loc 1 712 12 is_stmt 0 view .LVU376
 1224 01f0 6928     		cmp	r0, #105
 704:lib/printf/printf.c ****         }
 1225              		.loc 1 704 17 view .LVU377
 1226 01f2 23F01003 		bic	r3, r3, #16
 1227              	.LVL147:
 703:lib/printf/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 1228              		.loc 1 703 16 view .LVU378
 1229 01f6 4FF00A02 		mov	r2, #10
 707:lib/printf/printf.c ****           flags |= FLAGS_UPPERCASE;
 1230              		.loc 1 707 9 is_stmt 1 view .LVU379
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1231              		.loc 1 712 9 view .LVU380
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1232              		.loc 1 712 12 is_stmt 0 view .LVU381
 1233 01fa 01D0     		beq	.L125
 1234              	.LVL148:
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1235              		.loc 1 712 30 discriminator 1 view .LVU382
 1236 01fc 6428     		cmp	r0, #100
 1237 01fe 14D1     		bne	.L123
 1238              	.L125:
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1239              		.loc 1 717 9 is_stmt 1 view .LVU383
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1240              		.loc 1 717 12 is_stmt 0 view .LVU384
 1241 0200 5C05     		lsls	r4, r3, #21
 718:lib/printf/printf.c ****         }
 1242              		.loc 1 718 11 is_stmt 1 view .LVU385
 718:lib/printf/printf.c ****         }
 1243              		.loc 1 718 17 is_stmt 0 view .LVU386
 1244 0202 48BF     		it	mi
 1245 0204 23F00103 		bicmi	r3, r3, #1
 1246              	.LVL149:
 722:lib/printf/printf.c ****           // signed
 1247              		.loc 1 722 9 is_stmt 1 view .LVU387
 722:lib/printf/printf.c ****           // signed
 1248              		.loc 1 722 12 is_stmt 0 view .LVU388
 1249 0208 6928     		cmp	r0, #105
 741:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1250              		.loc 1 741 21 view .LVU389
 1251 020a 03F4007C 		and	ip, r3, #512
 722:lib/printf/printf.c ****           // signed
 1252              		.loc 1 722 12 view .LVU390
 1253 020e 01D0     		beq	.L127
 722:lib/printf/printf.c ****           // signed
 1254              		.loc 1 722 30 discriminator 1 view .LVU391
 1255 0210 6428     		cmp	r0, #100
 1256 0212 22D1     		bne	.L128
 1257              	.L127:
 724:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1258              		.loc 1 724 11 is_stmt 1 view .LVU392
 724:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1259              		.loc 1 724 14 is_stmt 0 view .LVU393
 1260 0214 BCF1000F 		cmp	ip, #0
 1261 0218 7FF4FEAE 		bne	.L158
 730:lib/printf/printf.c ****             const long value = va_arg(va, long);
 1262              		.loc 1 730 16 is_stmt 1 view .LVU394
 730:lib/printf/printf.c ****             const long value = va_arg(va, long);
 1263              		.loc 1 730 19 is_stmt 0 view .LVU395
 1264 021c D805     		lsls	r0, r3, #23
 747:lib/printf/printf.c ****           }
 1265              		.loc 1 747 19 view .LVU396
 1266 021e 06F1040A 		add	r10, r6, #4
 730:lib/printf/printf.c ****             const long value = va_arg(va, long);
 1267              		.loc 1 730 19 view .LVU397
 1268 0222 05D5     		bpl	.L130
 1269              	.L133:
 1270              	.LVL150:
 1271              	.LBB83:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1272              		.loc 1 735 129 view .LVU398
 1273 0224 3068     		ldr	r0, [r6]
 1274 0226 06E0     		b	.L132
 1275              	.LVL151:
 1276              	.L167:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1277              		.loc 1 735 129 view .LVU399
 1278              	.LBE83:
 1279              	.LBE90:
 683:lib/printf/printf.c ****       case 'd' :
 1280              		.loc 1 683 5 view .LVU400
 1281 0228 0222     		movs	r2, #2
 1282              	.LVL152:
 1283              	.L123:
 1284              	.LBB91:
 713:lib/printf/printf.c ****         }
 1285              		.loc 1 713 11 is_stmt 1 view .LVU401
 713:lib/printf/printf.c ****         }
 1286              		.loc 1 713 17 is_stmt 0 view .LVU402
 1287 022a 23F00C03 		bic	r3, r3, #12
 1288              	.LVL153:
 713:lib/printf/printf.c ****         }
 1289              		.loc 1 713 17 view .LVU403
 1290 022e E7E7     		b	.L125
 1291              	.L130:
 1292              	.LBB84:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1293              		.loc 1 735 13 is_stmt 1 view .LVU404
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1294              		.loc 1 735 76 is_stmt 0 view .LVU405
 1295 0230 5C06     		lsls	r4, r3, #25
 1296 0232 0DD5     		bpl	.L131
 1297              	.LVL154:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1298              		.loc 1 735 76 view .LVU406
 1299 0234 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 1300              	.LVL155:
 1301              	.L132:
 736:lib/printf/printf.c ****           }
 1302              		.loc 1 736 13 is_stmt 1 discriminator 8 view .LVU407
 736:lib/printf/printf.c ****           }
 1303              		.loc 1 736 19 is_stmt 0 discriminator 8 view .LVU408
 1304 0236 CDE90483 		strd	r8, r3, [sp, #16]
 1305 023a 069B     		ldr	r3, [sp, #24]
 1306              	.LVL156:
 736:lib/printf/printf.c ****           }
 1307              		.loc 1 736 56 discriminator 8 view .LVU409
 1308 023c 0028     		cmp	r0, #0
 736:lib/printf/printf.c ****           }
 1309              		.loc 1 736 19 discriminator 8 view .LVU410
 1310 023e CDE90223 		strd	r2, r3, [sp, #8]
 1311 0242 4FEAD073 		lsr	r3, r0, #31
 1312 0246 0193     		str	r3, [sp, #4]
 736:lib/printf/printf.c ****           }
 1313              		.loc 1 736 56 discriminator 8 view .LVU411
 1314 0248 B8BF     		it	lt
 1315 024a 4042     		rsblt	r0, r0, #0
 1316              	.LVL157:
 1317              	.L205:
 736:lib/printf/printf.c ****           }
 1318              		.loc 1 736 56 discriminator 8 view .LVU412
 1319              	.LBE84:
 1320              	.LBB85:
 751:lib/printf/printf.c ****           }
 1321              		.loc 1 751 19 discriminator 8 view .LVU413
 1322 024c 0090     		str	r0, [sp]
 1323 024e 15E0     		b	.L206
 1324              	.LVL158:
 1325              	.L131:
 751:lib/printf/printf.c ****           }
 1326              		.loc 1 751 19 discriminator 8 view .LVU414
 1327              	.LBE85:
 1328              	.LBB86:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1329              		.loc 1 735 129 discriminator 2 view .LVU415
 1330 0250 1806     		lsls	r0, r3, #24
 1331 0252 E7D5     		bpl	.L133
 1332              	.LVL159:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1333              		.loc 1 735 129 view .LVU416
 1334 0254 B6F90000 		ldrsh	r0, [r6]
 1335 0258 EDE7     		b	.L132
 1336              	.LVL160:
 1337              	.L128:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1338              		.loc 1 735 129 view .LVU417
 1339              	.LBE86:
 741:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1340              		.loc 1 741 11 is_stmt 1 view .LVU418
 741:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1341              		.loc 1 741 14 is_stmt 0 view .LVU419
 1342 025a BCF1000F 		cmp	ip, #0
 1343 025e 7FF4DBAE 		bne	.L158
 746:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 1344              		.loc 1 746 16 is_stmt 1 view .LVU420
 746:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 1345              		.loc 1 746 19 is_stmt 0 view .LVU421
 1346 0262 DC05     		lsls	r4, r3, #23
 747:lib/printf/printf.c ****           }
 1347              		.loc 1 747 19 view .LVU422
 1348 0264 06F1040A 		add	r10, r6, #4
 746:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 1349              		.loc 1 746 19 view .LVU423
 1350 0268 12D5     		bpl	.L134
 747:lib/printf/printf.c ****           }
 1351              		.loc 1 747 13 is_stmt 1 view .LVU424
 1352              	.LVL161:
 747:lib/printf/printf.c ****           }
 1353              		.loc 1 747 19 is_stmt 0 view .LVU425
 1354 026a CDE90483 		strd	r8, r3, [sp, #16]
 1355 026e 069B     		ldr	r3, [sp, #24]
 1356              	.LVL162:
 747:lib/printf/printf.c ****           }
 1357              		.loc 1 747 19 view .LVU426
 1358 0270 CDF804C0 		str	ip, [sp, #4]
 1359 0274 CDE90223 		strd	r2, r3, [sp, #8]
 1360 0278 3368     		ldr	r3, [r6]
 1361 027a 0093     		str	r3, [sp]
 1362              	.LVL163:
 1363              	.L206:
 1364              	.LBB87:
 751:lib/printf/printf.c ****           }
 1365              		.loc 1 751 19 discriminator 8 view .LVU427
 1366 027c 2A46     		mov	r2, r5
 1367 027e 4B46     		mov	r3, r9
 1368 0280 5846     		mov	r0, fp
 1369 0282 0691     		str	r1, [sp, #24]
 1370              	.LVL164:
 751:lib/printf/printf.c ****           }
 1371              		.loc 1 751 19 discriminator 8 view .LVU428
 1372 0284 FFF7FEFF 		bl	_ntoa_long
 1373              	.LVL165:
 751:lib/printf/printf.c ****           }
 1374              		.loc 1 751 19 discriminator 8 view .LVU429
 1375 0288 5646     		mov	r6, r10
 1376 028a 0546     		mov	r5, r0
 1377              	.LVL166:
 751:lib/printf/printf.c ****           }
 1378              		.loc 1 751 19 discriminator 8 view .LVU430
 1379              	.LBE87:
 754:lib/printf/printf.c ****         break;
 1380              		.loc 1 754 9 is_stmt 1 discriminator 8 view .LVU431
 755:lib/printf/printf.c ****       }
 1381              		.loc 1 755 9 discriminator 8 view .LVU432
 1382              	.L204:
 755:lib/printf/printf.c ****       }
 1383              		.loc 1 755 9 is_stmt 0 discriminator 8 view .LVU433
 1384              	.LBE91:
 846:lib/printf/printf.c ****         format++;
 1385              		.loc 1 846 9 view .LVU434
 1386 028c 0699     		ldr	r1, [sp, #24]
 1387              	.LVL167:
 848:lib/printf/printf.c ****     }
 1388              		.loc 1 848 9 view .LVU435
 1389 028e C3E6     		b	.L158
 1390              	.LVL168:
 1391              	.L134:
 1392              	.LBB92:
 1393              	.LBB88:
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1394              		.loc 1 750 13 is_stmt 1 view .LVU436
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1395              		.loc 1 750 103 is_stmt 0 view .LVU437
 1396 0290 5806     		lsls	r0, r3, #25
 1397 0292 08D5     		bpl	.L135
 1398              	.LVL169:
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1399              		.loc 1 750 103 view .LVU438
 1400 0294 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 1401              	.LVL170:
 1402              	.L136:
 751:lib/printf/printf.c ****           }
 1403              		.loc 1 751 13 is_stmt 1 discriminator 8 view .LVU439
 751:lib/printf/printf.c ****           }
 1404              		.loc 1 751 19 is_stmt 0 discriminator 8 view .LVU440
 1405 0296 CDE90483 		strd	r8, r3, [sp, #16]
 1406 029a 069B     		ldr	r3, [sp, #24]
 1407              	.LVL171:
 751:lib/printf/printf.c ****           }
 1408              		.loc 1 751 19 discriminator 8 view .LVU441
 1409 029c CDE90223 		strd	r2, r3, [sp, #8]
 1410 02a0 0023     		movs	r3, #0
 1411 02a2 0193     		str	r3, [sp, #4]
 1412 02a4 D2E7     		b	.L205
 1413              	.LVL172:
 1414              	.L135:
 751:lib/printf/printf.c ****           }
 1415              		.loc 1 751 19 discriminator 8 view .LVU442
 1416 02a6 3068     		ldr	r0, [r6]
 1417              	.LVL173:
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1418              		.loc 1 750 174 discriminator 2 view .LVU443
 1419 02a8 13F0800F 		tst	r3, #128
 1420 02ac 18BF     		it	ne
 1421 02ae 80B2     		uxthne	r0, r0
 1422 02b0 F1E7     		b	.L136
 1423              	.L208:
 1424 02b2 00BF     		.align	2
 1425              	.L207:
 1426 02b4 00000000 		.word	_out_null
 1427 02b8 21081200 		.word	1181729
 1428              	.LVL174:
 1429              	.L117:
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1430              		.loc 1 750 174 discriminator 2 view .LVU444
 1431              	.LBE88:
 1432              	.LBE92:
 1433              	.LBB93:
 777:lib/printf/printf.c ****         // pre padding
 1434              		.loc 1 777 9 is_stmt 1 view .LVU445
 779:lib/printf/printf.c ****           while (l++ < width) {
 1435              		.loc 1 779 9 view .LVU446
 779:lib/printf/printf.c ****           while (l++ < width) {
 1436              		.loc 1 779 12 is_stmt 0 view .LVU447
 1437 02bc 13F00204 		ands	r4, r3, #2
 1438 02c0 26D0     		beq	.L170
 777:lib/printf/printf.c ****         // pre padding
 1439              		.loc 1 777 22 view .LVU448
 1440 02c2 4FF0010A 		mov	r10, #1
 1441              	.LVL175:
 1442              	.L139:
 785:lib/printf/printf.c ****         // post padding
 1443              		.loc 1 785 9 is_stmt 1 view .LVU449
 785:lib/printf/printf.c ****         // post padding
 1444              		.loc 1 785 9 is_stmt 0 view .LVU450
 1445 02c6 6B1C     		adds	r3, r5, #1
 1446 02c8 0693     		str	r3, [sp, #24]
 1447              	.LVL176:
 785:lib/printf/printf.c ****         // post padding
 1448              		.loc 1 785 9 view .LVU451
 1449 02ca 0791     		str	r1, [sp, #28]
 1450 02cc 16F8040B 		ldrb	r0, [r6], #4	@ zero_extendqisi2
 1451              	.LVL177:
 785:lib/printf/printf.c ****         // post padding
 1452              		.loc 1 785 9 view .LVU452
 1453 02d0 4B46     		mov	r3, r9
 1454              	.LVL178:
 785:lib/printf/printf.c ****         // post padding
 1455              		.loc 1 785 9 view .LVU453
 1456 02d2 2A46     		mov	r2, r5
 1457 02d4 D847     		blx	fp
 1458              	.LVL179:
 787:lib/printf/printf.c ****           while (l++ < width) {
 1459              		.loc 1 787 9 is_stmt 1 view .LVU454
 787:lib/printf/printf.c ****           while (l++ < width) {
 1460              		.loc 1 787 12 is_stmt 0 view .LVU455
 1461 02d6 0799     		ldr	r1, [sp, #28]
 1462 02d8 74B3     		cbz	r4, .L142
 785:lib/printf/printf.c ****         // post padding
 1463              		.loc 1 785 9 view .LVU456
 1464 02da 069A     		ldr	r2, [sp, #24]
 1465 02dc 5446     		mov	r4, r10
 1466 02de 21E0     		b	.L141
 1467              	.LVL180:
 1468              	.L140:
 781:lib/printf/printf.c ****           }
 1469              		.loc 1 781 13 is_stmt 1 view .LVU457
 781:lib/printf/printf.c ****           }
 1470              		.loc 1 781 13 is_stmt 0 view .LVU458
 1471 02e0 0691     		str	r1, [sp, #24]
 1472 02e2 4B46     		mov	r3, r9
 1473 02e4 2020     		movs	r0, #32
 1474 02e6 D847     		blx	fp
 1475              	.LVL181:
 781:lib/printf/printf.c ****           }
 1476              		.loc 1 781 13 view .LVU459
 1477 02e8 0699     		ldr	r1, [sp, #24]
 1478              	.LVL182:
 1479              	.L138:
 781:lib/printf/printf.c ****           }
 1480              		.loc 1 781 13 view .LVU460
 1481 02ea 0AEB0502 		add	r2, r10, r5
 1482              	.LVL183:
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1483              		.loc 1 780 22 is_stmt 1 view .LVU461
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1484              		.loc 1 780 22 is_stmt 0 view .LVU462
 1485 02ee 0AF1010A 		add	r10, r10, #1
 1486              	.LVL184:
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1487              		.loc 1 780 22 view .LVU463
 1488 02f2 D045     		cmp	r8, r10
 1489 02f4 F4D8     		bhi	.L140
 1490 02f6 B8F1000F 		cmp	r8, #0
 1491 02fa 08F1FF33 		add	r3, r8, #-1
 1492 02fe 08BF     		it	eq
 1493 0300 0023     		moveq	r3, #0
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1494              		.loc 1 780 19 view .LVU464
 1495 0302 08F1010A 		add	r10, r8, #1
 1496              	.LVL185:
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1497              		.loc 1 780 19 view .LVU465
 1498 0306 1D44     		add	r5, r5, r3
 1499 0308 08BF     		it	eq
 1500 030a 4FF0020A 		moveq	r10, #2
 1501 030e DAE7     		b	.L139
 1502              	.LVL186:
 1503              	.L170:
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1504              		.loc 1 780 19 view .LVU466
 1505 0310 A246     		mov	r10, r4
 1506 0312 EAE7     		b	.L138
 1507              	.LVL187:
 1508              	.L143:
 789:lib/printf/printf.c ****           }
 1509              		.loc 1 789 13 is_stmt 1 view .LVU467
 1510 0314 0791     		str	r1, [sp, #28]
 1511 0316 4B46     		mov	r3, r9
 1512 0318 2020     		movs	r0, #32
 1513 031a 551C     		adds	r5, r2, #1
 1514              	.LVL188:
 789:lib/printf/printf.c ****           }
 1515              		.loc 1 789 13 is_stmt 0 view .LVU468
 1516 031c D847     		blx	fp
 1517              	.LVL189:
 1518 031e 0799     		ldr	r1, [sp, #28]
 1519 0320 0134     		adds	r4, r4, #1
 1520              	.LVL190:
 789:lib/printf/printf.c ****           }
 1521              		.loc 1 789 13 view .LVU469
 1522 0322 2A46     		mov	r2, r5
 1523              	.LVL191:
 1524              	.L141:
 788:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1525              		.loc 1 788 22 is_stmt 1 view .LVU470
 788:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1526              		.loc 1 788 22 is_stmt 0 view .LVU471
 1527 0324 4445     		cmp	r4, r8
 1528 0326 F5D3     		bcc	.L143
 1529 0328 069A     		ldr	r2, [sp, #24]
 1530              	.LVL192:
 788:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1531              		.loc 1 788 22 view .LVU472
 1532 032a A8EB0A03 		sub	r3, r8, r10
 1533 032e D045     		cmp	r8, r10
 1534 0330 38BF     		it	cc
 1535 0332 0023     		movcc	r3, #0
 1536 0334 1A44     		add	r2, r2, r3
 1537 0336 0692     		str	r2, [sp, #24]
 1538              	.LVL193:
 1539              	.L142:
 792:lib/printf/printf.c ****         break;
 1540              		.loc 1 792 9 is_stmt 1 view .LVU473
 793:lib/printf/printf.c ****       }
 1541              		.loc 1 793 9 view .LVU474
 1542 0338 069D     		ldr	r5, [sp, #24]
 1543 033a 6DE6     		b	.L158
 1544              	.LVL194:
 1545              	.L121:
 793:lib/printf/printf.c ****       }
 1546              		.loc 1 793 9 is_stmt 0 view .LVU475
 1547              	.LBE93:
 1548              	.LBB94:
 797:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 1549              		.loc 1 797 9 is_stmt 1 view .LVU476
 797:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 1550              		.loc 1 797 21 is_stmt 0 view .LVU477
 1551 033c 3246     		mov	r2, r6
 1552 033e 52F8046B 		ldr	r6, [r2], #4
 1553 0342 0792     		str	r2, [sp, #28]
 1554              	.LVL195:
 798:lib/printf/printf.c ****         // pre padding
 1555              		.loc 1 798 9 is_stmt 1 view .LVU478
 798:lib/printf/printf.c ****         // pre padding
 1556              		.loc 1 798 26 is_stmt 0 view .LVU479
 1557 0344 069A     		ldr	r2, [sp, #24]
 1558 0346 002A     		cmp	r2, #0
 1559 0348 14BF     		ite	ne
 1560 034a 1046     		movne	r0, r2
 1561 034c 4FF0FF30 		moveq	r0, #-1
 1562 0350 3044     		add	r0, r0, r6
 1563 0352 3246     		mov	r2, r6
 1564              	.L145:
 1565              	.LVL196:
 1566              	.LBB95:
 1567              	.LBB96:
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1568              		.loc 1 174 20 is_stmt 1 view .LVU480
 1569 0354 92F800C0 		ldrb	ip, [r2]	@ zero_extendqisi2
 1570 0358 BCF1000F 		cmp	ip, #0
 1571 035c 01D0     		beq	.L146
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1572              		.loc 1 174 20 is_stmt 0 view .LVU481
 1573 035e 8242     		cmp	r2, r0
 1574 0360 12D1     		bne	.L147
 1575              	.L146:
 175:lib/printf/printf.c **** }
 1576              		.loc 1 175 3 is_stmt 1 view .LVU482
 175:lib/printf/printf.c **** }
 1577              		.loc 1 175 27 is_stmt 0 view .LVU483
 1578 0362 A2EB060A 		sub	r10, r2, r6
 1579              	.LVL197:
 175:lib/printf/printf.c **** }
 1580              		.loc 1 175 27 view .LVU484
 1581              	.LBE96:
 1582              	.LBE95:
 800:lib/printf/printf.c ****           l = (l < precision ? l : precision);
 1583              		.loc 1 800 9 is_stmt 1 view .LVU485
 800:lib/printf/printf.c ****           l = (l < precision ? l : precision);
 1584              		.loc 1 800 12 is_stmt 0 view .LVU486
 1585 0366 13F48062 		ands	r2, r3, #1024
 1586 036a 0892     		str	r2, [sp, #32]
 1587 036c 03D0     		beq	.L148
 801:lib/printf/printf.c ****         }
 1588              		.loc 1 801 11 is_stmt 1 view .LVU487
 801:lib/printf/printf.c ****         }
 1589              		.loc 1 801 13 is_stmt 0 view .LVU488
 1590 036e 069A     		ldr	r2, [sp, #24]
 1591 0370 9245     		cmp	r10, r2
 1592 0372 28BF     		it	cs
 1593 0374 9246     		movcs	r10, r2
 1594              	.LVL198:
 1595              	.L148:
 803:lib/printf/printf.c ****           while (l++ < width) {
 1596              		.loc 1 803 9 is_stmt 1 view .LVU489
 803:lib/printf/printf.c ****           while (l++ < width) {
 1597              		.loc 1 803 12 is_stmt 0 view .LVU490
 1598 0376 13F00203 		ands	r3, r3, #2
 1599              	.LVL199:
 803:lib/printf/printf.c ****           while (l++ < width) {
 1600              		.loc 1 803 12 view .LVU491
 1601 037a 0993     		str	r3, [sp, #36]
 1602 037c 1CD1     		bne	.L150
 803:lib/printf/printf.c ****           while (l++ < width) {
 1603              		.loc 1 803 12 view .LVU492
 1604 037e AAEB0503 		sub	r3, r10, r5
 1605 0382 2A46     		mov	r2, r5
 1606 0384 1C46     		mov	r4, r3
 1607 0386 09E0     		b	.L149
 1608              	.LVL200:
 1609              	.L147:
 1610              	.LBB98:
 1611              	.LBB97:
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1612              		.loc 1 174 34 is_stmt 1 view .LVU493
 1613 0388 0132     		adds	r2, r2, #1
 1614              	.LVL201:
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1615              		.loc 1 174 34 is_stmt 0 view .LVU494
 1616 038a E3E7     		b	.L145
 1617              	.LVL202:
 1618              	.L151:
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1619              		.loc 1 174 34 view .LVU495
 1620              	.LBE97:
 1621              	.LBE98:
 805:lib/printf/printf.c ****           }
 1622              		.loc 1 805 13 is_stmt 1 view .LVU496
 1623 038c 531C     		adds	r3, r2, #1
 1624 038e 0A93     		str	r3, [sp, #40]
 1625              	.LVL203:
 805:lib/printf/printf.c ****           }
 1626              		.loc 1 805 13 is_stmt 0 view .LVU497
 1627 0390 0B91     		str	r1, [sp, #44]
 1628 0392 4B46     		mov	r3, r9
 1629              	.LVL204:
 805:lib/printf/printf.c ****           }
 1630              		.loc 1 805 13 view .LVU498
 1631 0394 2020     		movs	r0, #32
 1632 0396 D847     		blx	fp
 1633              	.LVL205:
 1634 0398 DDE90A21 		ldrd	r2, r1, [sp, #40]
 1635              	.LVL206:
 1636              	.L149:
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1637              		.loc 1 804 22 is_stmt 1 view .LVU499
 1638 039c 2346     		mov	r3, r4
 1639 039e 1344     		add	r3, r3, r2
 1640 03a0 9845     		cmp	r8, r3
 1641 03a2 F3D8     		bhi	.L151
 1642 03a4 A8EB0A03 		sub	r3, r8, r10
 1643 03a8 D045     		cmp	r8, r10
 1644 03aa 38BF     		it	cc
 1645 03ac 0023     		movcc	r3, #0
 1646 03ae 0AF10102 		add	r2, r10, #1
 1647              	.LVL207:
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1648              		.loc 1 804 22 is_stmt 0 view .LVU500
 1649 03b2 1D44     		add	r5, r5, r3
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1650              		.loc 1 804 19 view .LVU501
 1651 03b4 03EB020A 		add	r10, r3, r2
 1652              	.L150:
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1653              		.loc 1 804 19 view .LVU502
 1654 03b8 AB1B     		subs	r3, r5, r6
 1655 03ba 1C46     		mov	r4, r3
 1656 03bc 05E0     		b	.L152
 1657              	.LVL208:
 1658              	.L174:
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1659              		.loc 1 804 19 view .LVU503
 1660 03be 0693     		str	r3, [sp, #24]
 1661              	.LVL209:
 1662              	.L154:
 810:lib/printf/printf.c ****         }
 1663              		.loc 1 810 11 is_stmt 1 view .LVU504
 810:lib/printf/printf.c ****         }
 1664              		.loc 1 810 11 is_stmt 0 view .LVU505
 1665 03c0 0A91     		str	r1, [sp, #40]
 1666 03c2 4B46     		mov	r3, r9
 1667 03c4 2A46     		mov	r2, r5
 1668 03c6 D847     		blx	fp
 1669              	.LVL210:
 1670 03c8 0A99     		ldr	r1, [sp, #40]
 1671              	.LVL211:
 1672              	.L152:
 810:lib/printf/printf.c ****         }
 1673              		.loc 1 810 11 view .LVU506
 1674 03ca A519     		adds	r5, r4, r6
 1675              	.LVL212:
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1676              		.loc 1 809 26 is_stmt 1 view .LVU507
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1677              		.loc 1 809 17 is_stmt 0 view .LVU508
 1678 03cc 16F8010B 		ldrb	r0, [r6], #1	@ zero_extendqisi2
 1679              	.LVL213:
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1680              		.loc 1 809 26 view .LVU509
 1681 03d0 38B1     		cbz	r0, .L153
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1682              		.loc 1 809 26 discriminator 1 view .LVU510
 1683 03d2 089B     		ldr	r3, [sp, #32]
 1684 03d4 002B     		cmp	r3, #0
 1685 03d6 F3D0     		beq	.L154
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1686              		.loc 1 809 69 discriminator 2 view .LVU511
 1687 03d8 069B     		ldr	r3, [sp, #24]
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1688              		.loc 1 809 57 discriminator 2 view .LVU512
 1689 03da 069A     		ldr	r2, [sp, #24]
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1690              		.loc 1 809 69 discriminator 2 view .LVU513
 1691 03dc 013B     		subs	r3, r3, #1
 1692              	.LVL214:
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1693              		.loc 1 809 57 discriminator 2 view .LVU514
 1694 03de 002A     		cmp	r2, #0
 1695 03e0 EDD1     		bne	.L174
 1696              	.LVL215:
 1697              	.L153:
 813:lib/printf/printf.c ****           while (l++ < width) {
 1698              		.loc 1 813 9 is_stmt 1 view .LVU515
 813:lib/printf/printf.c ****           while (l++ < width) {
 1699              		.loc 1 813 12 is_stmt 0 view .LVU516
 1700 03e2 099B     		ldr	r3, [sp, #36]
 1701 03e4 9BB1     		cbz	r3, .L156
 1702 03e6 2A46     		mov	r2, r5
 1703 03e8 AAEB0504 		sub	r4, r10, r5
 1704 03ec 06E0     		b	.L155
 1705              	.LVL216:
 1706              	.L157:
 815:lib/printf/printf.c ****           }
 1707              		.loc 1 815 13 is_stmt 1 view .LVU517
 1708 03ee 0691     		str	r1, [sp, #24]
 1709 03f0 4B46     		mov	r3, r9
 1710 03f2 2020     		movs	r0, #32
 1711 03f4 561C     		adds	r6, r2, #1
 1712              	.LVL217:
 815:lib/printf/printf.c ****           }
 1713              		.loc 1 815 13 is_stmt 0 view .LVU518
 1714 03f6 D847     		blx	fp
 1715              	.LVL218:
 1716 03f8 0699     		ldr	r1, [sp, #24]
 1717 03fa 3246     		mov	r2, r6
 1718              	.LVL219:
 1719              	.L155:
 814:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1720              		.loc 1 814 22 is_stmt 1 view .LVU519
 1721 03fc 1319     		adds	r3, r2, r4
 1722 03fe 4345     		cmp	r3, r8
 1723 0400 F5D3     		bcc	.L157
 814:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1724              		.loc 1 814 22 is_stmt 0 view .LVU520
 1725 0402 A8EB0A03 		sub	r3, r8, r10
 1726 0406 D045     		cmp	r8, r10
 1727 0408 38BF     		it	cc
 1728 040a 0023     		movcc	r3, #0
 1729 040c 1D44     		add	r5, r5, r3
 1730              	.LVL220:
 1731              	.L156:
 818:lib/printf/printf.c ****         break;
 1732              		.loc 1 818 9 is_stmt 1 view .LVU521
 819:lib/printf/printf.c ****       }
 1733              		.loc 1 819 9 view .LVU522
 797:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 1734              		.loc 1 797 21 is_stmt 0 view .LVU523
 1735 040e 079E     		ldr	r6, [sp, #28]
 819:lib/printf/printf.c ****       }
 1736              		.loc 1 819 9 view .LVU524
 1737 0410 02E6     		b	.L158
 1738              	.LVL221:
 1739              	.L169:
 819:lib/printf/printf.c ****       }
 1740              		.loc 1 819 9 view .LVU525
 1741              	.LBE94:
 1742              	.LBB99:
 693:lib/printf/printf.c ****           base = 16U;
 1743              		.loc 1 693 12 view .LVU526
 1744 0412 0822     		movs	r2, #8
 1745 0414 09E7     		b	.L123
 1746              	.LBE99:
 1747              		.cfi_endproc
 1748              	.LFE10:
 1750 0416 00BF     		.section	.text.printf_,"ax",%progbits
 1751              		.align	1
 1752              		.global	printf_
 1753              		.syntax unified
 1754              		.thumb
 1755              		.thumb_func
 1756              		.fpu fpv4-sp-d16
 1758              	printf_:
 1759              	.LVL222:
 1760              	.LFB11:
 858:lib/printf/printf.c **** 
 859:lib/printf/printf.c **** 
 860:lib/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 861:lib/printf/printf.c **** 
 862:lib/printf/printf.c **** int printf_(const char* format, ...)
 863:lib/printf/printf.c **** {
 1761              		.loc 1 863 1 is_stmt 1 view -0
 1762              		.cfi_startproc
 1763              		@ args = 4, pretend = 16, frame = 8
 1764              		@ frame_needed = 0, uses_anonymous_args = 1
 864:lib/printf/printf.c ****   va_list va;
 1765              		.loc 1 864 3 view .LVU528
 865:lib/printf/printf.c ****   va_start(va, format);
 1766              		.loc 1 865 3 view .LVU529
 863:lib/printf/printf.c ****   va_list va;
 1767              		.loc 1 863 1 is_stmt 0 view .LVU530
 1768 0000 0FB4     		push	{r0, r1, r2, r3}
 1769              		.cfi_def_cfa_offset 16
 1770              		.cfi_offset 0, -16
 1771              		.cfi_offset 1, -12
 1772              		.cfi_offset 2, -8
 1773              		.cfi_offset 3, -4
 1774 0002 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1775              		.cfi_def_cfa_offset 40
 1776              		.cfi_offset 14, -20
 863:lib/printf/printf.c ****   va_list va;
 1777              		.loc 1 863 1 view .LVU531
 1778 0004 06AA     		add	r2, sp, #24
 866:lib/printf/printf.c ****   char buffer[1];
 867:lib/printf/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 1779              		.loc 1 867 19 view .LVU532
 1780 0006 02A9     		add	r1, sp, #8
 863:lib/printf/printf.c ****   va_list va;
 1781              		.loc 1 863 1 view .LVU533
 1782 0008 52F8043B 		ldr	r3, [r2], #4
 865:lib/printf/printf.c ****   char buffer[1];
 1783              		.loc 1 865 3 view .LVU534
 1784 000c 0392     		str	r2, [sp, #12]
 866:lib/printf/printf.c ****   char buffer[1];
 1785              		.loc 1 866 3 is_stmt 1 view .LVU535
 1786              		.loc 1 867 3 view .LVU536
 1787              		.loc 1 867 19 is_stmt 0 view .LVU537
 1788 000e 0092     		str	r2, [sp]
 1789 0010 0448     		ldr	r0, .L210
 1790 0012 4FF0FF32 		mov	r2, #-1
 1791 0016 FFF7FEFF 		bl	_vsnprintf
 1792              	.LVL223:
 868:lib/printf/printf.c ****   va_end(va);
 1793              		.loc 1 868 3 is_stmt 1 view .LVU538
 869:lib/printf/printf.c ****   return ret;
 1794              		.loc 1 869 3 view .LVU539
 870:lib/printf/printf.c **** }
 1795              		.loc 1 870 1 is_stmt 0 view .LVU540
 1796 001a 05B0     		add	sp, sp, #20
 1797              		.cfi_def_cfa_offset 20
 1798              		@ sp needed
 1799 001c 5DF804EB 		ldr	lr, [sp], #4
 1800              		.cfi_restore 14
 1801              		.cfi_def_cfa_offset 16
 1802 0020 04B0     		add	sp, sp, #16
 1803              		.cfi_restore 3
 1804              		.cfi_restore 2
 1805              		.cfi_restore 1
 1806              		.cfi_restore 0
 1807              		.cfi_def_cfa_offset 0
 1808 0022 7047     		bx	lr
 1809              	.L211:
 1810              		.align	2
 1811              	.L210:
 1812 0024 00000000 		.word	_out_char
 1813              		.cfi_endproc
 1814              	.LFE11:
 1816              		.section	.text.sprintf_,"ax",%progbits
 1817              		.align	1
 1818              		.global	sprintf_
 1819              		.syntax unified
 1820              		.thumb
 1821              		.thumb_func
 1822              		.fpu fpv4-sp-d16
 1824              	sprintf_:
 1825              	.LVL224:
 1826              	.LFB12:
 871:lib/printf/printf.c **** 
 872:lib/printf/printf.c **** 
 873:lib/printf/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 874:lib/printf/printf.c **** {
 1827              		.loc 1 874 1 is_stmt 1 view -0
 1828              		.cfi_startproc
 1829              		@ args = 4, pretend = 12, frame = 8
 1830              		@ frame_needed = 0, uses_anonymous_args = 1
 875:lib/printf/printf.c ****   va_list va;
 1831              		.loc 1 875 3 view .LVU542
 876:lib/printf/printf.c ****   va_start(va, format);
 1832              		.loc 1 876 3 view .LVU543
 874:lib/printf/printf.c ****   va_list va;
 1833              		.loc 1 874 1 is_stmt 0 view .LVU544
 1834 0000 0EB4     		push	{r1, r2, r3}
 1835              		.cfi_def_cfa_offset 12
 1836              		.cfi_offset 1, -12
 1837              		.cfi_offset 2, -8
 1838              		.cfi_offset 3, -4
 1839 0002 0FB5     		push	{r0, r1, r2, r3, lr}
 1840              		.cfi_def_cfa_offset 32
 1841              		.cfi_offset 14, -16
 874:lib/printf/printf.c ****   va_list va;
 1842              		.loc 1 874 1 view .LVU545
 1843 0004 05AA     		add	r2, sp, #20
 1844 0006 0146     		mov	r1, r0
 1845 0008 52F8043B 		ldr	r3, [r2], #4
 1846              		.loc 1 876 3 view .LVU546
 1847 000c 0392     		str	r2, [sp, #12]
 877:lib/printf/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 1848              		.loc 1 877 3 is_stmt 1 view .LVU547
 1849              		.loc 1 877 19 is_stmt 0 view .LVU548
 1850 000e 0092     		str	r2, [sp]
 1851 0010 0448     		ldr	r0, .L213
 1852              	.LVL225:
 1853              		.loc 1 877 19 view .LVU549
 1854 0012 4FF0FF32 		mov	r2, #-1
 1855 0016 FFF7FEFF 		bl	_vsnprintf
 1856              	.LVL226:
 878:lib/printf/printf.c ****   va_end(va);
 1857              		.loc 1 878 3 is_stmt 1 view .LVU550
 879:lib/printf/printf.c ****   return ret;
 1858              		.loc 1 879 3 view .LVU551
 880:lib/printf/printf.c **** }
 1859              		.loc 1 880 1 is_stmt 0 view .LVU552
 1860 001a 04B0     		add	sp, sp, #16
 1861              		.cfi_def_cfa_offset 16
 1862              		@ sp needed
 1863 001c 5DF804EB 		ldr	lr, [sp], #4
 1864              		.cfi_restore 14
 1865              		.cfi_def_cfa_offset 12
 1866 0020 03B0     		add	sp, sp, #12
 1867              		.cfi_restore 3
 1868              		.cfi_restore 2
 1869              		.cfi_restore 1
 1870              		.cfi_def_cfa_offset 0
 1871 0022 7047     		bx	lr
 1872              	.L214:
 1873              		.align	2
 1874              	.L213:
 1875 0024 00000000 		.word	_out_buffer
 1876              		.cfi_endproc
 1877              	.LFE12:
 1879              		.section	.text.snprintf_,"ax",%progbits
 1880              		.align	1
 1881              		.global	snprintf_
 1882              		.syntax unified
 1883              		.thumb
 1884              		.thumb_func
 1885              		.fpu fpv4-sp-d16
 1887              	snprintf_:
 1888              	.LVL227:
 1889              	.LFB13:
 881:lib/printf/printf.c **** 
 882:lib/printf/printf.c **** 
 883:lib/printf/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
 884:lib/printf/printf.c **** {
 1890              		.loc 1 884 1 is_stmt 1 view -0
 1891              		.cfi_startproc
 1892              		@ args = 4, pretend = 8, frame = 8
 1893              		@ frame_needed = 0, uses_anonymous_args = 1
 885:lib/printf/printf.c ****   va_list va;
 1894              		.loc 1 885 3 view .LVU554
 886:lib/printf/printf.c ****   va_start(va, format);
 1895              		.loc 1 886 3 view .LVU555
 884:lib/printf/printf.c ****   va_list va;
 1896              		.loc 1 884 1 is_stmt 0 view .LVU556
 1897 0000 0CB4     		push	{r2, r3}
 1898              		.cfi_def_cfa_offset 8
 1899              		.cfi_offset 2, -8
 1900              		.cfi_offset 3, -4
 1901 0002 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1902              		.cfi_def_cfa_offset 32
 1903              		.cfi_offset 4, -16
 1904              		.cfi_offset 14, -12
 884:lib/printf/printf.c ****   va_list va;
 1905              		.loc 1 884 1 view .LVU557
 1906 0004 06AC     		add	r4, sp, #24
 1907 0006 0A46     		mov	r2, r1
 1908 0008 54F8043B 		ldr	r3, [r4], #4
 887:lib/printf/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 1909              		.loc 1 887 19 view .LVU558
 1910 000c 0094     		str	r4, [sp]
 1911 000e 0146     		mov	r1, r0
 1912              	.LVL228:
 1913              		.loc 1 887 19 view .LVU559
 1914 0010 0448     		ldr	r0, .L216
 1915              	.LVL229:
 886:lib/printf/printf.c ****   va_start(va, format);
 1916              		.loc 1 886 3 view .LVU560
 1917 0012 0394     		str	r4, [sp, #12]
 1918              		.loc 1 887 3 is_stmt 1 view .LVU561
 1919              		.loc 1 887 19 is_stmt 0 view .LVU562
 1920 0014 FFF7FEFF 		bl	_vsnprintf
 1921              	.LVL230:
 888:lib/printf/printf.c ****   va_end(va);
 1922              		.loc 1 888 3 is_stmt 1 view .LVU563
 889:lib/printf/printf.c ****   return ret;
 1923              		.loc 1 889 3 view .LVU564
 890:lib/printf/printf.c **** }
 1924              		.loc 1 890 1 is_stmt 0 view .LVU565
 1925 0018 04B0     		add	sp, sp, #16
 1926              		.cfi_def_cfa_offset 16
 1927              		@ sp needed
 1928 001a BDE81040 		pop	{r4, lr}
 1929              		.cfi_restore 14
 1930              		.cfi_restore 4
 1931              		.cfi_def_cfa_offset 8
 1932 001e 02B0     		add	sp, sp, #8
 1933              		.cfi_restore 3
 1934              		.cfi_restore 2
 1935              		.cfi_def_cfa_offset 0
 1936 0020 7047     		bx	lr
 1937              	.L217:
 1938 0022 00BF     		.align	2
 1939              	.L216:
 1940 0024 00000000 		.word	_out_buffer
 1941              		.cfi_endproc
 1942              	.LFE13:
 1944              		.section	.text.vprintf_,"ax",%progbits
 1945              		.align	1
 1946              		.global	vprintf_
 1947              		.syntax unified
 1948              		.thumb
 1949              		.thumb_func
 1950              		.fpu fpv4-sp-d16
 1952              	vprintf_:
 1953              	.LVL231:
 1954              	.LFB14:
 891:lib/printf/printf.c **** 
 892:lib/printf/printf.c **** 
 893:lib/printf/printf.c **** int vprintf_(const char* format, va_list va)
 894:lib/printf/printf.c **** {
 1955              		.loc 1 894 1 is_stmt 1 view -0
 1956              		.cfi_startproc
 1957              		@ args = 0, pretend = 0, frame = 8
 1958              		@ frame_needed = 0, uses_anonymous_args = 0
 895:lib/printf/printf.c ****   char buffer[1];
 1959              		.loc 1 895 3 view .LVU567
 896:lib/printf/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 1960              		.loc 1 896 3 view .LVU568
 894:lib/printf/printf.c ****   char buffer[1];
 1961              		.loc 1 894 1 is_stmt 0 view .LVU569
 1962 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1963              		.cfi_def_cfa_offset 24
 1964              		.cfi_offset 14, -4
 1965              	.LVL232:
 894:lib/printf/printf.c ****   char buffer[1];
 1966              		.loc 1 894 1 view .LVU570
 1967 0002 0346     		mov	r3, r0
 1968              		.loc 1 896 10 view .LVU571
 1969 0004 0091     		str	r1, [sp]
 1970 0006 4FF0FF32 		mov	r2, #-1
 1971 000a 03A9     		add	r1, sp, #12
 1972 000c 0248     		ldr	r0, .L219
 1973              	.LVL233:
 1974              		.loc 1 896 10 view .LVU572
 1975 000e FFF7FEFF 		bl	_vsnprintf
 1976              	.LVL234:
 897:lib/printf/printf.c **** }
 1977              		.loc 1 897 1 view .LVU573
 1978 0012 05B0     		add	sp, sp, #20
 1979              		.cfi_def_cfa_offset 4
 1980              		@ sp needed
 1981 0014 5DF804FB 		ldr	pc, [sp], #4
 1982              	.L220:
 1983              		.align	2
 1984              	.L219:
 1985 0018 00000000 		.word	_out_char
 1986              		.cfi_endproc
 1987              	.LFE14:
 1989              		.section	.text.vsnprintf_,"ax",%progbits
 1990              		.align	1
 1991              		.global	vsnprintf_
 1992              		.syntax unified
 1993              		.thumb
 1994              		.thumb_func
 1995              		.fpu fpv4-sp-d16
 1997              	vsnprintf_:
 1998              	.LVL235:
 1999              	.LFB15:
 898:lib/printf/printf.c **** 
 899:lib/printf/printf.c **** 
 900:lib/printf/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 901:lib/printf/printf.c **** {
 2000              		.loc 1 901 1 is_stmt 1 view -0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 0
 2003              		@ frame_needed = 0, uses_anonymous_args = 0
 902:lib/printf/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 2004              		.loc 1 902 3 view .LVU575
 901:lib/printf/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 2005              		.loc 1 901 1 is_stmt 0 view .LVU576
 2006 0000 07B5     		push	{r0, r1, r2, lr}
 2007              		.cfi_def_cfa_offset 16
 2008              		.cfi_offset 14, -4
 2009              		.loc 1 902 10 view .LVU577
 2010 0002 0093     		str	r3, [sp]
 2011 0004 1346     		mov	r3, r2
 2012              	.LVL236:
 2013              		.loc 1 902 10 view .LVU578
 2014 0006 0A46     		mov	r2, r1
 2015              	.LVL237:
 2016              		.loc 1 902 10 view .LVU579
 2017 0008 0146     		mov	r1, r0
 2018              	.LVL238:
 2019              		.loc 1 902 10 view .LVU580
 2020 000a 0348     		ldr	r0, .L222
 2021              	.LVL239:
 2022              		.loc 1 902 10 view .LVU581
 2023 000c FFF7FEFF 		bl	_vsnprintf
 2024              	.LVL240:
 903:lib/printf/printf.c **** }
 2025              		.loc 1 903 1 view .LVU582
 2026 0010 03B0     		add	sp, sp, #12
 2027              		.cfi_def_cfa_offset 4
 2028              		@ sp needed
 2029 0012 5DF804FB 		ldr	pc, [sp], #4
 2030              	.L223:
 2031 0016 00BF     		.align	2
 2032              	.L222:
 2033 0018 00000000 		.word	_out_buffer
 2034              		.cfi_endproc
 2035              	.LFE15:
 2037              		.section	.text.fctprintf,"ax",%progbits
 2038              		.align	1
 2039              		.global	fctprintf
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
 2043              		.fpu fpv4-sp-d16
 2045              	fctprintf:
 2046              	.LVL241:
 2047              	.LFB16:
 904:lib/printf/printf.c **** 
 905:lib/printf/printf.c **** 
 906:lib/printf/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 907:lib/printf/printf.c **** {
 2048              		.loc 1 907 1 is_stmt 1 view -0
 2049              		.cfi_startproc
 2050              		@ args = 4, pretend = 8, frame = 16
 2051              		@ frame_needed = 0, uses_anonymous_args = 1
 908:lib/printf/printf.c ****   va_list va;
 2052              		.loc 1 908 3 view .LVU584
 909:lib/printf/printf.c ****   va_start(va, format);
 2053              		.loc 1 909 3 view .LVU585
 907:lib/printf/printf.c ****   va_list va;
 2054              		.loc 1 907 1 is_stmt 0 view .LVU586
 2055 0000 0CB4     		push	{r2, r3}
 2056              		.cfi_def_cfa_offset 8
 2057              		.cfi_offset 2, -8
 2058              		.cfi_offset 3, -4
 2059 0002 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 2060              		.cfi_def_cfa_offset 40
 2061              		.cfi_offset 14, -12
 907:lib/printf/printf.c ****   va_list va;
 2062              		.loc 1 907 1 view .LVU587
 2063 0004 08AA     		add	r2, sp, #32
 910:lib/printf/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 2064              		.loc 1 910 27 view .LVU588
 2065 0006 0591     		str	r1, [sp, #20]
 911:lib/printf/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 2066              		.loc 1 911 3 is_stmt 1 view .LVU589
 907:lib/printf/printf.c ****   va_list va;
 2067              		.loc 1 907 1 is_stmt 0 view .LVU590
 2068 0008 52F8043B 		ldr	r3, [r2], #4
 2069              		.loc 1 911 19 view .LVU591
 2070 000c 0092     		str	r2, [sp]
 910:lib/printf/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 2071              		.loc 1 910 27 view .LVU592
 2072 000e CDE90320 		strd	r2, r0, [sp, #12]
 2073              		.loc 1 911 19 view .LVU593
 2074 0012 04A9     		add	r1, sp, #16
 2075 0014 4FF0FF32 		mov	r2, #-1
 2076 0018 0348     		ldr	r0, .L225
 2077              	.LVL242:
 2078              		.loc 1 911 19 view .LVU594
 2079 001a FFF7FEFF 		bl	_vsnprintf
 2080              	.LVL243:
 912:lib/printf/printf.c ****   va_end(va);
 2081              		.loc 1 912 3 is_stmt 1 view .LVU595
 913:lib/printf/printf.c ****   return ret;
 2082              		.loc 1 913 3 view .LVU596
 914:lib/printf/printf.c **** }
 2083              		.loc 1 914 1 is_stmt 0 view .LVU597
 2084 001e 07B0     		add	sp, sp, #28
 2085              		.cfi_def_cfa_offset 12
 2086              		@ sp needed
 2087 0020 5DF804EB 		ldr	lr, [sp], #4
 2088              		.cfi_restore 14
 2089              		.cfi_def_cfa_offset 8
 2090 0024 02B0     		add	sp, sp, #8
 2091              		.cfi_restore 3
 2092              		.cfi_restore 2
 2093              		.cfi_def_cfa_offset 0
 2094 0026 7047     		bx	lr
 2095              	.L226:
 2096              		.align	2
 2097              	.L225:
 2098 0028 00000000 		.word	_out_fct
 2099              		.cfi_endproc
 2100              	.LFE16:
 2102              		.text
 2103              	.Letext0:
 2104              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2105              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2106              		.file 4 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stdarg.h"
 2107              		.file 5 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 2108              		.file 6 "<built-in>"
 2109              		.file 7 "lib/printf/printf.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 printf.c
     /tmp/ccr0DxMp.s:18     .text._out_buffer:0000000000000000 $t
     /tmp/ccr0DxMp.s:25     .text._out_buffer:0000000000000000 _out_buffer
     /tmp/ccr0DxMp.s:47     .text._out_null:0000000000000000 $t
     /tmp/ccr0DxMp.s:53     .text._out_null:0000000000000000 _out_null
     /tmp/ccr0DxMp.s:71     .text._ntoa_long:0000000000000000 $t
     /tmp/ccr0DxMp.s:77     .text._ntoa_long:0000000000000000 _ntoa_long
     /tmp/ccr0DxMp.s:580    .text._out_char:0000000000000000 $t
     /tmp/ccr0DxMp.s:586    .text._out_char:0000000000000000 _out_char
     /tmp/ccr0DxMp.s:610    .text._out_fct:0000000000000000 $t
     /tmp/ccr0DxMp.s:616    .text._out_fct:0000000000000000 _out_fct
     /tmp/ccr0DxMp.s:651    .text._vsnprintf:0000000000000000 $t
     /tmp/ccr0DxMp.s:657    .text._vsnprintf:0000000000000000 _vsnprintf
     /tmp/ccr0DxMp.s:1426   .text._vsnprintf:00000000000002b4 $d
     /tmp/ccr0DxMp.s:1437   .text._vsnprintf:00000000000002bc $t
     /tmp/ccr0DxMp.s:1751   .text.printf_:0000000000000000 $t
     /tmp/ccr0DxMp.s:1758   .text.printf_:0000000000000000 printf_
     /tmp/ccr0DxMp.s:1812   .text.printf_:0000000000000024 $d
     /tmp/ccr0DxMp.s:1817   .text.sprintf_:0000000000000000 $t
     /tmp/ccr0DxMp.s:1824   .text.sprintf_:0000000000000000 sprintf_
     /tmp/ccr0DxMp.s:1875   .text.sprintf_:0000000000000024 $d
     /tmp/ccr0DxMp.s:1880   .text.snprintf_:0000000000000000 $t
     /tmp/ccr0DxMp.s:1887   .text.snprintf_:0000000000000000 snprintf_
     /tmp/ccr0DxMp.s:1940   .text.snprintf_:0000000000000024 $d
     /tmp/ccr0DxMp.s:1945   .text.vprintf_:0000000000000000 $t
     /tmp/ccr0DxMp.s:1952   .text.vprintf_:0000000000000000 vprintf_
     /tmp/ccr0DxMp.s:1985   .text.vprintf_:0000000000000018 $d
     /tmp/ccr0DxMp.s:1990   .text.vsnprintf_:0000000000000000 $t
     /tmp/ccr0DxMp.s:1997   .text.vsnprintf_:0000000000000000 vsnprintf_
     /tmp/ccr0DxMp.s:2033   .text.vsnprintf_:0000000000000018 $d
     /tmp/ccr0DxMp.s:2038   .text.fctprintf:0000000000000000 $t
     /tmp/ccr0DxMp.s:2045   .text.fctprintf:0000000000000000 fctprintf
     /tmp/ccr0DxMp.s:2098   .text.fctprintf:0000000000000028 $d

UNDEFINED SYMBOLS
_putchar
