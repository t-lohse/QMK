   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"chpipes.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.chPipeObjectInit,"ax",%progbits
  18              		.align	1
  19              		.global	chPipeObjectInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	chPipeObjectInit:
  27              	.LVL0:
  28              	.LFB291:
  29              		.file 1 "lib/chibios/os/oslib/src/chpipes.c"
   1:lib/chibios/os/oslib/src/chpipes.c **** /*
   2:lib/chibios/os/oslib/src/chpipes.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/oslib/src/chpipes.c **** 
   4:lib/chibios/os/oslib/src/chpipes.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/oslib/src/chpipes.c **** 
   6:lib/chibios/os/oslib/src/chpipes.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/oslib/src/chpipes.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/oslib/src/chpipes.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/oslib/src/chpipes.c ****     (at your option) any later version.
  10:lib/chibios/os/oslib/src/chpipes.c **** 
  11:lib/chibios/os/oslib/src/chpipes.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/oslib/src/chpipes.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/oslib/src/chpipes.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/oslib/src/chpipes.c ****     GNU General Public License for more details.
  15:lib/chibios/os/oslib/src/chpipes.c **** 
  16:lib/chibios/os/oslib/src/chpipes.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/oslib/src/chpipes.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/oslib/src/chpipes.c **** */
  19:lib/chibios/os/oslib/src/chpipes.c **** 
  20:lib/chibios/os/oslib/src/chpipes.c **** /**
  21:lib/chibios/os/oslib/src/chpipes.c ****  * @file    oslib/src/chpipes.c
  22:lib/chibios/os/oslib/src/chpipes.c ****  * @brief   Pipes code.
  23:lib/chibios/os/oslib/src/chpipes.c ****  * @details Byte pipes.
  24:lib/chibios/os/oslib/src/chpipes.c ****  *          <h2>Operation mode</h2>
  25:lib/chibios/os/oslib/src/chpipes.c ****  *          A pipe is an asynchronous communication mechanism.<br>
  26:lib/chibios/os/oslib/src/chpipes.c ****  *          Operations defined for mailboxes:
  27:lib/chibios/os/oslib/src/chpipes.c ****  *          - <b>Write</b>: Writes a buffer of data in the pipe in FIFO order.
  28:lib/chibios/os/oslib/src/chpipes.c ****  *          - <b>Read</b>: A buffer of data is read from the read and removed.
  29:lib/chibios/os/oslib/src/chpipes.c ****  *          - <b>Reset</b>: The pipe is emptied and all the stored data
  30:lib/chibios/os/oslib/src/chpipes.c ****  *            is lost.
  31:lib/chibios/os/oslib/src/chpipes.c ****  *          .
  32:lib/chibios/os/oslib/src/chpipes.c ****  * @pre     In order to use the pipes APIs the @p CH_CFG_USE_PIPES
  33:lib/chibios/os/oslib/src/chpipes.c ****  *          option must be enabled in @p chconf.h.
  34:lib/chibios/os/oslib/src/chpipes.c ****  * @note    Compatible with RT and NIL.
  35:lib/chibios/os/oslib/src/chpipes.c ****  *
  36:lib/chibios/os/oslib/src/chpipes.c ****  * @addtogroup oslib_pipes
  37:lib/chibios/os/oslib/src/chpipes.c ****  * @{
  38:lib/chibios/os/oslib/src/chpipes.c ****  */
  39:lib/chibios/os/oslib/src/chpipes.c **** 
  40:lib/chibios/os/oslib/src/chpipes.c **** #include <string.h>
  41:lib/chibios/os/oslib/src/chpipes.c **** 
  42:lib/chibios/os/oslib/src/chpipes.c **** #include "ch.h"
  43:lib/chibios/os/oslib/src/chpipes.c **** 
  44:lib/chibios/os/oslib/src/chpipes.c **** #if (CH_CFG_USE_PIPES == TRUE) || defined(__DOXYGEN__)
  45:lib/chibios/os/oslib/src/chpipes.c **** 
  46:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  47:lib/chibios/os/oslib/src/chpipes.c **** /* Module local definitions.                                                 */
  48:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  49:lib/chibios/os/oslib/src/chpipes.c **** 
  50:lib/chibios/os/oslib/src/chpipes.c **** /*
  51:lib/chibios/os/oslib/src/chpipes.c ****  * Defaults on the best synchronization mechanism available.
  52:lib/chibios/os/oslib/src/chpipes.c ****  */
  53:lib/chibios/os/oslib/src/chpipes.c **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
  54:lib/chibios/os/oslib/src/chpipes.c **** #define PC_INIT(p)       chMtxObjectInit(&(p)->cmtx)
  55:lib/chibios/os/oslib/src/chpipes.c **** #define PC_LOCK(p)       chMtxLock(&(p)->cmtx)
  56:lib/chibios/os/oslib/src/chpipes.c **** #define PC_UNLOCK(p)     chMtxUnlock(&(p)->cmtx)
  57:lib/chibios/os/oslib/src/chpipes.c **** #define PW_INIT(p)       chMtxObjectInit(&(p)->wmtx)
  58:lib/chibios/os/oslib/src/chpipes.c **** #define PW_LOCK(p)       chMtxLock(&(p)->wmtx)
  59:lib/chibios/os/oslib/src/chpipes.c **** #define PW_UNLOCK(p)     chMtxUnlock(&(p)->wmtx)
  60:lib/chibios/os/oslib/src/chpipes.c **** #define PR_INIT(p)       chMtxObjectInit(&(p)->rmtx)
  61:lib/chibios/os/oslib/src/chpipes.c **** #define PR_LOCK(p)       chMtxLock(&(p)->rmtx)
  62:lib/chibios/os/oslib/src/chpipes.c **** #define PR_UNLOCK(p)     chMtxUnlock(&(p)->rmtx)
  63:lib/chibios/os/oslib/src/chpipes.c **** #else
  64:lib/chibios/os/oslib/src/chpipes.c **** #define PC_INIT(p)       chSemObjectInit(&(p)->csem, (cnt_t)1)
  65:lib/chibios/os/oslib/src/chpipes.c **** #define PC_LOCK(p)       (void) chSemWait(&(p)->csem)
  66:lib/chibios/os/oslib/src/chpipes.c **** #define PC_UNLOCK(p)     chSemSignal(&(p)->csem)
  67:lib/chibios/os/oslib/src/chpipes.c **** #define PW_INIT(p)       chSemObjectInit(&(p)->wsem, (cnt_t)1)
  68:lib/chibios/os/oslib/src/chpipes.c **** #define PW_LOCK(p)       (void) chSemWait(&(p)->wsem)
  69:lib/chibios/os/oslib/src/chpipes.c **** #define PW_UNLOCK(p)     chSemSignal(&(p)->wsem)
  70:lib/chibios/os/oslib/src/chpipes.c **** #define PR_INIT(p)       chSemObjectInit(&(p)->rsem, (cnt_t)1)
  71:lib/chibios/os/oslib/src/chpipes.c **** #define PR_LOCK(p)       (void) chSemWait(&(p)->rsem)
  72:lib/chibios/os/oslib/src/chpipes.c **** #define PR_UNLOCK(p)     chSemSignal(&(p)->rsem)
  73:lib/chibios/os/oslib/src/chpipes.c **** #endif
  74:lib/chibios/os/oslib/src/chpipes.c **** 
  75:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  76:lib/chibios/os/oslib/src/chpipes.c **** /* Module exported variables.                                                */
  77:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  78:lib/chibios/os/oslib/src/chpipes.c **** 
  79:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  80:lib/chibios/os/oslib/src/chpipes.c **** /* Module local types.                                                       */
  81:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  82:lib/chibios/os/oslib/src/chpipes.c **** 
  83:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  84:lib/chibios/os/oslib/src/chpipes.c **** /* Module local variables.                                                   */
  85:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  86:lib/chibios/os/oslib/src/chpipes.c **** 
  87:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  88:lib/chibios/os/oslib/src/chpipes.c **** /* Module local functions.                                                   */
  89:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
  90:lib/chibios/os/oslib/src/chpipes.c **** 
  91:lib/chibios/os/oslib/src/chpipes.c **** /**
  92:lib/chibios/os/oslib/src/chpipes.c ****  * @brief   Non-blocking pipe write.
  93:lib/chibios/os/oslib/src/chpipes.c ****  * @details The function writes data from a buffer to a pipe. The
  94:lib/chibios/os/oslib/src/chpipes.c ****  *          operation completes when the specified amount of data has been
  95:lib/chibios/os/oslib/src/chpipes.c ****  *          transferred or when the pipe buffer has been filled.
  96:lib/chibios/os/oslib/src/chpipes.c ****  *
  97:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
  98:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] bp        pointer to the data buffer
  99:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 100:lib/chibios/os/oslib/src/chpipes.c ****  *                      value 0 is reserved
 101:lib/chibios/os/oslib/src/chpipes.c ****  * @return              The number of bytes effectively transferred.
 102:lib/chibios/os/oslib/src/chpipes.c ****  *
 103:lib/chibios/os/oslib/src/chpipes.c ****  * @notapi
 104:lib/chibios/os/oslib/src/chpipes.c ****  */
 105:lib/chibios/os/oslib/src/chpipes.c **** static size_t pipe_write(pipe_t *pp, const uint8_t *bp, size_t n) {
 106:lib/chibios/os/oslib/src/chpipes.c ****   size_t s1, s2;
 107:lib/chibios/os/oslib/src/chpipes.c **** 
 108:lib/chibios/os/oslib/src/chpipes.c ****   PC_LOCK(pp);
 109:lib/chibios/os/oslib/src/chpipes.c **** 
 110:lib/chibios/os/oslib/src/chpipes.c ****   /* Number of bytes that can be written in a single atomic operation.*/
 111:lib/chibios/os/oslib/src/chpipes.c ****   if (n > chPipeGetFreeCount(pp)) {
 112:lib/chibios/os/oslib/src/chpipes.c ****     n = chPipeGetFreeCount(pp);
 113:lib/chibios/os/oslib/src/chpipes.c ****   }
 114:lib/chibios/os/oslib/src/chpipes.c ****   pp->cnt += n;
 115:lib/chibios/os/oslib/src/chpipes.c **** 
 116:lib/chibios/os/oslib/src/chpipes.c ****   /* Number of bytes before buffer limit.*/
 117:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -save -e9033 [10.8] Checked to be safe.*/
 118:lib/chibios/os/oslib/src/chpipes.c ****   s1 = (size_t)(pp->top - pp->wrptr);
 119:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -restore*/
 120:lib/chibios/os/oslib/src/chpipes.c **** 
 121:lib/chibios/os/oslib/src/chpipes.c ****   if (n < s1) {
 122:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, n);
 123:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr += n;
 124:lib/chibios/os/oslib/src/chpipes.c ****   }
 125:lib/chibios/os/oslib/src/chpipes.c ****   else if (n > s1) {
 126:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, s1);
 127:lib/chibios/os/oslib/src/chpipes.c ****     bp += s1;
 128:lib/chibios/os/oslib/src/chpipes.c ****     s2 = n - s1;
 129:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->buffer, (const void *)bp, s2);
 130:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer + s2;
 131:lib/chibios/os/oslib/src/chpipes.c ****   }
 132:lib/chibios/os/oslib/src/chpipes.c ****   else {
 133:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, n);
 134:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer;
 135:lib/chibios/os/oslib/src/chpipes.c ****   }
 136:lib/chibios/os/oslib/src/chpipes.c **** 
 137:lib/chibios/os/oslib/src/chpipes.c ****   PC_UNLOCK(pp);
 138:lib/chibios/os/oslib/src/chpipes.c **** 
 139:lib/chibios/os/oslib/src/chpipes.c ****   return n;
 140:lib/chibios/os/oslib/src/chpipes.c **** }
 141:lib/chibios/os/oslib/src/chpipes.c **** 
 142:lib/chibios/os/oslib/src/chpipes.c **** /**
 143:lib/chibios/os/oslib/src/chpipes.c ****  * @brief   Non-blocking pipe read.
 144:lib/chibios/os/oslib/src/chpipes.c ****  * @details The function reads data from a pipe into a buffer. The
 145:lib/chibios/os/oslib/src/chpipes.c ****  *          operation completes when the specified amount of data has been
 146:lib/chibios/os/oslib/src/chpipes.c ****  *          transferred or when the pipe buffer has been emptied.
 147:lib/chibios/os/oslib/src/chpipes.c ****  *
 148:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 149:lib/chibios/os/oslib/src/chpipes.c ****  * @param[out] bp       pointer to the data buffer
 150:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 151:lib/chibios/os/oslib/src/chpipes.c ****  *                      value 0 is reserved
 152:lib/chibios/os/oslib/src/chpipes.c ****  * @return              The number of bytes effectively transferred.
 153:lib/chibios/os/oslib/src/chpipes.c ****  *
 154:lib/chibios/os/oslib/src/chpipes.c ****  * @notapi
 155:lib/chibios/os/oslib/src/chpipes.c ****  */
 156:lib/chibios/os/oslib/src/chpipes.c **** static size_t pipe_read(pipe_t *pp, uint8_t *bp, size_t n) {
 157:lib/chibios/os/oslib/src/chpipes.c ****   size_t s1, s2;
 158:lib/chibios/os/oslib/src/chpipes.c **** 
 159:lib/chibios/os/oslib/src/chpipes.c ****   PC_LOCK(pp);
 160:lib/chibios/os/oslib/src/chpipes.c **** 
 161:lib/chibios/os/oslib/src/chpipes.c ****   /* Number of bytes that can be read in a single atomic operation.*/
 162:lib/chibios/os/oslib/src/chpipes.c ****   if (n > chPipeGetUsedCount(pp)) {
 163:lib/chibios/os/oslib/src/chpipes.c ****     n = chPipeGetUsedCount(pp);
 164:lib/chibios/os/oslib/src/chpipes.c ****   }
 165:lib/chibios/os/oslib/src/chpipes.c ****   pp->cnt -= n;
 166:lib/chibios/os/oslib/src/chpipes.c **** 
 167:lib/chibios/os/oslib/src/chpipes.c ****   /* Number of bytes before buffer limit.*/
 168:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -save -e9033 [10.8] Checked to be safe.*/
 169:lib/chibios/os/oslib/src/chpipes.c ****   s1 = (size_t)(pp->top - pp->rdptr);
 170:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -restore*/
 171:lib/chibios/os/oslib/src/chpipes.c **** 
 172:lib/chibios/os/oslib/src/chpipes.c ****   if (n < s1) {
 173:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, n);
 174:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr += n;
 175:lib/chibios/os/oslib/src/chpipes.c ****   }
 176:lib/chibios/os/oslib/src/chpipes.c ****   else if (n > s1) {
 177:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, s1);
 178:lib/chibios/os/oslib/src/chpipes.c ****     bp += s1;
 179:lib/chibios/os/oslib/src/chpipes.c ****     s2 = n - s1;
 180:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->buffer, s2);
 181:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer + s2;
 182:lib/chibios/os/oslib/src/chpipes.c ****   }
 183:lib/chibios/os/oslib/src/chpipes.c ****   else {
 184:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, n);
 185:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer;
 186:lib/chibios/os/oslib/src/chpipes.c ****   }
 187:lib/chibios/os/oslib/src/chpipes.c **** 
 188:lib/chibios/os/oslib/src/chpipes.c ****   PC_UNLOCK(pp);
 189:lib/chibios/os/oslib/src/chpipes.c **** 
 190:lib/chibios/os/oslib/src/chpipes.c ****   return n;
 191:lib/chibios/os/oslib/src/chpipes.c **** }
 192:lib/chibios/os/oslib/src/chpipes.c **** 
 193:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
 194:lib/chibios/os/oslib/src/chpipes.c **** /* Module exported functions.                                                */
 195:lib/chibios/os/oslib/src/chpipes.c **** /*===========================================================================*/
 196:lib/chibios/os/oslib/src/chpipes.c **** 
 197:lib/chibios/os/oslib/src/chpipes.c **** /**
 198:lib/chibios/os/oslib/src/chpipes.c ****  * @brief   Initializes a @p mailbox_t object.
 199:lib/chibios/os/oslib/src/chpipes.c ****  *
 200:lib/chibios/os/oslib/src/chpipes.c ****  * @param[out] pp       the pointer to the @p pipe_t structure to be
 201:lib/chibios/os/oslib/src/chpipes.c ****  *                      initialized
 202:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] buf       pointer to the pipe buffer as an array of @p uint8_t
 203:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] n         number of elements in the buffer array
 204:lib/chibios/os/oslib/src/chpipes.c ****  *
 205:lib/chibios/os/oslib/src/chpipes.c ****  * @init
 206:lib/chibios/os/oslib/src/chpipes.c ****  */
 207:lib/chibios/os/oslib/src/chpipes.c **** void chPipeObjectInit(pipe_t *pp, uint8_t *buf, size_t n) {
  30              		.loc 1 207 59 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 208:lib/chibios/os/oslib/src/chpipes.c **** 
 209:lib/chibios/os/oslib/src/chpipes.c ****   chDbgCheck((pp != NULL) && (buf != NULL) && (n > (size_t)0));
  34              		.loc 1 209 3 view .LVU1
  35              		.loc 1 209 3 view .LVU2
  36              		.loc 1 209 3 view .LVU3
 210:lib/chibios/os/oslib/src/chpipes.c **** 
 211:lib/chibios/os/oslib/src/chpipes.c ****   pp->buffer = buf;
  37              		.loc 1 211 3 view .LVU4
 207:lib/chibios/os/oslib/src/chpipes.c **** 
  38              		.loc 1 207 59 is_stmt 0 view .LVU5
  39 0000 10B5     		push	{r4, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 4, -8
  42              		.cfi_offset 14, -4
 212:lib/chibios/os/oslib/src/chpipes.c ****   pp->rdptr  = buf;
 213:lib/chibios/os/oslib/src/chpipes.c ****   pp->wrptr  = buf;
 214:lib/chibios/os/oslib/src/chpipes.c ****   pp->top    = &buf[n];
 215:lib/chibios/os/oslib/src/chpipes.c ****   pp->cnt    = (size_t)0;
  43              		.loc 1 215 14 view .LVU6
  44 0002 0023     		movs	r3, #0
 214:lib/chibios/os/oslib/src/chpipes.c ****   pp->cnt    = (size_t)0;
  45              		.loc 1 214 16 view .LVU7
  46 0004 0A44     		add	r2, r2, r1
  47              	.LVL1:
 207:lib/chibios/os/oslib/src/chpipes.c **** 
  48              		.loc 1 207 59 view .LVU8
  49 0006 0446     		mov	r4, r0
 211:lib/chibios/os/oslib/src/chpipes.c ****   pp->rdptr  = buf;
  50              		.loc 1 211 14 view .LVU9
  51 0008 0160     		str	r1, [r0]
 212:lib/chibios/os/oslib/src/chpipes.c ****   pp->rdptr  = buf;
  52              		.loc 1 212 3 is_stmt 1 view .LVU10
 214:lib/chibios/os/oslib/src/chpipes.c ****   pp->cnt    = (size_t)0;
  53              		.loc 1 214 14 is_stmt 0 view .LVU11
  54 000a 4260     		str	r2, [r0, #4]
  55              		.loc 1 215 14 view .LVU12
  56 000c 0361     		str	r3, [r0, #16]
 216:lib/chibios/os/oslib/src/chpipes.c ****   pp->reset  = false;
  57              		.loc 1 216 14 view .LVU13
  58 000e 0375     		strb	r3, [r0, #20]
 213:lib/chibios/os/oslib/src/chpipes.c ****   pp->top    = &buf[n];
  59              		.loc 1 213 14 view .LVU14
  60 0010 C0E90211 		strd	r1, r1, [r0, #8]
 214:lib/chibios/os/oslib/src/chpipes.c ****   pp->cnt    = (size_t)0;
  61              		.loc 1 214 3 is_stmt 1 view .LVU15
 215:lib/chibios/os/oslib/src/chpipes.c ****   pp->reset  = false;
  62              		.loc 1 215 3 view .LVU16
  63              		.loc 1 216 3 view .LVU17
 217:lib/chibios/os/oslib/src/chpipes.c ****   pp->wtr    = NULL;
  64              		.loc 1 217 3 view .LVU18
 218:lib/chibios/os/oslib/src/chpipes.c ****   pp->rtr    = NULL;
  65              		.loc 1 218 14 is_stmt 0 view .LVU19
  66 0014 C0E90633 		strd	r3, r3, [r0, #24]
 219:lib/chibios/os/oslib/src/chpipes.c ****   PC_INIT(pp);
  67              		.loc 1 219 3 is_stmt 1 view .LVU20
  68 0018 2030     		adds	r0, r0, #32
  69              	.LVL2:
  70              		.loc 1 219 3 is_stmt 0 view .LVU21
  71 001a FFF7FEFF 		bl	chMtxObjectInit
  72              	.LVL3:
 220:lib/chibios/os/oslib/src/chpipes.c ****   PW_INIT(pp);
  73              		.loc 1 220 3 is_stmt 1 view .LVU22
  74 001e 04F13000 		add	r0, r4, #48
  75 0022 FFF7FEFF 		bl	chMtxObjectInit
  76              	.LVL4:
 221:lib/chibios/os/oslib/src/chpipes.c ****   PR_INIT(pp);
  77              		.loc 1 221 3 view .LVU23
  78 0026 04F14000 		add	r0, r4, #64
 222:lib/chibios/os/oslib/src/chpipes.c **** }
  79              		.loc 1 222 1 is_stmt 0 view .LVU24
  80 002a BDE81040 		pop	{r4, lr}
  81              		.cfi_restore 14
  82              		.cfi_restore 4
  83              		.cfi_def_cfa_offset 0
  84              	.LVL5:
 221:lib/chibios/os/oslib/src/chpipes.c ****   PR_INIT(pp);
  85              		.loc 1 221 3 view .LVU25
  86 002e FFF7FEBF 		b	chMtxObjectInit
  87              	.LVL6:
 221:lib/chibios/os/oslib/src/chpipes.c ****   PR_INIT(pp);
  88              		.loc 1 221 3 view .LVU26
  89              		.cfi_endproc
  90              	.LFE291:
  92              		.section	.text.chPipeReset,"ax",%progbits
  93              		.align	1
  94              		.global	chPipeReset
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	chPipeReset:
 101              	.LVL7:
 102              	.LFB292:
 223:lib/chibios/os/oslib/src/chpipes.c **** 
 224:lib/chibios/os/oslib/src/chpipes.c **** /**
 225:lib/chibios/os/oslib/src/chpipes.c ****  * @brief   Resets a @p pipe_t object.
 226:lib/chibios/os/oslib/src/chpipes.c ****  * @details All the waiting threads are resumed with status @p MSG_RESET and
 227:lib/chibios/os/oslib/src/chpipes.c ****  *          the queued data is lost.
 228:lib/chibios/os/oslib/src/chpipes.c ****  * @post    The pipe is in reset state, all operations will fail and
 229:lib/chibios/os/oslib/src/chpipes.c ****  *          return @p MSG_RESET until the mailbox is enabled again using
 230:lib/chibios/os/oslib/src/chpipes.c ****  *          @p chPipeResumeX().
 231:lib/chibios/os/oslib/src/chpipes.c ****  *
 232:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 233:lib/chibios/os/oslib/src/chpipes.c ****  *
 234:lib/chibios/os/oslib/src/chpipes.c ****  * @api
 235:lib/chibios/os/oslib/src/chpipes.c ****  */
 236:lib/chibios/os/oslib/src/chpipes.c **** void chPipeReset(pipe_t *pp) {
 103              		.loc 1 236 30 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 237:lib/chibios/os/oslib/src/chpipes.c **** 
 238:lib/chibios/os/oslib/src/chpipes.c ****   chDbgCheck(pp != NULL);
 107              		.loc 1 238 3 view .LVU28
 108              		.loc 1 238 3 view .LVU29
 109              		.loc 1 238 3 view .LVU30
 239:lib/chibios/os/oslib/src/chpipes.c **** 
 240:lib/chibios/os/oslib/src/chpipes.c ****   PC_LOCK(pp);
 110              		.loc 1 240 3 view .LVU31
 236:lib/chibios/os/oslib/src/chpipes.c **** 
 111              		.loc 1 236 30 is_stmt 0 view .LVU32
 112 0000 70B5     		push	{r4, r5, r6, lr}
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 4, -16
 115              		.cfi_offset 5, -12
 116              		.cfi_offset 6, -8
 117              		.cfi_offset 14, -4
 236:lib/chibios/os/oslib/src/chpipes.c **** 
 118              		.loc 1 236 30 view .LVU33
 119 0002 0446     		mov	r4, r0
 120              		.loc 1 240 3 view .LVU34
 121 0004 00F12005 		add	r5, r0, #32
 122 0008 2846     		mov	r0, r5
 123              	.LVL8:
 124              		.loc 1 240 3 view .LVU35
 125 000a FFF7FEFF 		bl	chMtxLock
 126              	.LVL9:
 241:lib/chibios/os/oslib/src/chpipes.c **** 
 242:lib/chibios/os/oslib/src/chpipes.c ****   pp->wrptr = pp->buffer;
 127              		.loc 1 242 3 is_stmt 1 view .LVU36
 128              		.loc 1 242 17 is_stmt 0 view .LVU37
 129 000e 2368     		ldr	r3, [r4]
 243:lib/chibios/os/oslib/src/chpipes.c ****   pp->rdptr = pp->buffer;
 244:lib/chibios/os/oslib/src/chpipes.c ****   pp->cnt   = (size_t)0;
 130              		.loc 1 244 13 view .LVU38
 131 0010 0026     		movs	r6, #0
 243:lib/chibios/os/oslib/src/chpipes.c ****   pp->rdptr = pp->buffer;
 132              		.loc 1 243 13 view .LVU39
 133 0012 C4E90233 		strd	r3, r3, [r4, #8]
 134              		.loc 1 244 3 is_stmt 1 view .LVU40
 245:lib/chibios/os/oslib/src/chpipes.c ****   pp->reset = true;
 135              		.loc 1 245 13 is_stmt 0 view .LVU41
 136 0016 0123     		movs	r3, #1
 137 0018 2375     		strb	r3, [r4, #20]
 244:lib/chibios/os/oslib/src/chpipes.c ****   pp->reset = true;
 138              		.loc 1 244 13 view .LVU42
 139 001a 2661     		str	r6, [r4, #16]
 140              		.loc 1 245 3 is_stmt 1 view .LVU43
 246:lib/chibios/os/oslib/src/chpipes.c **** 
 247:lib/chibios/os/oslib/src/chpipes.c ****   chSysLock();
 141              		.loc 1 247 3 view .LVU44
 142              	.LBB56:
 143              	.LBI56:
 144              		.file 2 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 145              		.loc 2 355 20 view .LVU45
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 146              		.loc 2 357 3 view .LVU46
 147              	.LBB57:
 148              	.LBI57:
 149              		.file 3 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 150              		.loc 3 669 27 view .LVU47
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 151              		.loc 3 677 3 view .LVU48
 152              	.LVL10:
 153              	.LBB58:
 154              	.LBI58:
 155              		.file 4 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 156              		.loc 4 491 27 view .LVU49
 157              	.LBB59:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 158              		.loc 4 493 3 view .LVU50
 159 001c 2023     		movs	r3, #32
 160              		.syntax unified
 161              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 162 001e 83F31188 		MSR basepri, r3
 163              	@ 0 "" 2
 164              	.LVL11:
 165              		.loc 4 493 3 is_stmt 0 view .LVU51
 166              		.thumb
 167              		.syntax unified
 168              	.LBE59:
 169              	.LBE58:
 170              	.LBE57:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 171              		.loc 2 358 34 is_stmt 1 view .LVU52
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 172              		.loc 2 359 20 view .LVU53
 173              	.LBE56:
 248:lib/chibios/os/oslib/src/chpipes.c ****   chThdResumeI(&pp->wtr, MSG_RESET);
 174              		.loc 1 248 3 view .LVU54
 175 0022 6FF00101 		mvn	r1, #1
 176 0026 04F11800 		add	r0, r4, #24
 177 002a FFF7FEFF 		bl	chThdResumeI
 178              	.LVL12:
 249:lib/chibios/os/oslib/src/chpipes.c ****   chThdResumeI(&pp->rtr, MSG_RESET);
 179              		.loc 1 249 3 view .LVU55
 180 002e 6FF00101 		mvn	r1, #1
 181 0032 04F11C00 		add	r0, r4, #28
 182 0036 FFF7FEFF 		bl	chThdResumeI
 183              	.LVL13:
 250:lib/chibios/os/oslib/src/chpipes.c ****   chSchRescheduleS();
 184              		.loc 1 250 3 view .LVU56
 185 003a FFF7FEFF 		bl	chSchRescheduleS
 186              	.LVL14:
 251:lib/chibios/os/oslib/src/chpipes.c ****   chSysUnlock();
 187              		.loc 1 251 3 view .LVU57
 188              	.LBB60:
 189              	.LBI60:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 190              		.loc 2 367 20 view .LVU58
 191              	.LBB61:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 192              		.loc 2 369 22 view .LVU59
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 193              		.loc 2 370 33 view .LVU60
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 194              		.loc 2 376 3 view .LVU61
 195              		.loc 2 376 3 view .LVU62
 196              		.loc 2 376 3 view .LVU63
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 197              		.loc 2 380 3 view .LVU64
 198              	.LBB62:
 199              	.LBI62:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 200              		.loc 3 693 27 view .LVU65
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 201              		.loc 3 696 3 view .LVU66
 202              	.LBB63:
 203              	.LBI63:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 204              		.loc 4 491 27 view .LVU67
 205              	.LBB64:
 206              		.loc 4 493 3 view .LVU68
 207              		.syntax unified
 208              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 209 003e 86F31188 		MSR basepri, r6
 210              	@ 0 "" 2
 211              	.LVL15:
 212              		.loc 4 493 3 is_stmt 0 view .LVU69
 213              		.thumb
 214              		.syntax unified
 215              	.LBE64:
 216              	.LBE63:
 217              	.LBE62:
 218              	.LBE61:
 219              	.LBE60:
 252:lib/chibios/os/oslib/src/chpipes.c **** 
 253:lib/chibios/os/oslib/src/chpipes.c ****   PC_UNLOCK(pp);
 220              		.loc 1 253 3 is_stmt 1 view .LVU70
 221 0042 2846     		mov	r0, r5
 254:lib/chibios/os/oslib/src/chpipes.c **** }
 222              		.loc 1 254 1 is_stmt 0 view .LVU71
 223 0044 BDE87040 		pop	{r4, r5, r6, lr}
 224              		.cfi_restore 14
 225              		.cfi_restore 6
 226              		.cfi_restore 5
 227              		.cfi_restore 4
 228              		.cfi_def_cfa_offset 0
 229              	.LVL16:
 253:lib/chibios/os/oslib/src/chpipes.c **** }
 230              		.loc 1 253 3 view .LVU72
 231 0048 FFF7FEBF 		b	chMtxUnlock
 232              	.LVL17:
 253:lib/chibios/os/oslib/src/chpipes.c **** }
 233              		.loc 1 253 3 view .LVU73
 234              		.cfi_endproc
 235              	.LFE292:
 237              		.section	.text.chPipeWriteTimeout,"ax",%progbits
 238              		.align	1
 239              		.global	chPipeWriteTimeout
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	chPipeWriteTimeout:
 246              	.LVL18:
 247              	.LFB293:
 255:lib/chibios/os/oslib/src/chpipes.c **** 
 256:lib/chibios/os/oslib/src/chpipes.c **** /**
 257:lib/chibios/os/oslib/src/chpipes.c ****  * @brief   Pipe write with timeout.
 258:lib/chibios/os/oslib/src/chpipes.c ****  * @details The function writes data from a buffer to a pipe. The
 259:lib/chibios/os/oslib/src/chpipes.c ****  *          operation completes when the specified amount of data has been
 260:lib/chibios/os/oslib/src/chpipes.c ****  *          transferred or after the specified timeout or if the pipe has
 261:lib/chibios/os/oslib/src/chpipes.c ****  *          been reset.
 262:lib/chibios/os/oslib/src/chpipes.c ****  *
 263:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 264:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] bp        pointer to the data buffer
 265:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] n         the number of bytes to be written, the value 0 is
 266:lib/chibios/os/oslib/src/chpipes.c ****  *                      reserved
 267:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 268:lib/chibios/os/oslib/src/chpipes.c ****  *                      the following special values are allowed:
 269:lib/chibios/os/oslib/src/chpipes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 270:lib/chibios/os/oslib/src/chpipes.c ****  *                      - @a TIME_INFINITE no timeout.
 271:lib/chibios/os/oslib/src/chpipes.c ****  *                      .
 272:lib/chibios/os/oslib/src/chpipes.c ****  * @return              The number of bytes effectively transferred. A number
 273:lib/chibios/os/oslib/src/chpipes.c ****  *                      lower than @p n means that a timeout occurred or the
 274:lib/chibios/os/oslib/src/chpipes.c ****  *                      pipe went in reset state.
 275:lib/chibios/os/oslib/src/chpipes.c ****  *
 276:lib/chibios/os/oslib/src/chpipes.c ****  * @api
 277:lib/chibios/os/oslib/src/chpipes.c ****  */
 278:lib/chibios/os/oslib/src/chpipes.c **** size_t chPipeWriteTimeout(pipe_t *pp, const uint8_t *bp,
 279:lib/chibios/os/oslib/src/chpipes.c ****                           size_t n, sysinterval_t timeout) {
 248              		.loc 1 279 60 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 280:lib/chibios/os/oslib/src/chpipes.c ****   size_t max = n;
 252              		.loc 1 280 3 view .LVU75
 279:lib/chibios/os/oslib/src/chpipes.c ****   size_t max = n;
 253              		.loc 1 279 60 is_stmt 0 view .LVU76
 254 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 255              		.cfi_def_cfa_offset 36
 256              		.cfi_offset 4, -36
 257              		.cfi_offset 5, -32
 258              		.cfi_offset 6, -28
 259              		.cfi_offset 7, -24
 260              		.cfi_offset 8, -20
 261              		.cfi_offset 9, -16
 262              		.cfi_offset 10, -12
 263              		.cfi_offset 11, -8
 264              		.cfi_offset 14, -4
 265 0004 2DED028B 		vpush.64	{d8}
 266              		.cfi_def_cfa_offset 44
 267              		.cfi_offset 80, -44
 268              		.cfi_offset 81, -40
 269 0008 08EE103A 		vmov	s16, r3	@ int
 281:lib/chibios/os/oslib/src/chpipes.c **** 
 282:lib/chibios/os/oslib/src/chpipes.c ****   chDbgCheck(n > 0U);
 283:lib/chibios/os/oslib/src/chpipes.c **** 
 284:lib/chibios/os/oslib/src/chpipes.c ****   /* If the pipe is in reset state then returns immediately.*/
 285:lib/chibios/os/oslib/src/chpipes.c ****   if (pp->reset) {
 270              		.loc 1 285 6 view .LVU77
 271 000c 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 272              	.LVL19:
 279:lib/chibios/os/oslib/src/chpipes.c ****   size_t max = n;
 273              		.loc 1 279 60 view .LVU78
 274 000e 83B0     		sub	sp, sp, #12
 275              		.cfi_def_cfa_offset 56
 279:lib/chibios/os/oslib/src/chpipes.c ****   size_t max = n;
 276              		.loc 1 279 60 view .LVU79
 277 0010 0446     		mov	r4, r0
 278 0012 0E46     		mov	r6, r1
 279 0014 1746     		mov	r7, r2
 280              	.LVL20:
 282:lib/chibios/os/oslib/src/chpipes.c **** 
 281              		.loc 1 282 3 is_stmt 1 view .LVU80
 282:lib/chibios/os/oslib/src/chpipes.c **** 
 282              		.loc 1 282 3 view .LVU81
 282:lib/chibios/os/oslib/src/chpipes.c **** 
 283              		.loc 1 282 3 view .LVU82
 284              		.loc 1 285 3 view .LVU83
 285              		.loc 1 285 6 is_stmt 0 view .LVU84
 286 0016 002B     		cmp	r3, #0
 287 0018 5ED1     		bne	.L13
 286:lib/chibios/os/oslib/src/chpipes.c ****     return (size_t)0;
 287:lib/chibios/os/oslib/src/chpipes.c ****   }
 288:lib/chibios/os/oslib/src/chpipes.c **** 
 289:lib/chibios/os/oslib/src/chpipes.c ****   PW_LOCK(pp);
 288              		.loc 1 289 3 is_stmt 1 view .LVU85
 289 001a 00F13009 		add	r9, r0, #48
 290 001e 4846     		mov	r0, r9
 291              	.LVL21:
 292              		.loc 1 289 3 is_stmt 0 view .LVU86
 293 0020 FFF7FEFF 		bl	chMtxLock
 294              	.LVL22:
 290:lib/chibios/os/oslib/src/chpipes.c **** 
 291:lib/chibios/os/oslib/src/chpipes.c ****   while (n > 0U) {
 295              		.loc 1 291 3 is_stmt 1 view .LVU87
 296              		.loc 1 291 9 is_stmt 0 view .LVU88
 297 0024 B846     		mov	r8, r7
 298              	.LBB84:
 299              	.LBB85:
 300              	.LBB86:
 108:lib/chibios/os/oslib/src/chpipes.c **** 
 301              		.loc 1 108 3 view .LVU89
 302 0026 04F1200A 		add	r10, r4, #32
 303              	.LBE86:
 304              	.LBE85:
 292:lib/chibios/os/oslib/src/chpipes.c ****     size_t done;
 293:lib/chibios/os/oslib/src/chpipes.c **** 
 294:lib/chibios/os/oslib/src/chpipes.c ****     done = pipe_write(pp, bp, n);
 295:lib/chibios/os/oslib/src/chpipes.c ****     if (done == (size_t)0) {
 296:lib/chibios/os/oslib/src/chpipes.c ****       msg_t msg;
 297:lib/chibios/os/oslib/src/chpipes.c **** 
 298:lib/chibios/os/oslib/src/chpipes.c ****       chSysLock();
 299:lib/chibios/os/oslib/src/chpipes.c ****       msg = chThdSuspendTimeoutS(&pp->wtr, timeout);
 300:lib/chibios/os/oslib/src/chpipes.c ****       chSysUnlock();
 301:lib/chibios/os/oslib/src/chpipes.c **** 
 302:lib/chibios/os/oslib/src/chpipes.c ****       /* Anything except MSG_OK causes the operation to stop.*/
 303:lib/chibios/os/oslib/src/chpipes.c ****       if (msg != MSG_OK) {
 304:lib/chibios/os/oslib/src/chpipes.c ****         break;
 305:lib/chibios/os/oslib/src/chpipes.c ****       }
 306:lib/chibios/os/oslib/src/chpipes.c ****     }
 307:lib/chibios/os/oslib/src/chpipes.c ****     else {
 308:lib/chibios/os/oslib/src/chpipes.c ****       n  -= done;
 309:lib/chibios/os/oslib/src/chpipes.c ****       bp += done;
 310:lib/chibios/os/oslib/src/chpipes.c **** 
 311:lib/chibios/os/oslib/src/chpipes.c ****       /* Resuming the reader, if present.*/
 312:lib/chibios/os/oslib/src/chpipes.c ****       chThdResume(&pp->rtr, MSG_OK);
 305              		.loc 1 312 7 view .LVU90
 306 002a 04F11C0B 		add	fp, r4, #28
 307              	.LVL23:
 308              	.L5:
 309              		.loc 1 312 7 view .LVU91
 310              	.LBE84:
 291:lib/chibios/os/oslib/src/chpipes.c ****     size_t done;
 311              		.loc 1 291 12 is_stmt 1 view .LVU92
 312 002e B8F1000F 		cmp	r8, #0
 313 0032 28D0     		beq	.L10
 314              	.LBB115:
 292:lib/chibios/os/oslib/src/chpipes.c ****     size_t done;
 315              		.loc 1 292 5 view .LVU93
 294:lib/chibios/os/oslib/src/chpipes.c ****     if (done == (size_t)0) {
 316              		.loc 1 294 5 view .LVU94
 317              	.LVL24:
 318              	.LBB103:
 319              	.LBI85:
 105:lib/chibios/os/oslib/src/chpipes.c ****   size_t s1, s2;
 320              		.loc 1 105 15 view .LVU95
 321              	.LBB101:
 106:lib/chibios/os/oslib/src/chpipes.c **** 
 322              		.loc 1 106 3 view .LVU96
 108:lib/chibios/os/oslib/src/chpipes.c **** 
 323              		.loc 1 108 3 view .LVU97
 324 0034 5046     		mov	r0, r10
 325 0036 FFF7FEFF 		bl	chMtxLock
 326              	.LVL25:
 111:lib/chibios/os/oslib/src/chpipes.c ****     n = chPipeGetFreeCount(pp);
 327              		.loc 1 111 3 view .LVU98
 328              	.LBB87:
 329              	.LBI87:
 330              		.file 5 "./lib/chibios/os/oslib/include/chpipes.h"
   1:./lib/chibios/os/oslib/include/chpipes.h **** /*
   2:./lib/chibios/os/oslib/include/chpipes.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/oslib/include/chpipes.h **** 
   4:./lib/chibios/os/oslib/include/chpipes.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/oslib/include/chpipes.h **** 
   6:./lib/chibios/os/oslib/include/chpipes.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/oslib/include/chpipes.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/oslib/include/chpipes.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/oslib/include/chpipes.h ****     (at your option) any later version.
  10:./lib/chibios/os/oslib/include/chpipes.h **** 
  11:./lib/chibios/os/oslib/include/chpipes.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/oslib/include/chpipes.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/oslib/include/chpipes.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/oslib/include/chpipes.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/oslib/include/chpipes.h **** 
  16:./lib/chibios/os/oslib/include/chpipes.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/oslib/include/chpipes.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/oslib/include/chpipes.h **** */
  19:./lib/chibios/os/oslib/include/chpipes.h **** 
  20:./lib/chibios/os/oslib/include/chpipes.h **** /**
  21:./lib/chibios/os/oslib/include/chpipes.h ****  * @file    oslib/include/chpipes.h
  22:./lib/chibios/os/oslib/include/chpipes.h ****  * @brief   Pipes macros and structures.
  23:./lib/chibios/os/oslib/include/chpipes.h ****  *
  24:./lib/chibios/os/oslib/include/chpipes.h ****  * @addtogroup oslib_pipes
  25:./lib/chibios/os/oslib/include/chpipes.h ****  * @{
  26:./lib/chibios/os/oslib/include/chpipes.h ****  */
  27:./lib/chibios/os/oslib/include/chpipes.h **** 
  28:./lib/chibios/os/oslib/include/chpipes.h **** #ifndef CHPIPES_H
  29:./lib/chibios/os/oslib/include/chpipes.h **** #define CHPIPES_H
  30:./lib/chibios/os/oslib/include/chpipes.h **** 
  31:./lib/chibios/os/oslib/include/chpipes.h **** #if (CH_CFG_USE_PIPES == TRUE) || defined(__DOXYGEN__)
  32:./lib/chibios/os/oslib/include/chpipes.h **** 
  33:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  34:./lib/chibios/os/oslib/include/chpipes.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  36:./lib/chibios/os/oslib/include/chpipes.h **** 
  37:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  38:./lib/chibios/os/oslib/include/chpipes.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  40:./lib/chibios/os/oslib/include/chpipes.h **** 
  41:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  42:./lib/chibios/os/oslib/include/chpipes.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  44:./lib/chibios/os/oslib/include/chpipes.h **** 
  45:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  46:./lib/chibios/os/oslib/include/chpipes.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  48:./lib/chibios/os/oslib/include/chpipes.h **** 
  49:./lib/chibios/os/oslib/include/chpipes.h **** /**
  50:./lib/chibios/os/oslib/include/chpipes.h ****  * @brief   Structure representing a pipe object.
  51:./lib/chibios/os/oslib/include/chpipes.h ****  */
  52:./lib/chibios/os/oslib/include/chpipes.h **** typedef struct {
  53:./lib/chibios/os/oslib/include/chpipes.h ****   uint8_t               *buffer;        /**< @brief Pointer to the pipe
  54:./lib/chibios/os/oslib/include/chpipes.h ****                                                     buffer.                 */
  55:./lib/chibios/os/oslib/include/chpipes.h ****   uint8_t               *top;           /**< @brief Pointer to the location
  56:./lib/chibios/os/oslib/include/chpipes.h ****                                                     after the buffer.       */
  57:./lib/chibios/os/oslib/include/chpipes.h ****   uint8_t               *wrptr;         /**< @brief Write pointer.          */
  58:./lib/chibios/os/oslib/include/chpipes.h ****   uint8_t               *rdptr;         /**< @brief Read pointer.           */
  59:./lib/chibios/os/oslib/include/chpipes.h ****   size_t                cnt;            /**< @brief Bytes in the pipe.      */
  60:./lib/chibios/os/oslib/include/chpipes.h ****   bool                  reset;          /**< @brief True if in reset state. */
  61:./lib/chibios/os/oslib/include/chpipes.h ****   thread_reference_t    wtr;            /**< @brief Waiting writer.         */
  62:./lib/chibios/os/oslib/include/chpipes.h ****   thread_reference_t    rtr;            /**< @brief Waiting reader.         */
  63:./lib/chibios/os/oslib/include/chpipes.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
  64:./lib/chibios/os/oslib/include/chpipes.h ****   mutex_t               cmtx;           /**< @brief Common access mutex.    */
  65:./lib/chibios/os/oslib/include/chpipes.h ****   mutex_t               wmtx;           /**< @brief Write access mutex.     */
  66:./lib/chibios/os/oslib/include/chpipes.h ****   mutex_t               rmtx;           /**< @brief Read access mutex.      */
  67:./lib/chibios/os/oslib/include/chpipes.h **** #else
  68:./lib/chibios/os/oslib/include/chpipes.h ****   semaphore_t           csem;           /**< @brief Common access semaphore.*/
  69:./lib/chibios/os/oslib/include/chpipes.h ****   semaphore_t           wsem;           /**< @brief Write access semaphore. */
  70:./lib/chibios/os/oslib/include/chpipes.h ****   semaphore_t           rsem;           /**< @brief Read access semaphore.  */
  71:./lib/chibios/os/oslib/include/chpipes.h **** #endif
  72:./lib/chibios/os/oslib/include/chpipes.h **** } pipe_t;
  73:./lib/chibios/os/oslib/include/chpipes.h **** 
  74:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  75:./lib/chibios/os/oslib/include/chpipes.h **** /* Module macros.                                                            */
  76:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
  77:./lib/chibios/os/oslib/include/chpipes.h **** 
  78:./lib/chibios/os/oslib/include/chpipes.h **** /**
  79:./lib/chibios/os/oslib/include/chpipes.h ****  * @brief   Data part of a static pipe initializer.
  80:./lib/chibios/os/oslib/include/chpipes.h ****  * @details This macro should be used when statically initializing a
  81:./lib/chibios/os/oslib/include/chpipes.h ****  *          pipe that is part of a bigger structure.
  82:./lib/chibios/os/oslib/include/chpipes.h ****  *
  83:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] name      the name of the pipe variable
  84:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] buffer    pointer to the pipe buffer array of @p uint8_t
  85:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] size      number of @p uint8_t elements in the buffer array
  86:./lib/chibios/os/oslib/include/chpipes.h ****  */
  87:./lib/chibios/os/oslib/include/chpipes.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
  88:./lib/chibios/os/oslib/include/chpipes.h **** #define _PIPE_DATA(name, buffer, size) {                                    \
  89:./lib/chibios/os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
  90:./lib/chibios/os/oslib/include/chpipes.h ****   (uint8_t *)(buffer) + size,                                               \
  91:./lib/chibios/os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
  92:./lib/chibios/os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
  93:./lib/chibios/os/oslib/include/chpipes.h ****   (size_t)0,                                                                \
  94:./lib/chibios/os/oslib/include/chpipes.h ****   false,                                                                    \
  95:./lib/chibios/os/oslib/include/chpipes.h ****   NULL,                                                                     \
  96:./lib/chibios/os/oslib/include/chpipes.h ****   NULL,                                                                     \
  97:./lib/chibios/os/oslib/include/chpipes.h ****   _MUTEX_DATA(name.cmtx),                                                   \
  98:./lib/chibios/os/oslib/include/chpipes.h ****   _MUTEX_DATA(name.wmtx),                                                   \
  99:./lib/chibios/os/oslib/include/chpipes.h ****   _MUTEX_DATA(name.rmtx),                                                   \
 100:./lib/chibios/os/oslib/include/chpipes.h **** }
 101:./lib/chibios/os/oslib/include/chpipes.h **** #else /* CH_CFG_USE_MUTEXES == FALSE */
 102:./lib/chibios/os/oslib/include/chpipes.h **** #define _PIPE_DATA(name, buffer, size) {                                    \
 103:./lib/chibios/os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
 104:./lib/chibios/os/oslib/include/chpipes.h ****   (uint8_t *)(buffer) + size,                                               \
 105:./lib/chibios/os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
 106:./lib/chibios/os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
 107:./lib/chibios/os/oslib/include/chpipes.h ****   (size_t)0,                                                                \
 108:./lib/chibios/os/oslib/include/chpipes.h ****   false,                                                                    \
 109:./lib/chibios/os/oslib/include/chpipes.h ****   NULL,                                                                     \
 110:./lib/chibios/os/oslib/include/chpipes.h ****   NULL,                                                                     \
 111:./lib/chibios/os/oslib/include/chpipes.h ****   _SEMAPHORE_DATA(name.csem, (cnt_t)1),                                     \
 112:./lib/chibios/os/oslib/include/chpipes.h ****   _SEMAPHORE_DATA(name.wsem, (cnt_t)1),                                     \
 113:./lib/chibios/os/oslib/include/chpipes.h ****   _SEMAPHORE_DATA(name.rsem, (cnt_t)1),                                     \
 114:./lib/chibios/os/oslib/include/chpipes.h **** }
 115:./lib/chibios/os/oslib/include/chpipes.h **** #endif /* CH_CFG_USE_MUTEXES == FALSE */
 116:./lib/chibios/os/oslib/include/chpipes.h **** 
 117:./lib/chibios/os/oslib/include/chpipes.h **** /**
 118:./lib/chibios/os/oslib/include/chpipes.h ****  * @brief   Static pipe initializer.
 119:./lib/chibios/os/oslib/include/chpipes.h ****  * @details Statically initialized pipes require no explicit
 120:./lib/chibios/os/oslib/include/chpipes.h ****  *          initialization using @p chPipeObjectInit().
 121:./lib/chibios/os/oslib/include/chpipes.h ****  *
 122:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] name      the name of the pipe variable
 123:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] buffer    pointer to the pipe buffer array of @p uint8_t
 124:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] size      number of @p uint8_t elements in the buffer array
 125:./lib/chibios/os/oslib/include/chpipes.h ****  */
 126:./lib/chibios/os/oslib/include/chpipes.h **** #define PIPE_DECL(name, buffer, size)                                       \
 127:./lib/chibios/os/oslib/include/chpipes.h ****   pipe_t name = _PIPE_DATA(name, buffer, size)
 128:./lib/chibios/os/oslib/include/chpipes.h **** 
 129:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
 130:./lib/chibios/os/oslib/include/chpipes.h **** /* External declarations.                                                    */
 131:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
 132:./lib/chibios/os/oslib/include/chpipes.h **** 
 133:./lib/chibios/os/oslib/include/chpipes.h **** #ifdef __cplusplus
 134:./lib/chibios/os/oslib/include/chpipes.h **** extern "C" {
 135:./lib/chibios/os/oslib/include/chpipes.h **** #endif
 136:./lib/chibios/os/oslib/include/chpipes.h ****   void chPipeObjectInit(pipe_t *pp, uint8_t *buf, size_t n);
 137:./lib/chibios/os/oslib/include/chpipes.h ****   void chPipeReset(pipe_t *pp);
 138:./lib/chibios/os/oslib/include/chpipes.h ****   size_t chPipeWriteTimeout(pipe_t *pp, const uint8_t *bp,
 139:./lib/chibios/os/oslib/include/chpipes.h ****                             size_t n, sysinterval_t timeout);
 140:./lib/chibios/os/oslib/include/chpipes.h ****   size_t chPipeReadTimeout(pipe_t *pp, uint8_t *bp,
 141:./lib/chibios/os/oslib/include/chpipes.h ****                            size_t n, sysinterval_t timeout);
 142:./lib/chibios/os/oslib/include/chpipes.h **** #ifdef __cplusplus
 143:./lib/chibios/os/oslib/include/chpipes.h **** }
 144:./lib/chibios/os/oslib/include/chpipes.h **** #endif
 145:./lib/chibios/os/oslib/include/chpipes.h **** 
 146:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
 147:./lib/chibios/os/oslib/include/chpipes.h **** /* Module inline functions.                                                  */
 148:./lib/chibios/os/oslib/include/chpipes.h **** /*===========================================================================*/
 149:./lib/chibios/os/oslib/include/chpipes.h **** 
 150:./lib/chibios/os/oslib/include/chpipes.h **** /**
 151:./lib/chibios/os/oslib/include/chpipes.h ****  * @brief   Returns the pipe buffer size as number of bytes.
 152:./lib/chibios/os/oslib/include/chpipes.h ****  *
 153:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 154:./lib/chibios/os/oslib/include/chpipes.h ****  * @return              The size of the pipe.
 155:./lib/chibios/os/oslib/include/chpipes.h ****  *
 156:./lib/chibios/os/oslib/include/chpipes.h ****  * @api
 157:./lib/chibios/os/oslib/include/chpipes.h ****  */
 158:./lib/chibios/os/oslib/include/chpipes.h **** static inline size_t chPipeGetSize(const pipe_t *pp) {
 159:./lib/chibios/os/oslib/include/chpipes.h **** 
 160:./lib/chibios/os/oslib/include/chpipes.h ****   /*lint -save -e9033 [10.8] Perfectly safe pointers
 161:./lib/chibios/os/oslib/include/chpipes.h ****     arithmetic.*/
 162:./lib/chibios/os/oslib/include/chpipes.h ****   return (size_t)(pp->top - pp->buffer);
 163:./lib/chibios/os/oslib/include/chpipes.h ****   /*lint -restore*/
 164:./lib/chibios/os/oslib/include/chpipes.h **** }
 165:./lib/chibios/os/oslib/include/chpipes.h **** 
 166:./lib/chibios/os/oslib/include/chpipes.h **** /**
 167:./lib/chibios/os/oslib/include/chpipes.h ****  * @brief   Returns the number of used byte slots into a pipe.
 168:./lib/chibios/os/oslib/include/chpipes.h ****  *
 169:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 170:./lib/chibios/os/oslib/include/chpipes.h ****  * @return              The number of queued bytes.
 171:./lib/chibios/os/oslib/include/chpipes.h ****  *
 172:./lib/chibios/os/oslib/include/chpipes.h ****  * @api
 173:./lib/chibios/os/oslib/include/chpipes.h ****  */
 174:./lib/chibios/os/oslib/include/chpipes.h **** static inline size_t chPipeGetUsedCount(const pipe_t *pp) {
 175:./lib/chibios/os/oslib/include/chpipes.h **** 
 176:./lib/chibios/os/oslib/include/chpipes.h ****   return pp->cnt;
 177:./lib/chibios/os/oslib/include/chpipes.h **** }
 178:./lib/chibios/os/oslib/include/chpipes.h **** 
 179:./lib/chibios/os/oslib/include/chpipes.h **** /**
 180:./lib/chibios/os/oslib/include/chpipes.h ****  * @brief   Returns the number of free byte slots into a pipe.
 181:./lib/chibios/os/oslib/include/chpipes.h ****  *
 182:./lib/chibios/os/oslib/include/chpipes.h ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 183:./lib/chibios/os/oslib/include/chpipes.h ****  * @return              The number of empty byte slots.
 184:./lib/chibios/os/oslib/include/chpipes.h ****  *
 185:./lib/chibios/os/oslib/include/chpipes.h ****  * @api
 186:./lib/chibios/os/oslib/include/chpipes.h ****  */
 187:./lib/chibios/os/oslib/include/chpipes.h **** static inline size_t chPipeGetFreeCount(const pipe_t *pp) {
 331              		.loc 5 187 22 view .LVU99
 332              	.LBB88:
 188:./lib/chibios/os/oslib/include/chpipes.h **** 
 189:./lib/chibios/os/oslib/include/chpipes.h ****   return chPipeGetSize(pp) - chPipeGetUsedCount(pp);
 333              		.loc 5 189 3 view .LVU100
 334              	.LBB89:
 335              	.LBI89:
 158:./lib/chibios/os/oslib/include/chpipes.h **** 
 336              		.loc 5 158 22 view .LVU101
 337              	.LBB90:
 162:./lib/chibios/os/oslib/include/chpipes.h ****   /*lint -restore*/
 338              		.loc 5 162 3 view .LVU102
 162:./lib/chibios/os/oslib/include/chpipes.h ****   /*lint -restore*/
 339              		.loc 5 162 21 is_stmt 0 view .LVU103
 340 003a 6368     		ldr	r3, [r4, #4]
 341              	.LVL26:
 162:./lib/chibios/os/oslib/include/chpipes.h ****   /*lint -restore*/
 342              		.loc 5 162 21 view .LVU104
 343              	.LBE90:
 344              	.LBE89:
 345              	.LBB93:
 346              	.LBI93:
 174:./lib/chibios/os/oslib/include/chpipes.h **** 
 347              		.loc 5 174 22 is_stmt 1 view .LVU105
 348              	.LBB94:
 176:./lib/chibios/os/oslib/include/chpipes.h **** }
 349              		.loc 5 176 3 view .LVU106
 350              	.LBE94:
 351              	.LBE93:
 352              	.LBB96:
 353              	.LBB91:
 162:./lib/chibios/os/oslib/include/chpipes.h ****   /*lint -restore*/
 354              		.loc 5 162 27 is_stmt 0 view .LVU107
 355 003c 2568     		ldr	r5, [r4]
 356              	.LBE91:
 357              	.LBE96:
 358              	.LBB97:
 359              	.LBB95:
 176:./lib/chibios/os/oslib/include/chpipes.h **** }
 360              		.loc 5 176 12 view .LVU108
 361 003e 2269     		ldr	r2, [r4, #16]
 362              	.LVL27:
 176:./lib/chibios/os/oslib/include/chpipes.h **** }
 363              		.loc 5 176 12 view .LVU109
 364              	.LBE95:
 365              	.LBE97:
 366              	.LBE88:
 367              	.LBE87:
 118:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -restore*/
 368              		.loc 1 118 29 view .LVU110
 369 0040 A068     		ldr	r0, [r4, #8]
 370              	.LBB100:
 371              	.LBB99:
 372              	.LBB98:
 373              	.LBB92:
 162:./lib/chibios/os/oslib/include/chpipes.h ****   /*lint -restore*/
 374              		.loc 5 162 27 view .LVU111
 375 0042 5D1B     		subs	r5, r3, r5
 376              	.LBE92:
 377              	.LBE98:
 378              		.loc 5 189 28 view .LVU112
 379 0044 AD1A     		subs	r5, r5, r2
 380 0046 4545     		cmp	r5, r8
 381 0048 28BF     		it	cs
 382 004a 4546     		movcs	r5, r8
 383              	.LVL28:
 384              		.loc 5 189 28 view .LVU113
 385              	.LBE99:
 386              	.LBE100:
 114:lib/chibios/os/oslib/src/chpipes.c **** 
 387              		.loc 1 114 3 is_stmt 1 view .LVU114
 118:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -restore*/
 388              		.loc 1 118 25 is_stmt 0 view .LVU115
 389 004c 1B1A     		subs	r3, r3, r0
 114:lib/chibios/os/oslib/src/chpipes.c **** 
 390              		.loc 1 114 11 view .LVU116
 391 004e 2A44     		add	r2, r2, r5
 121:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, n);
 392              		.loc 1 121 6 view .LVU117
 393 0050 9D42     		cmp	r5, r3
 114:lib/chibios/os/oslib/src/chpipes.c **** 
 394              		.loc 1 114 11 view .LVU118
 395 0052 2261     		str	r2, [r4, #16]
 118:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -restore*/
 396              		.loc 1 118 3 is_stmt 1 view .LVU119
 397              	.LVL29:
 121:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, n);
 398              		.loc 1 121 3 view .LVU120
 121:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, n);
 399              		.loc 1 121 6 is_stmt 0 view .LVU121
 400 0054 21D2     		bcs	.L6
 122:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr += n;
 401              		.loc 1 122 5 is_stmt 1 view .LVU122
 402 0056 2A46     		mov	r2, r5
 403 0058 3146     		mov	r1, r6
 404 005a FFF7FEFF 		bl	memcpy
 405              	.LVL30:
 123:lib/chibios/os/oslib/src/chpipes.c ****   }
 406              		.loc 1 123 5 view .LVU123
 123:lib/chibios/os/oslib/src/chpipes.c ****   }
 407              		.loc 1 123 15 is_stmt 0 view .LVU124
 408 005e A268     		ldr	r2, [r4, #8]
 409 0060 2A44     		add	r2, r2, r5
 410              	.LVL31:
 411              	.L7:
 123:lib/chibios/os/oslib/src/chpipes.c ****   }
 412              		.loc 1 123 15 view .LVU125
 413 0062 A260     		str	r2, [r4, #8]
 137:lib/chibios/os/oslib/src/chpipes.c **** 
 414              		.loc 1 137 3 is_stmt 1 view .LVU126
 415 0064 5046     		mov	r0, r10
 416 0066 FFF7FEFF 		bl	chMtxUnlock
 417              	.LVL32:
 139:lib/chibios/os/oslib/src/chpipes.c **** }
 418              		.loc 1 139 3 view .LVU127
 139:lib/chibios/os/oslib/src/chpipes.c **** }
 419              		.loc 1 139 3 is_stmt 0 view .LVU128
 420              	.LBE101:
 421              	.LBE103:
 295:lib/chibios/os/oslib/src/chpipes.c ****       msg_t msg;
 422              		.loc 1 295 5 is_stmt 1 view .LVU129
 295:lib/chibios/os/oslib/src/chpipes.c ****       msg_t msg;
 423              		.loc 1 295 8 is_stmt 0 view .LVU130
 424 006a 6DBB     		cbnz	r5, .L9
 425              	.LBB104:
 296:lib/chibios/os/oslib/src/chpipes.c **** 
 426              		.loc 1 296 7 is_stmt 1 view .LVU131
 298:lib/chibios/os/oslib/src/chpipes.c ****       msg = chThdSuspendTimeoutS(&pp->wtr, timeout);
 427              		.loc 1 298 7 view .LVU132
 428              	.LBB105:
 429              	.LBI105:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 430              		.loc 2 355 20 view .LVU133
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 431              		.loc 2 357 3 view .LVU134
 432              	.LBB106:
 433              	.LBI106:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 434              		.loc 3 669 27 view .LVU135
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 435              		.loc 3 677 3 view .LVU136
 436              	.LVL33:
 437              	.LBB107:
 438              	.LBI107:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 439              		.loc 4 491 27 view .LVU137
 440              	.LBB108:
 441              		.loc 4 493 3 view .LVU138
 442 006c 2023     		movs	r3, #32
 443              		.syntax unified
 444              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 445 006e 83F31188 		MSR basepri, r3
 446              	@ 0 "" 2
 447              	.LVL34:
 448              		.loc 4 493 3 is_stmt 0 view .LVU139
 449              		.thumb
 450              		.syntax unified
 451              	.LBE108:
 452              	.LBE107:
 453              	.LBE106:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 454              		.loc 2 358 34 is_stmt 1 view .LVU140
 359:./lib/chibios/os/rt/include/chsys.h **** }
 455              		.loc 2 359 20 view .LVU141
 456              	.LBE105:
 299:lib/chibios/os/oslib/src/chpipes.c ****       chSysUnlock();
 457              		.loc 1 299 7 view .LVU142
 299:lib/chibios/os/oslib/src/chpipes.c ****       chSysUnlock();
 458              		.loc 1 299 13 is_stmt 0 view .LVU143
 459 0072 18EE101A 		vmov	r1, s16	@ int
 460 0076 04F11800 		add	r0, r4, #24
 461 007a FFF7FEFF 		bl	chThdSuspendTimeoutS
 462              	.LVL35:
 300:lib/chibios/os/oslib/src/chpipes.c **** 
 463              		.loc 1 300 7 is_stmt 1 view .LVU144
 464              	.LBB109:
 465              	.LBI109:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 466              		.loc 2 367 20 view .LVU145
 467              	.LBB110:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 468              		.loc 2 369 22 view .LVU146
 370:./lib/chibios/os/rt/include/chsys.h **** 
 469              		.loc 2 370 33 view .LVU147
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 470              		.loc 2 376 3 view .LVU148
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 471              		.loc 2 376 3 view .LVU149
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 472              		.loc 2 376 3 view .LVU150
 473              		.loc 2 380 3 view .LVU151
 474              	.LBB111:
 475              	.LBI111:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 476              		.loc 3 693 27 view .LVU152
 477              		.loc 3 696 3 view .LVU153
 478              	.LBB112:
 479              	.LBI112:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 480              		.loc 4 491 27 view .LVU154
 481              	.LBB113:
 482              		.loc 4 493 3 view .LVU155
 483              		.syntax unified
 484              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 485 007e 85F31188 		MSR basepri, r5
 486              	@ 0 "" 2
 487              	.LVL36:
 488              		.loc 4 493 3 is_stmt 0 view .LVU156
 489              		.thumb
 490              		.syntax unified
 491              	.LBE113:
 492              	.LBE112:
 493              	.LBE111:
 494              	.LBE110:
 495              	.LBE109:
 303:lib/chibios/os/oslib/src/chpipes.c ****         break;
 496              		.loc 1 303 7 is_stmt 1 view .LVU157
 303:lib/chibios/os/oslib/src/chpipes.c ****         break;
 497              		.loc 1 303 10 is_stmt 0 view .LVU158
 498 0082 0028     		cmp	r0, #0
 499 0084 D3D0     		beq	.L5
 500              	.LVL37:
 501              	.L10:
 303:lib/chibios/os/oslib/src/chpipes.c ****         break;
 502              		.loc 1 303 10 view .LVU159
 503              	.LBE104:
 504              	.LBE115:
 313:lib/chibios/os/oslib/src/chpipes.c ****     }
 314:lib/chibios/os/oslib/src/chpipes.c ****   }
 315:lib/chibios/os/oslib/src/chpipes.c **** 
 316:lib/chibios/os/oslib/src/chpipes.c ****   PW_UNLOCK(pp);
 505              		.loc 1 316 3 is_stmt 1 view .LVU160
 506 0086 4846     		mov	r0, r9
 507 0088 FFF7FEFF 		bl	chMtxUnlock
 508              	.LVL38:
 317:lib/chibios/os/oslib/src/chpipes.c **** 
 318:lib/chibios/os/oslib/src/chpipes.c ****   return max - n;
 509              		.loc 1 318 3 view .LVU161
 510              		.loc 1 318 14 is_stmt 0 view .LVU162
 511 008c A7EB0800 		sub	r0, r7, r8
 512              	.LVL39:
 513              	.L3:
 319:lib/chibios/os/oslib/src/chpipes.c **** }
 514              		.loc 1 319 1 view .LVU163
 515 0090 03B0     		add	sp, sp, #12
 516              		.cfi_remember_state
 517              		.cfi_def_cfa_offset 44
 518              		@ sp needed
 519 0092 BDEC028B 		vldm	sp!, {d8}
 520              		.cfi_restore 80
 521              		.cfi_restore 81
 522              		.cfi_def_cfa_offset 36
 523              	.LVL40:
 524              		.loc 1 319 1 view .LVU164
 525 0096 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 526              	.LVL41:
 527              	.L6:
 528              		.cfi_restore_state
 529              	.LBB116:
 530              	.LBB114:
 531              	.LBB102:
 125:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, s1);
 532              		.loc 1 125 8 is_stmt 1 view .LVU165
 125:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, s1);
 533              		.loc 1 125 11 is_stmt 0 view .LVU166
 534 009a 0FD9     		bls	.L8
 126:lib/chibios/os/oslib/src/chpipes.c ****     bp += s1;
 535              		.loc 1 126 5 is_stmt 1 view .LVU167
 536 009c 1A46     		mov	r2, r3
 537 009e 3146     		mov	r1, r6
 538 00a0 0193     		str	r3, [sp, #4]
 539 00a2 FFF7FEFF 		bl	memcpy
 540              	.LVL42:
 127:lib/chibios/os/oslib/src/chpipes.c ****     s2 = n - s1;
 541              		.loc 1 127 5 view .LVU168
 128:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->buffer, (const void *)bp, s2);
 542              		.loc 1 128 5 view .LVU169
 128:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->buffer, (const void *)bp, s2);
 543              		.loc 1 128 8 is_stmt 0 view .LVU170
 544 00a6 019B     		ldr	r3, [sp, #4]
 129:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer + s2;
 545              		.loc 1 129 5 view .LVU171
 546 00a8 2068     		ldr	r0, [r4]
 128:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)pp->buffer, (const void *)bp, s2);
 547              		.loc 1 128 8 view .LVU172
 548 00aa EA1A     		subs	r2, r5, r3
 549              	.LVL43:
 129:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer + s2;
 550              		.loc 1 129 5 is_stmt 1 view .LVU173
 551 00ac F118     		adds	r1, r6, r3
 552              	.LVL44:
 129:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer + s2;
 553              		.loc 1 129 5 is_stmt 0 view .LVU174
 554 00ae 0192     		str	r2, [sp, #4]
 555              	.LVL45:
 129:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer + s2;
 556              		.loc 1 129 5 view .LVU175
 557 00b0 FFF7FEFF 		bl	memcpy
 558              	.LVL46:
 130:lib/chibios/os/oslib/src/chpipes.c ****   }
 559              		.loc 1 130 5 is_stmt 1 view .LVU176
 130:lib/chibios/os/oslib/src/chpipes.c ****   }
 560              		.loc 1 130 28 is_stmt 0 view .LVU177
 561 00b4 2368     		ldr	r3, [r4]
 562 00b6 019A     		ldr	r2, [sp, #4]
 563 00b8 1A44     		add	r2, r2, r3
 564 00ba D2E7     		b	.L7
 565              	.LVL47:
 566              	.L8:
 133:lib/chibios/os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer;
 567              		.loc 1 133 5 is_stmt 1 view .LVU178
 568 00bc 2A46     		mov	r2, r5
 569 00be 3146     		mov	r1, r6
 570 00c0 FFF7FEFF 		bl	memcpy
 571              	.LVL48:
 134:lib/chibios/os/oslib/src/chpipes.c ****   }
 572              		.loc 1 134 5 view .LVU179
 134:lib/chibios/os/oslib/src/chpipes.c ****   }
 573              		.loc 1 134 19 is_stmt 0 view .LVU180
 574 00c4 2268     		ldr	r2, [r4]
 575 00c6 CCE7     		b	.L7
 576              	.LVL49:
 577              	.L9:
 134:lib/chibios/os/oslib/src/chpipes.c ****   }
 578              		.loc 1 134 19 view .LVU181
 579              	.LBE102:
 580              	.LBE114:
 308:lib/chibios/os/oslib/src/chpipes.c ****       bp += done;
 581              		.loc 1 308 7 is_stmt 1 view .LVU182
 312:lib/chibios/os/oslib/src/chpipes.c ****     }
 582              		.loc 1 312 7 is_stmt 0 view .LVU183
 583 00c8 0021     		movs	r1, #0
 584 00ca 5846     		mov	r0, fp
 308:lib/chibios/os/oslib/src/chpipes.c ****       bp += done;
 585              		.loc 1 308 10 view .LVU184
 586 00cc A8EB0508 		sub	r8, r8, r5
 587              	.LVL50:
 309:lib/chibios/os/oslib/src/chpipes.c **** 
 588              		.loc 1 309 7 is_stmt 1 view .LVU185
 309:lib/chibios/os/oslib/src/chpipes.c **** 
 589              		.loc 1 309 10 is_stmt 0 view .LVU186
 590 00d0 2E44     		add	r6, r6, r5
 591              	.LVL51:
 312:lib/chibios/os/oslib/src/chpipes.c ****     }
 592              		.loc 1 312 7 is_stmt 1 view .LVU187
 593 00d2 FFF7FEFF 		bl	chThdResume
 594              	.LVL52:
 595 00d6 AAE7     		b	.L5
 596              	.LVL53:
 597              	.L13:
 312:lib/chibios/os/oslib/src/chpipes.c ****     }
 598              		.loc 1 312 7 is_stmt 0 view .LVU188
 599              	.LBE116:
 286:lib/chibios/os/oslib/src/chpipes.c ****   }
 600              		.loc 1 286 12 view .LVU189
 601 00d8 0020     		movs	r0, #0
 602              	.LVL54:
 286:lib/chibios/os/oslib/src/chpipes.c ****   }
 603              		.loc 1 286 12 view .LVU190
 604 00da D9E7     		b	.L3
 605              		.cfi_endproc
 606              	.LFE293:
 608              		.section	.text.chPipeReadTimeout,"ax",%progbits
 609              		.align	1
 610              		.global	chPipeReadTimeout
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	chPipeReadTimeout:
 617              	.LVL55:
 618              	.LFB294:
 320:lib/chibios/os/oslib/src/chpipes.c **** 
 321:lib/chibios/os/oslib/src/chpipes.c **** /**
 322:lib/chibios/os/oslib/src/chpipes.c ****  * @brief   Pipe read with timeout.
 323:lib/chibios/os/oslib/src/chpipes.c ****  * @details The function reads data from a pipe into a buffer. The
 324:lib/chibios/os/oslib/src/chpipes.c ****  *          operation completes when the specified amount of data has been
 325:lib/chibios/os/oslib/src/chpipes.c ****  *          transferred or after the specified timeout or if the pipe has
 326:lib/chibios/os/oslib/src/chpipes.c ****  *          been reset.
 327:lib/chibios/os/oslib/src/chpipes.c ****  *
 328:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 329:lib/chibios/os/oslib/src/chpipes.c ****  * @param[out] bp       pointer to the data buffer
 330:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] n         the number of bytes to be read, the value 0 is
 331:lib/chibios/os/oslib/src/chpipes.c ****  *                      reserved
 332:lib/chibios/os/oslib/src/chpipes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 333:lib/chibios/os/oslib/src/chpipes.c ****  *                      the following special values are allowed:
 334:lib/chibios/os/oslib/src/chpipes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 335:lib/chibios/os/oslib/src/chpipes.c ****  *                      - @a TIME_INFINITE no timeout.
 336:lib/chibios/os/oslib/src/chpipes.c ****  *                      .
 337:lib/chibios/os/oslib/src/chpipes.c ****  * @return              The number of bytes effectively transferred. A number
 338:lib/chibios/os/oslib/src/chpipes.c ****  *                      lower than @p n means that a timeout occurred or the
 339:lib/chibios/os/oslib/src/chpipes.c ****  *                      pipe went in reset state.
 340:lib/chibios/os/oslib/src/chpipes.c ****  *
 341:lib/chibios/os/oslib/src/chpipes.c ****  * @api
 342:lib/chibios/os/oslib/src/chpipes.c ****  */
 343:lib/chibios/os/oslib/src/chpipes.c **** size_t chPipeReadTimeout(pipe_t *pp, uint8_t *bp,
 344:lib/chibios/os/oslib/src/chpipes.c ****                          size_t n, sysinterval_t timeout) {
 619              		.loc 1 344 59 is_stmt 1 view -0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 8
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 345:lib/chibios/os/oslib/src/chpipes.c ****   size_t max = n;
 623              		.loc 1 345 3 view .LVU192
 344:lib/chibios/os/oslib/src/chpipes.c ****   size_t max = n;
 624              		.loc 1 344 59 is_stmt 0 view .LVU193
 625 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 626              		.cfi_def_cfa_offset 36
 627              		.cfi_offset 4, -36
 628              		.cfi_offset 5, -32
 629              		.cfi_offset 6, -28
 630              		.cfi_offset 7, -24
 631              		.cfi_offset 8, -20
 632              		.cfi_offset 9, -16
 633              		.cfi_offset 10, -12
 634              		.cfi_offset 11, -8
 635              		.cfi_offset 14, -4
 636 0004 2DED028B 		vpush.64	{d8}
 637              		.cfi_def_cfa_offset 44
 638              		.cfi_offset 80, -44
 639              		.cfi_offset 81, -40
 640 0008 08EE103A 		vmov	s16, r3	@ int
 346:lib/chibios/os/oslib/src/chpipes.c **** 
 347:lib/chibios/os/oslib/src/chpipes.c ****   chDbgCheck(n > 0U);
 348:lib/chibios/os/oslib/src/chpipes.c **** 
 349:lib/chibios/os/oslib/src/chpipes.c ****   /* If the pipe is in reset state then returns immediately.*/
 350:lib/chibios/os/oslib/src/chpipes.c ****   if (pp->reset) {
 641              		.loc 1 350 6 view .LVU194
 642 000c 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 643              	.LVL56:
 344:lib/chibios/os/oslib/src/chpipes.c ****   size_t max = n;
 644              		.loc 1 344 59 view .LVU195
 645 000e 83B0     		sub	sp, sp, #12
 646              		.cfi_def_cfa_offset 56
 344:lib/chibios/os/oslib/src/chpipes.c ****   size_t max = n;
 647              		.loc 1 344 59 view .LVU196
 648 0010 0446     		mov	r4, r0
 649 0012 0E46     		mov	r6, r1
 650 0014 1746     		mov	r7, r2
 651              	.LVL57:
 347:lib/chibios/os/oslib/src/chpipes.c **** 
 652              		.loc 1 347 3 is_stmt 1 view .LVU197
 347:lib/chibios/os/oslib/src/chpipes.c **** 
 653              		.loc 1 347 3 view .LVU198
 347:lib/chibios/os/oslib/src/chpipes.c **** 
 654              		.loc 1 347 3 view .LVU199
 655              		.loc 1 350 3 view .LVU200
 656              		.loc 1 350 6 is_stmt 0 view .LVU201
 657 0016 002B     		cmp	r3, #0
 658 0018 5CD1     		bne	.L24
 351:lib/chibios/os/oslib/src/chpipes.c ****     return (size_t)0;
 352:lib/chibios/os/oslib/src/chpipes.c ****   }
 353:lib/chibios/os/oslib/src/chpipes.c **** 
 354:lib/chibios/os/oslib/src/chpipes.c ****   PR_LOCK(pp);
 659              		.loc 1 354 3 is_stmt 1 view .LVU202
 660 001a 00F14009 		add	r9, r0, #64
 661 001e 4846     		mov	r0, r9
 662              	.LVL58:
 663              		.loc 1 354 3 is_stmt 0 view .LVU203
 664 0020 FFF7FEFF 		bl	chMtxLock
 665              	.LVL59:
 355:lib/chibios/os/oslib/src/chpipes.c **** 
 356:lib/chibios/os/oslib/src/chpipes.c ****   while (n > 0U) {
 666              		.loc 1 356 3 is_stmt 1 view .LVU204
 667              		.loc 1 356 9 is_stmt 0 view .LVU205
 668 0024 B846     		mov	r8, r7
 669              	.LBB132:
 670              	.LBB133:
 671              	.LBB134:
 159:lib/chibios/os/oslib/src/chpipes.c **** 
 672              		.loc 1 159 3 view .LVU206
 673 0026 04F1200A 		add	r10, r4, #32
 674              	.LBE134:
 675              	.LBE133:
 357:lib/chibios/os/oslib/src/chpipes.c ****     size_t done;
 358:lib/chibios/os/oslib/src/chpipes.c **** 
 359:lib/chibios/os/oslib/src/chpipes.c ****     done = pipe_read(pp, bp, n);
 360:lib/chibios/os/oslib/src/chpipes.c ****     if (done == (size_t)0) {
 361:lib/chibios/os/oslib/src/chpipes.c ****       msg_t msg;
 362:lib/chibios/os/oslib/src/chpipes.c **** 
 363:lib/chibios/os/oslib/src/chpipes.c ****       chSysLock();
 364:lib/chibios/os/oslib/src/chpipes.c ****       msg = chThdSuspendTimeoutS(&pp->rtr, timeout);
 365:lib/chibios/os/oslib/src/chpipes.c ****       chSysUnlock();
 366:lib/chibios/os/oslib/src/chpipes.c **** 
 367:lib/chibios/os/oslib/src/chpipes.c ****       /* Anything except MSG_OK causes the operation to stop.*/
 368:lib/chibios/os/oslib/src/chpipes.c ****       if (msg != MSG_OK) {
 369:lib/chibios/os/oslib/src/chpipes.c ****         break;
 370:lib/chibios/os/oslib/src/chpipes.c ****       }
 371:lib/chibios/os/oslib/src/chpipes.c ****     }
 372:lib/chibios/os/oslib/src/chpipes.c ****     else {
 373:lib/chibios/os/oslib/src/chpipes.c ****       n  -= done;
 374:lib/chibios/os/oslib/src/chpipes.c ****       bp += done;
 375:lib/chibios/os/oslib/src/chpipes.c **** 
 376:lib/chibios/os/oslib/src/chpipes.c ****       /* Resuming the writer, if present.*/
 377:lib/chibios/os/oslib/src/chpipes.c ****       chThdResume(&pp->wtr, MSG_OK);
 676              		.loc 1 377 7 view .LVU207
 677 002a 04F1180B 		add	fp, r4, #24
 678              	.LVL60:
 679              	.L16:
 680              		.loc 1 377 7 view .LVU208
 681              	.LBE132:
 356:lib/chibios/os/oslib/src/chpipes.c ****     size_t done;
 682              		.loc 1 356 12 is_stmt 1 view .LVU209
 683 002e B8F1000F 		cmp	r8, #0
 684 0032 26D0     		beq	.L21
 685              	.LBB151:
 357:lib/chibios/os/oslib/src/chpipes.c ****     size_t done;
 686              		.loc 1 357 5 view .LVU210
 359:lib/chibios/os/oslib/src/chpipes.c ****     if (done == (size_t)0) {
 687              		.loc 1 359 5 view .LVU211
 688              	.LVL61:
 689              	.LBB139:
 690              	.LBI133:
 156:lib/chibios/os/oslib/src/chpipes.c ****   size_t s1, s2;
 691              		.loc 1 156 15 view .LVU212
 692              	.LBB137:
 157:lib/chibios/os/oslib/src/chpipes.c **** 
 693              		.loc 1 157 3 view .LVU213
 159:lib/chibios/os/oslib/src/chpipes.c **** 
 694              		.loc 1 159 3 view .LVU214
 695 0034 5046     		mov	r0, r10
 696 0036 FFF7FEFF 		bl	chMtxLock
 697              	.LVL62:
 162:lib/chibios/os/oslib/src/chpipes.c ****     n = chPipeGetUsedCount(pp);
 698              		.loc 1 162 3 view .LVU215
 699              	.LBB135:
 700              	.LBI135:
 174:./lib/chibios/os/oslib/include/chpipes.h **** 
 701              		.loc 5 174 22 view .LVU216
 702              	.LBB136:
 176:./lib/chibios/os/oslib/include/chpipes.h **** }
 703              		.loc 5 176 3 view .LVU217
 176:./lib/chibios/os/oslib/include/chpipes.h **** }
 704              		.loc 5 176 12 is_stmt 0 view .LVU218
 705 003a 2369     		ldr	r3, [r4, #16]
 706              	.LVL63:
 176:./lib/chibios/os/oslib/include/chpipes.h **** }
 707              		.loc 5 176 12 view .LVU219
 708              	.LBE136:
 709              	.LBE135:
 169:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -restore*/
 710              		.loc 1 169 29 view .LVU220
 711 003c E168     		ldr	r1, [r4, #12]
 712 003e 9845     		cmp	r8, r3
 713 0040 4546     		mov	r5, r8
 714 0042 28BF     		it	cs
 715 0044 1D46     		movcs	r5, r3
 716              	.LVL64:
 165:lib/chibios/os/oslib/src/chpipes.c **** 
 717              		.loc 1 165 3 is_stmt 1 view .LVU221
 165:lib/chibios/os/oslib/src/chpipes.c **** 
 718              		.loc 1 165 11 is_stmt 0 view .LVU222
 719 0046 5B1B     		subs	r3, r3, r5
 720 0048 2361     		str	r3, [r4, #16]
 169:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -restore*/
 721              		.loc 1 169 3 is_stmt 1 view .LVU223
 169:lib/chibios/os/oslib/src/chpipes.c ****   /*lint -restore*/
 722              		.loc 1 169 25 is_stmt 0 view .LVU224
 723 004a 6368     		ldr	r3, [r4, #4]
 724 004c 5B1A     		subs	r3, r3, r1
 725              	.LVL65:
 172:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, n);
 726              		.loc 1 172 3 is_stmt 1 view .LVU225
 172:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, n);
 727              		.loc 1 172 6 is_stmt 0 view .LVU226
 728 004e 9D42     		cmp	r5, r3
 729 0050 21D2     		bcs	.L17
 173:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr += n;
 730              		.loc 1 173 5 is_stmt 1 view .LVU227
 731 0052 2A46     		mov	r2, r5
 732 0054 3046     		mov	r0, r6
 733 0056 FFF7FEFF 		bl	memcpy
 734              	.LVL66:
 174:lib/chibios/os/oslib/src/chpipes.c ****   }
 735              		.loc 1 174 5 view .LVU228
 174:lib/chibios/os/oslib/src/chpipes.c ****   }
 736              		.loc 1 174 15 is_stmt 0 view .LVU229
 737 005a E268     		ldr	r2, [r4, #12]
 738 005c 2A44     		add	r2, r2, r5
 739              	.LVL67:
 740              	.L18:
 174:lib/chibios/os/oslib/src/chpipes.c ****   }
 741              		.loc 1 174 15 view .LVU230
 742 005e E260     		str	r2, [r4, #12]
 188:lib/chibios/os/oslib/src/chpipes.c **** 
 743              		.loc 1 188 3 is_stmt 1 view .LVU231
 744 0060 5046     		mov	r0, r10
 745 0062 FFF7FEFF 		bl	chMtxUnlock
 746              	.LVL68:
 190:lib/chibios/os/oslib/src/chpipes.c **** }
 747              		.loc 1 190 3 view .LVU232
 190:lib/chibios/os/oslib/src/chpipes.c **** }
 748              		.loc 1 190 3 is_stmt 0 view .LVU233
 749              	.LBE137:
 750              	.LBE139:
 360:lib/chibios/os/oslib/src/chpipes.c ****       msg_t msg;
 751              		.loc 1 360 5 is_stmt 1 view .LVU234
 360:lib/chibios/os/oslib/src/chpipes.c ****       msg_t msg;
 752              		.loc 1 360 8 is_stmt 0 view .LVU235
 753 0066 6DBB     		cbnz	r5, .L20
 754              	.LBB140:
 361:lib/chibios/os/oslib/src/chpipes.c **** 
 755              		.loc 1 361 7 is_stmt 1 view .LVU236
 363:lib/chibios/os/oslib/src/chpipes.c ****       msg = chThdSuspendTimeoutS(&pp->rtr, timeout);
 756              		.loc 1 363 7 view .LVU237
 757              	.LBB141:
 758              	.LBI141:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 759              		.loc 2 355 20 view .LVU238
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 760              		.loc 2 357 3 view .LVU239
 761              	.LBB142:
 762              	.LBI142:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 763              		.loc 3 669 27 view .LVU240
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 764              		.loc 3 677 3 view .LVU241
 765              	.LVL69:
 766              	.LBB143:
 767              	.LBI143:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 768              		.loc 4 491 27 view .LVU242
 769              	.LBB144:
 770              		.loc 4 493 3 view .LVU243
 771 0068 2023     		movs	r3, #32
 772              		.syntax unified
 773              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 774 006a 83F31188 		MSR basepri, r3
 775              	@ 0 "" 2
 776              	.LVL70:
 777              		.loc 4 493 3 is_stmt 0 view .LVU244
 778              		.thumb
 779              		.syntax unified
 780              	.LBE144:
 781              	.LBE143:
 782              	.LBE142:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 783              		.loc 2 358 34 is_stmt 1 view .LVU245
 359:./lib/chibios/os/rt/include/chsys.h **** }
 784              		.loc 2 359 20 view .LVU246
 785              	.LBE141:
 364:lib/chibios/os/oslib/src/chpipes.c ****       chSysUnlock();
 786              		.loc 1 364 7 view .LVU247
 364:lib/chibios/os/oslib/src/chpipes.c ****       chSysUnlock();
 787              		.loc 1 364 13 is_stmt 0 view .LVU248
 788 006e 18EE101A 		vmov	r1, s16	@ int
 789 0072 04F11C00 		add	r0, r4, #28
 790 0076 FFF7FEFF 		bl	chThdSuspendTimeoutS
 791              	.LVL71:
 365:lib/chibios/os/oslib/src/chpipes.c **** 
 792              		.loc 1 365 7 is_stmt 1 view .LVU249
 793              	.LBB145:
 794              	.LBI145:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 795              		.loc 2 367 20 view .LVU250
 796              	.LBB146:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 797              		.loc 2 369 22 view .LVU251
 370:./lib/chibios/os/rt/include/chsys.h **** 
 798              		.loc 2 370 33 view .LVU252
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 799              		.loc 2 376 3 view .LVU253
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 800              		.loc 2 376 3 view .LVU254
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 801              		.loc 2 376 3 view .LVU255
 802              		.loc 2 380 3 view .LVU256
 803              	.LBB147:
 804              	.LBI147:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 805              		.loc 3 693 27 view .LVU257
 806              		.loc 3 696 3 view .LVU258
 807              	.LBB148:
 808              	.LBI148:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 809              		.loc 4 491 27 view .LVU259
 810              	.LBB149:
 811              		.loc 4 493 3 view .LVU260
 812              		.syntax unified
 813              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 814 007a 85F31188 		MSR basepri, r5
 815              	@ 0 "" 2
 816              	.LVL72:
 817              		.loc 4 493 3 is_stmt 0 view .LVU261
 818              		.thumb
 819              		.syntax unified
 820              	.LBE149:
 821              	.LBE148:
 822              	.LBE147:
 823              	.LBE146:
 824              	.LBE145:
 368:lib/chibios/os/oslib/src/chpipes.c ****         break;
 825              		.loc 1 368 7 is_stmt 1 view .LVU262
 368:lib/chibios/os/oslib/src/chpipes.c ****         break;
 826              		.loc 1 368 10 is_stmt 0 view .LVU263
 827 007e 0028     		cmp	r0, #0
 828 0080 D5D0     		beq	.L16
 829              	.LVL73:
 830              	.L21:
 368:lib/chibios/os/oslib/src/chpipes.c ****         break;
 831              		.loc 1 368 10 view .LVU264
 832              	.LBE140:
 833              	.LBE151:
 378:lib/chibios/os/oslib/src/chpipes.c ****     }
 379:lib/chibios/os/oslib/src/chpipes.c ****   }
 380:lib/chibios/os/oslib/src/chpipes.c **** 
 381:lib/chibios/os/oslib/src/chpipes.c ****   PR_UNLOCK(pp);
 834              		.loc 1 381 3 is_stmt 1 view .LVU265
 835 0082 4846     		mov	r0, r9
 836 0084 FFF7FEFF 		bl	chMtxUnlock
 837              	.LVL74:
 382:lib/chibios/os/oslib/src/chpipes.c **** 
 383:lib/chibios/os/oslib/src/chpipes.c ****   return max - n;
 838              		.loc 1 383 3 view .LVU266
 839              		.loc 1 383 14 is_stmt 0 view .LVU267
 840 0088 A7EB0800 		sub	r0, r7, r8
 841              	.LVL75:
 842              	.L14:
 384:lib/chibios/os/oslib/src/chpipes.c **** }
 843              		.loc 1 384 1 view .LVU268
 844 008c 03B0     		add	sp, sp, #12
 845              		.cfi_remember_state
 846              		.cfi_def_cfa_offset 44
 847              		@ sp needed
 848 008e BDEC028B 		vldm	sp!, {d8}
 849              		.cfi_restore 80
 850              		.cfi_restore 81
 851              		.cfi_def_cfa_offset 36
 852              	.LVL76:
 853              		.loc 1 384 1 view .LVU269
 854 0092 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 855              	.LVL77:
 856              	.L17:
 857              		.cfi_restore_state
 858              	.LBB152:
 859              	.LBB150:
 860              	.LBB138:
 176:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, s1);
 861              		.loc 1 176 8 is_stmt 1 view .LVU270
 176:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, s1);
 862              		.loc 1 176 11 is_stmt 0 view .LVU271
 863 0096 0FD9     		bls	.L19
 177:lib/chibios/os/oslib/src/chpipes.c ****     bp += s1;
 864              		.loc 1 177 5 is_stmt 1 view .LVU272
 865 0098 1A46     		mov	r2, r3
 866 009a 3046     		mov	r0, r6
 867 009c 0193     		str	r3, [sp, #4]
 868 009e FFF7FEFF 		bl	memcpy
 869              	.LVL78:
 178:lib/chibios/os/oslib/src/chpipes.c ****     s2 = n - s1;
 870              		.loc 1 178 5 view .LVU273
 179:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->buffer, s2);
 871              		.loc 1 179 5 view .LVU274
 179:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->buffer, s2);
 872              		.loc 1 179 8 is_stmt 0 view .LVU275
 873 00a2 019B     		ldr	r3, [sp, #4]
 180:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer + s2;
 874              		.loc 1 180 5 view .LVU276
 875 00a4 2168     		ldr	r1, [r4]
 179:lib/chibios/os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->buffer, s2);
 876              		.loc 1 179 8 view .LVU277
 877 00a6 EA1A     		subs	r2, r5, r3
 878              	.LVL79:
 180:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer + s2;
 879              		.loc 1 180 5 is_stmt 1 view .LVU278
 880 00a8 F018     		adds	r0, r6, r3
 881              	.LVL80:
 180:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer + s2;
 882              		.loc 1 180 5 is_stmt 0 view .LVU279
 883 00aa 0192     		str	r2, [sp, #4]
 884              	.LVL81:
 180:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer + s2;
 885              		.loc 1 180 5 view .LVU280
 886 00ac FFF7FEFF 		bl	memcpy
 887              	.LVL82:
 181:lib/chibios/os/oslib/src/chpipes.c ****   }
 888              		.loc 1 181 5 is_stmt 1 view .LVU281
 181:lib/chibios/os/oslib/src/chpipes.c ****   }
 889              		.loc 1 181 28 is_stmt 0 view .LVU282
 890 00b0 2368     		ldr	r3, [r4]
 891 00b2 019A     		ldr	r2, [sp, #4]
 892 00b4 1A44     		add	r2, r2, r3
 893 00b6 D2E7     		b	.L18
 894              	.LVL83:
 895              	.L19:
 184:lib/chibios/os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer;
 896              		.loc 1 184 5 is_stmt 1 view .LVU283
 897 00b8 2A46     		mov	r2, r5
 898 00ba 3046     		mov	r0, r6
 899 00bc FFF7FEFF 		bl	memcpy
 900              	.LVL84:
 185:lib/chibios/os/oslib/src/chpipes.c ****   }
 901              		.loc 1 185 5 view .LVU284
 185:lib/chibios/os/oslib/src/chpipes.c ****   }
 902              		.loc 1 185 19 is_stmt 0 view .LVU285
 903 00c0 2268     		ldr	r2, [r4]
 904 00c2 CCE7     		b	.L18
 905              	.LVL85:
 906              	.L20:
 185:lib/chibios/os/oslib/src/chpipes.c ****   }
 907              		.loc 1 185 19 view .LVU286
 908              	.LBE138:
 909              	.LBE150:
 373:lib/chibios/os/oslib/src/chpipes.c ****       bp += done;
 910              		.loc 1 373 7 is_stmt 1 view .LVU287
 377:lib/chibios/os/oslib/src/chpipes.c ****     }
 911              		.loc 1 377 7 is_stmt 0 view .LVU288
 912 00c4 0021     		movs	r1, #0
 913 00c6 5846     		mov	r0, fp
 373:lib/chibios/os/oslib/src/chpipes.c ****       bp += done;
 914              		.loc 1 373 10 view .LVU289
 915 00c8 A8EB0508 		sub	r8, r8, r5
 916              	.LVL86:
 374:lib/chibios/os/oslib/src/chpipes.c **** 
 917              		.loc 1 374 7 is_stmt 1 view .LVU290
 374:lib/chibios/os/oslib/src/chpipes.c **** 
 918              		.loc 1 374 10 is_stmt 0 view .LVU291
 919 00cc 2E44     		add	r6, r6, r5
 920              	.LVL87:
 377:lib/chibios/os/oslib/src/chpipes.c ****     }
 921              		.loc 1 377 7 is_stmt 1 view .LVU292
 922 00ce FFF7FEFF 		bl	chThdResume
 923              	.LVL88:
 924 00d2 ACE7     		b	.L16
 925              	.LVL89:
 926              	.L24:
 377:lib/chibios/os/oslib/src/chpipes.c ****     }
 927              		.loc 1 377 7 is_stmt 0 view .LVU293
 928              	.LBE152:
 351:lib/chibios/os/oslib/src/chpipes.c ****   }
 929              		.loc 1 351 12 view .LVU294
 930 00d4 0020     		movs	r0, #0
 931              	.LVL90:
 351:lib/chibios/os/oslib/src/chpipes.c ****   }
 932              		.loc 1 351 12 view .LVU295
 933 00d6 D9E7     		b	.L14
 934              		.cfi_endproc
 935              	.LFE294:
 937              		.text
 938              	.Letext0:
 939              		.file 6 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 940              		.file 7 "/usr/arm-none-eabi/include/machine/_default_types.h"
 941              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 942              		.file 9 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 943              		.file 10 "./lib/chibios/os/rt/include/chsystypes.h"
 944              		.file 11 "./lib/chibios/os/rt/include/chschd.h"
 945              		.file 12 "./lib/chibios/os/rt/include/chlists.h"
 946              		.file 13 "./lib/chibios/os/rt/include/chtime.h"
 947              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 948              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 949              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
 950              		.file 17 "/usr/arm-none-eabi/include/string.h"
 951              		.file 18 "./lib/chibios/os/rt/include/chthreads.h"
 952              		.file 19 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chpipes.c
     /tmp/ccbds7cV.s:18     .text.chPipeObjectInit:0000000000000000 $t
     /tmp/ccbds7cV.s:26     .text.chPipeObjectInit:0000000000000000 chPipeObjectInit
     /tmp/ccbds7cV.s:93     .text.chPipeReset:0000000000000000 $t
     /tmp/ccbds7cV.s:100    .text.chPipeReset:0000000000000000 chPipeReset
     /tmp/ccbds7cV.s:238    .text.chPipeWriteTimeout:0000000000000000 $t
     /tmp/ccbds7cV.s:245    .text.chPipeWriteTimeout:0000000000000000 chPipeWriteTimeout
     /tmp/ccbds7cV.s:609    .text.chPipeReadTimeout:0000000000000000 $t
     /tmp/ccbds7cV.s:616    .text.chPipeReadTimeout:0000000000000000 chPipeReadTimeout

UNDEFINED SYMBOLS
chMtxObjectInit
chMtxLock
chThdResumeI
chSchRescheduleS
chMtxUnlock
memcpy
chThdSuspendTimeoutS
chThdResume
