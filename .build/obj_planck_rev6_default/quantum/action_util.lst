   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"action_util.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.add_key,"ax",%progbits
  18              		.align	1
  19              		.global	add_key
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	add_key:
  27              	.LVL0:
  28              	.LFB330:
  29              		.file 1 "quantum/action_util.h"
   1:quantum/action_util.h **** /*
   2:quantum/action_util.h **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.h **** 
   4:quantum/action_util.h **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.h **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.h **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.h **** (at your option) any later version.
   8:quantum/action_util.h **** 
   9:quantum/action_util.h **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.h **** GNU General Public License for more details.
  13:quantum/action_util.h **** 
  14:quantum/action_util.h **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.h **** */
  17:quantum/action_util.h **** 
  18:quantum/action_util.h **** #pragma once
  19:quantum/action_util.h **** 
  20:quantum/action_util.h **** #include <stdint.h>
  21:quantum/action_util.h **** #include "report.h"
  22:quantum/action_util.h **** 
  23:quantum/action_util.h **** #ifdef __cplusplus
  24:quantum/action_util.h **** extern "C" {
  25:quantum/action_util.h **** #endif
  26:quantum/action_util.h **** 
  27:quantum/action_util.h **** extern report_keyboard_t *keyboard_report;
  28:quantum/action_util.h **** 
  29:quantum/action_util.h **** void send_keyboard_report(void);
  30:quantum/action_util.h **** 
  31:quantum/action_util.h **** /* key */
  32:quantum/action_util.h **** inline void add_key(uint8_t key) { add_key_to_report(keyboard_report, key); }
  30              		.loc 1 32 34 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 32 36 view .LVU1
  36 0000 024B     		ldr	r3, .L2
  37              		.loc 1 32 34 is_stmt 0 view .LVU2
  38 0002 0146     		mov	r1, r0
  39              		.loc 1 32 36 view .LVU3
  40 0004 1868     		ldr	r0, [r3]
  41              	.LVL1:
  42              		.loc 1 32 36 view .LVU4
  43 0006 FFF7FEBF 		b	add_key_to_report
  44              	.LVL2:
  45              	.L3:
  46 000a 00BF     		.align	2
  47              	.L2:
  48 000c 00000000 		.word	.LANCHOR0
  49              		.cfi_endproc
  50              	.LFE330:
  52              		.section	.text.del_key,"ax",%progbits
  53              		.align	1
  54              		.global	del_key
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	del_key:
  61              	.LVL3:
  62              	.LFB331:
  33:quantum/action_util.h **** 
  34:quantum/action_util.h **** inline void del_key(uint8_t key) { del_key_from_report(keyboard_report, key); }
  63              		.loc 1 34 34 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              		.loc 1 34 36 view .LVU6
  69 0000 024B     		ldr	r3, .L5
  70              		.loc 1 34 34 is_stmt 0 view .LVU7
  71 0002 0146     		mov	r1, r0
  72              		.loc 1 34 36 view .LVU8
  73 0004 1868     		ldr	r0, [r3]
  74              	.LVL4:
  75              		.loc 1 34 36 view .LVU9
  76 0006 FFF7FEBF 		b	del_key_from_report
  77              	.LVL5:
  78              	.L6:
  79 000a 00BF     		.align	2
  80              	.L5:
  81 000c 00000000 		.word	.LANCHOR0
  82              		.cfi_endproc
  83              	.LFE331:
  85              		.section	.text.clear_keys,"ax",%progbits
  86              		.align	1
  87              		.global	clear_keys
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	clear_keys:
  94              	.LFB332:
  35:quantum/action_util.h **** 
  36:quantum/action_util.h **** inline void clear_keys(void) { clear_keys_from_report(keyboard_report); }
  95              		.loc 1 36 30 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100              		.loc 1 36 32 view .LVU11
 101 0000 014B     		ldr	r3, .L8
 102 0002 1868     		ldr	r0, [r3]
 103 0004 FFF7FEBF 		b	clear_keys_from_report
 104              	.LVL6:
 105              	.L9:
 106              		.align	2
 107              	.L8:
 108 0008 00000000 		.word	.LANCHOR0
 109              		.cfi_endproc
 110              	.LFE332:
 112              		.section	.text.get_oneshot_locked_mods,"ax",%progbits
 113              		.align	1
 114              		.global	get_oneshot_locked_mods
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv4-sp-d16
 120              	get_oneshot_locked_mods:
 121              	.LFB338:
 122              		.file 2 "quantum/action_util.c"
   1:quantum/action_util.c **** /*
   2:quantum/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.c **** 
   4:quantum/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.c **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.c **** (at your option) any later version.
   8:quantum/action_util.c **** 
   9:quantum/action_util.c **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.c **** GNU General Public License for more details.
  13:quantum/action_util.c **** 
  14:quantum/action_util.c **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.c **** */
  17:quantum/action_util.c **** #include "host.h"
  18:quantum/action_util.c **** #include "report.h"
  19:quantum/action_util.c **** #include "debug.h"
  20:quantum/action_util.c **** #include "action_util.h"
  21:quantum/action_util.c **** #include "action_layer.h"
  22:quantum/action_util.c **** #include "timer.h"
  23:quantum/action_util.c **** #include "keycode_config.h"
  24:quantum/action_util.c **** 
  25:quantum/action_util.c **** extern keymap_config_t keymap_config;
  26:quantum/action_util.c **** 
  27:quantum/action_util.c **** static uint8_t real_mods  = 0;
  28:quantum/action_util.c **** static uint8_t weak_mods  = 0;
  29:quantum/action_util.c **** static uint8_t macro_mods = 0;
  30:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
  31:quantum/action_util.c **** static uint8_t weak_override_mods = 0;
  32:quantum/action_util.c **** static uint8_t suppressed_mods    = 0;
  33:quantum/action_util.c **** #endif
  34:quantum/action_util.c **** 
  35:quantum/action_util.c **** // TODO: pointer variable is not needed
  36:quantum/action_util.c **** // report_keyboard_t keyboard_report = {};
  37:quantum/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  38:quantum/action_util.c **** 
  39:quantum/action_util.c **** extern inline void add_key(uint8_t key);
  40:quantum/action_util.c **** extern inline void del_key(uint8_t key);
  41:quantum/action_util.c **** extern inline void clear_keys(void);
  42:quantum/action_util.c **** 
  43:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  44:quantum/action_util.c **** static uint8_t oneshot_mods        = 0;
  45:quantum/action_util.c **** static uint8_t oneshot_locked_mods = 0;
  46:quantum/action_util.c **** uint8_t        get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
 123              		.loc 2 46 46 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              		.loc 2 46 48 view .LVU13
 129              		.loc 2 46 76 is_stmt 0 view .LVU14
 130 0000 014B     		ldr	r3, .L11
 131 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 132 0004 7047     		bx	lr
 133              	.L12:
 134 0006 00BF     		.align	2
 135              	.L11:
 136 0008 00000000 		.word	.LANCHOR1
 137              		.cfi_endproc
 138              	.LFE338:
 140              		.section	.text.has_oneshot_mods_timed_out,"ax",%progbits
 141              		.align	1
 142              		.global	has_oneshot_mods_timed_out
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	has_oneshot_mods_timed_out:
 149              	.LFB341:
  47:quantum/action_util.c **** void           set_oneshot_locked_mods(uint8_t mods) {
  48:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
  49:quantum/action_util.c ****         oneshot_locked_mods = mods;
  50:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  51:quantum/action_util.c ****     }
  52:quantum/action_util.c **** }
  53:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
  54:quantum/action_util.c ****     if (oneshot_locked_mods) {
  55:quantum/action_util.c ****         oneshot_locked_mods = 0;
  56:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  57:quantum/action_util.c ****     }
  58:quantum/action_util.c **** }
  59:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  60:quantum/action_util.c **** static uint16_t oneshot_time = 0;
  61:quantum/action_util.c **** bool            has_oneshot_mods_timed_out(void) { return TIMER_DIFF_16(timer_read(), oneshot_time)
  62:quantum/action_util.c **** #    else
  63:quantum/action_util.c **** bool has_oneshot_mods_timed_out(void) { return false; }
 150              		.loc 2 63 39 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              		.loc 2 63 41 view .LVU16
 156              		.loc 2 63 55 is_stmt 0 view .LVU17
 157 0000 0020     		movs	r0, #0
 158 0002 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE341:
 162              		.section	.text.get_oneshot_layer,"ax",%progbits
 163              		.align	1
 164              		.global	get_oneshot_layer
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	get_oneshot_layer:
 171              	.LFB342:
  64:quantum/action_util.c **** #    endif
  65:quantum/action_util.c **** #endif
  66:quantum/action_util.c **** 
  67:quantum/action_util.c **** /* oneshot layer */
  68:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  69:quantum/action_util.c **** /** \brief oneshot_layer_data bits
  70:quantum/action_util.c ****  * LLLL LSSS
  71:quantum/action_util.c ****  * where:
  72:quantum/action_util.c ****  *   L => are layer bits
  73:quantum/action_util.c ****  *   S => oneshot state bits
  74:quantum/action_util.c ****  */
  75:quantum/action_util.c **** static int8_t oneshot_layer_data = 0;
  76:quantum/action_util.c **** 
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
 172              		.loc 2 77 40 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              		.loc 2 77 42 view .LVU19
 178              		.loc 2 77 68 is_stmt 0 view .LVU20
 179 0000 024B     		ldr	r3, .L15
 180 0002 93F90000 		ldrsb	r0, [r3]
 181              		.loc 2 77 74 view .LVU21
 182 0006 C0F3C700 		ubfx	r0, r0, #3, #8
 183 000a 7047     		bx	lr
 184              	.L16:
 185              		.align	2
 186              	.L15:
 187 000c 00000000 		.word	.LANCHOR2
 188              		.cfi_endproc
 189              	.LFE342:
 191              		.section	.text.get_oneshot_layer_state,"ax",%progbits
 192              		.align	1
 193              		.global	get_oneshot_layer_state
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	get_oneshot_layer_state:
 200              	.LFB343:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 201              		.loc 2 78 46 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              		.loc 2 78 48 view .LVU23
 207              		.loc 2 78 74 is_stmt 0 view .LVU24
 208 0000 024B     		ldr	r3, .L18
 209 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 210              		.loc 2 78 83 view .LVU25
 211 0004 00F00700 		and	r0, r0, #7
 212 0008 7047     		bx	lr
 213              	.L19:
 214 000a 00BF     		.align	2
 215              	.L18:
 216 000c 00000000 		.word	.LANCHOR2
 217              		.cfi_endproc
 218              	.LFE343:
 220              		.section	.text.is_oneshot_layer_active,"ax",%progbits
 221              		.align	1
 222              		.global	is_oneshot_layer_active
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	is_oneshot_layer_active:
 229              	.LFB347:
  79:quantum/action_util.c **** 
  80:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  81:quantum/action_util.c **** enum {
  82:quantum/action_util.c ****     SHO_OFF,
  83:quantum/action_util.c ****     SHO_ACTIVE,   // Swap hands button was pressed, and we didn't send any swapped keys yet
  84:quantum/action_util.c ****     SHO_PRESSED,  // Swap hands button is currently pressed
  85:quantum/action_util.c ****     SHO_USED,     // Swap hands button is still pressed, and we already sent swapped keys
  86:quantum/action_util.c **** } swap_hands_oneshot = SHO_OFF;
  87:quantum/action_util.c **** #    endif
  88:quantum/action_util.c **** 
  89:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  90:quantum/action_util.c **** static uint16_t oneshot_layer_time = 0;
  91:quantum/action_util.c **** inline bool     has_oneshot_layer_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_layer_ti
  92:quantum/action_util.c **** #        ifdef SWAP_HANDS_ENABLE
  93:quantum/action_util.c **** static uint16_t oneshot_swaphands_time = 0;
  94:quantum/action_util.c **** inline bool     has_oneshot_swaphands_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_swap
  95:quantum/action_util.c **** #        endif
  96:quantum/action_util.c **** #    endif
  97:quantum/action_util.c **** 
  98:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  99:quantum/action_util.c **** 
 100:quantum/action_util.c **** void set_oneshot_swaphands(void) {
 101:quantum/action_util.c ****     swap_hands_oneshot = SHO_PRESSED;
 102:quantum/action_util.c ****     swap_hands         = true;
 103:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 104:quantum/action_util.c ****     oneshot_swaphands_time = timer_read();
 105:quantum/action_util.c ****     if (oneshot_layer_time != 0) {
 106:quantum/action_util.c ****         oneshot_layer_time = oneshot_swaphands_time;
 107:quantum/action_util.c ****     }
 108:quantum/action_util.c **** #        endif
 109:quantum/action_util.c **** }
 110:quantum/action_util.c **** 
 111:quantum/action_util.c **** void release_oneshot_swaphands(void) {
 112:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 113:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 114:quantum/action_util.c ****     }
 115:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_USED) {
 116:quantum/action_util.c ****         clear_oneshot_swaphands();
 117:quantum/action_util.c ****     }
 118:quantum/action_util.c **** }
 119:quantum/action_util.c **** 
 120:quantum/action_util.c **** void use_oneshot_swaphands(void) {
 121:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 122:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 123:quantum/action_util.c ****     }
 124:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_ACTIVE) {
 125:quantum/action_util.c ****         clear_oneshot_swaphands();
 126:quantum/action_util.c ****     }
 127:quantum/action_util.c **** }
 128:quantum/action_util.c **** 
 129:quantum/action_util.c **** void clear_oneshot_swaphands(void) {
 130:quantum/action_util.c ****     swap_hands_oneshot = SHO_OFF;
 131:quantum/action_util.c ****     swap_hands         = false;
 132:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 133:quantum/action_util.c ****     oneshot_swaphands_time = 0;
 134:quantum/action_util.c **** #        endif
 135:quantum/action_util.c **** }
 136:quantum/action_util.c **** 
 137:quantum/action_util.c **** #    endif
 138:quantum/action_util.c **** 
 139:quantum/action_util.c **** /** \brief Set oneshot layer
 140:quantum/action_util.c ****  *
 141:quantum/action_util.c ****  * FIXME: needs doc
 142:quantum/action_util.c ****  */
 143:quantum/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state) {
 144:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 145:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 146:quantum/action_util.c ****         layer_on(layer);
 147:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 148:quantum/action_util.c ****         oneshot_layer_time = timer_read();
 149:quantum/action_util.c **** #    endif
 150:quantum/action_util.c ****         oneshot_layer_changed_kb(get_oneshot_layer());
 151:quantum/action_util.c ****     } else {
 152:quantum/action_util.c ****         layer_on(layer);
 153:quantum/action_util.c ****     }
 154:quantum/action_util.c **** }
 155:quantum/action_util.c **** /** \brief Reset oneshot layer
 156:quantum/action_util.c ****  *
 157:quantum/action_util.c ****  * FIXME: needs doc
 158:quantum/action_util.c ****  */
 159:quantum/action_util.c **** void reset_oneshot_layer(void) {
 160:quantum/action_util.c ****     oneshot_layer_data = 0;
 161:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 162:quantum/action_util.c ****     oneshot_layer_time = 0;
 163:quantum/action_util.c **** #    endif
 164:quantum/action_util.c ****     oneshot_layer_changed_kb(get_oneshot_layer());
 165:quantum/action_util.c **** }
 166:quantum/action_util.c **** /** \brief Clear oneshot layer
 167:quantum/action_util.c ****  *
 168:quantum/action_util.c ****  * FIXME: needs doc
 169:quantum/action_util.c ****  */
 170:quantum/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state) {
 171:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 172:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 173:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 174:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 175:quantum/action_util.c ****         reset_oneshot_layer();
 176:quantum/action_util.c ****     }
 177:quantum/action_util.c **** }
 178:quantum/action_util.c **** /** \brief Is oneshot layer active
 179:quantum/action_util.c ****  *
 180:quantum/action_util.c ****  * FIXME: needs doc
 181:quantum/action_util.c ****  */
 182:quantum/action_util.c **** bool is_oneshot_layer_active(void) { return get_oneshot_layer_state(); }
 230              		.loc 2 182 36 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              		.loc 2 182 38 view .LVU27
 236              	.LBB12:
 237              	.LBI12:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 238              		.loc 2 78 16 view .LVU28
 239              	.LBB13:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 240              		.loc 2 78 48 view .LVU29
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 241              		.loc 2 78 74 is_stmt 0 view .LVU30
 242 0000 034B     		ldr	r3, .L21
 243 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 244              	.LBE13:
 245              	.LBE12:
 246              		.loc 2 182 72 view .LVU31
 247 0004 10F00700 		ands	r0, r0, #7
 248 0008 18BF     		it	ne
 249 000a 0120     		movne	r0, #1
 250 000c 7047     		bx	lr
 251              	.L22:
 252 000e 00BF     		.align	2
 253              	.L21:
 254 0010 00000000 		.word	.LANCHOR2
 255              		.cfi_endproc
 256              	.LFE347:
 258              		.section	.rodata.oneshot_set.str1.1,"aMS",%progbits,1
 259              	.LC0:
 260 0000 4F6E6573 		.ascii	"Oneshot: active: %d\012\000"
 260      686F743A 
 260      20616374 
 260      6976653A 
 260      2025640A 
 261              		.section	.text.oneshot_set,"ax",%progbits
 262              		.align	1
 263              		.global	oneshot_set
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv4-sp-d16
 269              	oneshot_set:
 270              	.LVL7:
 271              	.LFB348:
 183:quantum/action_util.c **** 
 184:quantum/action_util.c **** /** \brief set oneshot
 185:quantum/action_util.c ****  *
 186:quantum/action_util.c ****  * FIXME: needs doc
 187:quantum/action_util.c ****  */
 188:quantum/action_util.c **** void oneshot_set(bool active) {
 272              		.loc 2 188 31 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 189:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 276              		.loc 2 189 5 view .LVU33
 277              		.loc 2 189 22 is_stmt 0 view .LVU34
 278 0000 0C4A     		ldr	r2, .L30
 279 0002 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 280              		.loc 2 189 8 view .LVU35
 281 0004 C3F38001 		ubfx	r1, r3, #2, #1
 282 0008 8142     		cmp	r1, r0
 188:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 283              		.loc 2 188 31 view .LVU36
 284 000a 10B5     		push	{r4, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 4, -8
 287              		.cfi_offset 14, -4
 188:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 288              		.loc 2 188 31 view .LVU37
 289 000c 0446     		mov	r4, r0
 290              		.loc 2 189 8 view .LVU38
 291 000e 0FD0     		beq	.L23
 292              	.LVL8:
 293              	.LBB16:
 294              	.LBI16:
 188:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 295              		.loc 2 188 6 is_stmt 1 view .LVU39
 296              	.LBB17:
 190:quantum/action_util.c ****         keymap_config.oneshot_disable = active;
 297              		.loc 2 190 9 view .LVU40
 298              		.loc 2 190 39 is_stmt 0 view .LVU41
 299 0010 60F38203 		bfi	r3, r0, #2, #1
 300 0014 5370     		strb	r3, [r2, #1]
 191:quantum/action_util.c ****         eeconfig_update_keymap(keymap_config.raw);
 301              		.loc 2 191 9 is_stmt 1 view .LVU42
 302 0016 1088     		ldrh	r0, [r2]
 303              	.LVL9:
 304              		.loc 2 191 9 is_stmt 0 view .LVU43
 305 0018 FFF7FEFF 		bl	eeconfig_update_keymap
 306              	.LVL10:
 192:quantum/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 307              		.loc 2 192 9 is_stmt 1 view .LVU44
 308              		.loc 2 192 9 view .LVU45
 309 001c 064B     		ldr	r3, .L30+4
 310 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 311 0020 DB07     		lsls	r3, r3, #31
 312 0022 05D5     		bpl	.L23
 313              		.loc 2 192 9 view .LVU46
 314 0024 2146     		mov	r1, r4
 315 0026 0548     		ldr	r0, .L30+8
 316              	.LBE17:
 317              	.LBE16:
 193:quantum/action_util.c ****     }
 194:quantum/action_util.c **** }
 318              		.loc 2 194 1 is_stmt 0 view .LVU47
 319 0028 BDE81040 		pop	{r4, lr}
 320              		.cfi_remember_state
 321              		.cfi_restore 14
 322              		.cfi_restore 4
 323              		.cfi_def_cfa_offset 0
 324              	.LBB19:
 325              	.LBB18:
 192:quantum/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 326              		.loc 2 192 9 view .LVU48
 327 002c FFF7FEBF 		b	printf_
 328              	.LVL11:
 329              	.L23:
 330              		.cfi_restore_state
 192:quantum/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 331              		.loc 2 192 9 view .LVU49
 332              	.LBE18:
 333              	.LBE19:
 334              		.loc 2 194 1 view .LVU50
 335 0030 10BD     		pop	{r4, pc}
 336              	.L31:
 337 0032 00BF     		.align	2
 338              	.L30:
 339 0034 00000000 		.word	keymap_config
 340 0038 00000000 		.word	debug_config
 341 003c 00000000 		.word	.LC0
 342              		.cfi_endproc
 343              	.LFE348:
 345              		.section	.text.oneshot_toggle,"ax",%progbits
 346              		.align	1
 347              		.global	oneshot_toggle
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv4-sp-d16
 353              	oneshot_toggle:
 354              	.LFB349:
 195:quantum/action_util.c **** 
 196:quantum/action_util.c **** /** \brief toggle oneshot
 197:quantum/action_util.c ****  *
 198:quantum/action_util.c ****  * FIXME: needs doc
 199:quantum/action_util.c ****  */
 200:quantum/action_util.c **** void oneshot_toggle(void) { oneshot_set(!keymap_config.oneshot_disable); }
 355              		.loc 2 200 27 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360              		.loc 2 200 29 view .LVU52
 361              		.loc 2 200 55 is_stmt 0 view .LVU53
 362 0000 044B     		ldr	r3, .L33
 363 0002 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 364 0004 C0F38000 		ubfx	r0, r0, #2, #1
 365              		.loc 2 200 1 view .LVU54
 366 0008 80F00100 		eor	r0, r0, #1
 367              		.loc 2 200 29 view .LVU55
 368 000c 00F00100 		and	r0, r0, #1
 369 0010 FFF7FEBF 		b	oneshot_set
 370              	.LVL12:
 371              	.L34:
 372              		.align	2
 373              	.L33:
 374 0014 00000000 		.word	keymap_config
 375              		.cfi_endproc
 376              	.LFE349:
 378              		.section	.text.oneshot_enable,"ax",%progbits
 379              		.align	1
 380              		.global	oneshot_enable
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
 386              	oneshot_enable:
 387              	.LFB350:
 201:quantum/action_util.c **** 
 202:quantum/action_util.c **** /** \brief enable oneshot
 203:quantum/action_util.c ****  *
 204:quantum/action_util.c ****  * FIXME: needs doc
 205:quantum/action_util.c ****  */
 206:quantum/action_util.c **** void oneshot_enable(void) { oneshot_set(true); }
 388              		.loc 2 206 27 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              		.loc 2 206 29 view .LVU57
 394 0000 0120     		movs	r0, #1
 395 0002 FFF7FEBF 		b	oneshot_set
 396              	.LVL13:
 397              		.cfi_endproc
 398              	.LFE350:
 400              		.section	.text.oneshot_disable,"ax",%progbits
 401              		.align	1
 402              		.global	oneshot_disable
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu fpv4-sp-d16
 408              	oneshot_disable:
 409              	.LFB351:
 207:quantum/action_util.c **** 
 208:quantum/action_util.c **** /** \brief disable oneshot
 209:quantum/action_util.c ****  *
 210:quantum/action_util.c ****  * FIXME: needs doc
 211:quantum/action_util.c ****  */
 212:quantum/action_util.c **** void oneshot_disable(void) { oneshot_set(false); }
 410              		.loc 2 212 28 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              		.loc 2 212 30 view .LVU59
 416 0000 0020     		movs	r0, #0
 417 0002 FFF7FEBF 		b	oneshot_set
 418              	.LVL14:
 419              		.cfi_endproc
 420              	.LFE351:
 422              		.section	.text.is_oneshot_enabled,"ax",%progbits
 423              		.align	1
 424              		.global	is_oneshot_enabled
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu fpv4-sp-d16
 430              	is_oneshot_enabled:
 431              	.LFB352:
 213:quantum/action_util.c **** 
 214:quantum/action_util.c **** bool is_oneshot_enabled(void) { return keymap_config.oneshot_disable; }
 432              		.loc 2 214 31 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437              		.loc 2 214 33 view .LVU61
 438              		.loc 2 214 53 is_stmt 0 view .LVU62
 439 0000 024B     		ldr	r3, .L38
 440 0002 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 441              		.loc 2 214 71 view .LVU63
 442 0004 C0F38000 		ubfx	r0, r0, #2, #1
 443 0008 7047     		bx	lr
 444              	.L39:
 445 000a 00BF     		.align	2
 446              	.L38:
 447 000c 00000000 		.word	keymap_config
 448              		.cfi_endproc
 449              	.LFE352:
 451              		.section	.text.get_mods,"ax",%progbits
 452              		.align	1
 453              		.global	get_mods
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu fpv4-sp-d16
 459              	get_mods:
 460              	.LFB354:
 215:quantum/action_util.c **** 
 216:quantum/action_util.c **** #endif
 217:quantum/action_util.c **** 
 218:quantum/action_util.c **** /** \brief Send keyboard report
 219:quantum/action_util.c ****  *
 220:quantum/action_util.c ****  * FIXME: needs doc
 221:quantum/action_util.c ****  */
 222:quantum/action_util.c **** void send_keyboard_report(void) {
 223:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 224:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 225:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 226:quantum/action_util.c **** 
 227:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 228:quantum/action_util.c ****     if (oneshot_mods) {
 229:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 230:quantum/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 231:quantum/action_util.c ****             dprintf("Oneshot: timeout\n");
 232:quantum/action_util.c ****             clear_oneshot_mods();
 233:quantum/action_util.c ****         }
 234:quantum/action_util.c **** #    endif
 235:quantum/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 236:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 237:quantum/action_util.c ****             clear_oneshot_mods();
 238:quantum/action_util.c ****         }
 239:quantum/action_util.c ****     }
 240:quantum/action_util.c **** 
 241:quantum/action_util.c **** #endif
 242:quantum/action_util.c **** 
 243:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 244:quantum/action_util.c ****     // These need to be last to be able to properly control key overrides
 245:quantum/action_util.c ****     keyboard_report->mods &= ~suppressed_mods;
 246:quantum/action_util.c ****     keyboard_report->mods |= weak_override_mods;
 247:quantum/action_util.c **** #endif
 248:quantum/action_util.c **** 
 249:quantum/action_util.c ****     host_keyboard_send(keyboard_report);
 250:quantum/action_util.c **** }
 251:quantum/action_util.c **** 
 252:quantum/action_util.c **** /** \brief Get mods
 253:quantum/action_util.c ****  *
 254:quantum/action_util.c ****  * FIXME: needs doc
 255:quantum/action_util.c ****  */
 256:quantum/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 461              		.loc 2 256 24 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466              		.loc 2 256 26 view .LVU65
 467              		.loc 2 256 44 is_stmt 0 view .LVU66
 468 0000 014B     		ldr	r3, .L41
 469 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 470 0004 7047     		bx	lr
 471              	.L42:
 472 0006 00BF     		.align	2
 473              	.L41:
 474 0008 00000000 		.word	.LANCHOR3
 475              		.cfi_endproc
 476              	.LFE354:
 478              		.section	.text.add_mods,"ax",%progbits
 479              		.align	1
 480              		.global	add_mods
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu fpv4-sp-d16
 486              	add_mods:
 487              	.LVL15:
 488              	.LFB355:
 257:quantum/action_util.c **** /** \brief add mods
 258:quantum/action_util.c ****  *
 259:quantum/action_util.c ****  * FIXME: needs doc
 260:quantum/action_util.c ****  */
 261:quantum/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 489              		.loc 2 261 29 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              		.loc 2 261 31 view .LVU68
 495              		.loc 2 261 41 is_stmt 0 view .LVU69
 496 0000 024B     		ldr	r3, .L44
 497 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 498 0004 1043     		orrs	r0, r0, r2
 499              	.LVL16:
 500              		.loc 2 261 41 view .LVU70
 501 0006 1870     		strb	r0, [r3]
 502              		.loc 2 261 50 view .LVU71
 503 0008 7047     		bx	lr
 504              	.L45:
 505 000a 00BF     		.align	2
 506              	.L44:
 507 000c 00000000 		.word	.LANCHOR3
 508              		.cfi_endproc
 509              	.LFE355:
 511              		.section	.text.del_mods,"ax",%progbits
 512              		.align	1
 513              		.global	del_mods
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv4-sp-d16
 519              	del_mods:
 520              	.LVL17:
 521              	.LFB356:
 262:quantum/action_util.c **** /** \brief del mods
 263:quantum/action_util.c ****  *
 264:quantum/action_util.c ****  * FIXME: needs doc
 265:quantum/action_util.c ****  */
 266:quantum/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 522              		.loc 2 266 29 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527              		.loc 2 266 31 view .LVU73
 528              		.loc 2 266 41 is_stmt 0 view .LVU74
 529 0000 024A     		ldr	r2, .L47
 530 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 531 0004 23EA0000 		bic	r0, r3, r0
 532              	.LVL18:
 533              		.loc 2 266 41 view .LVU75
 534 0008 1070     		strb	r0, [r2]
 535              		.loc 2 266 51 view .LVU76
 536 000a 7047     		bx	lr
 537              	.L48:
 538              		.align	2
 539              	.L47:
 540 000c 00000000 		.word	.LANCHOR3
 541              		.cfi_endproc
 542              	.LFE356:
 544              		.section	.text.set_mods,"ax",%progbits
 545              		.align	1
 546              		.global	set_mods
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu fpv4-sp-d16
 552              	set_mods:
 553              	.LVL19:
 554              	.LFB357:
 267:quantum/action_util.c **** /** \brief set mods
 268:quantum/action_util.c ****  *
 269:quantum/action_util.c ****  * FIXME: needs doc
 270:quantum/action_util.c ****  */
 271:quantum/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 555              		.loc 2 271 29 is_stmt 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560              		.loc 2 271 31 view .LVU78
 561              		.loc 2 271 41 is_stmt 0 view .LVU79
 562 0000 014B     		ldr	r3, .L50
 563 0002 1870     		strb	r0, [r3]
 564              		.loc 2 271 49 view .LVU80
 565 0004 7047     		bx	lr
 566              	.L51:
 567 0006 00BF     		.align	2
 568              	.L50:
 569 0008 00000000 		.word	.LANCHOR3
 570              		.cfi_endproc
 571              	.LFE357:
 573              		.section	.text.clear_mods,"ax",%progbits
 574              		.align	1
 575              		.global	clear_mods
 576              		.syntax unified
 577              		.thumb
 578              		.thumb_func
 579              		.fpu fpv4-sp-d16
 581              	clear_mods:
 582              	.LFB358:
 272:quantum/action_util.c **** /** \brief clear mods
 273:quantum/action_util.c ****  *
 274:quantum/action_util.c ****  * FIXME: needs doc
 275:quantum/action_util.c ****  */
 276:quantum/action_util.c **** void clear_mods(void) { real_mods = 0; }
 583              		.loc 2 276 23 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 588              		.loc 2 276 25 view .LVU82
 589              		.loc 2 276 35 is_stmt 0 view .LVU83
 590 0000 014B     		ldr	r3, .L53
 591 0002 0022     		movs	r2, #0
 592 0004 1A70     		strb	r2, [r3]
 593              		.loc 2 276 40 view .LVU84
 594 0006 7047     		bx	lr
 595              	.L54:
 596              		.align	2
 597              	.L53:
 598 0008 00000000 		.word	.LANCHOR3
 599              		.cfi_endproc
 600              	.LFE358:
 602              		.section	.text.get_weak_mods,"ax",%progbits
 603              		.align	1
 604              		.global	get_weak_mods
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu fpv4-sp-d16
 610              	get_weak_mods:
 611              	.LFB359:
 277:quantum/action_util.c **** 
 278:quantum/action_util.c **** /** \brief get weak mods
 279:quantum/action_util.c ****  *
 280:quantum/action_util.c ****  * FIXME: needs doc
 281:quantum/action_util.c ****  */
 282:quantum/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 612              		.loc 2 282 29 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617              		.loc 2 282 31 view .LVU86
 618              		.loc 2 282 49 is_stmt 0 view .LVU87
 619 0000 014B     		ldr	r3, .L56
 620 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 621 0004 7047     		bx	lr
 622              	.L57:
 623 0006 00BF     		.align	2
 624              	.L56:
 625 0008 00000000 		.word	.LANCHOR4
 626              		.cfi_endproc
 627              	.LFE359:
 629              		.section	.text.add_weak_mods,"ax",%progbits
 630              		.align	1
 631              		.global	add_weak_mods
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv4-sp-d16
 637              	add_weak_mods:
 638              	.LVL20:
 639              	.LFB360:
 283:quantum/action_util.c **** /** \brief add weak mods
 284:quantum/action_util.c ****  *
 285:quantum/action_util.c ****  * FIXME: needs doc
 286:quantum/action_util.c ****  */
 287:quantum/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 640              		.loc 2 287 34 is_stmt 1 view -0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              		.loc 2 287 36 view .LVU89
 646              		.loc 2 287 46 is_stmt 0 view .LVU90
 647 0000 024B     		ldr	r3, .L59
 648 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 649 0004 1043     		orrs	r0, r0, r2
 650              	.LVL21:
 651              		.loc 2 287 46 view .LVU91
 652 0006 1870     		strb	r0, [r3]
 653              		.loc 2 287 55 view .LVU92
 654 0008 7047     		bx	lr
 655              	.L60:
 656 000a 00BF     		.align	2
 657              	.L59:
 658 000c 00000000 		.word	.LANCHOR4
 659              		.cfi_endproc
 660              	.LFE360:
 662              		.section	.text.del_weak_mods,"ax",%progbits
 663              		.align	1
 664              		.global	del_weak_mods
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv4-sp-d16
 670              	del_weak_mods:
 671              	.LVL22:
 672              	.LFB361:
 288:quantum/action_util.c **** /** \brief del weak mods
 289:quantum/action_util.c ****  *
 290:quantum/action_util.c ****  * FIXME: needs doc
 291:quantum/action_util.c ****  */
 292:quantum/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 673              		.loc 2 292 34 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678              		.loc 2 292 36 view .LVU94
 679              		.loc 2 292 46 is_stmt 0 view .LVU95
 680 0000 024A     		ldr	r2, .L62
 681 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 682 0004 23EA0000 		bic	r0, r3, r0
 683              	.LVL23:
 684              		.loc 2 292 46 view .LVU96
 685 0008 1070     		strb	r0, [r2]
 686              		.loc 2 292 56 view .LVU97
 687 000a 7047     		bx	lr
 688              	.L63:
 689              		.align	2
 690              	.L62:
 691 000c 00000000 		.word	.LANCHOR4
 692              		.cfi_endproc
 693              	.LFE361:
 695              		.section	.text.set_weak_mods,"ax",%progbits
 696              		.align	1
 697              		.global	set_weak_mods
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu fpv4-sp-d16
 703              	set_weak_mods:
 704              	.LVL24:
 705              	.LFB362:
 293:quantum/action_util.c **** /** \brief set weak mods
 294:quantum/action_util.c ****  *
 295:quantum/action_util.c ****  * FIXME: needs doc
 296:quantum/action_util.c ****  */
 297:quantum/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 706              		.loc 2 297 34 is_stmt 1 view -0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711              		.loc 2 297 36 view .LVU99
 712              		.loc 2 297 46 is_stmt 0 view .LVU100
 713 0000 014B     		ldr	r3, .L65
 714 0002 1870     		strb	r0, [r3]
 715              		.loc 2 297 54 view .LVU101
 716 0004 7047     		bx	lr
 717              	.L66:
 718 0006 00BF     		.align	2
 719              	.L65:
 720 0008 00000000 		.word	.LANCHOR4
 721              		.cfi_endproc
 722              	.LFE362:
 724              		.section	.text.clear_weak_mods,"ax",%progbits
 725              		.align	1
 726              		.global	clear_weak_mods
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
 732              	clear_weak_mods:
 733              	.LFB363:
 298:quantum/action_util.c **** /** \brief clear weak mods
 299:quantum/action_util.c ****  *
 300:quantum/action_util.c ****  * FIXME: needs doc
 301:quantum/action_util.c ****  */
 302:quantum/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 734              		.loc 2 302 28 is_stmt 1 view -0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739              		.loc 2 302 30 view .LVU103
 740              		.loc 2 302 40 is_stmt 0 view .LVU104
 741 0000 014B     		ldr	r3, .L68
 742 0002 0022     		movs	r2, #0
 743 0004 1A70     		strb	r2, [r3]
 744              		.loc 2 302 45 view .LVU105
 745 0006 7047     		bx	lr
 746              	.L69:
 747              		.align	2
 748              	.L68:
 749 0008 00000000 		.word	.LANCHOR4
 750              		.cfi_endproc
 751              	.LFE363:
 753              		.section	.text.get_macro_mods,"ax",%progbits
 754              		.align	1
 755              		.global	get_macro_mods
 756              		.syntax unified
 757              		.thumb
 758              		.thumb_func
 759              		.fpu fpv4-sp-d16
 761              	get_macro_mods:
 762              	.LFB364:
 303:quantum/action_util.c **** 
 304:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 305:quantum/action_util.c **** /** \brief set weak mods used by key overrides. DO not call this manually
 306:quantum/action_util.c ****  */
 307:quantum/action_util.c **** void set_weak_override_mods(uint8_t mods) { weak_override_mods = mods; }
 308:quantum/action_util.c **** /** \brief clear weak mods used by key overrides. DO not call this manually
 309:quantum/action_util.c ****  */
 310:quantum/action_util.c **** void clear_weak_override_mods(void) { weak_override_mods = 0; }
 311:quantum/action_util.c **** 
 312:quantum/action_util.c **** /** \brief set suppressed mods used by key overrides. DO not call this manually
 313:quantum/action_util.c ****  */
 314:quantum/action_util.c **** void set_suppressed_override_mods(uint8_t mods) { suppressed_mods = mods; }
 315:quantum/action_util.c **** /** \brief clear suppressed mods used by key overrides. DO not call this manually
 316:quantum/action_util.c ****  */
 317:quantum/action_util.c **** void clear_suppressed_override_mods(void) { suppressed_mods = 0; }
 318:quantum/action_util.c **** #endif
 319:quantum/action_util.c **** 
 320:quantum/action_util.c **** /* macro modifier */
 321:quantum/action_util.c **** /** \brief get macro mods
 322:quantum/action_util.c ****  *
 323:quantum/action_util.c ****  * FIXME: needs doc
 324:quantum/action_util.c ****  */
 325:quantum/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 763              		.loc 2 325 30 is_stmt 1 view -0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768              		.loc 2 325 32 view .LVU107
 769              		.loc 2 325 51 is_stmt 0 view .LVU108
 770 0000 014B     		ldr	r3, .L71
 771 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 772 0004 7047     		bx	lr
 773              	.L72:
 774 0006 00BF     		.align	2
 775              	.L71:
 776 0008 00000000 		.word	.LANCHOR5
 777              		.cfi_endproc
 778              	.LFE364:
 780              		.section	.text.add_macro_mods,"ax",%progbits
 781              		.align	1
 782              		.global	add_macro_mods
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu fpv4-sp-d16
 788              	add_macro_mods:
 789              	.LVL25:
 790              	.LFB365:
 326:quantum/action_util.c **** /** \brief add macro mods
 327:quantum/action_util.c ****  *
 328:quantum/action_util.c ****  * FIXME: needs doc
 329:quantum/action_util.c ****  */
 330:quantum/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 791              		.loc 2 330 35 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796              		.loc 2 330 37 view .LVU110
 797              		.loc 2 330 48 is_stmt 0 view .LVU111
 798 0000 024B     		ldr	r3, .L74
 799 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 800 0004 1043     		orrs	r0, r0, r2
 801              	.LVL26:
 802              		.loc 2 330 48 view .LVU112
 803 0006 1870     		strb	r0, [r3]
 804              		.loc 2 330 57 view .LVU113
 805 0008 7047     		bx	lr
 806              	.L75:
 807 000a 00BF     		.align	2
 808              	.L74:
 809 000c 00000000 		.word	.LANCHOR5
 810              		.cfi_endproc
 811              	.LFE365:
 813              		.section	.text.del_macro_mods,"ax",%progbits
 814              		.align	1
 815              		.global	del_macro_mods
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv4-sp-d16
 821              	del_macro_mods:
 822              	.LVL27:
 823              	.LFB366:
 331:quantum/action_util.c **** /** \brief del macro mods
 332:quantum/action_util.c ****  *
 333:quantum/action_util.c ****  * FIXME: needs doc
 334:quantum/action_util.c ****  */
 335:quantum/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 824              		.loc 2 335 35 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829              		.loc 2 335 37 view .LVU115
 830              		.loc 2 335 48 is_stmt 0 view .LVU116
 831 0000 024A     		ldr	r2, .L77
 832 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 833 0004 23EA0000 		bic	r0, r3, r0
 834              	.LVL28:
 835              		.loc 2 335 48 view .LVU117
 836 0008 1070     		strb	r0, [r2]
 837              		.loc 2 335 58 view .LVU118
 838 000a 7047     		bx	lr
 839              	.L78:
 840              		.align	2
 841              	.L77:
 842 000c 00000000 		.word	.LANCHOR5
 843              		.cfi_endproc
 844              	.LFE366:
 846              		.section	.text.set_macro_mods,"ax",%progbits
 847              		.align	1
 848              		.global	set_macro_mods
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu fpv4-sp-d16
 854              	set_macro_mods:
 855              	.LVL29:
 856              	.LFB367:
 336:quantum/action_util.c **** /** \brief set macro mods
 337:quantum/action_util.c ****  *
 338:quantum/action_util.c ****  * FIXME: needs doc
 339:quantum/action_util.c ****  */
 340:quantum/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 857              		.loc 2 340 35 is_stmt 1 view -0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862              		.loc 2 340 37 view .LVU120
 863              		.loc 2 340 48 is_stmt 0 view .LVU121
 864 0000 014B     		ldr	r3, .L80
 865 0002 1870     		strb	r0, [r3]
 866              		.loc 2 340 56 view .LVU122
 867 0004 7047     		bx	lr
 868              	.L81:
 869 0006 00BF     		.align	2
 870              	.L80:
 871 0008 00000000 		.word	.LANCHOR5
 872              		.cfi_endproc
 873              	.LFE367:
 875              		.section	.text.clear_macro_mods,"ax",%progbits
 876              		.align	1
 877              		.global	clear_macro_mods
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 881              		.fpu fpv4-sp-d16
 883              	clear_macro_mods:
 884              	.LFB368:
 341:quantum/action_util.c **** /** \brief clear macro mods
 342:quantum/action_util.c ****  *
 343:quantum/action_util.c ****  * FIXME: needs doc
 344:quantum/action_util.c ****  */
 345:quantum/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 885              		.loc 2 345 29 is_stmt 1 view -0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890              		.loc 2 345 31 view .LVU124
 891              		.loc 2 345 42 is_stmt 0 view .LVU125
 892 0000 014B     		ldr	r3, .L83
 893 0002 0022     		movs	r2, #0
 894 0004 1A70     		strb	r2, [r3]
 895              		.loc 2 345 47 view .LVU126
 896 0006 7047     		bx	lr
 897              	.L84:
 898              		.align	2
 899              	.L83:
 900 0008 00000000 		.word	.LANCHOR5
 901              		.cfi_endproc
 902              	.LFE368:
 904              		.section	.text.get_oneshot_mods,"ax",%progbits
 905              		.align	1
 906              		.global	get_oneshot_mods
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu fpv4-sp-d16
 912              	get_oneshot_mods:
 913              	.LFB369:
 346:quantum/action_util.c **** 
 347:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 348:quantum/action_util.c **** /** \brief get oneshot mods
 349:quantum/action_util.c ****  *
 350:quantum/action_util.c ****  * FIXME: needs doc
 351:quantum/action_util.c ****  */
 352:quantum/action_util.c **** uint8_t get_oneshot_mods(void) { return oneshot_mods; }
 914              		.loc 2 352 32 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919              		.loc 2 352 34 view .LVU128
 920              		.loc 2 352 55 is_stmt 0 view .LVU129
 921 0000 014B     		ldr	r3, .L86
 922 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 923 0004 7047     		bx	lr
 924              	.L87:
 925 0006 00BF     		.align	2
 926              	.L86:
 927 0008 00000000 		.word	.LANCHOR6
 928              		.cfi_endproc
 929              	.LFE369:
 931              		.section	.text.oneshot_locked_mods_changed_user,"ax",%progbits
 932              		.align	1
 933              		.weak	oneshot_locked_mods_changed_user
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	oneshot_locked_mods_changed_user:
 940              	.LVL30:
 941              	.LFB374:
 353:quantum/action_util.c **** 
 354:quantum/action_util.c **** void add_oneshot_mods(uint8_t mods) {
 355:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 356:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 357:quantum/action_util.c ****         oneshot_time = timer_read();
 358:quantum/action_util.c **** #    endif
 359:quantum/action_util.c ****         oneshot_mods |= mods;
 360:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 361:quantum/action_util.c ****     }
 362:quantum/action_util.c **** }
 363:quantum/action_util.c **** 
 364:quantum/action_util.c **** void del_oneshot_mods(uint8_t mods) {
 365:quantum/action_util.c ****     if (oneshot_mods & mods) {
 366:quantum/action_util.c ****         oneshot_mods &= ~mods;
 367:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 368:quantum/action_util.c ****         oneshot_time = oneshot_mods ? timer_read() : 0;
 369:quantum/action_util.c **** #    endif
 370:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 371:quantum/action_util.c ****     }
 372:quantum/action_util.c **** }
 373:quantum/action_util.c **** 
 374:quantum/action_util.c **** /** \brief set oneshot mods
 375:quantum/action_util.c ****  *
 376:quantum/action_util.c ****  * FIXME: needs doc
 377:quantum/action_util.c ****  */
 378:quantum/action_util.c **** void set_oneshot_mods(uint8_t mods) {
 379:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 380:quantum/action_util.c ****         if (oneshot_mods != mods) {
 381:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 382:quantum/action_util.c ****             oneshot_time = timer_read();
 383:quantum/action_util.c **** #    endif
 384:quantum/action_util.c ****             oneshot_mods = mods;
 385:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 386:quantum/action_util.c ****         }
 387:quantum/action_util.c ****     }
 388:quantum/action_util.c **** }
 389:quantum/action_util.c **** 
 390:quantum/action_util.c **** /** \brief clear oneshot mods
 391:quantum/action_util.c ****  *
 392:quantum/action_util.c ****  * FIXME: needs doc
 393:quantum/action_util.c ****  */
 394:quantum/action_util.c **** void clear_oneshot_mods(void) {
 395:quantum/action_util.c ****     if (oneshot_mods) {
 396:quantum/action_util.c ****         oneshot_mods = 0;
 397:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 398:quantum/action_util.c ****         oneshot_time = 0;
 399:quantum/action_util.c **** #    endif
 400:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 401:quantum/action_util.c ****     }
 402:quantum/action_util.c **** }
 403:quantum/action_util.c **** #endif
 404:quantum/action_util.c **** 
 405:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 406:quantum/action_util.c ****  *
 407:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 408:quantum/action_util.c ****  */
 409:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_user(uint8_t mods) {}
 942              		.loc 2 409 75 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947              		.loc 2 409 76 view .LVU131
 948 0000 7047     		bx	lr
 949              		.cfi_endproc
 950              	.LFE374:
 952              		.section	.text.oneshot_locked_mods_changed_kb,"ax",%progbits
 953              		.align	1
 954              		.weak	oneshot_locked_mods_changed_kb
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	oneshot_locked_mods_changed_kb:
 961              	.LVL31:
 962              	.LFB375:
 410:quantum/action_util.c **** 
 411:quantum/action_util.c **** /** \brief Called when the locked one shot modifiers have been changed.
 412:quantum/action_util.c ****  *
 413:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 414:quantum/action_util.c ****  */
 415:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_kb(uint8_t mods) { oneshot_locked_mods_chang
 963              		.loc 2 415 73 view -0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		.loc 2 415 75 view .LVU133
 968              		.loc 2 415 73 is_stmt 0 view .LVU134
 969 0000 08B5     		push	{r3, lr}
 970              		.cfi_def_cfa_offset 8
 971              		.cfi_offset 3, -8
 972              		.cfi_offset 14, -4
 973              		.loc 2 415 75 view .LVU135
 974 0002 FFF7FEFF 		bl	oneshot_locked_mods_changed_user
 975              	.LVL32:
 976              		.loc 2 415 115 view .LVU136
 977 0006 08BD     		pop	{r3, pc}
 978              		.cfi_endproc
 979              	.LFE375:
 981              		.section	.text.set_oneshot_locked_mods,"ax",%progbits
 982              		.align	1
 983              		.global	set_oneshot_locked_mods
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	set_oneshot_locked_mods:
 990              	.LVL33:
 991              	.LFB339:
  47:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
 992              		.loc 2 47 54 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 996              		.loc 2 48 5 view .LVU138
  47:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
 997              		.loc 2 47 54 is_stmt 0 view .LVU139
 998 0000 08B5     		push	{r3, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 3, -8
 1001              		.cfi_offset 14, -4
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 1002              		.loc 2 48 14 view .LVU140
 1003 0002 044A     		ldr	r2, .L92
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 1004              		.loc 2 48 8 view .LVU141
 1005 0004 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1006 0006 8142     		cmp	r1, r0
 1007 0008 02D0     		beq	.L90
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 1008              		.loc 2 49 9 is_stmt 1 view .LVU142
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 1009              		.loc 2 49 29 is_stmt 0 view .LVU143
 1010 000a 1070     		strb	r0, [r2]
  50:quantum/action_util.c ****     }
 1011              		.loc 2 50 9 is_stmt 1 view .LVU144
 1012 000c FFF7FEFF 		bl	oneshot_locked_mods_changed_kb
 1013              	.LVL34:
 1014              	.L90:
  52:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
 1015              		.loc 2 52 1 is_stmt 0 view .LVU145
 1016 0010 08BD     		pop	{r3, pc}
 1017              	.L93:
 1018 0012 00BF     		.align	2
 1019              	.L92:
 1020 0014 00000000 		.word	.LANCHOR1
 1021              		.cfi_endproc
 1022              	.LFE339:
 1024              		.section	.text.clear_oneshot_locked_mods,"ax",%progbits
 1025              		.align	1
 1026              		.global	clear_oneshot_locked_mods
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu fpv4-sp-d16
 1032              	clear_oneshot_locked_mods:
 1033              	.LFB340:
  53:quantum/action_util.c ****     if (oneshot_locked_mods) {
 1034              		.loc 2 53 38 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 1038              		.loc 2 54 5 view .LVU147
  53:quantum/action_util.c ****     if (oneshot_locked_mods) {
 1039              		.loc 2 53 38 is_stmt 0 view .LVU148
 1040 0000 08B5     		push	{r3, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 1044              		.loc 2 54 9 view .LVU149
 1045 0002 044B     		ldr	r3, .L99
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 1046              		.loc 2 54 8 view .LVU150
 1047 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1048 0006 1AB1     		cbz	r2, .L94
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 1049              		.loc 2 55 9 is_stmt 1 view .LVU151
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 1050              		.loc 2 55 29 is_stmt 0 view .LVU152
 1051 0008 0020     		movs	r0, #0
 1052 000a 1870     		strb	r0, [r3]
  56:quantum/action_util.c ****     }
 1053              		.loc 2 56 9 is_stmt 1 view .LVU153
 1054 000c FFF7FEFF 		bl	oneshot_locked_mods_changed_kb
 1055              	.LVL35:
 1056              	.L94:
  58:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1057              		.loc 2 58 1 is_stmt 0 view .LVU154
 1058 0010 08BD     		pop	{r3, pc}
 1059              	.L100:
 1060 0012 00BF     		.align	2
 1061              	.L99:
 1062 0014 00000000 		.word	.LANCHOR1
 1063              		.cfi_endproc
 1064              	.LFE340:
 1066              		.section	.text.oneshot_mods_changed_user,"ax",%progbits
 1067              		.align	1
 1068              		.weak	oneshot_mods_changed_user
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1072              		.fpu fpv4-sp-d16
 1074              	oneshot_mods_changed_user:
 1075              	.LFB384:
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              		@ link register save eliminated.
 1080 0000 7047     		bx	lr
 1081              		.cfi_endproc
 1082              	.LFE384:
 1084              		.section	.text.oneshot_mods_changed_kb,"ax",%progbits
 1085              		.align	1
 1086              		.weak	oneshot_mods_changed_kb
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1090              		.fpu fpv4-sp-d16
 1092              	oneshot_mods_changed_kb:
 1093              	.LVL36:
 1094              	.LFB377:
 416:quantum/action_util.c **** 
 417:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 418:quantum/action_util.c ****  *
 419:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 420:quantum/action_util.c ****  */
 421:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_user(uint8_t mods) {}
 422:quantum/action_util.c **** 
 423:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 424:quantum/action_util.c ****  *
 425:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 426:quantum/action_util.c ****  */
 427:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_kb(uint8_t mods) { oneshot_mods_changed_user(mods);
 1095              		.loc 2 427 66 is_stmt 1 view -0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              		.loc 2 427 68 view .LVU156
 1100              		.loc 2 427 66 is_stmt 0 view .LVU157
 1101 0000 08B5     		push	{r3, lr}
 1102              		.cfi_def_cfa_offset 8
 1103              		.cfi_offset 3, -8
 1104              		.cfi_offset 14, -4
 1105              		.loc 2 427 68 view .LVU158
 1106 0002 FFF7FEFF 		bl	oneshot_mods_changed_user
 1107              	.LVL37:
 1108              		.loc 2 427 101 view .LVU159
 1109 0006 08BD     		pop	{r3, pc}
 1110              		.cfi_endproc
 1111              	.LFE377:
 1113              		.section	.text.add_oneshot_mods,"ax",%progbits
 1114              		.align	1
 1115              		.global	add_oneshot_mods
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1119              		.fpu fpv4-sp-d16
 1121              	add_oneshot_mods:
 1122              	.LVL38:
 1123              	.LFB370:
 354:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 1124              		.loc 2 354 37 is_stmt 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1128              		.loc 2 355 5 view .LVU161
 354:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 1129              		.loc 2 354 37 is_stmt 0 view .LVU162
 1130 0000 10B5     		push	{r4, lr}
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 4, -8
 1133              		.cfi_offset 14, -4
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1134              		.loc 2 355 31 view .LVU163
 1135 0002 0549     		ldr	r1, .L105
 1136 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1137              		.loc 2 355 8 view .LVU164
 1138 0006 30EA0304 		bics	r4, r0, r3
 1139 000a 03D0     		beq	.L103
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 1140              		.loc 2 359 9 is_stmt 1 view .LVU165
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 1141              		.loc 2 359 22 is_stmt 0 view .LVU166
 1142 000c 0343     		orrs	r3, r3, r0
 1143 000e 0B70     		strb	r3, [r1]
 360:quantum/action_util.c ****     }
 1144              		.loc 2 360 9 is_stmt 1 view .LVU167
 1145 0010 FFF7FEFF 		bl	oneshot_mods_changed_kb
 1146              	.LVL39:
 1147              	.L103:
 362:quantum/action_util.c **** 
 1148              		.loc 2 362 1 is_stmt 0 view .LVU168
 1149 0014 10BD     		pop	{r4, pc}
 1150              	.L106:
 1151 0016 00BF     		.align	2
 1152              	.L105:
 1153 0018 00000000 		.word	.LANCHOR6
 1154              		.cfi_endproc
 1155              	.LFE370:
 1157              		.section	.text.del_oneshot_mods,"ax",%progbits
 1158              		.align	1
 1159              		.global	del_oneshot_mods
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu fpv4-sp-d16
 1165              	del_oneshot_mods:
 1166              	.LVL40:
 1167              	.LFB371:
 364:quantum/action_util.c ****     if (oneshot_mods & mods) {
 1168              		.loc 2 364 37 is_stmt 1 view -0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1172              		.loc 2 365 5 view .LVU170
 364:quantum/action_util.c ****     if (oneshot_mods & mods) {
 1173              		.loc 2 364 37 is_stmt 0 view .LVU171
 1174 0000 08B5     		push	{r3, lr}
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 3, -8
 1177              		.cfi_offset 14, -4
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1178              		.loc 2 365 9 view .LVU172
 1179 0002 054A     		ldr	r2, .L112
 1180 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1181              		.loc 2 365 8 view .LVU173
 1182 0006 0342     		tst	r3, r0
 1183 0008 04D0     		beq	.L107
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1184              		.loc 2 366 9 is_stmt 1 view .LVU174
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1185              		.loc 2 366 22 is_stmt 0 view .LVU175
 1186 000a 23EA0000 		bic	r0, r3, r0
 1187              	.LVL41:
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1188              		.loc 2 366 22 view .LVU176
 1189 000e 1070     		strb	r0, [r2]
 370:quantum/action_util.c ****     }
 1190              		.loc 2 370 9 is_stmt 1 view .LVU177
 1191 0010 FFF7FEFF 		bl	oneshot_mods_changed_kb
 1192              	.LVL42:
 1193              	.L107:
 372:quantum/action_util.c **** 
 1194              		.loc 2 372 1 is_stmt 0 view .LVU178
 1195 0014 08BD     		pop	{r3, pc}
 1196              	.L113:
 1197 0016 00BF     		.align	2
 1198              	.L112:
 1199 0018 00000000 		.word	.LANCHOR6
 1200              		.cfi_endproc
 1201              	.LFE371:
 1203              		.section	.text.set_oneshot_mods,"ax",%progbits
 1204              		.align	1
 1205              		.global	set_oneshot_mods
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1209              		.fpu fpv4-sp-d16
 1211              	set_oneshot_mods:
 1212              	.LVL43:
 1213              	.LFB372:
 378:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1214              		.loc 2 378 37 is_stmt 1 view -0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1218              		.loc 2 379 5 view .LVU180
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1219              		.loc 2 379 23 is_stmt 0 view .LVU181
 1220 0000 064A     		ldr	r2, .L116
 1221 0002 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1222              		.loc 2 379 8 view .LVU182
 1223 0004 5207     		lsls	r2, r2, #29
 378:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1224              		.loc 2 378 37 view .LVU183
 1225 0006 08B5     		push	{r3, lr}
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 3, -8
 1228              		.cfi_offset 14, -4
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1229              		.loc 2 379 8 view .LVU184
 1230 0008 06D4     		bmi	.L114
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1231              		.loc 2 380 9 is_stmt 1 view .LVU185
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1232              		.loc 2 380 26 is_stmt 0 view .LVU186
 1233 000a 054A     		ldr	r2, .L116+4
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1234              		.loc 2 380 12 view .LVU187
 1235 000c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1236 000e 8142     		cmp	r1, r0
 1237 0010 02D0     		beq	.L114
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1238              		.loc 2 384 13 is_stmt 1 view .LVU188
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1239              		.loc 2 384 26 is_stmt 0 view .LVU189
 1240 0012 1070     		strb	r0, [r2]
 385:quantum/action_util.c ****         }
 1241              		.loc 2 385 13 is_stmt 1 view .LVU190
 1242 0014 FFF7FEFF 		bl	oneshot_mods_changed_kb
 1243              	.LVL44:
 1244              	.L114:
 388:quantum/action_util.c **** 
 1245              		.loc 2 388 1 is_stmt 0 view .LVU191
 1246 0018 08BD     		pop	{r3, pc}
 1247              	.L117:
 1248 001a 00BF     		.align	2
 1249              	.L116:
 1250 001c 00000000 		.word	keymap_config
 1251 0020 00000000 		.word	.LANCHOR6
 1252              		.cfi_endproc
 1253              	.LFE372:
 1255              		.section	.text.clear_oneshot_mods,"ax",%progbits
 1256              		.align	1
 1257              		.global	clear_oneshot_mods
 1258              		.syntax unified
 1259              		.thumb
 1260              		.thumb_func
 1261              		.fpu fpv4-sp-d16
 1263              	clear_oneshot_mods:
 1264              	.LFB373:
 394:quantum/action_util.c ****     if (oneshot_mods) {
 1265              		.loc 2 394 31 is_stmt 1 view -0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1269              		.loc 2 395 5 view .LVU193
 394:quantum/action_util.c ****     if (oneshot_mods) {
 1270              		.loc 2 394 31 is_stmt 0 view .LVU194
 1271 0000 08B5     		push	{r3, lr}
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 3, -8
 1274              		.cfi_offset 14, -4
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1275              		.loc 2 395 9 view .LVU195
 1276 0002 044B     		ldr	r3, .L123
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1277              		.loc 2 395 8 view .LVU196
 1278 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1279 0006 1AB1     		cbz	r2, .L118
 1280              	.LBB22:
 1281              	.LBI22:
 394:quantum/action_util.c ****     if (oneshot_mods) {
 1282              		.loc 2 394 6 is_stmt 1 view .LVU197
 1283              	.LBB23:
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1284              		.loc 2 396 9 view .LVU198
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1285              		.loc 2 396 22 is_stmt 0 view .LVU199
 1286 0008 0020     		movs	r0, #0
 1287 000a 1870     		strb	r0, [r3]
 400:quantum/action_util.c ****     }
 1288              		.loc 2 400 9 is_stmt 1 view .LVU200
 1289 000c FFF7FEFF 		bl	oneshot_mods_changed_kb
 1290              	.LVL45:
 1291              	.L118:
 1292              	.LBE23:
 1293              	.LBE22:
 402:quantum/action_util.c **** #endif
 1294              		.loc 2 402 1 is_stmt 0 view .LVU201
 1295 0010 08BD     		pop	{r3, pc}
 1296              	.L124:
 1297 0012 00BF     		.align	2
 1298              	.L123:
 1299 0014 00000000 		.word	.LANCHOR6
 1300              		.cfi_endproc
 1301              	.LFE373:
 1303              		.section	.text.send_keyboard_report,"ax",%progbits
 1304              		.align	1
 1305              		.global	send_keyboard_report
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
 1309              		.fpu fpv4-sp-d16
 1311              	send_keyboard_report:
 1312              	.LFB353:
 222:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 1313              		.loc 2 222 33 is_stmt 1 view -0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 0
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1317              		.loc 2 223 5 view .LVU203
 222:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 1318              		.loc 2 222 33 is_stmt 0 view .LVU204
 1319 0000 10B5     		push	{r4, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 4, -8
 1322              		.cfi_offset 14, -4
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1323              		.loc 2 224 27 view .LVU205
 1324 0002 0D4B     		ldr	r3, .L132
 1325 0004 0D4A     		ldr	r2, .L132+4
 1326 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1327 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1328              		.loc 2 223 20 view .LVU206
 1329 000a 0D4C     		ldr	r4, .L132+8
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1330              		.loc 2 224 27 view .LVU207
 1331 000c 1343     		orrs	r3, r3, r2
 225:quantum/action_util.c **** 
 1332              		.loc 2 225 27 view .LVU208
 1333 000e 0D4A     		ldr	r2, .L132+12
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1334              		.loc 2 223 20 view .LVU209
 1335 0010 2068     		ldr	r0, [r4]
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1336              		.loc 2 224 5 is_stmt 1 view .LVU210
 225:quantum/action_util.c **** 
 1337              		.loc 2 225 5 view .LVU211
 225:quantum/action_util.c **** 
 1338              		.loc 2 225 27 is_stmt 0 view .LVU212
 1339 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1340 0014 1343     		orrs	r3, r3, r2
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1341              		.loc 2 228 9 view .LVU213
 1342 0016 0C4A     		ldr	r2, .L132+16
 225:quantum/action_util.c **** 
 1343              		.loc 2 225 27 view .LVU214
 1344 0018 0370     		strb	r3, [r0]
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1345              		.loc 2 228 5 is_stmt 1 view .LVU215
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1346              		.loc 2 228 9 is_stmt 0 view .LVU216
 1347 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1348              		.loc 2 228 8 view .LVU217
 1349 001c 32B1     		cbz	r2, .L127
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1350              		.loc 2 235 9 is_stmt 1 view .LVU218
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1351              		.loc 2 235 31 is_stmt 0 view .LVU219
 1352 001e 1343     		orrs	r3, r3, r2
 1353 0020 0370     		strb	r3, [r0]
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1354              		.loc 2 236 9 is_stmt 1 view .LVU220
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1355              		.loc 2 236 13 is_stmt 0 view .LVU221
 1356 0022 FFF7FEFF 		bl	has_anykey
 1357              	.LVL46:
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1358              		.loc 2 236 12 view .LVU222
 1359 0026 08B1     		cbz	r0, .L127
 237:quantum/action_util.c ****         }
 1360              		.loc 2 237 13 is_stmt 1 view .LVU223
 1361 0028 FFF7FEFF 		bl	clear_oneshot_mods
 1362              	.LVL47:
 1363              	.L127:
 249:quantum/action_util.c **** }
 1364              		.loc 2 249 5 view .LVU224
 1365 002c 2068     		ldr	r0, [r4]
 250:quantum/action_util.c **** 
 1366              		.loc 2 250 1 is_stmt 0 view .LVU225
 1367 002e BDE81040 		pop	{r4, lr}
 1368              		.cfi_restore 14
 1369              		.cfi_restore 4
 1370              		.cfi_def_cfa_offset 0
 249:quantum/action_util.c **** }
 1371              		.loc 2 249 5 view .LVU226
 1372 0032 FFF7FEBF 		b	host_keyboard_send
 1373              	.LVL48:
 1374              	.L133:
 1375 0036 00BF     		.align	2
 1376              	.L132:
 1377 0038 00000000 		.word	.LANCHOR3
 1378 003c 00000000 		.word	.LANCHOR4
 1379 0040 00000000 		.word	.LANCHOR0
 1380 0044 00000000 		.word	.LANCHOR5
 1381 0048 00000000 		.word	.LANCHOR6
 1382              		.cfi_endproc
 1383              	.LFE353:
 1385              		.section	.text.oneshot_layer_changed_user,"ax",%progbits
 1386              		.align	1
 1387              		.weak	oneshot_layer_changed_user
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1391              		.fpu fpv4-sp-d16
 1393              	oneshot_layer_changed_user:
 1394              	.LFB386:
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
 1399 0000 7047     		bx	lr
 1400              		.cfi_endproc
 1401              	.LFE386:
 1403              		.section	.text.oneshot_layer_changed_kb,"ax",%progbits
 1404              		.align	1
 1405              		.weak	oneshot_layer_changed_kb
 1406              		.syntax unified
 1407              		.thumb
 1408              		.thumb_func
 1409              		.fpu fpv4-sp-d16
 1411              	oneshot_layer_changed_kb:
 1412              	.LVL49:
 1413              	.LFB379:
 428:quantum/action_util.c **** 
 429:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 430:quantum/action_util.c ****  *
 431:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 432:quantum/action_util.c ****  */
 433:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_user(uint8_t layer) {}
 434:quantum/action_util.c **** 
 435:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 436:quantum/action_util.c ****  *
 437:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 438:quantum/action_util.c ****  */
 439:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_kb(uint8_t layer) { oneshot_layer_changed_user(lay
 1414              		.loc 2 439 68 is_stmt 1 view -0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 0
 1417              		@ frame_needed = 0, uses_anonymous_args = 0
 1418              		.loc 2 439 70 view .LVU228
 1419              		.loc 2 439 68 is_stmt 0 view .LVU229
 1420 0000 08B5     		push	{r3, lr}
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 3, -8
 1423              		.cfi_offset 14, -4
 1424              		.loc 2 439 70 view .LVU230
 1425 0002 FFF7FEFF 		bl	oneshot_layer_changed_user
 1426              	.LVL50:
 1427              		.loc 2 439 105 view .LVU231
 1428 0006 08BD     		pop	{r3, pc}
 1429              		.cfi_endproc
 1430              	.LFE379:
 1432              		.section	.text.set_oneshot_layer,"ax",%progbits
 1433              		.align	1
 1434              		.global	set_oneshot_layer
 1435              		.syntax unified
 1436              		.thumb
 1437              		.thumb_func
 1438              		.fpu fpv4-sp-d16
 1440              	set_oneshot_layer:
 1441              	.LVL51:
 1442              	.LFB344:
 143:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1443              		.loc 2 143 54 is_stmt 1 view -0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1447              		.loc 2 144 5 view .LVU233
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1448              		.loc 2 144 23 is_stmt 0 view .LVU234
 1449 0000 0A4A     		ldr	r2, .L140
 1450 0002 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1451              		.loc 2 144 8 view .LVU235
 1452 0004 5207     		lsls	r2, r2, #29
 143:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1453              		.loc 2 143 54 view .LVU236
 1454 0006 10B5     		push	{r4, lr}
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 4, -8
 1457              		.cfi_offset 14, -4
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1458              		.loc 2 144 8 view .LVU237
 1459 0008 0CD4     		bmi	.L137
 145:quantum/action_util.c ****         layer_on(layer);
 1460              		.loc 2 145 9 is_stmt 1 view .LVU238
 145:quantum/action_util.c ****         layer_on(layer);
 1461              		.loc 2 145 28 is_stmt 0 view .LVU239
 1462 000a 094C     		ldr	r4, .L140+4
 145:quantum/action_util.c ****         layer_on(layer);
 1463              		.loc 2 145 41 view .LVU240
 1464 000c 41EAC001 		orr	r1, r1, r0, lsl #3
 1465              	.LVL52:
 145:quantum/action_util.c ****         layer_on(layer);
 1466              		.loc 2 145 28 view .LVU241
 1467 0010 2170     		strb	r1, [r4]
 146:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1468              		.loc 2 146 9 is_stmt 1 view .LVU242
 1469 0012 FFF7FEFF 		bl	layer_on
 1470              	.LVL53:
 150:quantum/action_util.c ****     } else {
 1471              		.loc 2 150 9 view .LVU243
 1472              	.LBB24:
 1473              	.LBI24:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1474              		.loc 2 77 16 view .LVU244
 1475              	.LBB25:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1476              		.loc 2 77 42 view .LVU245
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1477              		.loc 2 77 68 is_stmt 0 view .LVU246
 1478 0016 94F90000 		ldrsb	r0, [r4]
 1479              	.LBE25:
 1480              	.LBE24:
 150:quantum/action_util.c ****     } else {
 1481              		.loc 2 150 9 view .LVU247
 1482 001a C0F3C700 		ubfx	r0, r0, #3, #8
 1483 001e FFF7FEFF 		bl	oneshot_layer_changed_kb
 1484              	.LVL54:
 154:quantum/action_util.c **** /** \brief Reset oneshot layer
 1485              		.loc 2 154 1 view .LVU248
 1486 0022 10BD     		pop	{r4, pc}
 1487              	.LVL55:
 1488              	.L137:
 152:quantum/action_util.c ****     }
 1489              		.loc 2 152 9 is_stmt 1 view .LVU249
 154:quantum/action_util.c **** /** \brief Reset oneshot layer
 1490              		.loc 2 154 1 is_stmt 0 view .LVU250
 1491 0024 BDE81040 		pop	{r4, lr}
 1492              		.cfi_restore 14
 1493              		.cfi_restore 4
 1494              		.cfi_def_cfa_offset 0
 152:quantum/action_util.c ****     }
 1495              		.loc 2 152 9 view .LVU251
 1496 0028 FFF7FEBF 		b	layer_on
 1497              	.LVL56:
 1498              	.L141:
 152:quantum/action_util.c ****     }
 1499              		.loc 2 152 9 view .LVU252
 1500              		.align	2
 1501              	.L140:
 1502 002c 00000000 		.word	keymap_config
 1503 0030 00000000 		.word	.LANCHOR2
 1504              		.cfi_endproc
 1505              	.LFE344:
 1507              		.section	.text.reset_oneshot_layer,"ax",%progbits
 1508              		.align	1
 1509              		.global	reset_oneshot_layer
 1510              		.syntax unified
 1511              		.thumb
 1512              		.thumb_func
 1513              		.fpu fpv4-sp-d16
 1515              	reset_oneshot_layer:
 1516              	.LFB345:
 159:quantum/action_util.c ****     oneshot_layer_data = 0;
 1517              		.loc 2 159 32 is_stmt 1 view -0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1521              		.loc 2 160 5 view .LVU254
 159:quantum/action_util.c ****     oneshot_layer_data = 0;
 1522              		.loc 2 159 32 is_stmt 0 view .LVU255
 1523 0000 08B5     		push	{r3, lr}
 1524              		.cfi_def_cfa_offset 8
 1525              		.cfi_offset 3, -8
 1526              		.cfi_offset 14, -4
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1527              		.loc 2 160 24 view .LVU256
 1528 0002 034B     		ldr	r3, .L143
 1529 0004 0020     		movs	r0, #0
 1530 0006 1870     		strb	r0, [r3]
 164:quantum/action_util.c **** }
 1531              		.loc 2 164 5 is_stmt 1 view .LVU257
 1532 0008 FFF7FEFF 		bl	oneshot_layer_changed_kb
 1533              	.LVL57:
 165:quantum/action_util.c **** /** \brief Clear oneshot layer
 1534              		.loc 2 165 1 is_stmt 0 view .LVU258
 1535 000c 08BD     		pop	{r3, pc}
 1536              	.L144:
 1537 000e 00BF     		.align	2
 1538              	.L143:
 1539 0010 00000000 		.word	.LANCHOR2
 1540              		.cfi_endproc
 1541              	.LFE345:
 1543              		.section	.text.clear_oneshot_layer_state,"ax",%progbits
 1544              		.align	1
 1545              		.global	clear_oneshot_layer_state
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1549              		.fpu fpv4-sp-d16
 1551              	clear_oneshot_layer_state:
 1552              	.LVL58:
 1553              	.LFB346:
 170:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1554              		.loc 2 170 62 is_stmt 1 view -0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1558              		.loc 2 171 5 view .LVU260
 170:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1559              		.loc 2 170 62 is_stmt 0 view .LVU261
 1560 0000 08B5     		push	{r3, lr}
 1561              		.cfi_def_cfa_offset 8
 1562              		.cfi_offset 3, -8
 1563              		.cfi_offset 14, -4
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1564              		.loc 2 171 13 view .LVU262
 1565 0002 0C4A     		ldr	r2, .L149
 1566 0004 92F90030 		ldrsb	r3, [r2]
 1567              	.LVL59:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1568              		.loc 2 172 5 is_stmt 1 view .LVU263
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1569              		.loc 2 172 24 is_stmt 0 view .LVU264
 1570 0008 23EA0000 		bic	r0, r3, r0
 1571              	.LVL60:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1572              		.loc 2 172 24 view .LVU265
 1573 000c 40B2     		sxtb	r0, r0
 1574 000e 1070     		strb	r0, [r2]
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1575              		.loc 2 173 5 is_stmt 1 view .LVU266
 1576              	.LBB26:
 1577              	.LBI26:
  78:quantum/action_util.c **** 
 1578              		.loc 2 78 16 view .LVU267
 1579              	.LBB27:
  78:quantum/action_util.c **** 
 1580              		.loc 2 78 48 view .LVU268
 1581              	.LBE27:
 1582              	.LBE26:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1583              		.loc 2 173 8 is_stmt 0 view .LVU269
 1584 0010 4207     		lsls	r2, r0, #29
 1585 0012 02D1     		bne	.L146
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1586              		.loc 2 173 52 discriminator 1 view .LVU270
 1587 0014 DBB2     		uxtb	r3, r3
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1588              		.loc 2 173 37 discriminator 1 view .LVU271
 1589 0016 8342     		cmp	r3, r0
 1590 0018 03D1     		bne	.L147
 1591              	.LVL61:
 1592              	.L146:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1593              		.loc 2 173 75 discriminator 3 view .LVU272
 1594 001a 074B     		ldr	r3, .L149+4
 1595 001c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1596 001e 5B07     		lsls	r3, r3, #29
 1597 0020 07D5     		bpl	.L145
 1598              	.L147:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1599              		.loc 2 174 9 is_stmt 1 view .LVU273
 1600              	.LBB28:
 1601              	.LBI28:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1602              		.loc 2 77 16 view .LVU274
 1603              	.LBB29:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1604              		.loc 2 77 42 view .LVU275
 1605              	.LBE29:
 1606              	.LBE28:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1607              		.loc 2 174 9 is_stmt 0 view .LVU276
 1608 0022 C0F3C700 		ubfx	r0, r0, #3, #8
 1609 0026 FFF7FEFF 		bl	layer_off
 1610              	.LVL62:
 175:quantum/action_util.c ****     }
 1611              		.loc 2 175 9 is_stmt 1 view .LVU277
 177:quantum/action_util.c **** /** \brief Is oneshot layer active
 1612              		.loc 2 177 1 is_stmt 0 view .LVU278
 1613 002a BDE80840 		pop	{r3, lr}
 1614              		.cfi_remember_state
 1615              		.cfi_restore 14
 1616              		.cfi_restore 3
 1617              		.cfi_def_cfa_offset 0
 175:quantum/action_util.c ****     }
 1618              		.loc 2 175 9 view .LVU279
 1619 002e FFF7FEBF 		b	reset_oneshot_layer
 1620              	.LVL63:
 1621              	.L145:
 1622              		.cfi_restore_state
 177:quantum/action_util.c **** /** \brief Is oneshot layer active
 1623              		.loc 2 177 1 view .LVU280
 1624 0032 08BD     		pop	{r3, pc}
 1625              	.L150:
 1626              		.align	2
 1627              	.L149:
 1628 0034 00000000 		.word	.LANCHOR2
 1629 0038 00000000 		.word	keymap_config
 1630              		.cfi_endproc
 1631              	.LFE346:
 1633              		.section	.text.has_anymod,"ax",%progbits
 1634              		.align	1
 1635              		.global	has_anymod
 1636              		.syntax unified
 1637              		.thumb
 1638              		.thumb_func
 1639              		.fpu fpv4-sp-d16
 1641              	has_anymod:
 1642              	.LFB380:
 440:quantum/action_util.c **** 
 441:quantum/action_util.c **** /** \brief inspect keyboard state
 442:quantum/action_util.c ****  *
 443:quantum/action_util.c ****  * FIXME: needs doc
 444:quantum/action_util.c ****  */
 445:quantum/action_util.c **** uint8_t has_anymod(void) { return bitpop(real_mods); }
 1643              		.loc 2 445 26 is_stmt 1 view -0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
 1648              		.loc 2 445 28 view .LVU282
 1649              		.loc 2 445 35 is_stmt 0 view .LVU283
 1650 0000 014B     		ldr	r3, .L152
 1651 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1652 0004 FFF7FEBF 		b	bitpop
 1653              	.LVL64:
 1654              	.L153:
 1655              		.align	2
 1656              	.L152:
 1657 0008 00000000 		.word	.LANCHOR3
 1658              		.cfi_endproc
 1659              	.LFE380:
 1661              		.global	keyboard_report
 1662              		.section	.bss.__compound_literal.0,"aw",%nobits
 1665              	__compound_literal.0:
 1666 0000 00000000 		.space	32
 1666      00000000 
 1666      00000000 
 1666      00000000 
 1666      00000000 
 1667              		.section	.bss.macro_mods,"aw",%nobits
 1668              		.set	.LANCHOR5,. + 0
 1671              	macro_mods:
 1672 0000 00       		.space	1
 1673              		.section	.bss.oneshot_layer_data,"aw",%nobits
 1674              		.set	.LANCHOR2,. + 0
 1677              	oneshot_layer_data:
 1678 0000 00       		.space	1
 1679              		.section	.bss.oneshot_locked_mods,"aw",%nobits
 1680              		.set	.LANCHOR1,. + 0
 1683              	oneshot_locked_mods:
 1684 0000 00       		.space	1
 1685              		.section	.bss.oneshot_mods,"aw",%nobits
 1686              		.set	.LANCHOR6,. + 0
 1689              	oneshot_mods:
 1690 0000 00       		.space	1
 1691              		.section	.bss.real_mods,"aw",%nobits
 1692              		.set	.LANCHOR3,. + 0
 1695              	real_mods:
 1696 0000 00       		.space	1
 1697              		.section	.bss.weak_mods,"aw",%nobits
 1698              		.set	.LANCHOR4,. + 0
 1701              	weak_mods:
 1702 0000 00       		.space	1
 1703              		.section	.data.keyboard_report,"aw"
 1704              		.align	2
 1705              		.set	.LANCHOR0,. + 0
 1708              	keyboard_report:
 1709 0000 00000000 		.word	__compound_literal.0
 1710              		.text
 1711              	.Letext0:
 1712              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1713              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1714              		.file 5 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 1715              		.file 6 "tmk_core/common/report.h"
 1716              		.file 7 "quantum/logging/debug.h"
 1717              		.file 8 "quantum/keycode_config.h"
 1718              		.file 9 "quantum/bitwise.h"
 1719              		.file 10 "lib/printf/printf.h"
 1720              		.file 11 "tmk_core/common/host.h"
 1721              		.file 12 "quantum/eeconfig.h"
 1722              		.file 13 "quantum/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
     /tmp/ccy7vN6N.s:18     .text.add_key:0000000000000000 $t
     /tmp/ccy7vN6N.s:26     .text.add_key:0000000000000000 add_key
     /tmp/ccy7vN6N.s:48     .text.add_key:000000000000000c $d
     /tmp/ccy7vN6N.s:53     .text.del_key:0000000000000000 $t
     /tmp/ccy7vN6N.s:60     .text.del_key:0000000000000000 del_key
     /tmp/ccy7vN6N.s:81     .text.del_key:000000000000000c $d
     /tmp/ccy7vN6N.s:86     .text.clear_keys:0000000000000000 $t
     /tmp/ccy7vN6N.s:93     .text.clear_keys:0000000000000000 clear_keys
     /tmp/ccy7vN6N.s:108    .text.clear_keys:0000000000000008 $d
     /tmp/ccy7vN6N.s:113    .text.get_oneshot_locked_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:120    .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
     /tmp/ccy7vN6N.s:136    .text.get_oneshot_locked_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:141    .text.has_oneshot_mods_timed_out:0000000000000000 $t
     /tmp/ccy7vN6N.s:148    .text.has_oneshot_mods_timed_out:0000000000000000 has_oneshot_mods_timed_out
     /tmp/ccy7vN6N.s:163    .text.get_oneshot_layer:0000000000000000 $t
     /tmp/ccy7vN6N.s:170    .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
     /tmp/ccy7vN6N.s:187    .text.get_oneshot_layer:000000000000000c $d
     /tmp/ccy7vN6N.s:192    .text.get_oneshot_layer_state:0000000000000000 $t
     /tmp/ccy7vN6N.s:199    .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
     /tmp/ccy7vN6N.s:216    .text.get_oneshot_layer_state:000000000000000c $d
     /tmp/ccy7vN6N.s:221    .text.is_oneshot_layer_active:0000000000000000 $t
     /tmp/ccy7vN6N.s:228    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
     /tmp/ccy7vN6N.s:254    .text.is_oneshot_layer_active:0000000000000010 $d
     /tmp/ccy7vN6N.s:262    .text.oneshot_set:0000000000000000 $t
     /tmp/ccy7vN6N.s:269    .text.oneshot_set:0000000000000000 oneshot_set
     /tmp/ccy7vN6N.s:339    .text.oneshot_set:0000000000000034 $d
     /tmp/ccy7vN6N.s:346    .text.oneshot_toggle:0000000000000000 $t
     /tmp/ccy7vN6N.s:353    .text.oneshot_toggle:0000000000000000 oneshot_toggle
     /tmp/ccy7vN6N.s:374    .text.oneshot_toggle:0000000000000014 $d
     /tmp/ccy7vN6N.s:379    .text.oneshot_enable:0000000000000000 $t
     /tmp/ccy7vN6N.s:386    .text.oneshot_enable:0000000000000000 oneshot_enable
     /tmp/ccy7vN6N.s:401    .text.oneshot_disable:0000000000000000 $t
     /tmp/ccy7vN6N.s:408    .text.oneshot_disable:0000000000000000 oneshot_disable
     /tmp/ccy7vN6N.s:423    .text.is_oneshot_enabled:0000000000000000 $t
     /tmp/ccy7vN6N.s:430    .text.is_oneshot_enabled:0000000000000000 is_oneshot_enabled
     /tmp/ccy7vN6N.s:447    .text.is_oneshot_enabled:000000000000000c $d
     /tmp/ccy7vN6N.s:452    .text.get_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:459    .text.get_mods:0000000000000000 get_mods
     /tmp/ccy7vN6N.s:474    .text.get_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:479    .text.add_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:486    .text.add_mods:0000000000000000 add_mods
     /tmp/ccy7vN6N.s:507    .text.add_mods:000000000000000c $d
     /tmp/ccy7vN6N.s:512    .text.del_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:519    .text.del_mods:0000000000000000 del_mods
     /tmp/ccy7vN6N.s:540    .text.del_mods:000000000000000c $d
     /tmp/ccy7vN6N.s:545    .text.set_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:552    .text.set_mods:0000000000000000 set_mods
     /tmp/ccy7vN6N.s:569    .text.set_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:574    .text.clear_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:581    .text.clear_mods:0000000000000000 clear_mods
     /tmp/ccy7vN6N.s:598    .text.clear_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:603    .text.get_weak_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:610    .text.get_weak_mods:0000000000000000 get_weak_mods
     /tmp/ccy7vN6N.s:625    .text.get_weak_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:630    .text.add_weak_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:637    .text.add_weak_mods:0000000000000000 add_weak_mods
     /tmp/ccy7vN6N.s:658    .text.add_weak_mods:000000000000000c $d
     /tmp/ccy7vN6N.s:663    .text.del_weak_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:670    .text.del_weak_mods:0000000000000000 del_weak_mods
     /tmp/ccy7vN6N.s:691    .text.del_weak_mods:000000000000000c $d
     /tmp/ccy7vN6N.s:696    .text.set_weak_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:703    .text.set_weak_mods:0000000000000000 set_weak_mods
     /tmp/ccy7vN6N.s:720    .text.set_weak_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:725    .text.clear_weak_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:732    .text.clear_weak_mods:0000000000000000 clear_weak_mods
     /tmp/ccy7vN6N.s:749    .text.clear_weak_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:754    .text.get_macro_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:761    .text.get_macro_mods:0000000000000000 get_macro_mods
     /tmp/ccy7vN6N.s:776    .text.get_macro_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:781    .text.add_macro_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:788    .text.add_macro_mods:0000000000000000 add_macro_mods
     /tmp/ccy7vN6N.s:809    .text.add_macro_mods:000000000000000c $d
     /tmp/ccy7vN6N.s:814    .text.del_macro_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:821    .text.del_macro_mods:0000000000000000 del_macro_mods
     /tmp/ccy7vN6N.s:842    .text.del_macro_mods:000000000000000c $d
     /tmp/ccy7vN6N.s:847    .text.set_macro_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:854    .text.set_macro_mods:0000000000000000 set_macro_mods
     /tmp/ccy7vN6N.s:871    .text.set_macro_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:876    .text.clear_macro_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:883    .text.clear_macro_mods:0000000000000000 clear_macro_mods
     /tmp/ccy7vN6N.s:900    .text.clear_macro_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:905    .text.get_oneshot_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:912    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
     /tmp/ccy7vN6N.s:927    .text.get_oneshot_mods:0000000000000008 $d
     /tmp/ccy7vN6N.s:932    .text.oneshot_locked_mods_changed_user:0000000000000000 $t
     /tmp/ccy7vN6N.s:939    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user
     /tmp/ccy7vN6N.s:953    .text.oneshot_locked_mods_changed_kb:0000000000000000 $t
     /tmp/ccy7vN6N.s:960    .text.oneshot_locked_mods_changed_kb:0000000000000000 oneshot_locked_mods_changed_kb
     /tmp/ccy7vN6N.s:982    .text.set_oneshot_locked_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:989    .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
     /tmp/ccy7vN6N.s:1020   .text.set_oneshot_locked_mods:0000000000000014 $d
     /tmp/ccy7vN6N.s:1025   .text.clear_oneshot_locked_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:1032   .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
     /tmp/ccy7vN6N.s:1062   .text.clear_oneshot_locked_mods:0000000000000014 $d
     /tmp/ccy7vN6N.s:1067   .text.oneshot_mods_changed_user:0000000000000000 $t
     /tmp/ccy7vN6N.s:1074   .text.oneshot_mods_changed_user:0000000000000000 oneshot_mods_changed_user
     /tmp/ccy7vN6N.s:1085   .text.oneshot_mods_changed_kb:0000000000000000 $t
     /tmp/ccy7vN6N.s:1092   .text.oneshot_mods_changed_kb:0000000000000000 oneshot_mods_changed_kb
     /tmp/ccy7vN6N.s:1114   .text.add_oneshot_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:1121   .text.add_oneshot_mods:0000000000000000 add_oneshot_mods
     /tmp/ccy7vN6N.s:1153   .text.add_oneshot_mods:0000000000000018 $d
     /tmp/ccy7vN6N.s:1158   .text.del_oneshot_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:1165   .text.del_oneshot_mods:0000000000000000 del_oneshot_mods
     /tmp/ccy7vN6N.s:1199   .text.del_oneshot_mods:0000000000000018 $d
     /tmp/ccy7vN6N.s:1204   .text.set_oneshot_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:1211   .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
     /tmp/ccy7vN6N.s:1250   .text.set_oneshot_mods:000000000000001c $d
     /tmp/ccy7vN6N.s:1256   .text.clear_oneshot_mods:0000000000000000 $t
     /tmp/ccy7vN6N.s:1263   .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
     /tmp/ccy7vN6N.s:1299   .text.clear_oneshot_mods:0000000000000014 $d
     /tmp/ccy7vN6N.s:1304   .text.send_keyboard_report:0000000000000000 $t
     /tmp/ccy7vN6N.s:1311   .text.send_keyboard_report:0000000000000000 send_keyboard_report
     /tmp/ccy7vN6N.s:1377   .text.send_keyboard_report:0000000000000038 $d
     /tmp/ccy7vN6N.s:1386   .text.oneshot_layer_changed_user:0000000000000000 $t
     /tmp/ccy7vN6N.s:1393   .text.oneshot_layer_changed_user:0000000000000000 oneshot_layer_changed_user
     /tmp/ccy7vN6N.s:1404   .text.oneshot_layer_changed_kb:0000000000000000 $t
     /tmp/ccy7vN6N.s:1411   .text.oneshot_layer_changed_kb:0000000000000000 oneshot_layer_changed_kb
     /tmp/ccy7vN6N.s:1433   .text.set_oneshot_layer:0000000000000000 $t
     /tmp/ccy7vN6N.s:1440   .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
     /tmp/ccy7vN6N.s:1502   .text.set_oneshot_layer:000000000000002c $d
     /tmp/ccy7vN6N.s:1508   .text.reset_oneshot_layer:0000000000000000 $t
     /tmp/ccy7vN6N.s:1515   .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
     /tmp/ccy7vN6N.s:1539   .text.reset_oneshot_layer:0000000000000010 $d
     /tmp/ccy7vN6N.s:1544   .text.clear_oneshot_layer_state:0000000000000000 $t
     /tmp/ccy7vN6N.s:1551   .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
     /tmp/ccy7vN6N.s:1628   .text.clear_oneshot_layer_state:0000000000000034 $d
     /tmp/ccy7vN6N.s:1634   .text.has_anymod:0000000000000000 $t
     /tmp/ccy7vN6N.s:1641   .text.has_anymod:0000000000000000 has_anymod
     /tmp/ccy7vN6N.s:1657   .text.has_anymod:0000000000000008 $d
     /tmp/ccy7vN6N.s:1708   .data.keyboard_report:0000000000000000 keyboard_report
     /tmp/ccy7vN6N.s:1665   .bss.__compound_literal.0:0000000000000000 __compound_literal.0
     /tmp/ccy7vN6N.s:1666   .bss.__compound_literal.0:0000000000000000 $d
     /tmp/ccy7vN6N.s:1671   .bss.macro_mods:0000000000000000 macro_mods
     /tmp/ccy7vN6N.s:1672   .bss.macro_mods:0000000000000000 $d
     /tmp/ccy7vN6N.s:1677   .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
     /tmp/ccy7vN6N.s:1678   .bss.oneshot_layer_data:0000000000000000 $d
     /tmp/ccy7vN6N.s:1683   .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
     /tmp/ccy7vN6N.s:1684   .bss.oneshot_locked_mods:0000000000000000 $d
     /tmp/ccy7vN6N.s:1689   .bss.oneshot_mods:0000000000000000 oneshot_mods
     /tmp/ccy7vN6N.s:1690   .bss.oneshot_mods:0000000000000000 $d
     /tmp/ccy7vN6N.s:1695   .bss.real_mods:0000000000000000 real_mods
     /tmp/ccy7vN6N.s:1696   .bss.real_mods:0000000000000000 $d
     /tmp/ccy7vN6N.s:1701   .bss.weak_mods:0000000000000000 weak_mods
     /tmp/ccy7vN6N.s:1702   .bss.weak_mods:0000000000000000 $d
     /tmp/ccy7vN6N.s:1704   .data.keyboard_report:0000000000000000 $d

UNDEFINED SYMBOLS
add_key_to_report
del_key_from_report
clear_keys_from_report
eeconfig_update_keymap
printf_
keymap_config
debug_config
has_anykey
host_keyboard_send
layer_on
layer_off
bitpop
