   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"keyboard.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.last_input_activity_time,"ax",%progbits
  18              		.align	1
  19              		.global	last_input_activity_time
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	last_input_activity_time:
  27              	.LFB341:
  28              		.file 1 "quantum/keyboard.c"
   1:quantum/keyboard.c **** /*
   2:quantum/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/keyboard.c **** 
   4:quantum/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keyboard.c **** (at your option) any later version.
   8:quantum/keyboard.c **** 
   9:quantum/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keyboard.c **** GNU General Public License for more details.
  13:quantum/keyboard.c **** 
  14:quantum/keyboard.c **** You should have received a copy of the GNU General Public License
  15:quantum/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keyboard.c **** */
  17:quantum/keyboard.c **** 
  18:quantum/keyboard.c **** #include <stdint.h>
  19:quantum/keyboard.c **** #include "keyboard.h"
  20:quantum/keyboard.c **** #include "matrix.h"
  21:quantum/keyboard.c **** #include "keymap.h"
  22:quantum/keyboard.c **** #include "host.h"
  23:quantum/keyboard.c **** #include "led.h"
  24:quantum/keyboard.c **** #include "keycode.h"
  25:quantum/keyboard.c **** #include "timer.h"
  26:quantum/keyboard.c **** #include "sync_timer.h"
  27:quantum/keyboard.c **** #include "print.h"
  28:quantum/keyboard.c **** #include "debug.h"
  29:quantum/keyboard.c **** #include "command.h"
  30:quantum/keyboard.c **** #include "util.h"
  31:quantum/keyboard.c **** #include "sendchar.h"
  32:quantum/keyboard.c **** #include "eeconfig.h"
  33:quantum/keyboard.c **** #include "action_layer.h"
  34:quantum/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  35:quantum/keyboard.c **** #    include "backlight.h"
  36:quantum/keyboard.c **** #endif
  37:quantum/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  38:quantum/keyboard.c **** #    include "mousekey.h"
  39:quantum/keyboard.c **** #endif
  40:quantum/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  41:quantum/keyboard.c **** #    include "ps2_mouse.h"
  42:quantum/keyboard.c **** #endif
  43:quantum/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  44:quantum/keyboard.c **** #    include "serial_mouse.h"
  45:quantum/keyboard.c **** #endif
  46:quantum/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  47:quantum/keyboard.c **** #    include "adb.h"
  48:quantum/keyboard.c **** #endif
  49:quantum/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  50:quantum/keyboard.c **** #    include "rgblight.h"
  51:quantum/keyboard.c **** #endif
  52:quantum/keyboard.c **** #ifdef LED_MATRIX_ENABLE
  53:quantum/keyboard.c **** #    include "led_matrix.h"
  54:quantum/keyboard.c **** #endif
  55:quantum/keyboard.c **** #ifdef RGB_MATRIX_ENABLE
  56:quantum/keyboard.c **** #    include "rgb_matrix.h"
  57:quantum/keyboard.c **** #endif
  58:quantum/keyboard.c **** #ifdef ENCODER_ENABLE
  59:quantum/keyboard.c **** #    include "encoder.h"
  60:quantum/keyboard.c **** #endif
  61:quantum/keyboard.c **** #ifdef STENO_ENABLE
  62:quantum/keyboard.c **** #    include "process_steno.h"
  63:quantum/keyboard.c **** #endif
  64:quantum/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  65:quantum/keyboard.c **** #    include "serial_link/system/serial_link.h"
  66:quantum/keyboard.c **** #endif
  67:quantum/keyboard.c **** #ifdef VISUALIZER_ENABLE
  68:quantum/keyboard.c **** #    include "visualizer/visualizer.h"
  69:quantum/keyboard.c **** #endif
  70:quantum/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  71:quantum/keyboard.c **** #    include "pointing_device.h"
  72:quantum/keyboard.c **** #endif
  73:quantum/keyboard.c **** #ifdef MIDI_ENABLE
  74:quantum/keyboard.c **** #    include "process_midi.h"
  75:quantum/keyboard.c **** #endif
  76:quantum/keyboard.c **** #ifdef JOYSTICK_ENABLE
  77:quantum/keyboard.c **** #    include "process_joystick.h"
  78:quantum/keyboard.c **** #endif
  79:quantum/keyboard.c **** #ifdef HD44780_ENABLE
  80:quantum/keyboard.c **** #    include "hd44780.h"
  81:quantum/keyboard.c **** #endif
  82:quantum/keyboard.c **** #ifdef QWIIC_ENABLE
  83:quantum/keyboard.c **** #    include "qwiic.h"
  84:quantum/keyboard.c **** #endif
  85:quantum/keyboard.c **** #ifdef OLED_ENABLE
  86:quantum/keyboard.c **** #    include "oled_driver.h"
  87:quantum/keyboard.c **** #endif
  88:quantum/keyboard.c **** #ifdef ST7565_ENABLE
  89:quantum/keyboard.c **** #    include "st7565.h"
  90:quantum/keyboard.c **** #endif
  91:quantum/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  92:quantum/keyboard.c **** #    include "velocikey.h"
  93:quantum/keyboard.c **** #endif
  94:quantum/keyboard.c **** #ifdef VIA_ENABLE
  95:quantum/keyboard.c **** #    include "via.h"
  96:quantum/keyboard.c **** #endif
  97:quantum/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
  98:quantum/keyboard.c **** #    include "dip_switch.h"
  99:quantum/keyboard.c **** #endif
 100:quantum/keyboard.c **** #ifdef STM32_EEPROM_ENABLE
 101:quantum/keyboard.c **** #    include "eeprom_stm32.h"
 102:quantum/keyboard.c **** #endif
 103:quantum/keyboard.c **** #ifdef EEPROM_DRIVER
 104:quantum/keyboard.c **** #    include "eeprom_driver.h"
 105:quantum/keyboard.c **** #endif
 106:quantum/keyboard.c **** #if defined(CRC_ENABLE)
 107:quantum/keyboard.c **** #    include "crc.h"
 108:quantum/keyboard.c **** #endif
 109:quantum/keyboard.c **** #ifdef DIGITIZER_ENABLE
 110:quantum/keyboard.c **** #    include "digitizer.h"
 111:quantum/keyboard.c **** #endif
 112:quantum/keyboard.c **** 
 113:quantum/keyboard.c **** static uint32_t last_input_modification_time = 0;
 114:quantum/keyboard.c **** uint32_t        last_input_activity_time(void) { return last_input_modification_time; }
  29              		.loc 1 114 48 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 114 50 view .LVU1
  35              		.loc 1 114 87 is_stmt 0 view .LVU2
  36 0000 014B     		ldr	r3, .L2
  37 0002 1868     		ldr	r0, [r3]
  38 0004 7047     		bx	lr
  39              	.L3:
  40 0006 00BF     		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE341:
  46              		.section	.text.last_input_activity_elapsed,"ax",%progbits
  47              		.align	1
  48              		.global	last_input_activity_elapsed
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	last_input_activity_elapsed:
  55              	.LFB342:
 115:quantum/keyboard.c **** uint32_t        last_input_activity_elapsed(void) { return timer_elapsed32(last_input_modification_
  56              		.loc 1 115 51 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              		.loc 1 115 53 view .LVU4
  62              		.loc 1 115 60 is_stmt 0 view .LVU5
  63 0000 014B     		ldr	r3, .L5
  64 0002 1868     		ldr	r0, [r3]
  65 0004 FFF7FEBF 		b	timer_elapsed32
  66              	.LVL0:
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 0008 00000000 		.word	.LANCHOR0
  71              		.cfi_endproc
  72              	.LFE342:
  74              		.section	.text.last_matrix_activity_time,"ax",%progbits
  75              		.align	1
  76              		.global	last_matrix_activity_time
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	last_matrix_activity_time:
  83              	.LFB343:
 116:quantum/keyboard.c **** 
 117:quantum/keyboard.c **** static uint32_t last_matrix_modification_time = 0;
 118:quantum/keyboard.c **** uint32_t        last_matrix_activity_time(void) { return last_matrix_modification_time; }
  84              		.loc 1 118 49 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              		.loc 1 118 51 view .LVU7
  90              		.loc 1 118 89 is_stmt 0 view .LVU8
  91 0000 014B     		ldr	r3, .L8
  92 0002 1868     		ldr	r0, [r3]
  93 0004 7047     		bx	lr
  94              	.L9:
  95 0006 00BF     		.align	2
  96              	.L8:
  97 0008 00000000 		.word	.LANCHOR1
  98              		.cfi_endproc
  99              	.LFE343:
 101              		.section	.text.last_matrix_activity_elapsed,"ax",%progbits
 102              		.align	1
 103              		.global	last_matrix_activity_elapsed
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	last_matrix_activity_elapsed:
 110              	.LFB344:
 119:quantum/keyboard.c **** uint32_t        last_matrix_activity_elapsed(void) { return timer_elapsed32(last_matrix_modificatio
 111              		.loc 1 119 52 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              		.loc 1 119 54 view .LVU10
 117              		.loc 1 119 61 is_stmt 0 view .LVU11
 118 0000 014B     		ldr	r3, .L11
 119 0002 1868     		ldr	r0, [r3]
 120 0004 FFF7FEBF 		b	timer_elapsed32
 121              	.LVL1:
 122              	.L12:
 123              		.align	2
 124              	.L11:
 125 0008 00000000 		.word	.LANCHOR1
 126              		.cfi_endproc
 127              	.LFE344:
 129              		.section	.text.last_matrix_activity_trigger,"ax",%progbits
 130              		.align	1
 131              		.global	last_matrix_activity_trigger
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	last_matrix_activity_trigger:
 138              	.LFB345:
 120:quantum/keyboard.c **** void            last_matrix_activity_trigger(void) { last_matrix_modification_time = last_input_mod
 139              		.loc 1 120 52 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		.loc 1 120 54 view .LVU13
 144              		.loc 1 120 52 is_stmt 0 view .LVU14
 145 0000 08B5     		push	{r3, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 149              		.loc 1 120 117 view .LVU15
 150 0002 FFF7FEFF 		bl	timer_read32
 151              	.LVL2:
 152              		.loc 1 120 115 view .LVU16
 153 0006 024B     		ldr	r3, .L14
 154 0008 1860     		str	r0, [r3]
 155              		.loc 1 120 84 view .LVU17
 156 000a 024B     		ldr	r3, .L14+4
 157 000c 1860     		str	r0, [r3]
 158              		.loc 1 120 133 view .LVU18
 159 000e 08BD     		pop	{r3, pc}
 160              	.L15:
 161              		.align	2
 162              	.L14:
 163 0010 00000000 		.word	.LANCHOR0
 164 0014 00000000 		.word	.LANCHOR1
 165              		.cfi_endproc
 166              	.LFE345:
 168              		.section	.text.last_encoder_activity_time,"ax",%progbits
 169              		.align	1
 170              		.global	last_encoder_activity_time
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	last_encoder_activity_time:
 177              	.LFB346:
 121:quantum/keyboard.c **** 
 122:quantum/keyboard.c **** static uint32_t last_encoder_modification_time = 0;
 123:quantum/keyboard.c **** uint32_t        last_encoder_activity_time(void) { return last_encoder_modification_time; }
 178              		.loc 1 123 50 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              		.loc 1 123 52 view .LVU20
 184              		.loc 1 123 91 is_stmt 0 view .LVU21
 185 0000 014B     		ldr	r3, .L17
 186 0002 1868     		ldr	r0, [r3]
 187 0004 7047     		bx	lr
 188              	.L18:
 189 0006 00BF     		.align	2
 190              	.L17:
 191 0008 00000000 		.word	.LANCHOR2
 192              		.cfi_endproc
 193              	.LFE346:
 195              		.section	.text.last_encoder_activity_elapsed,"ax",%progbits
 196              		.align	1
 197              		.global	last_encoder_activity_elapsed
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	last_encoder_activity_elapsed:
 204              	.LFB347:
 124:quantum/keyboard.c **** uint32_t        last_encoder_activity_elapsed(void) { return timer_elapsed32(last_encoder_modificat
 205              		.loc 1 124 53 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              		.loc 1 124 55 view .LVU23
 211              		.loc 1 124 62 is_stmt 0 view .LVU24
 212 0000 014B     		ldr	r3, .L20
 213 0002 1868     		ldr	r0, [r3]
 214 0004 FFF7FEBF 		b	timer_elapsed32
 215              	.LVL3:
 216              	.L21:
 217              		.align	2
 218              	.L20:
 219 0008 00000000 		.word	.LANCHOR2
 220              		.cfi_endproc
 221              	.LFE347:
 223              		.section	.text.last_encoder_activity_trigger,"ax",%progbits
 224              		.align	1
 225              		.global	last_encoder_activity_trigger
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	last_encoder_activity_trigger:
 232              	.LFB348:
 125:quantum/keyboard.c **** void            last_encoder_activity_trigger(void) { last_encoder_modification_time = last_input_m
 233              		.loc 1 125 53 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		.loc 1 125 55 view .LVU26
 238              		.loc 1 125 53 is_stmt 0 view .LVU27
 239 0000 08B5     		push	{r3, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 243              		.loc 1 125 119 view .LVU28
 244 0002 FFF7FEFF 		bl	timer_read32
 245              	.LVL4:
 246              		.loc 1 125 117 view .LVU29
 247 0006 024B     		ldr	r3, .L23
 248 0008 1860     		str	r0, [r3]
 249              		.loc 1 125 86 view .LVU30
 250 000a 024B     		ldr	r3, .L23+4
 251 000c 1860     		str	r0, [r3]
 252              		.loc 1 125 135 view .LVU31
 253 000e 08BD     		pop	{r3, pc}
 254              	.L24:
 255              		.align	2
 256              	.L23:
 257 0010 00000000 		.word	.LANCHOR0
 258 0014 00000000 		.word	.LANCHOR2
 259              		.cfi_endproc
 260              	.LFE348:
 262              		.section	.text.disable_jtag,"ax",%progbits
 263              		.align	1
 264              		.global	disable_jtag
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv4-sp-d16
 270              	disable_jtag:
 271              	.LFB349:
 126:quantum/keyboard.c **** 
 127:quantum/keyboard.c **** // Only enable this if console is enabled to print to
 128:quantum/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE)
 129:quantum/keyboard.c **** static uint32_t matrix_timer           = 0;
 130:quantum/keyboard.c **** static uint32_t matrix_scan_count      = 0;
 131:quantum/keyboard.c **** static uint32_t last_matrix_scan_count = 0;
 132:quantum/keyboard.c **** 
 133:quantum/keyboard.c **** void matrix_scan_perf_task(void) {
 134:quantum/keyboard.c ****     matrix_scan_count++;
 135:quantum/keyboard.c **** 
 136:quantum/keyboard.c ****     uint32_t timer_now = timer_read32();
 137:quantum/keyboard.c ****     if (TIMER_DIFF_32(timer_now, matrix_timer) > 1000) {
 138:quantum/keyboard.c **** #    if defined(CONSOLE_ENABLE)
 139:quantum/keyboard.c ****         dprintf("matrix scan frequency: %lu\n", matrix_scan_count);
 140:quantum/keyboard.c **** #    endif
 141:quantum/keyboard.c ****         last_matrix_scan_count = matrix_scan_count;
 142:quantum/keyboard.c ****         matrix_timer           = timer_now;
 143:quantum/keyboard.c ****         matrix_scan_count      = 0;
 144:quantum/keyboard.c ****     }
 145:quantum/keyboard.c **** }
 146:quantum/keyboard.c **** 
 147:quantum/keyboard.c **** uint32_t get_matrix_scan_rate(void) { return last_matrix_scan_count; }
 148:quantum/keyboard.c **** #else
 149:quantum/keyboard.c **** #    define matrix_scan_perf_task()
 150:quantum/keyboard.c **** #endif
 151:quantum/keyboard.c **** 
 152:quantum/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 153:quantum/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 154:quantum/keyboard.c **** static matrix_row_t   get_real_keys(uint8_t row, matrix_row_t rowdata) {
 155:quantum/keyboard.c ****     matrix_row_t out = 0;
 156:quantum/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
 157:quantum/keyboard.c ****         // read each key in the row data and check if the keymap defines it as a real key
 158:quantum/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1 << col))) {
 159:quantum/keyboard.c ****             // this creates new row data, if a key is defined in the keymap, it will be set here
 160:quantum/keyboard.c ****             out |= 1 << col;
 161:quantum/keyboard.c ****         }
 162:quantum/keyboard.c ****     }
 163:quantum/keyboard.c ****     return out;
 164:quantum/keyboard.c **** }
 165:quantum/keyboard.c **** 
 166:quantum/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata) {
 167:quantum/keyboard.c ****     rowdata &= rowdata - 1;  // if there are less than two bits (keys) set, rowdata will become zer
 168:quantum/keyboard.c ****     return rowdata;
 169:quantum/keyboard.c **** }
 170:quantum/keyboard.c **** 
 171:quantum/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata) {
 172:quantum/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 173:quantum/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 174:quantum/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 175:quantum/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 176:quantum/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 177:quantum/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0) {
 178:quantum/keyboard.c ****         return false;
 179:quantum/keyboard.c ****     }
 180:quantum/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 181:quantum/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 182:quantum/keyboard.c ****     so they are filtered out.
 183:quantum/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 184:quantum/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 185:quantum/keyboard.c ****     we are checking one row at a time, not all of them at once.
 186:quantum/keyboard.c ****     */
 187:quantum/keyboard.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 188:quantum/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)) {
 189:quantum/keyboard.c ****             return true;
 190:quantum/keyboard.c ****         }
 191:quantum/keyboard.c ****     }
 192:quantum/keyboard.c ****     return false;
 193:quantum/keyboard.c **** }
 194:quantum/keyboard.c **** 
 195:quantum/keyboard.c **** #endif
 196:quantum/keyboard.c **** 
 197:quantum/keyboard.c **** void disable_jtag(void) {
 272              		.loc 1 197 25 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 198:quantum/keyboard.c **** // To use PF4-7 (PC2-5 on ATmega32A), disable JTAG by writing JTD bit twice within four cycles.
 199:quantum/keyboard.c **** #if (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_AT90USB1286__) || 
 200:quantum/keyboard.c ****     MCUCR |= _BV(JTD);
 201:quantum/keyboard.c ****     MCUCR |= _BV(JTD);
 202:quantum/keyboard.c **** #elif defined(__AVR_ATmega32A__)
 203:quantum/keyboard.c ****     MCUCSR |= _BV(JTD);
 204:quantum/keyboard.c ****     MCUCSR |= _BV(JTD);
 205:quantum/keyboard.c **** #endif
 206:quantum/keyboard.c **** }
 277              		.loc 1 206 1 view .LVU33
 278 0000 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE349:
 282              		.section	.text.matrix_setup,"ax",%progbits
 283              		.align	1
 284              		.weak	matrix_setup
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	matrix_setup:
 291              	.LFB375:
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0000 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE375:
 300              		.section	.text.keyboard_pre_init_user,"ax",%progbits
 301              		.align	1
 302              		.weak	keyboard_pre_init_user
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	keyboard_pre_init_user:
 309              	.LFB351:
 207:quantum/keyboard.c **** 
 208:quantum/keyboard.c **** /** \brief matrix_setup
 209:quantum/keyboard.c ****  *
 210:quantum/keyboard.c ****  * FIXME: needs doc
 211:quantum/keyboard.c ****  */
 212:quantum/keyboard.c **** __attribute__((weak)) void matrix_setup(void) {}
 213:quantum/keyboard.c **** 
 214:quantum/keyboard.c **** /** \brief keyboard_pre_init_user
 215:quantum/keyboard.c ****  *
 216:quantum/keyboard.c ****  * FIXME: needs doc
 217:quantum/keyboard.c ****  */
 218:quantum/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_user(void) {}
 310              		.loc 1 218 57 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              		.loc 1 218 58 view .LVU35
 316 0000 7047     		bx	lr
 317              		.cfi_endproc
 318              	.LFE351:
 320              		.section	.text.keyboard_pre_init_kb,"ax",%progbits
 321              		.align	1
 322              		.weak	keyboard_pre_init_kb
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	keyboard_pre_init_kb:
 329              	.LFB352:
 219:quantum/keyboard.c **** 
 220:quantum/keyboard.c **** /** \brief keyboard_pre_init_kb
 221:quantum/keyboard.c ****  *
 222:quantum/keyboard.c ****  * FIXME: needs doc
 223:quantum/keyboard.c ****  */
 224:quantum/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_kb(void) { keyboard_pre_init_user(); }
 330              		.loc 1 224 55 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		.loc 1 224 57 view .LVU37
 335              		.loc 1 224 55 is_stmt 0 view .LVU38
 336 0000 08B5     		push	{r3, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 340              		.loc 1 224 57 view .LVU39
 341 0002 FFF7FEFF 		bl	keyboard_pre_init_user
 342              	.LVL5:
 343              		.loc 1 224 83 view .LVU40
 344 0006 08BD     		pop	{r3, pc}
 345              		.cfi_endproc
 346              	.LFE352:
 348              		.section	.text.keyboard_post_init_user,"ax",%progbits
 349              		.align	1
 350              		.weak	keyboard_post_init_user
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv4-sp-d16
 356              	keyboard_post_init_user:
 357              	.LFB369:
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE369:
 366              		.section	.text.keyboard_post_init_kb,"ax",%progbits
 367              		.align	1
 368              		.weak	keyboard_post_init_kb
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv4-sp-d16
 374              	keyboard_post_init_kb:
 375              	.LFB354:
 225:quantum/keyboard.c **** 
 226:quantum/keyboard.c **** /** \brief keyboard_post_init_user
 227:quantum/keyboard.c ****  *
 228:quantum/keyboard.c ****  * FIXME: needs doc
 229:quantum/keyboard.c ****  */
 230:quantum/keyboard.c **** 
 231:quantum/keyboard.c **** __attribute__((weak)) void keyboard_post_init_user() {}
 232:quantum/keyboard.c **** 
 233:quantum/keyboard.c **** /** \brief keyboard_post_init_kb
 234:quantum/keyboard.c ****  *
 235:quantum/keyboard.c ****  * FIXME: needs doc
 236:quantum/keyboard.c ****  */
 237:quantum/keyboard.c **** 
 238:quantum/keyboard.c **** __attribute__((weak)) void keyboard_post_init_kb(void) { keyboard_post_init_user(); }
 376              		.loc 1 238 56 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		.loc 1 238 58 view .LVU42
 381              		.loc 1 238 56 is_stmt 0 view .LVU43
 382 0000 08B5     		push	{r3, lr}
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 3, -8
 385              		.cfi_offset 14, -4
 386              		.loc 1 238 58 view .LVU44
 387 0002 FFF7FEFF 		bl	keyboard_post_init_user
 388              	.LVL6:
 389              		.loc 1 238 85 view .LVU45
 390 0006 08BD     		pop	{r3, pc}
 391              		.cfi_endproc
 392              	.LFE354:
 394              		.section	.text.keyboard_setup,"ax",%progbits
 395              		.align	1
 396              		.global	keyboard_setup
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv4-sp-d16
 402              	keyboard_setup:
 403              	.LFB355:
 239:quantum/keyboard.c **** 
 240:quantum/keyboard.c **** /** \brief keyboard_setup
 241:quantum/keyboard.c ****  *
 242:quantum/keyboard.c ****  * FIXME: needs doc
 243:quantum/keyboard.c ****  */
 244:quantum/keyboard.c **** void keyboard_setup(void) {
 404              		.loc 1 244 27 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 245:quantum/keyboard.c **** #ifndef NO_JTAG_DISABLE
 246:quantum/keyboard.c ****     disable_jtag();
 408              		.loc 1 246 5 view .LVU47
 247:quantum/keyboard.c **** #endif
 248:quantum/keyboard.c ****     print_set_sendchar(sendchar);
 409              		.loc 1 248 5 view .LVU48
 244:quantum/keyboard.c **** #ifndef NO_JTAG_DISABLE
 410              		.loc 1 244 27 is_stmt 0 view .LVU49
 411 0000 08B5     		push	{r3, lr}
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 415              		.loc 1 248 5 view .LVU50
 416 0002 0548     		ldr	r0, .L32
 417 0004 FFF7FEFF 		bl	print_set_sendchar
 418              	.LVL7:
 249:quantum/keyboard.c **** #ifdef STM32_EEPROM_ENABLE
 250:quantum/keyboard.c ****     EEPROM_Init();
 419              		.loc 1 250 5 is_stmt 1 view .LVU51
 420 0008 FFF7FEFF 		bl	EEPROM_Init
 421              	.LVL8:
 251:quantum/keyboard.c **** #endif
 252:quantum/keyboard.c **** #ifdef EEPROM_DRIVER
 253:quantum/keyboard.c ****     eeprom_driver_init();
 254:quantum/keyboard.c **** #endif
 255:quantum/keyboard.c ****     matrix_setup();
 422              		.loc 1 255 5 view .LVU52
 423 000c FFF7FEFF 		bl	matrix_setup
 424              	.LVL9:
 256:quantum/keyboard.c ****     keyboard_pre_init_kb();
 425              		.loc 1 256 5 view .LVU53
 426 0010 FFF7FEFF 		bl	keyboard_pre_init_kb
 427              	.LVL10:
 257:quantum/keyboard.c **** }
 428              		.loc 1 257 1 is_stmt 0 view .LVU54
 429 0014 08BD     		pop	{r3, pc}
 430              	.L33:
 431 0016 00BF     		.align	2
 432              	.L32:
 433 0018 00000000 		.word	sendchar
 434              		.cfi_endproc
 435              	.LFE355:
 437              		.section	.text.is_keyboard_master,"ax",%progbits
 438              		.align	1
 439              		.weak	is_keyboard_master
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	is_keyboard_master:
 446              	.LFB356:
 258:quantum/keyboard.c **** 
 259:quantum/keyboard.c **** #ifndef SPLIT_KEYBOARD
 260:quantum/keyboard.c **** 
 261:quantum/keyboard.c **** /** \brief is_keyboard_master
 262:quantum/keyboard.c ****  *
 263:quantum/keyboard.c ****  * FIXME: needs doc
 264:quantum/keyboard.c ****  */
 265:quantum/keyboard.c **** __attribute__((weak)) bool is_keyboard_master(void) { return true; }
 447              		.loc 1 265 53 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452              		.loc 1 265 55 view .LVU56
 453              		.loc 1 265 68 is_stmt 0 view .LVU57
 454 0000 0120     		movs	r0, #1
 455 0002 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE356:
 459              		.section	.text.is_keyboard_left,"ax",%progbits
 460              		.align	1
 461              		.weak	is_keyboard_left
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv4-sp-d16
 467              	is_keyboard_left:
 468              	.LFB367:
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 0120     		movs	r0, #1
 474 0002 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE367:
 478              		.section	.text.should_process_keypress,"ax",%progbits
 479              		.align	1
 480              		.weak	should_process_keypress
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu fpv4-sp-d16
 486              	should_process_keypress:
 487              	.LFB358:
 266:quantum/keyboard.c **** 
 267:quantum/keyboard.c **** /** \brief is_keyboard_left
 268:quantum/keyboard.c ****  *
 269:quantum/keyboard.c ****  * FIXME: needs doc
 270:quantum/keyboard.c ****  */
 271:quantum/keyboard.c **** __attribute__((weak)) bool is_keyboard_left(void) { return true; }
 272:quantum/keyboard.c **** 
 273:quantum/keyboard.c **** #endif
 274:quantum/keyboard.c **** 
 275:quantum/keyboard.c **** /** \brief should_process_keypress
 276:quantum/keyboard.c ****  *
 277:quantum/keyboard.c ****  * Override this function if you have a condition where keypresses processing should change:
 278:quantum/keyboard.c ****  *   - splits where the slave side needs to process for rgb/oled functionality
 279:quantum/keyboard.c ****  */
 280:quantum/keyboard.c **** __attribute__((weak)) bool should_process_keypress(void) { return is_keyboard_master(); }
 488              		.loc 1 280 58 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		.loc 1 280 60 view .LVU59
 493              		.loc 1 280 58 is_stmt 0 view .LVU60
 494 0000 08B5     		push	{r3, lr}
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 3, -8
 497              		.cfi_offset 14, -4
 498              		.loc 1 280 67 view .LVU61
 499 0002 FFF7FEFF 		bl	is_keyboard_master
 500              	.LVL11:
 501              		.loc 1 280 89 view .LVU62
 502 0006 08BD     		pop	{r3, pc}
 503              		.cfi_endproc
 504              	.LFE358:
 506              		.section	.text.housekeeping_task_kb,"ax",%progbits
 507              		.align	1
 508              		.weak	housekeeping_task_kb
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	housekeeping_task_kb:
 515              	.LFB371:
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520 0000 7047     		bx	lr
 521              		.cfi_endproc
 522              	.LFE371:
 524              		.section	.text.housekeeping_task_user,"ax",%progbits
 525              		.align	1
 526              		.weak	housekeeping_task_user
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv4-sp-d16
 532              	housekeeping_task_user:
 533              	.LFB373:
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 7047     		bx	lr
 539              		.cfi_endproc
 540              	.LFE373:
 542              		.section	.text.housekeeping_task,"ax",%progbits
 543              		.align	1
 544              		.global	housekeeping_task
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	housekeeping_task:
 551              	.LFB361:
 281:quantum/keyboard.c **** 
 282:quantum/keyboard.c **** /** \brief housekeeping_task_kb
 283:quantum/keyboard.c ****  *
 284:quantum/keyboard.c ****  * Override this function if you have a need to execute code for every keyboard main loop iteration
 285:quantum/keyboard.c ****  * This is specific to keyboard-level functionality.
 286:quantum/keyboard.c ****  */
 287:quantum/keyboard.c **** __attribute__((weak)) void housekeeping_task_kb(void) {}
 288:quantum/keyboard.c **** 
 289:quantum/keyboard.c **** /** \brief housekeeping_task_user
 290:quantum/keyboard.c ****  *
 291:quantum/keyboard.c ****  * Override this function if you have a need to execute code for every keyboard main loop iteration
 292:quantum/keyboard.c ****  * This is specific to user/keymap-level functionality.
 293:quantum/keyboard.c ****  */
 294:quantum/keyboard.c **** __attribute__((weak)) void housekeeping_task_user(void) {}
 295:quantum/keyboard.c **** 
 296:quantum/keyboard.c **** /** \brief housekeeping_task
 297:quantum/keyboard.c ****  *
 298:quantum/keyboard.c ****  * Invokes hooks for executing code after QMK is done after each loop iteration.
 299:quantum/keyboard.c ****  */
 300:quantum/keyboard.c **** void housekeeping_task(void) {
 552              		.loc 1 300 30 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 301:quantum/keyboard.c ****     housekeeping_task_kb();
 556              		.loc 1 301 5 view .LVU64
 300:quantum/keyboard.c ****     housekeeping_task_kb();
 557              		.loc 1 300 30 is_stmt 0 view .LVU65
 558 0000 08B5     		push	{r3, lr}
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 3, -8
 561              		.cfi_offset 14, -4
 562              		.loc 1 301 5 view .LVU66
 563 0002 FFF7FEFF 		bl	housekeeping_task_kb
 564              	.LVL12:
 302:quantum/keyboard.c ****     housekeeping_task_user();
 565              		.loc 1 302 5 is_stmt 1 view .LVU67
 566 0006 FFF7FEFF 		bl	housekeeping_task_user
 567              	.LVL13:
 303:quantum/keyboard.c **** }
 568              		.loc 1 303 1 is_stmt 0 view .LVU68
 569 000a 08BD     		pop	{r3, pc}
 570              		.cfi_endproc
 571              	.LFE361:
 573              		.section	.text.keyboard_init,"ax",%progbits
 574              		.align	1
 575              		.global	keyboard_init
 576              		.syntax unified
 577              		.thumb
 578              		.thumb_func
 579              		.fpu fpv4-sp-d16
 581              	keyboard_init:
 582              	.LFB362:
 304:quantum/keyboard.c **** 
 305:quantum/keyboard.c **** /** \brief keyboard_init
 306:quantum/keyboard.c ****  *
 307:quantum/keyboard.c ****  * FIXME: needs doc
 308:quantum/keyboard.c ****  */
 309:quantum/keyboard.c **** void keyboard_init(void) {
 583              		.loc 1 309 26 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 310:quantum/keyboard.c ****     timer_init();
 587              		.loc 1 310 5 view .LVU70
 309:quantum/keyboard.c ****     timer_init();
 588              		.loc 1 309 26 is_stmt 0 view .LVU71
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 593              		.loc 1 310 5 view .LVU72
 594 0002 FFF7FEFF 		bl	timer_init
 595              	.LVL14:
 311:quantum/keyboard.c ****     sync_timer_init();
 596              		.loc 1 311 22 is_stmt 1 view .LVU73
 312:quantum/keyboard.c **** #ifdef VIA_ENABLE
 313:quantum/keyboard.c ****     via_init();
 314:quantum/keyboard.c **** #endif
 315:quantum/keyboard.c ****     matrix_init();
 597              		.loc 1 315 5 view .LVU74
 598 0006 FFF7FEFF 		bl	matrix_init
 599              	.LVL15:
 316:quantum/keyboard.c **** #if defined(CRC_ENABLE)
 317:quantum/keyboard.c ****     crc_init();
 318:quantum/keyboard.c **** #endif
 319:quantum/keyboard.c **** #ifdef QWIIC_ENABLE
 320:quantum/keyboard.c ****     qwiic_init();
 321:quantum/keyboard.c **** #endif
 322:quantum/keyboard.c **** #ifdef OLED_ENABLE
 323:quantum/keyboard.c ****     oled_init(OLED_ROTATION_0);
 324:quantum/keyboard.c **** #endif
 325:quantum/keyboard.c **** #ifdef ST7565_ENABLE
 326:quantum/keyboard.c ****     st7565_init(DISPLAY_ROTATION_0);
 327:quantum/keyboard.c **** #endif
 328:quantum/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 329:quantum/keyboard.c ****     ps2_mouse_init();
 330:quantum/keyboard.c **** #endif
 331:quantum/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 332:quantum/keyboard.c ****     serial_mouse_init();
 333:quantum/keyboard.c **** #endif
 334:quantum/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 335:quantum/keyboard.c ****     adb_mouse_init();
 336:quantum/keyboard.c **** #endif
 337:quantum/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 338:quantum/keyboard.c ****     backlight_init();
 339:quantum/keyboard.c **** #endif
 340:quantum/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 341:quantum/keyboard.c ****     rgblight_init();
 600              		.loc 1 341 5 view .LVU75
 601 000a FFF7FEFF 		bl	rgblight_init
 602              	.LVL16:
 342:quantum/keyboard.c **** #endif
 343:quantum/keyboard.c **** #ifdef ENCODER_ENABLE
 344:quantum/keyboard.c ****     encoder_init();
 603              		.loc 1 344 5 view .LVU76
 604 000e FFF7FEFF 		bl	encoder_init
 605              	.LVL17:
 345:quantum/keyboard.c **** #endif
 346:quantum/keyboard.c **** #ifdef STENO_ENABLE
 347:quantum/keyboard.c ****     steno_init();
 348:quantum/keyboard.c **** #endif
 349:quantum/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 350:quantum/keyboard.c ****     pointing_device_init();
 351:quantum/keyboard.c **** #endif
 352:quantum/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 353:quantum/keyboard.c ****     keymap_config.nkro = 1;
 354:quantum/keyboard.c ****     eeconfig_update_keymap(keymap_config.raw);
 355:quantum/keyboard.c **** #endif
 356:quantum/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
 357:quantum/keyboard.c ****     dip_switch_init();
 606              		.loc 1 357 5 view .LVU77
 607 0012 FFF7FEFF 		bl	dip_switch_init
 608              	.LVL18:
 358:quantum/keyboard.c **** #endif
 359:quantum/keyboard.c **** 
 360:quantum/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE) && defined(CONSOLE_ENABLE)
 361:quantum/keyboard.c ****     debug_enable = true;
 362:quantum/keyboard.c **** #endif
 363:quantum/keyboard.c **** 
 364:quantum/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 609              		.loc 1 364 5 view .LVU78
 610 0016 FFF7FEFF 		bl	keyboard_post_init_kb
 611              	.LVL19:
 365:quantum/keyboard.c **** }
 612              		.loc 1 365 1 is_stmt 0 view .LVU79
 613 001a 08BD     		pop	{r3, pc}
 614              		.cfi_endproc
 615              	.LFE362:
 617              		.section	.text.switch_events,"ax",%progbits
 618              		.align	1
 619              		.global	switch_events
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu fpv4-sp-d16
 625              	switch_events:
 626              	.LVL20:
 627              	.LFB363:
 366:quantum/keyboard.c **** 
 367:quantum/keyboard.c **** /** \brief key_event_task
 368:quantum/keyboard.c ****  *
 369:quantum/keyboard.c ****  * This function is responsible for calling into other systems when they need to respond to electri
 370:quantum/keyboard.c ****  * This is differnet than keycode events as no layer processing, or filtering occurs.
 371:quantum/keyboard.c ****  */
 372:quantum/keyboard.c **** void switch_events(uint8_t row, uint8_t col, bool pressed) {
 628              		.loc 1 372 60 is_stmt 1 view -0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 373:quantum/keyboard.c **** #if defined(LED_MATRIX_ENABLE)
 374:quantum/keyboard.c ****     process_led_matrix(row, col, pressed);
 375:quantum/keyboard.c **** #endif
 376:quantum/keyboard.c **** #if defined(RGB_MATRIX_ENABLE)
 377:quantum/keyboard.c ****     process_rgb_matrix(row, col, pressed);
 378:quantum/keyboard.c **** #endif
 379:quantum/keyboard.c **** }
 633              		.loc 1 379 1 view .LVU81
 634 0000 7047     		bx	lr
 635              		.cfi_endproc
 636              	.LFE363:
 638              		.section	.rodata.keyboard_set_leds.str1.1,"aMS",%progbits,1
 639              	.LC0:
 640 0000 6B657962 		.ascii	"keyboard_set_led: \000"
 640      6F617264 
 640      5F736574 
 640      5F6C6564 
 640      3A2000
 641              	.LC1:
 642 0013 25303258 		.ascii	"%02X\000"
 642      00
 643              	.LC2:
 644 0018 0A00     		.ascii	"\012\000"
 645              		.section	.text.keyboard_set_leds,"ax",%progbits
 646              		.align	1
 647              		.global	keyboard_set_leds
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv4-sp-d16
 653              	keyboard_set_leds:
 654              	.LVL21:
 655              	.LFB365:
 380:quantum/keyboard.c **** 
 381:quantum/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 382:quantum/keyboard.c ****  *
 383:quantum/keyboard.c ****  * Do routine keyboard jobs:
 384:quantum/keyboard.c ****  *
 385:quantum/keyboard.c ****  * * scan matrix
 386:quantum/keyboard.c ****  * * handle mouse movements
 387:quantum/keyboard.c ****  * * run visualizer code
 388:quantum/keyboard.c ****  * * handle midi commands
 389:quantum/keyboard.c ****  * * light LEDs
 390:quantum/keyboard.c ****  *
 391:quantum/keyboard.c ****  * This is repeatedly called as fast as possible.
 392:quantum/keyboard.c ****  */
 393:quantum/keyboard.c **** void keyboard_task(void) {
 394:quantum/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 395:quantum/keyboard.c ****     static uint8_t      led_status    = 0;
 396:quantum/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 397:quantum/keyboard.c ****     matrix_row_t        matrix_change = 0;
 398:quantum/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 399:quantum/keyboard.c ****     uint8_t keys_processed = 0;
 400:quantum/keyboard.c **** #endif
 401:quantum/keyboard.c **** #ifdef ENCODER_ENABLE
 402:quantum/keyboard.c ****     bool encoders_changed = false;
 403:quantum/keyboard.c **** #endif
 404:quantum/keyboard.c **** 
 405:quantum/keyboard.c ****     uint8_t matrix_changed = matrix_scan();
 406:quantum/keyboard.c ****     if (matrix_changed) last_matrix_activity_trigger();
 407:quantum/keyboard.c **** 
 408:quantum/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 409:quantum/keyboard.c ****         matrix_row    = matrix_get_row(r);
 410:quantum/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 411:quantum/keyboard.c ****         if (matrix_change) {
 412:quantum/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 413:quantum/keyboard.c ****             if (has_ghost_in_row(r, matrix_row)) {
 414:quantum/keyboard.c ****                 continue;
 415:quantum/keyboard.c ****             }
 416:quantum/keyboard.c **** #endif
 417:quantum/keyboard.c ****             if (debug_matrix) matrix_print();
 418:quantum/keyboard.c ****             matrix_row_t col_mask = 1;
 419:quantum/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 420:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 421:quantum/keyboard.c ****                     if (should_process_keypress()) {
 422:quantum/keyboard.c ****                         action_exec((keyevent_t){
 423:quantum/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 424:quantum/keyboard.c ****                         });
 425:quantum/keyboard.c ****                     }
 426:quantum/keyboard.c ****                     // record a processed key
 427:quantum/keyboard.c ****                     matrix_prev[r] ^= col_mask;
 428:quantum/keyboard.c **** 
 429:quantum/keyboard.c ****                     switch_events(r, c, (matrix_row & col_mask));
 430:quantum/keyboard.c **** 
 431:quantum/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 432:quantum/keyboard.c ****                     // only jump out if we have processed "enough" keys.
 433:quantum/keyboard.c ****                     if (++keys_processed >= QMK_KEYS_PER_SCAN)
 434:quantum/keyboard.c **** #endif
 435:quantum/keyboard.c ****                         // process a key per task call
 436:quantum/keyboard.c ****                         goto MATRIX_LOOP_END;
 437:quantum/keyboard.c ****                 }
 438:quantum/keyboard.c ****             }
 439:quantum/keyboard.c ****         }
 440:quantum/keyboard.c ****     }
 441:quantum/keyboard.c ****     // call with pseudo tick event when no real key event.
 442:quantum/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 443:quantum/keyboard.c ****     // we can get here with some keys processed now.
 444:quantum/keyboard.c ****     if (!keys_processed)
 445:quantum/keyboard.c **** #endif
 446:quantum/keyboard.c ****         action_exec(TICK);
 447:quantum/keyboard.c **** 
 448:quantum/keyboard.c **** MATRIX_LOOP_END:
 449:quantum/keyboard.c **** 
 450:quantum/keyboard.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 451:quantum/keyboard.c ****     matrix_scan_perf_task();
 452:quantum/keyboard.c **** #endif
 453:quantum/keyboard.c **** 
 454:quantum/keyboard.c **** #if defined(RGBLIGHT_ENABLE)
 455:quantum/keyboard.c ****     rgblight_task();
 456:quantum/keyboard.c **** #endif
 457:quantum/keyboard.c **** 
 458:quantum/keyboard.c **** #ifdef LED_MATRIX_ENABLE
 459:quantum/keyboard.c ****     led_matrix_task();
 460:quantum/keyboard.c **** #endif
 461:quantum/keyboard.c **** #ifdef RGB_MATRIX_ENABLE
 462:quantum/keyboard.c ****     rgb_matrix_task();
 463:quantum/keyboard.c **** #endif
 464:quantum/keyboard.c **** 
 465:quantum/keyboard.c **** #if defined(BACKLIGHT_ENABLE)
 466:quantum/keyboard.c **** #    if defined(BACKLIGHT_PIN) || defined(BACKLIGHT_PINS)
 467:quantum/keyboard.c ****     backlight_task();
 468:quantum/keyboard.c **** #    endif
 469:quantum/keyboard.c **** #endif
 470:quantum/keyboard.c **** 
 471:quantum/keyboard.c **** #ifdef ENCODER_ENABLE
 472:quantum/keyboard.c ****     encoders_changed = encoder_read();
 473:quantum/keyboard.c ****     if (encoders_changed) last_encoder_activity_trigger();
 474:quantum/keyboard.c **** #endif
 475:quantum/keyboard.c **** 
 476:quantum/keyboard.c **** #ifdef QWIIC_ENABLE
 477:quantum/keyboard.c ****     qwiic_task();
 478:quantum/keyboard.c **** #endif
 479:quantum/keyboard.c **** 
 480:quantum/keyboard.c **** #ifdef OLED_ENABLE
 481:quantum/keyboard.c ****     oled_task();
 482:quantum/keyboard.c **** #    if OLED_TIMEOUT > 0
 483:quantum/keyboard.c ****     // Wake up oled if user is using those fabulous keys or spinning those encoders!
 484:quantum/keyboard.c **** #        ifdef ENCODER_ENABLE
 485:quantum/keyboard.c ****     if (matrix_changed || encoders_changed) oled_on();
 486:quantum/keyboard.c **** #        else
 487:quantum/keyboard.c ****     if (matrix_changed) oled_on();
 488:quantum/keyboard.c **** #        endif
 489:quantum/keyboard.c **** #    endif
 490:quantum/keyboard.c **** #endif
 491:quantum/keyboard.c **** 
 492:quantum/keyboard.c **** #ifdef ST7565_ENABLE
 493:quantum/keyboard.c ****     st7565_task();
 494:quantum/keyboard.c **** #    if ST7565_TIMEOUT > 0
 495:quantum/keyboard.c ****     // Wake up display if user is using those fabulous keys or spinning those encoders!
 496:quantum/keyboard.c **** #        ifdef ENCODER_ENABLE
 497:quantum/keyboard.c ****     if (matrix_changed || encoders_changed) st7565_on();
 498:quantum/keyboard.c **** #        else
 499:quantum/keyboard.c ****     if (matrix_changed) st7565_on();
 500:quantum/keyboard.c **** #        endif
 501:quantum/keyboard.c **** #    endif
 502:quantum/keyboard.c **** #endif
 503:quantum/keyboard.c **** 
 504:quantum/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 505:quantum/keyboard.c ****     // mousekey repeat & acceleration
 506:quantum/keyboard.c ****     mousekey_task();
 507:quantum/keyboard.c **** #endif
 508:quantum/keyboard.c **** 
 509:quantum/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 510:quantum/keyboard.c ****     ps2_mouse_task();
 511:quantum/keyboard.c **** #endif
 512:quantum/keyboard.c **** 
 513:quantum/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 514:quantum/keyboard.c ****     serial_mouse_task();
 515:quantum/keyboard.c **** #endif
 516:quantum/keyboard.c **** 
 517:quantum/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 518:quantum/keyboard.c ****     adb_mouse_task();
 519:quantum/keyboard.c **** #endif
 520:quantum/keyboard.c **** 
 521:quantum/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 522:quantum/keyboard.c ****     serial_link_update();
 523:quantum/keyboard.c **** #endif
 524:quantum/keyboard.c **** 
 525:quantum/keyboard.c **** #ifdef VISUALIZER_ENABLE
 526:quantum/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 527:quantum/keyboard.c **** #endif
 528:quantum/keyboard.c **** 
 529:quantum/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 530:quantum/keyboard.c ****     pointing_device_task();
 531:quantum/keyboard.c **** #endif
 532:quantum/keyboard.c **** 
 533:quantum/keyboard.c **** #ifdef MIDI_ENABLE
 534:quantum/keyboard.c ****     midi_task();
 535:quantum/keyboard.c **** #endif
 536:quantum/keyboard.c **** 
 537:quantum/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 538:quantum/keyboard.c ****     if (velocikey_enabled()) {
 539:quantum/keyboard.c ****         velocikey_decelerate();
 540:quantum/keyboard.c ****     }
 541:quantum/keyboard.c **** #endif
 542:quantum/keyboard.c **** 
 543:quantum/keyboard.c **** #ifdef JOYSTICK_ENABLE
 544:quantum/keyboard.c ****     joystick_task();
 545:quantum/keyboard.c **** #endif
 546:quantum/keyboard.c **** 
 547:quantum/keyboard.c **** #ifdef DIGITIZER_ENABLE
 548:quantum/keyboard.c ****     digitizer_task();
 549:quantum/keyboard.c **** #endif
 550:quantum/keyboard.c **** 
 551:quantum/keyboard.c ****     // update LED
 552:quantum/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 553:quantum/keyboard.c ****         led_status = host_keyboard_leds();
 554:quantum/keyboard.c ****         keyboard_set_leds(led_status);
 555:quantum/keyboard.c ****     }
 556:quantum/keyboard.c **** }
 557:quantum/keyboard.c **** 
 558:quantum/keyboard.c **** /** \brief keyboard set leds
 559:quantum/keyboard.c ****  *
 560:quantum/keyboard.c ****  * FIXME: needs doc
 561:quantum/keyboard.c ****  */
 562:quantum/keyboard.c **** void keyboard_set_leds(uint8_t leds) {
 656              		.loc 1 562 38 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 563:quantum/keyboard.c ****     if (debug_keyboard) {
 660              		.loc 1 563 5 view .LVU83
 562:quantum/keyboard.c ****     if (debug_keyboard) {
 661              		.loc 1 562 38 is_stmt 0 view .LVU84
 662 0000 38B5     		push	{r3, r4, r5, lr}
 663              		.cfi_def_cfa_offset 16
 664              		.cfi_offset 3, -16
 665              		.cfi_offset 4, -12
 666              		.cfi_offset 5, -8
 667              		.cfi_offset 14, -4
 668              		.loc 1 563 9 view .LVU85
 669 0002 0E4D     		ldr	r5, .L58
 670 0004 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 562:quantum/keyboard.c ****     if (debug_keyboard) {
 671              		.loc 1 562 38 view .LVU86
 672 0006 0446     		mov	r4, r0
 673              		.loc 1 563 8 view .LVU87
 674 0008 5807     		lsls	r0, r3, #29
 675              	.LVL22:
 676              		.loc 1 563 8 view .LVU88
 677 000a 11D5     		bpl	.L45
 564:quantum/keyboard.c ****         debug("keyboard_set_led: ");
 678              		.loc 1 564 9 is_stmt 1 view .LVU89
 679              		.loc 1 564 9 view .LVU90
 680 000c D907     		lsls	r1, r3, #31
 681 000e 0FD5     		bpl	.L45
 682              		.loc 1 564 9 discriminator 1 view .LVU91
 683 0010 0B48     		ldr	r0, .L58+4
 684 0012 FFF7FEFF 		bl	printf_
 685              	.LVL23:
 686              		.loc 1 564 9 discriminator 1 view .LVU92
 565:quantum/keyboard.c ****         debug_hex8(leds);
 687              		.loc 1 565 9 discriminator 1 view .LVU93
 688              		.loc 1 565 9 discriminator 1 view .LVU94
 689 0016 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 690 0018 DA07     		lsls	r2, r3, #31
 691 001a 09D5     		bpl	.L45
 692              		.loc 1 565 9 discriminator 1 view .LVU95
 693 001c 0948     		ldr	r0, .L58+8
 694 001e 2146     		mov	r1, r4
 695 0020 FFF7FEFF 		bl	printf_
 696              	.LVL24:
 697              		.loc 1 565 9 discriminator 1 view .LVU96
 566:quantum/keyboard.c ****         debug("\n");
 698              		.loc 1 566 9 discriminator 1 view .LVU97
 699              		.loc 1 566 9 discriminator 1 view .LVU98
 700 0024 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 701 0026 DB07     		lsls	r3, r3, #31
 702 0028 02D5     		bpl	.L45
 703              		.loc 1 566 9 discriminator 1 view .LVU99
 704 002a 0748     		ldr	r0, .L58+12
 705 002c FFF7FEFF 		bl	printf_
 706              	.LVL25:
 707              	.L45:
 708              		.loc 1 566 9 discriminator 3 view .LVU100
 567:quantum/keyboard.c ****     }
 568:quantum/keyboard.c ****     led_set(leds);
 709              		.loc 1 568 5 discriminator 3 view .LVU101
 710 0030 2046     		mov	r0, r4
 569:quantum/keyboard.c **** }
 711              		.loc 1 569 1 is_stmt 0 discriminator 3 view .LVU102
 712 0032 BDE83840 		pop	{r3, r4, r5, lr}
 713              		.cfi_restore 14
 714              		.cfi_restore 5
 715              		.cfi_restore 4
 716              		.cfi_restore 3
 717              		.cfi_def_cfa_offset 0
 568:quantum/keyboard.c **** }
 718              		.loc 1 568 5 discriminator 3 view .LVU103
 719 0036 FFF7FEBF 		b	led_set
 720              	.LVL26:
 721              	.L59:
 722 003a 00BF     		.align	2
 723              	.L58:
 724 003c 00000000 		.word	debug_config
 725 0040 00000000 		.word	.LC0
 726 0044 13000000 		.word	.LC1
 727 0048 18000000 		.word	.LC2
 728              		.cfi_endproc
 729              	.LFE365:
 731              		.section	.text.keyboard_task,"ax",%progbits
 732              		.align	1
 733              		.global	keyboard_task
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
 739              	keyboard_task:
 740              	.LFB364:
 393:quantum/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 741              		.loc 1 393 26 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 8
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 394:quantum/keyboard.c ****     static uint8_t      led_status    = 0;
 745              		.loc 1 394 5 view .LVU105
 395:quantum/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 746              		.loc 1 395 5 view .LVU106
 396:quantum/keyboard.c ****     matrix_row_t        matrix_change = 0;
 747              		.loc 1 396 5 view .LVU107
 748              	.LVL27:
 397:quantum/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 749              		.loc 1 397 5 view .LVU108
 402:quantum/keyboard.c **** #endif
 750              		.loc 1 402 5 view .LVU109
 405:quantum/keyboard.c ****     if (matrix_changed) last_matrix_activity_trigger();
 751              		.loc 1 405 5 view .LVU110
 393:quantum/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 752              		.loc 1 393 26 is_stmt 0 view .LVU111
 753 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 754              		.cfi_def_cfa_offset 48
 755              		.cfi_offset 4, -36
 756              		.cfi_offset 5, -32
 757              		.cfi_offset 6, -28
 758              		.cfi_offset 7, -24
 759              		.cfi_offset 8, -20
 760              		.cfi_offset 9, -16
 761              		.cfi_offset 10, -12
 762              		.cfi_offset 11, -8
 763              		.cfi_offset 14, -4
 405:quantum/keyboard.c ****     if (matrix_changed) last_matrix_activity_trigger();
 764              		.loc 1 405 30 view .LVU112
 765 0004 FFF7FEFF 		bl	matrix_scan
 766              	.LVL28:
 406:quantum/keyboard.c **** 
 767              		.loc 1 406 5 is_stmt 1 view .LVU113
 406:quantum/keyboard.c **** 
 768              		.loc 1 406 8 is_stmt 0 view .LVU114
 769 0008 08B1     		cbz	r0, .L61
 406:quantum/keyboard.c **** 
 770              		.loc 1 406 25 is_stmt 1 discriminator 1 view .LVU115
 771 000a FFF7FEFF 		bl	last_matrix_activity_trigger
 772              	.LVL29:
 773              	.L61:
 406:quantum/keyboard.c **** 
 774              		.loc 1 406 25 is_stmt 0 discriminator 1 view .LVU116
 775 000e DFF8DCA0 		ldr	r10, .L85+4
 776              	.LBB10:
 777              	.LBB11:
 417:quantum/keyboard.c ****             matrix_row_t col_mask = 1;
 778              		.loc 1 417 17 view .LVU117
 779 0012 DFF8DC80 		ldr	r8, .L85+8
 780              	.LBE11:
 781              	.LBE10:
 393:quantum/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 782              		.loc 1 393 26 view .LVU118
 783 0016 0025     		movs	r5, #0
 784 0018 5646     		mov	r6, r10
 785              	.LVL30:
 786              	.L68:
 393:quantum/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 787              		.loc 1 393 26 view .LVU119
 788 001a EFB2     		uxtb	r7, r5
 789              	.LVL31:
 790              	.LBB20:
 409:quantum/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 791              		.loc 1 409 9 is_stmt 1 view .LVU120
 409:quantum/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 792              		.loc 1 409 25 is_stmt 0 view .LVU121
 793 001c 3846     		mov	r0, r7
 794 001e FFF7FEFF 		bl	matrix_get_row
 795              	.LVL32:
 410:quantum/keyboard.c ****         if (matrix_change) {
 796              		.loc 1 410 49 view .LVU122
 797 0022 1AF8014B 		ldrb	r4, [r10], #1	@ zero_extendqisi2
 411:quantum/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 798              		.loc 1 411 12 view .LVU123
 799 0026 8442     		cmp	r4, r0
 409:quantum/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 800              		.loc 1 409 25 view .LVU124
 801 0028 8146     		mov	r9, r0
 802              	.LVL33:
 410:quantum/keyboard.c ****         if (matrix_change) {
 803              		.loc 1 410 9 is_stmt 1 view .LVU125
 411:quantum/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 804              		.loc 1 411 9 view .LVU126
 411:quantum/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 805              		.loc 1 411 12 is_stmt 0 view .LVU127
 806 002a 44D0     		beq	.L62
 807              	.LBB16:
 417:quantum/keyboard.c ****             matrix_row_t col_mask = 1;
 808              		.loc 1 417 13 is_stmt 1 view .LVU128
 417:quantum/keyboard.c ****             matrix_row_t col_mask = 1;
 809              		.loc 1 417 17 is_stmt 0 view .LVU129
 810 002c 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 417:quantum/keyboard.c ****             matrix_row_t col_mask = 1;
 811              		.loc 1 417 16 view .LVU130
 812 0030 9B07     		lsls	r3, r3, #30
 813 0032 01D5     		bpl	.L63
 417:quantum/keyboard.c ****             matrix_row_t col_mask = 1;
 814              		.loc 1 417 31 is_stmt 1 discriminator 1 view .LVU131
 815 0034 FFF7FEFF 		bl	matrix_print
 816              	.LVL34:
 817              	.L63:
 417:quantum/keyboard.c ****             matrix_row_t col_mask = 1;
 818              		.loc 1 417 31 is_stmt 0 discriminator 1 view .LVU132
 819              	.LBE16:
 410:quantum/keyboard.c ****         if (matrix_change) {
 820              		.loc 1 410 23 view .LVU133
 821 0038 84EA0904 		eor	r4, r4, r9
 410:quantum/keyboard.c ****         if (matrix_change) {
 822              		.loc 1 410 23 view .LVU134
 823 003c E3B2     		uxtb	r3, r4
 824              	.LBB17:
 418:quantum/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 825              		.loc 1 418 13 is_stmt 1 view .LVU135
 826              	.LVL35:
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 827              		.loc 1 419 13 view .LVU136
 828              	.LBB12:
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 829              		.loc 1 419 18 view .LVU137
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 830              		.loc 1 419 35 view .LVU138
 831              	.LBE12:
 832              	.LBE17:
 410:quantum/keyboard.c ****         if (matrix_change) {
 833              		.loc 1 410 23 is_stmt 0 view .LVU139
 834 003e 0022     		movs	r2, #0
 835              	.LBB18:
 418:quantum/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 836              		.loc 1 418 26 view .LVU140
 837 0040 0124     		movs	r4, #1
 838              	.LVL36:
 839              	.L67:
 840              	.LBB14:
 420:quantum/keyboard.c ****                     if (should_process_keypress()) {
 841              		.loc 1 420 20 view .LVU141
 842 0042 2342     		tst	r3, r4
 843 0044 5FFA82FB 		uxtb	fp, r2
 844              	.LVL37:
 420:quantum/keyboard.c ****                     if (should_process_keypress()) {
 845              		.loc 1 420 17 is_stmt 1 view .LVU142
 420:quantum/keyboard.c ****                     if (should_process_keypress()) {
 846              		.loc 1 420 20 is_stmt 0 view .LVU143
 847 0048 30D0     		beq	.L64
 421:quantum/keyboard.c ****                         action_exec((keyevent_t){
 848              		.loc 1 421 21 is_stmt 1 view .LVU144
 421:quantum/keyboard.c ****                         action_exec((keyevent_t){
 849              		.loc 1 421 25 is_stmt 0 view .LVU145
 850 004a FFF7FEFF 		bl	should_process_keypress
 851              	.LVL38:
 421:quantum/keyboard.c ****                         action_exec((keyevent_t){
 852              		.loc 1 421 24 view .LVU146
 853 004e A8B1     		cbz	r0, .L65
 854              	.LBB13:
 422:quantum/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 855              		.loc 1 422 25 is_stmt 1 view .LVU147
 423:quantum/keyboard.c ****                         });
 856              		.loc 1 423 91 is_stmt 0 view .LVU148
 857 0050 19EA040F 		tst	r9, r4
 858 0054 14BF     		ite	ne
 859 0056 0123     		movne	r3, #1
 860 0058 0023     		moveq	r3, #0
 861 005a 8DF80230 		strb	r3, [sp, #2]
 422:quantum/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 862              		.loc 1 422 49 view .LVU149
 863 005e 8DF800B0 		strb	fp, [sp]
 864 0062 8DF80170 		strb	r7, [sp, #1]
 423:quantum/keyboard.c ****                         });
 865              		.loc 1 423 113 view .LVU150
 866 0066 FFF7FEFF 		bl	timer_read
 867              	.LVL39:
 422:quantum/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 868              		.loc 1 422 49 view .LVU151
 869 006a 40F00100 		orr	r0, r0, #1
 870 006e ADF80400 		strh	r0, [sp, #4]	@ movhi
 422:quantum/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 871              		.loc 1 422 25 view .LVU152
 872 0072 02AB     		add	r3, sp, #8
 873 0074 13E90300 		ldmdb	r3, {r0, r1}
 874 0078 FFF7FEFF 		bl	action_exec
 875              	.LVL40:
 876              	.L65:
 422:quantum/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 877              		.loc 1 422 25 view .LVU153
 878              	.LBE13:
 427:quantum/keyboard.c **** 
 879              		.loc 1 427 21 is_stmt 1 view .LVU154
 427:quantum/keyboard.c **** 
 880              		.loc 1 427 36 is_stmt 0 view .LVU155
 881 007c 735D     		ldrb	r3, [r6, r5]	@ zero_extendqisi2
 882 007e 6340     		eors	r3, r3, r4
 883 0080 7355     		strb	r3, [r6, r5]
 429:quantum/keyboard.c **** 
 884              		.loc 1 429 21 is_stmt 1 view .LVU156
 436:quantum/keyboard.c ****                 }
 885              		.loc 1 436 25 view .LVU157
 886              	.LVL41:
 887              	.L66:
 436:quantum/keyboard.c ****                 }
 888              		.loc 1 436 25 is_stmt 0 view .LVU158
 889              	.LBE14:
 890              	.LBE18:
 891              	.LBE20:
 455:quantum/keyboard.c **** #endif
 892              		.loc 1 455 20 is_stmt 1 view .LVU159
 472:quantum/keyboard.c ****     if (encoders_changed) last_encoder_activity_trigger();
 893              		.loc 1 472 5 view .LVU160
 472:quantum/keyboard.c ****     if (encoders_changed) last_encoder_activity_trigger();
 894              		.loc 1 472 24 is_stmt 0 view .LVU161
 895 0082 FFF7FEFF 		bl	encoder_read
 896              	.LVL42:
 473:quantum/keyboard.c **** #endif
 897              		.loc 1 473 5 is_stmt 1 view .LVU162
 473:quantum/keyboard.c **** #endif
 898              		.loc 1 473 8 is_stmt 0 view .LVU163
 899 0086 08B1     		cbz	r0, .L69
 473:quantum/keyboard.c **** #endif
 900              		.loc 1 473 27 is_stmt 1 discriminator 1 view .LVU164
 901 0088 FFF7FEFF 		bl	last_encoder_activity_trigger
 902              	.LVL43:
 903              	.L69:
 506:quantum/keyboard.c **** #endif
 904              		.loc 1 506 5 view .LVU165
 552:quantum/keyboard.c ****         led_status = host_keyboard_leds();
 905              		.loc 1 552 20 is_stmt 0 view .LVU166
 906 008c 164C     		ldr	r4, .L85
 506:quantum/keyboard.c **** #endif
 907              		.loc 1 506 5 view .LVU167
 908 008e FFF7FEFF 		bl	mousekey_task
 909              	.LVL44:
 552:quantum/keyboard.c ****         led_status = host_keyboard_leds();
 910              		.loc 1 552 5 is_stmt 1 view .LVU168
 552:quantum/keyboard.c ****         led_status = host_keyboard_leds();
 911              		.loc 1 552 23 is_stmt 0 view .LVU169
 912 0092 FFF7FEFF 		bl	host_keyboard_leds
 913              	.LVL45:
 552:quantum/keyboard.c ****         led_status = host_keyboard_leds();
 914              		.loc 1 552 8 view .LVU170
 915 0096 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 916 0098 8342     		cmp	r3, r0
 917 009a 22D0     		beq	.L60
 553:quantum/keyboard.c ****         keyboard_set_leds(led_status);
 918              		.loc 1 553 9 is_stmt 1 view .LVU171
 553:quantum/keyboard.c ****         keyboard_set_leds(led_status);
 919              		.loc 1 553 22 is_stmt 0 view .LVU172
 920 009c FFF7FEFF 		bl	host_keyboard_leds
 921              	.LVL46:
 553:quantum/keyboard.c ****         keyboard_set_leds(led_status);
 922              		.loc 1 553 20 view .LVU173
 923 00a0 2070     		strb	r0, [r4]
 554:quantum/keyboard.c ****     }
 924              		.loc 1 554 9 is_stmt 1 view .LVU174
 556:quantum/keyboard.c **** 
 925              		.loc 1 556 1 is_stmt 0 view .LVU175
 926 00a2 03B0     		add	sp, sp, #12
 927              		.cfi_remember_state
 928              		.cfi_def_cfa_offset 36
 929              		@ sp needed
 930 00a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 931              		.cfi_restore 14
 932              		.cfi_restore 11
 933              		.cfi_restore 10
 934              		.cfi_restore 9
 935              		.cfi_restore 8
 936              		.cfi_restore 7
 937              		.cfi_restore 6
 938              		.cfi_restore 5
 939              		.cfi_restore 4
 940              		.cfi_def_cfa_offset 0
 554:quantum/keyboard.c ****     }
 941              		.loc 1 554 9 view .LVU176
 942 00a8 FFF7FEBF 		b	keyboard_set_leds
 943              	.LVL47:
 944              	.L64:
 945              		.cfi_restore_state
 946              	.LBB21:
 947              	.LBB19:
 948              	.LBB15:
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 949              		.loc 1 419 53 is_stmt 1 discriminator 2 view .LVU177
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 950              		.loc 1 419 35 is_stmt 0 discriminator 2 view .LVU178
 951 00ac 0132     		adds	r2, r2, #1
 952              	.LVL48:
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 953              		.loc 1 419 64 discriminator 2 view .LVU179
 954 00ae 6400     		lsls	r4, r4, #1
 955              	.LVL49:
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 956              		.loc 1 419 35 discriminator 2 view .LVU180
 957 00b0 062A     		cmp	r2, #6
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 958              		.loc 1 419 64 discriminator 2 view .LVU181
 959 00b2 E4B2     		uxtb	r4, r4
 960              	.LVL50:
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 961              		.loc 1 419 35 is_stmt 1 discriminator 2 view .LVU182
 962 00b4 C5D1     		bne	.L67
 963              	.LVL51:
 964              	.L62:
 419:quantum/keyboard.c ****                 if (matrix_change & col_mask) {
 965              		.loc 1 419 35 is_stmt 0 discriminator 2 view .LVU183
 966              	.LBE15:
 967              	.LBE19:
 408:quantum/keyboard.c ****         matrix_row    = matrix_get_row(r);
 968              		.loc 1 408 43 is_stmt 1 view .LVU184
 408:quantum/keyboard.c ****         matrix_row    = matrix_get_row(r);
 969              		.loc 1 408 27 view .LVU185
 970 00b6 0135     		adds	r5, r5, #1
 971              	.LVL52:
 408:quantum/keyboard.c ****         matrix_row    = matrix_get_row(r);
 972              		.loc 1 408 27 is_stmt 0 view .LVU186
 973 00b8 082D     		cmp	r5, #8
 974 00ba AED1     		bne	.L68
 975              	.LBE21:
 446:quantum/keyboard.c **** 
 976              		.loc 1 446 9 is_stmt 1 view .LVU187
 446:quantum/keyboard.c **** 
 977              		.loc 1 446 21 is_stmt 0 view .LVU188
 978 00bc 4FF6FF73 		movw	r3, #65535
 979 00c0 ADF80030 		strh	r3, [sp]	@ movhi
 980 00c4 0023     		movs	r3, #0
 981 00c6 8DF80230 		strb	r3, [sp, #2]
 982 00ca FFF7FEFF 		bl	timer_read
 983              	.LVL53:
 984 00ce 40F00100 		orr	r0, r0, #1
 985 00d2 ADF80400 		strh	r0, [sp, #4]	@ movhi
 446:quantum/keyboard.c **** 
 986              		.loc 1 446 9 view .LVU189
 987 00d6 02AB     		add	r3, sp, #8
 988 00d8 13E90300 		ldmdb	r3, {r0, r1}
 989 00dc FFF7FEFF 		bl	action_exec
 990              	.LVL54:
 991 00e0 CFE7     		b	.L66
 992              	.LVL55:
 993              	.L60:
 556:quantum/keyboard.c **** 
 994              		.loc 1 556 1 view .LVU190
 995 00e2 03B0     		add	sp, sp, #12
 996              		.cfi_def_cfa_offset 36
 997              		@ sp needed
 998 00e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 999              	.L86:
 1000              		.align	2
 1001              	.L85:
 1002 00e8 00000000 		.word	.LANCHOR4
 1003 00ec 00000000 		.word	.LANCHOR3
 1004 00f0 00000000 		.word	debug_config
 1005              		.cfi_endproc
 1006              	.LFE364:
 1008              		.section	.bss.last_encoder_modification_time,"aw",%nobits
 1009              		.align	2
 1010              		.set	.LANCHOR2,. + 0
 1013              	last_encoder_modification_time:
 1014 0000 00000000 		.space	4
 1015              		.section	.bss.last_input_modification_time,"aw",%nobits
 1016              		.align	2
 1017              		.set	.LANCHOR0,. + 0
 1020              	last_input_modification_time:
 1021 0000 00000000 		.space	4
 1022              		.section	.bss.last_matrix_modification_time,"aw",%nobits
 1023              		.align	2
 1024              		.set	.LANCHOR1,. + 0
 1027              	last_matrix_modification_time:
 1028 0000 00000000 		.space	4
 1029              		.section	.bss.led_status.0,"aw",%nobits
 1030              		.set	.LANCHOR4,. + 0
 1033              	led_status.0:
 1034 0000 00       		.space	1
 1035              		.section	.bss.matrix_prev.1,"aw",%nobits
 1036              		.set	.LANCHOR3,. + 0
 1039              	matrix_prev.1:
 1040 0000 00000000 		.space	8
 1040      00000000 
 1041              		.text
 1042              	.Letext0:
 1043              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1044              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1045              		.file 4 "quantum/keyboard.h"
 1046              		.file 5 "quantum/matrix.h"
 1047              		.file 6 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 1048              		.file 7 "quantum/logging/sendchar.h"
 1049              		.file 8 "quantum/logging/debug.h"
 1050              		.file 9 "tmk_core/common/host.h"
 1051              		.file 10 "quantum/encoder.h"
 1052              		.file 11 "quantum/led.h"
 1053              		.file 12 "quantum/action.h"
 1054              		.file 13 "tmk_core/common/timer.h"
 1055              		.file 14 "quantum/mousekey.h"
 1056              		.file 15 "lib/printf/printf.h"
 1057              		.file 16 "quantum/dip_switch.h"
 1058              		.file 17 "quantum/rgblight/rgblight.h"
 1059              		.file 18 "tmk_core/common/chibios/eeprom_stm32.h"
 1060              		.file 19 "quantum/logging/print.h"
 1061              		.file 20 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccTdhJto.s:18     .text.last_input_activity_time:0000000000000000 $t
     /tmp/ccTdhJto.s:26     .text.last_input_activity_time:0000000000000000 last_input_activity_time
     /tmp/ccTdhJto.s:42     .text.last_input_activity_time:0000000000000008 $d
     /tmp/ccTdhJto.s:47     .text.last_input_activity_elapsed:0000000000000000 $t
     /tmp/ccTdhJto.s:54     .text.last_input_activity_elapsed:0000000000000000 last_input_activity_elapsed
     /tmp/ccTdhJto.s:70     .text.last_input_activity_elapsed:0000000000000008 $d
     /tmp/ccTdhJto.s:75     .text.last_matrix_activity_time:0000000000000000 $t
     /tmp/ccTdhJto.s:82     .text.last_matrix_activity_time:0000000000000000 last_matrix_activity_time
     /tmp/ccTdhJto.s:97     .text.last_matrix_activity_time:0000000000000008 $d
     /tmp/ccTdhJto.s:102    .text.last_matrix_activity_elapsed:0000000000000000 $t
     /tmp/ccTdhJto.s:109    .text.last_matrix_activity_elapsed:0000000000000000 last_matrix_activity_elapsed
     /tmp/ccTdhJto.s:125    .text.last_matrix_activity_elapsed:0000000000000008 $d
     /tmp/ccTdhJto.s:130    .text.last_matrix_activity_trigger:0000000000000000 $t
     /tmp/ccTdhJto.s:137    .text.last_matrix_activity_trigger:0000000000000000 last_matrix_activity_trigger
     /tmp/ccTdhJto.s:163    .text.last_matrix_activity_trigger:0000000000000010 $d
     /tmp/ccTdhJto.s:169    .text.last_encoder_activity_time:0000000000000000 $t
     /tmp/ccTdhJto.s:176    .text.last_encoder_activity_time:0000000000000000 last_encoder_activity_time
     /tmp/ccTdhJto.s:191    .text.last_encoder_activity_time:0000000000000008 $d
     /tmp/ccTdhJto.s:196    .text.last_encoder_activity_elapsed:0000000000000000 $t
     /tmp/ccTdhJto.s:203    .text.last_encoder_activity_elapsed:0000000000000000 last_encoder_activity_elapsed
     /tmp/ccTdhJto.s:219    .text.last_encoder_activity_elapsed:0000000000000008 $d
     /tmp/ccTdhJto.s:224    .text.last_encoder_activity_trigger:0000000000000000 $t
     /tmp/ccTdhJto.s:231    .text.last_encoder_activity_trigger:0000000000000000 last_encoder_activity_trigger
     /tmp/ccTdhJto.s:257    .text.last_encoder_activity_trigger:0000000000000010 $d
     /tmp/ccTdhJto.s:263    .text.disable_jtag:0000000000000000 $t
     /tmp/ccTdhJto.s:270    .text.disable_jtag:0000000000000000 disable_jtag
     /tmp/ccTdhJto.s:283    .text.matrix_setup:0000000000000000 $t
     /tmp/ccTdhJto.s:290    .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/ccTdhJto.s:301    .text.keyboard_pre_init_user:0000000000000000 $t
     /tmp/ccTdhJto.s:308    .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
     /tmp/ccTdhJto.s:321    .text.keyboard_pre_init_kb:0000000000000000 $t
     /tmp/ccTdhJto.s:328    .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
     /tmp/ccTdhJto.s:349    .text.keyboard_post_init_user:0000000000000000 $t
     /tmp/ccTdhJto.s:356    .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
     /tmp/ccTdhJto.s:367    .text.keyboard_post_init_kb:0000000000000000 $t
     /tmp/ccTdhJto.s:374    .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
     /tmp/ccTdhJto.s:395    .text.keyboard_setup:0000000000000000 $t
     /tmp/ccTdhJto.s:402    .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccTdhJto.s:433    .text.keyboard_setup:0000000000000018 $d
     /tmp/ccTdhJto.s:438    .text.is_keyboard_master:0000000000000000 $t
     /tmp/ccTdhJto.s:445    .text.is_keyboard_master:0000000000000000 is_keyboard_master
     /tmp/ccTdhJto.s:460    .text.is_keyboard_left:0000000000000000 $t
     /tmp/ccTdhJto.s:467    .text.is_keyboard_left:0000000000000000 is_keyboard_left
     /tmp/ccTdhJto.s:479    .text.should_process_keypress:0000000000000000 $t
     /tmp/ccTdhJto.s:486    .text.should_process_keypress:0000000000000000 should_process_keypress
     /tmp/ccTdhJto.s:507    .text.housekeeping_task_kb:0000000000000000 $t
     /tmp/ccTdhJto.s:514    .text.housekeeping_task_kb:0000000000000000 housekeeping_task_kb
     /tmp/ccTdhJto.s:525    .text.housekeeping_task_user:0000000000000000 $t
     /tmp/ccTdhJto.s:532    .text.housekeeping_task_user:0000000000000000 housekeeping_task_user
     /tmp/ccTdhJto.s:543    .text.housekeeping_task:0000000000000000 $t
     /tmp/ccTdhJto.s:550    .text.housekeeping_task:0000000000000000 housekeeping_task
     /tmp/ccTdhJto.s:574    .text.keyboard_init:0000000000000000 $t
     /tmp/ccTdhJto.s:581    .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccTdhJto.s:618    .text.switch_events:0000000000000000 $t
     /tmp/ccTdhJto.s:625    .text.switch_events:0000000000000000 switch_events
     /tmp/ccTdhJto.s:646    .text.keyboard_set_leds:0000000000000000 $t
     /tmp/ccTdhJto.s:653    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
     /tmp/ccTdhJto.s:724    .text.keyboard_set_leds:000000000000003c $d
     /tmp/ccTdhJto.s:732    .text.keyboard_task:0000000000000000 $t
     /tmp/ccTdhJto.s:739    .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccTdhJto.s:1002   .text.keyboard_task:00000000000000e8 $d
     /tmp/ccTdhJto.s:1009   .bss.last_encoder_modification_time:0000000000000000 $d
     /tmp/ccTdhJto.s:1013   .bss.last_encoder_modification_time:0000000000000000 last_encoder_modification_time
     /tmp/ccTdhJto.s:1016   .bss.last_input_modification_time:0000000000000000 $d
     /tmp/ccTdhJto.s:1020   .bss.last_input_modification_time:0000000000000000 last_input_modification_time
     /tmp/ccTdhJto.s:1023   .bss.last_matrix_modification_time:0000000000000000 $d
     /tmp/ccTdhJto.s:1027   .bss.last_matrix_modification_time:0000000000000000 last_matrix_modification_time
     /tmp/ccTdhJto.s:1033   .bss.led_status.0:0000000000000000 led_status.0
     /tmp/ccTdhJto.s:1034   .bss.led_status.0:0000000000000000 $d
     /tmp/ccTdhJto.s:1039   .bss.matrix_prev.1:0000000000000000 matrix_prev.1
     /tmp/ccTdhJto.s:1040   .bss.matrix_prev.1:0000000000000000 $d

UNDEFINED SYMBOLS
timer_elapsed32
timer_read32
print_set_sendchar
EEPROM_Init
sendchar
timer_init
matrix_init
rgblight_init
encoder_init
dip_switch_init
printf_
led_set
debug_config
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
encoder_read
mousekey_task
host_keyboard_leds
