   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"quantum.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.extract_mod_bits,"ax",%progbits
  18              		.align	1
  19              		.global	extract_mod_bits
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	extract_mod_bits:
  27              	.LVL0:
  28              	.LFB341:
  29              		.file 1 "quantum/quantum.c"
   1:quantum/quantum.c **** /* Copyright 2016-2017 Jack Humbert
   2:quantum/quantum.c ****  *
   3:quantum/quantum.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/quantum.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/quantum.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/quantum.c ****  * (at your option) any later version.
   7:quantum/quantum.c ****  *
   8:quantum/quantum.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/quantum.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/quantum.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/quantum.c ****  * GNU General Public License for more details.
  12:quantum/quantum.c ****  *
  13:quantum/quantum.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/quantum.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/quantum.c ****  */
  16:quantum/quantum.c **** 
  17:quantum/quantum.c **** #include "quantum.h"
  18:quantum/quantum.c **** #include "magic.h"
  19:quantum/quantum.c **** 
  20:quantum/quantum.c **** #ifdef BLUETOOTH_ENABLE
  21:quantum/quantum.c **** #    include "outputselect.h"
  22:quantum/quantum.c **** #endif
  23:quantum/quantum.c **** 
  24:quantum/quantum.c **** #ifdef BACKLIGHT_ENABLE
  25:quantum/quantum.c **** #    include "backlight.h"
  26:quantum/quantum.c **** #endif
  27:quantum/quantum.c **** 
  28:quantum/quantum.c **** #ifdef API_ENABLE
  29:quantum/quantum.c **** #    include "api.h"
  30:quantum/quantum.c **** #endif
  31:quantum/quantum.c **** 
  32:quantum/quantum.c **** #ifdef MIDI_ENABLE
  33:quantum/quantum.c **** #    include "process_midi.h"
  34:quantum/quantum.c **** #endif
  35:quantum/quantum.c **** 
  36:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
  37:quantum/quantum.c **** #    include "velocikey.h"
  38:quantum/quantum.c **** #endif
  39:quantum/quantum.c **** 
  40:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
  41:quantum/quantum.c **** #    include "haptic.h"
  42:quantum/quantum.c **** #endif
  43:quantum/quantum.c **** 
  44:quantum/quantum.c **** #ifdef AUDIO_ENABLE
  45:quantum/quantum.c **** #    ifndef GOODBYE_SONG
  46:quantum/quantum.c **** #        define GOODBYE_SONG SONG(GOODBYE_SOUND)
  47:quantum/quantum.c **** #    endif
  48:quantum/quantum.c **** float goodbye_song[][2] = GOODBYE_SONG;
  49:quantum/quantum.c **** #    ifdef DEFAULT_LAYER_SONGS
  50:quantum/quantum.c **** float default_layer_songs[][16][2] = DEFAULT_LAYER_SONGS;
  51:quantum/quantum.c **** #    endif
  52:quantum/quantum.c **** #endif
  53:quantum/quantum.c **** 
  54:quantum/quantum.c **** #ifdef AUTO_SHIFT_ENABLE
  55:quantum/quantum.c **** #    include "process_auto_shift.h"
  56:quantum/quantum.c **** #endif
  57:quantum/quantum.c **** 
  58:quantum/quantum.c **** uint8_t extract_mod_bits(uint16_t code) {
  30              		.loc 1 58 41 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  59:quantum/quantum.c ****     switch (code) {
  34              		.loc 1 59 5 view .LVU1
  35 0000 A0F58073 		sub	r3, r0, #256
  36 0004 B3F5F85F 		cmp	r3, #7936
  58:quantum/quantum.c ****     switch (code) {
  37              		.loc 1 58 41 is_stmt 0 view .LVU2
  38 0008 10B5     		push	{r4, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42              		.loc 1 59 5 view .LVU3
  43 000a 21D2     		bcs	.L8
  44              	.LVL1:
  45              	.LBB4:
  46              	.LBI4:
  58:quantum/quantum.c ****     switch (code) {
  47              		.loc 1 58 9 is_stmt 1 view .LVU4
  48              	.LBB5:
  60:quantum/quantum.c ****         case QK_MODS ... QK_MODS_MAX:
  61:quantum/quantum.c ****             break;
  49              		.loc 1 61 13 view .LVU5
  62:quantum/quantum.c ****         default:
  63:quantum/quantum.c ****             return 0;
  64:quantum/quantum.c ****     }
  65:quantum/quantum.c **** 
  66:quantum/quantum.c ****     uint8_t mods_to_send = 0;
  50              		.loc 1 66 5 view .LVU6
  67:quantum/quantum.c **** 
  68:quantum/quantum.c ****     if (code & QK_RMODS_MIN) {  // Right mod flag is set
  51              		.loc 1 68 5 view .LVU7
  52              		.loc 1 68 8 is_stmt 0 view .LVU8
  53 000c 10F4805F 		tst	r0, #4096
  54 0010 00F40074 		and	r4, r0, #512
  69:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_RCTL);
  55              		.loc 1 69 12 view .LVU9
  56 0014 C0F30023 		ubfx	r3, r0, #8, #1
  57 0018 00F48061 		and	r1, r0, #1024
  58 001c 00F40062 		and	r2, r0, #2048
  68:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_RCTL);
  59              		.loc 1 68 8 view .LVU10
  60 0020 0AD0     		beq	.L3
  61              		.loc 1 69 9 is_stmt 1 view .LVU11
  62              		.loc 1 69 12 is_stmt 0 view .LVU12
  63 0022 1801     		lsls	r0, r3, #4
  64              	.LVL2:
  70:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_RSFT);
  65              		.loc 1 70 9 is_stmt 1 view .LVU13
  66              		.loc 1 70 12 is_stmt 0 view .LVU14
  67 0024 0CB1     		cbz	r4, .L4
  68              		.loc 1 70 29 is_stmt 1 view .LVU15
  69              		.loc 1 70 42 is_stmt 0 view .LVU16
  70 0026 40F02000 		orr	r0, r0, #32
  71              	.LVL3:
  72              	.L4:
  71:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_RALT);
  73              		.loc 1 71 9 is_stmt 1 view .LVU17
  74              		.loc 1 71 12 is_stmt 0 view .LVU18
  75 002a 09B1     		cbz	r1, .L5
  76              		.loc 1 71 29 is_stmt 1 view .LVU19
  77              		.loc 1 71 42 is_stmt 0 view .LVU20
  78 002c 40F04000 		orr	r0, r0, #64
  79              	.LVL4:
  80              	.L5:
  72:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_RGUI);
  81              		.loc 1 72 9 is_stmt 1 view .LVU21
  82              		.loc 1 72 12 is_stmt 0 view .LVU22
  83 0030 0AB1     		cbz	r2, .L2
  84              		.loc 1 72 29 is_stmt 1 view .LVU23
  85              		.loc 1 72 42 is_stmt 0 view .LVU24
  86 0032 40F08000 		orr	r0, r0, #128
  87              	.LVL5:
  88              	.L2:
  89              		.loc 1 72 42 view .LVU25
  90              	.LBE5:
  91              	.LBE4:
  73:quantum/quantum.c ****     } else {
  74:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_LCTL);
  75:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_LSFT);
  76:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
  77:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
  78:quantum/quantum.c ****     }
  79:quantum/quantum.c **** 
  80:quantum/quantum.c ****     return mods_to_send;
  81:quantum/quantum.c **** }
  92              		.loc 1 81 1 view .LVU26
  93 0036 10BD     		pop	{r4, pc}
  94              	.LVL6:
  95              	.L3:
  96              	.LBB7:
  97              	.LBB6:
  74:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_LSFT);
  98              		.loc 1 74 9 is_stmt 1 view .LVU27
  66:quantum/quantum.c **** 
  99              		.loc 1 66 13 is_stmt 0 view .LVU28
 100 0038 1846     		mov	r0, r3
 101              	.LVL7:
  75:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 102              		.loc 1 75 9 is_stmt 1 view .LVU29
  75:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 103              		.loc 1 75 12 is_stmt 0 view .LVU30
 104 003a 0CB1     		cbz	r4, .L6
  75:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 105              		.loc 1 75 29 is_stmt 1 view .LVU31
  75:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 106              		.loc 1 75 42 is_stmt 0 view .LVU32
 107 003c 43F00200 		orr	r0, r3, #2
 108              	.LVL8:
 109              	.L6:
  76:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 110              		.loc 1 76 9 is_stmt 1 view .LVU33
  76:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 111              		.loc 1 76 12 is_stmt 0 view .LVU34
 112 0040 09B1     		cbz	r1, .L7
  76:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 113              		.loc 1 76 29 is_stmt 1 view .LVU35
  76:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 114              		.loc 1 76 42 is_stmt 0 view .LVU36
 115 0042 40F00400 		orr	r0, r0, #4
 116              	.LVL9:
 117              	.L7:
  77:quantum/quantum.c ****     }
 118              		.loc 1 77 9 is_stmt 1 view .LVU37
  77:quantum/quantum.c ****     }
 119              		.loc 1 77 12 is_stmt 0 view .LVU38
 120 0046 002A     		cmp	r2, #0
 121 0048 F5D0     		beq	.L2
  77:quantum/quantum.c ****     }
 122              		.loc 1 77 29 is_stmt 1 view .LVU39
  77:quantum/quantum.c ****     }
 123              		.loc 1 77 42 is_stmt 0 view .LVU40
 124 004a 40F00800 		orr	r0, r0, #8
 125              	.LVL10:
  77:quantum/quantum.c ****     }
 126              		.loc 1 77 42 view .LVU41
 127 004e F2E7     		b	.L2
 128              	.LVL11:
 129              	.L8:
  77:quantum/quantum.c ****     }
 130              		.loc 1 77 42 view .LVU42
 131              	.LBE6:
 132              	.LBE7:
  63:quantum/quantum.c ****     }
 133              		.loc 1 63 20 view .LVU43
 134 0050 0020     		movs	r0, #0
 135              	.LVL12:
  63:quantum/quantum.c ****     }
 136              		.loc 1 63 20 view .LVU44
 137 0052 F0E7     		b	.L2
 138              		.cfi_endproc
 139              	.LFE341:
 141              		.section	.text.do_code16,"ax",%progbits
 142              		.align	1
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	do_code16:
 149              	.LVL13:
 150              	.LFB342:
  82:quantum/quantum.c **** 
  83:quantum/quantum.c **** static void do_code16(uint16_t code, void (*f)(uint8_t)) { f(extract_mod_bits(code)); }
 151              		.loc 1 83 58 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 83 60 view .LVU46
 156              		.loc 1 83 58 is_stmt 0 view .LVU47
 157 0000 10B5     		push	{r4, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 14, -4
 161              		.loc 1 83 58 view .LVU48
 162 0002 0C46     		mov	r4, r1
 163              		.loc 1 83 60 view .LVU49
 164 0004 FFF7FEFF 		bl	extract_mod_bits
 165              	.LVL14:
 166              		.loc 1 83 60 view .LVU50
 167 0008 2346     		mov	r3, r4
 168              		.loc 1 83 87 view .LVU51
 169 000a BDE81040 		pop	{r4, lr}
 170              		.cfi_restore 14
 171              		.cfi_restore 4
 172              		.cfi_def_cfa_offset 0
 173              	.LVL15:
 174              		.loc 1 83 60 view .LVU52
 175 000e 1847     		bx	r3	@ indirect register sibling call
 176              	.LVL16:
 177              		.loc 1 83 60 view .LVU53
 178              		.cfi_endproc
 179              	.LFE342:
 181              		.section	.text.register_code16,"ax",%progbits
 182              		.align	1
 183              		.global	register_code16
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	register_code16:
 190              	.LVL17:
 191              	.LFB343:
  84:quantum/quantum.c **** 
  85:quantum/quantum.c **** void register_code16(uint16_t code) {
 192              		.loc 1 85 37 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
  86:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 196              		.loc 1 86 5 view .LVU55
 197              		.loc 1 86 8 is_stmt 0 view .LVU56
 198 0000 A0F1E003 		sub	r3, r0, #224
 199 0004 072B     		cmp	r3, #7
  85:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 200              		.loc 1 85 37 view .LVU57
 201 0006 10B5     		push	{r4, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
  85:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 205              		.loc 1 85 37 view .LVU58
 206 0008 0446     		mov	r4, r0
 207              		.loc 1 86 8 view .LVU59
 208 000a 00D9     		bls	.L29
 209              		.loc 1 86 22 discriminator 1 view .LVU60
 210 000c 40B9     		cbnz	r0, .L30
 211              	.L29:
  87:quantum/quantum.c ****         do_code16(code, register_mods);
 212              		.loc 1 87 9 is_stmt 1 view .LVU61
 213 000e 0549     		ldr	r1, .L33
 214 0010 2046     		mov	r0, r4
 215              	.LVL18:
 216              	.L32:
  88:quantum/quantum.c ****     } else {
  89:quantum/quantum.c ****         do_code16(code, register_weak_mods);
 217              		.loc 1 89 9 is_stmt 0 view .LVU62
 218 0012 FFF7FEFF 		bl	do_code16
 219              	.LVL19:
  90:quantum/quantum.c ****     }
  91:quantum/quantum.c ****     register_code(code);
 220              		.loc 1 91 5 is_stmt 1 view .LVU63
 221 0016 E0B2     		uxtb	r0, r4
  92:quantum/quantum.c **** }
 222              		.loc 1 92 1 is_stmt 0 view .LVU64
 223 0018 BDE81040 		pop	{r4, lr}
 224              		.cfi_remember_state
 225              		.cfi_restore 14
 226              		.cfi_restore 4
 227              		.cfi_def_cfa_offset 0
  91:quantum/quantum.c **** }
 228              		.loc 1 91 5 view .LVU65
 229 001c FFF7FEBF 		b	register_code
 230              	.LVL20:
 231              	.L30:
 232              		.cfi_restore_state
  89:quantum/quantum.c ****     }
 233              		.loc 1 89 9 is_stmt 1 view .LVU66
 234 0020 0149     		ldr	r1, .L33+4
 235 0022 F6E7     		b	.L32
 236              	.L34:
 237              		.align	2
 238              	.L33:
 239 0024 00000000 		.word	register_mods
 240 0028 00000000 		.word	register_weak_mods
 241              		.cfi_endproc
 242              	.LFE343:
 244              		.section	.text.unregister_code16,"ax",%progbits
 245              		.align	1
 246              		.global	unregister_code16
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv4-sp-d16
 252              	unregister_code16:
 253              	.LVL21:
 254              	.LFB344:
  93:quantum/quantum.c **** 
  94:quantum/quantum.c **** void unregister_code16(uint16_t code) {
 255              		.loc 1 94 39 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
  95:quantum/quantum.c ****     unregister_code(code);
 259              		.loc 1 95 5 view .LVU68
  94:quantum/quantum.c ****     unregister_code(code);
 260              		.loc 1 94 39 is_stmt 0 view .LVU69
 261 0000 10B5     		push	{r4, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 4, -8
 264              		.cfi_offset 14, -4
  94:quantum/quantum.c ****     unregister_code(code);
 265              		.loc 1 94 39 view .LVU70
 266 0002 0446     		mov	r4, r0
 267              		.loc 1 95 5 view .LVU71
 268 0004 C0B2     		uxtb	r0, r0
 269              	.LVL22:
 270              		.loc 1 95 5 view .LVU72
 271 0006 FFF7FEFF 		bl	unregister_code
 272              	.LVL23:
  96:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 273              		.loc 1 96 5 is_stmt 1 view .LVU73
 274              		.loc 1 96 8 is_stmt 0 view .LVU74
 275 000a A4F1E003 		sub	r3, r4, #224
 276 000e 072B     		cmp	r3, #7
 277 0010 00D9     		bls	.L36
 278              		.loc 1 96 22 discriminator 1 view .LVU75
 279 0012 2CB9     		cbnz	r4, .L37
 280              	.L36:
  97:quantum/quantum.c ****         do_code16(code, unregister_mods);
 281              		.loc 1 97 9 is_stmt 1 view .LVU76
 282 0014 0349     		ldr	r1, .L39
 283              	.L38:
  98:quantum/quantum.c ****     } else {
  99:quantum/quantum.c ****         do_code16(code, unregister_weak_mods);
 284              		.loc 1 99 9 is_stmt 0 view .LVU77
 285 0016 2046     		mov	r0, r4
 100:quantum/quantum.c ****     }
 101:quantum/quantum.c **** }
 286              		.loc 1 101 1 view .LVU78
 287 0018 BDE81040 		pop	{r4, lr}
 288              		.cfi_remember_state
 289              		.cfi_restore 14
 290              		.cfi_restore 4
 291              		.cfi_def_cfa_offset 0
  99:quantum/quantum.c ****     }
 292              		.loc 1 99 9 view .LVU79
 293 001c FFF7FEBF 		b	do_code16
 294              	.LVL24:
 295              	.L37:
 296              		.cfi_restore_state
  99:quantum/quantum.c ****     }
 297              		.loc 1 99 9 is_stmt 1 view .LVU80
 298 0020 0149     		ldr	r1, .L39+4
 299 0022 F8E7     		b	.L38
 300              	.L40:
 301              		.align	2
 302              	.L39:
 303 0024 00000000 		.word	unregister_mods
 304 0028 00000000 		.word	unregister_weak_mods
 305              		.cfi_endproc
 306              	.LFE344:
 308              		.section	.text.tap_code16,"ax",%progbits
 309              		.align	1
 310              		.global	tap_code16
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu fpv4-sp-d16
 316              	tap_code16:
 317              	.LVL25:
 318              	.LFB345:
 102:quantum/quantum.c **** 
 103:quantum/quantum.c **** void tap_code16(uint16_t code) {
 319              		.loc 1 103 32 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 104:quantum/quantum.c ****     register_code16(code);
 323              		.loc 1 104 5 view .LVU82
 103:quantum/quantum.c ****     register_code16(code);
 324              		.loc 1 103 32 is_stmt 0 view .LVU83
 325 0000 10B5     		push	{r4, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 103:quantum/quantum.c ****     register_code16(code);
 329              		.loc 1 103 32 view .LVU84
 330 0002 0446     		mov	r4, r0
 331              		.loc 1 104 5 view .LVU85
 332 0004 FFF7FEFF 		bl	register_code16
 333              	.LVL26:
 105:quantum/quantum.c **** #if TAP_CODE_DELAY > 0
 106:quantum/quantum.c ****     wait_ms(TAP_CODE_DELAY);
 107:quantum/quantum.c **** #endif
 108:quantum/quantum.c ****     unregister_code16(code);
 334              		.loc 1 108 5 is_stmt 1 view .LVU86
 335 0008 2046     		mov	r0, r4
 109:quantum/quantum.c **** }
 336              		.loc 1 109 1 is_stmt 0 view .LVU87
 337 000a BDE81040 		pop	{r4, lr}
 338              		.cfi_restore 14
 339              		.cfi_restore 4
 340              		.cfi_def_cfa_offset 0
 108:quantum/quantum.c **** }
 341              		.loc 1 108 5 view .LVU88
 342 000e FFF7FEBF 		b	unregister_code16
 343              	.LVL27:
 344              		.cfi_endproc
 345              	.LFE345:
 347              		.section	.text.process_action_kb,"ax",%progbits
 348              		.align	1
 349              		.weak	process_action_kb
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu fpv4-sp-d16
 355              	process_action_kb:
 356              	.LVL28:
 357              	.LFB346:
 110:quantum/quantum.c **** 
 111:quantum/quantum.c **** __attribute__((weak)) bool process_action_kb(keyrecord_t *record) { return true; }
 358              		.loc 1 111 67 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363              		.loc 1 111 69 view .LVU90
 364              		.loc 1 111 82 is_stmt 0 view .LVU91
 365 0000 0120     		movs	r0, #1
 366              	.LVL29:
 367              		.loc 1 111 82 view .LVU92
 368 0002 7047     		bx	lr
 369              		.cfi_endproc
 370              	.LFE346:
 372              		.section	.text.process_record_user,"ax",%progbits
 373              		.align	1
 374              		.weak	process_record_user
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	process_record_user:
 381              	.LVL30:
 382              	.LFB348:
 112:quantum/quantum.c **** 
 113:quantum/quantum.c **** __attribute__((weak)) bool process_record_kb(uint16_t keycode, keyrecord_t *record) { return proces
 114:quantum/quantum.c **** 
 115:quantum/quantum.c **** __attribute__((weak)) bool process_record_user(uint16_t keycode, keyrecord_t *record) { return true
 383              		.loc 1 115 87 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388              		.loc 1 115 89 view .LVU94
 389              		.loc 1 115 102 is_stmt 0 view .LVU95
 390 0000 0120     		movs	r0, #1
 391              	.LVL31:
 392              		.loc 1 115 102 view .LVU96
 393 0002 7047     		bx	lr
 394              		.cfi_endproc
 395              	.LFE348:
 397              		.section	.text.process_record_kb,"ax",%progbits
 398              		.align	1
 399              		.weak	process_record_kb
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	process_record_kb:
 406              	.LVL32:
 407              	.LFB347:
 113:quantum/quantum.c **** 
 408              		.loc 1 113 85 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 113:quantum/quantum.c **** 
 412              		.loc 1 113 87 view .LVU98
 113:quantum/quantum.c **** 
 413              		.loc 1 113 85 is_stmt 0 view .LVU99
 414 0000 08B5     		push	{r3, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
 417              		.cfi_offset 14, -4
 113:quantum/quantum.c **** 
 418              		.loc 1 113 94 view .LVU100
 419 0002 FFF7FEFF 		bl	process_record_user
 420              	.LVL33:
 113:quantum/quantum.c **** 
 421              		.loc 1 113 132 view .LVU101
 422 0006 08BD     		pop	{r3, pc}
 423              		.cfi_endproc
 424              	.LFE347:
 426              		.section	.text.post_process_record_user,"ax",%progbits
 427              		.align	1
 428              		.weak	post_process_record_user
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	post_process_record_user:
 435              	.LVL34:
 436              	.LFB350:
 116:quantum/quantum.c **** 
 117:quantum/quantum.c **** __attribute__((weak)) void post_process_record_kb(uint16_t keycode, keyrecord_t *record) { post_pro
 118:quantum/quantum.c **** 
 119:quantum/quantum.c **** __attribute__((weak)) void post_process_record_user(uint16_t keycode, keyrecord_t *record) {}
 437              		.loc 1 119 92 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              		.loc 1 119 93 view .LVU103
 443 0000 7047     		bx	lr
 444              		.cfi_endproc
 445              	.LFE350:
 447              		.section	.text.post_process_record_kb,"ax",%progbits
 448              		.align	1
 449              		.weak	post_process_record_kb
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	post_process_record_kb:
 456              	.LVL35:
 457              	.LFB349:
 117:quantum/quantum.c **** 
 458              		.loc 1 117 90 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 117:quantum/quantum.c **** 
 462              		.loc 1 117 92 view .LVU105
 117:quantum/quantum.c **** 
 463              		.loc 1 117 90 is_stmt 0 view .LVU106
 464 0000 08B5     		push	{r3, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 3, -8
 467              		.cfi_offset 14, -4
 117:quantum/quantum.c **** 
 468              		.loc 1 117 92 view .LVU107
 469 0002 FFF7FEFF 		bl	post_process_record_user
 470              	.LVL36:
 117:quantum/quantum.c **** 
 471              		.loc 1 117 135 view .LVU108
 472 0006 08BD     		pop	{r3, pc}
 473              		.cfi_endproc
 474              	.LFE349:
 476              		.section	.text.get_event_keycode,"ax",%progbits
 477              		.align	1
 478              		.global	get_event_keycode
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 482              		.fpu fpv4-sp-d16
 484              	get_event_keycode:
 485              	.LVL37:
 486              	.LFB353:
 120:quantum/quantum.c **** 
 121:quantum/quantum.c **** void reset_keyboard(void) {
 122:quantum/quantum.c ****     clear_keyboard();
 123:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 124:quantum/quantum.c ****     process_midi_all_notes_off();
 125:quantum/quantum.c **** #endif
 126:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 127:quantum/quantum.c **** #    ifndef NO_MUSIC_MODE
 128:quantum/quantum.c ****     music_all_notes_off();
 129:quantum/quantum.c **** #    endif
 130:quantum/quantum.c ****     uint16_t timer_start = timer_read();
 131:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 132:quantum/quantum.c ****     shutdown_user();
 133:quantum/quantum.c ****     while (timer_elapsed(timer_start) < 250) wait_ms(1);
 134:quantum/quantum.c ****     stop_all_notes();
 135:quantum/quantum.c **** #else
 136:quantum/quantum.c ****     shutdown_user();
 137:quantum/quantum.c ****     wait_ms(250);
 138:quantum/quantum.c **** #endif
 139:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 140:quantum/quantum.c ****     haptic_shutdown();
 141:quantum/quantum.c **** #endif
 142:quantum/quantum.c ****     bootloader_jump();
 143:quantum/quantum.c **** }
 144:quantum/quantum.c **** 
 145:quantum/quantum.c **** /* Convert record into usable keycode via the contained event. */
 146:quantum/quantum.c **** uint16_t get_record_keycode(keyrecord_t *record, bool update_layer_cache) {
 147:quantum/quantum.c **** #ifdef COMBO_ENABLE
 148:quantum/quantum.c ****     if (record->keycode) { return record->keycode; }
 149:quantum/quantum.c **** #endif
 150:quantum/quantum.c ****     return get_event_keycode(record->event, update_layer_cache);
 151:quantum/quantum.c **** }
 152:quantum/quantum.c **** 
 153:quantum/quantum.c **** 
 154:quantum/quantum.c **** /* Convert event into usable keycode. Checks the layer cache to ensure that it
 155:quantum/quantum.c ****  * retains the correct keycode after a layer change, if the key is still pressed.
 156:quantum/quantum.c ****  * "update_layer_cache" is to ensure that it only updates the layer cache when
 157:quantum/quantum.c ****  * appropriate, otherwise, it will update it and cause layer tap (and other keys)
 158:quantum/quantum.c ****  * from triggering properly.
 159:quantum/quantum.c ****  */
 160:quantum/quantum.c **** uint16_t get_event_keycode(keyevent_t event, bool update_layer_cache) {
 487              		.loc 1 160 71 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 8
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 161:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 162:quantum/quantum.c ****     /* TODO: Use store_or_get_action() or a similar function. */
 163:quantum/quantum.c ****     if (!disable_action_cache) {
 491              		.loc 1 163 5 view .LVU110
 160:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 492              		.loc 1 160 71 is_stmt 0 view .LVU111
 493 0000 13B5     		push	{r0, r1, r4, lr}
 494              		.cfi_def_cfa_offset 16
 495              		.cfi_offset 4, -8
 496              		.cfi_offset 14, -4
 160:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 497              		.loc 1 160 71 view .LVU112
 498 0002 02AB     		add	r3, sp, #8
 499 0004 03E90300 		stmdb	r3, {r0, r1}
 500              		.loc 1 163 9 view .LVU113
 501 0008 0F4B     		ldr	r3, .L58
 502              		.loc 1 163 8 view .LVU114
 503 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504 000c B3B9     		cbnz	r3, .L48
 505              	.LBB8:
 164:quantum/quantum.c ****         uint8_t layer;
 506              		.loc 1 164 9 is_stmt 1 view .LVU115
 165:quantum/quantum.c **** 
 166:quantum/quantum.c ****         if (event.pressed && update_layer_cache) {
 507              		.loc 1 166 9 view .LVU116
 508              		.loc 1 166 12 is_stmt 0 view .LVU117
 509 000e 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 510 0012 73B1     		cbz	r3, .L49
 511              		.loc 1 166 27 discriminator 1 view .LVU118
 512 0014 6AB1     		cbz	r2, .L49
 167:quantum/quantum.c ****             layer = layer_switch_get_layer(event.key);
 513              		.loc 1 167 13 is_stmt 1 view .LVU119
 514              		.loc 1 167 21 is_stmt 0 view .LVU120
 515 0016 FFF7FEFF 		bl	layer_switch_get_layer
 516              	.LVL38:
 517              		.loc 1 167 21 view .LVU121
 518 001a 0446     		mov	r4, r0
 519              	.LVL39:
 168:quantum/quantum.c ****             update_source_layers_cache(event.key, layer);
 520              		.loc 1 168 13 is_stmt 1 view .LVU122
 521 001c 0146     		mov	r1, r0
 522 001e 0098     		ldr	r0, [sp]
 523              	.LVL40:
 524              		.loc 1 168 13 is_stmt 0 view .LVU123
 525 0020 FFF7FEFF 		bl	update_source_layers_cache
 526              	.LVL41:
 527              	.L50:
 169:quantum/quantum.c ****         } else {
 170:quantum/quantum.c ****             layer = read_source_layers_cache(event.key);
 171:quantum/quantum.c ****         }
 172:quantum/quantum.c ****         return keymap_key_to_keycode(layer, event.key);
 528              		.loc 1 172 9 is_stmt 1 view .LVU124
 529              		.loc 1 172 16 is_stmt 0 view .LVU125
 530 0024 0099     		ldr	r1, [sp]
 531 0026 2046     		mov	r0, r4
 532              	.LVL42:
 533              	.L57:
 534              		.loc 1 172 16 view .LVU126
 535              	.LBE8:
 173:quantum/quantum.c ****     } else
 174:quantum/quantum.c **** #endif
 175:quantum/quantum.c ****         return keymap_key_to_keycode(layer_switch_get_layer(event.key), event.key);
 176:quantum/quantum.c **** }
 536              		.loc 1 176 1 view .LVU127
 537 0028 02B0     		add	sp, sp, #8
 538              		.cfi_remember_state
 539              		.cfi_def_cfa_offset 8
 540              		@ sp needed
 541 002a BDE81040 		pop	{r4, lr}
 542              		.cfi_restore 14
 543              		.cfi_restore 4
 544              		.cfi_def_cfa_offset 0
 175:quantum/quantum.c **** }
 545              		.loc 1 175 16 view .LVU128
 546 002e FFF7FEBF 		b	keymap_key_to_keycode
 547              	.LVL43:
 548              	.L49:
 549              		.cfi_restore_state
 550              	.LBB9:
 170:quantum/quantum.c ****         }
 551              		.loc 1 170 13 is_stmt 1 view .LVU129
 170:quantum/quantum.c ****         }
 552              		.loc 1 170 21 is_stmt 0 view .LVU130
 553 0032 0098     		ldr	r0, [sp]
 554 0034 FFF7FEFF 		bl	read_source_layers_cache
 555              	.LVL44:
 170:quantum/quantum.c ****         }
 556              		.loc 1 170 21 view .LVU131
 557 0038 0446     		mov	r4, r0
 558              	.LVL45:
 170:quantum/quantum.c ****         }
 559              		.loc 1 170 21 view .LVU132
 560 003a F3E7     		b	.L50
 561              	.LVL46:
 562              	.L48:
 170:quantum/quantum.c ****         }
 563              		.loc 1 170 21 view .LVU133
 564              	.LBE9:
 175:quantum/quantum.c **** }
 565              		.loc 1 175 9 is_stmt 1 view .LVU134
 175:quantum/quantum.c **** }
 566              		.loc 1 175 16 is_stmt 0 view .LVU135
 567 003c 0098     		ldr	r0, [sp]
 568 003e FFF7FEFF 		bl	layer_switch_get_layer
 569              	.LVL47:
 175:quantum/quantum.c **** }
 570              		.loc 1 175 16 view .LVU136
 571 0042 0099     		ldr	r1, [sp]
 572 0044 F0E7     		b	.L57
 573              	.L59:
 574 0046 00BF     		.align	2
 575              	.L58:
 576 0048 00000000 		.word	disable_action_cache
 577              		.cfi_endproc
 578              	.LFE353:
 580              		.section	.text.get_record_keycode,"ax",%progbits
 581              		.align	1
 582              		.global	get_record_keycode
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu fpv4-sp-d16
 588              	get_record_keycode:
 589              	.LVL48:
 590              	.LFB352:
 146:quantum/quantum.c **** #ifdef COMBO_ENABLE
 591              		.loc 1 146 75 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 150:quantum/quantum.c **** }
 596              		.loc 1 150 5 view .LVU138
 146:quantum/quantum.c **** #ifdef COMBO_ENABLE
 597              		.loc 1 146 75 is_stmt 0 view .LVU139
 598 0000 0346     		mov	r3, r0
 599 0002 0A46     		mov	r2, r1
 150:quantum/quantum.c **** }
 600              		.loc 1 150 12 view .LVU140
 601 0004 0068     		ldr	r0, [r0]	@ unaligned
 602              	.LVL49:
 150:quantum/quantum.c **** }
 603              		.loc 1 150 12 view .LVU141
 604 0006 9988     		ldrh	r1, [r3, #4]
 605              	.LVL50:
 150:quantum/quantum.c **** }
 606              		.loc 1 150 12 view .LVU142
 607 0008 FFF7FEBF 		b	get_event_keycode
 608              	.LVL51:
 150:quantum/quantum.c **** }
 609              		.loc 1 150 12 view .LVU143
 610              		.cfi_endproc
 611              	.LFE352:
 613              		.section	.text.pre_process_record_quantum,"ax",%progbits
 614              		.align	1
 615              		.global	pre_process_record_quantum
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	pre_process_record_quantum:
 622              	.LVL52:
 623              	.LFB354:
 177:quantum/quantum.c **** 
 178:quantum/quantum.c **** /* Get keycode, and then process pre tapping functionality */
 179:quantum/quantum.c **** bool pre_process_record_quantum(keyrecord_t *record) {
 624              		.loc 1 179 54 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 180:quantum/quantum.c ****     if (!(
 629              		.loc 1 180 5 view .LVU145
 181:quantum/quantum.c **** #ifdef COMBO_ENABLE
 182:quantum/quantum.c ****         process_combo(get_record_keycode(record, true), record) &&
 183:quantum/quantum.c **** #endif
 184:quantum/quantum.c ****         true)) {
 185:quantum/quantum.c ****         return false;
 186:quantum/quantum.c ****     }
 187:quantum/quantum.c ****     return true; // continue processing
 630              		.loc 1 187 5 view .LVU146
 188:quantum/quantum.c **** }
 631              		.loc 1 188 1 is_stmt 0 view .LVU147
 632 0000 0120     		movs	r0, #1
 633              	.LVL53:
 634              		.loc 1 188 1 view .LVU148
 635 0002 7047     		bx	lr
 636              		.cfi_endproc
 637              	.LFE354:
 639              		.section	.text.post_process_record_quantum,"ax",%progbits
 640              		.align	1
 641              		.global	post_process_record_quantum
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 645              		.fpu fpv4-sp-d16
 647              	post_process_record_quantum:
 648              	.LVL54:
 649              	.LFB355:
 189:quantum/quantum.c **** 
 190:quantum/quantum.c **** /* Get keycode, and then call keyboard function */
 191:quantum/quantum.c **** void post_process_record_quantum(keyrecord_t *record) {
 650              		.loc 1 191 55 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 192:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, false);
 654              		.loc 1 192 5 view .LVU150
 191:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, false);
 655              		.loc 1 191 55 is_stmt 0 view .LVU151
 656 0000 10B5     		push	{r4, lr}
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 4, -8
 659              		.cfi_offset 14, -4
 660              		.loc 1 192 24 view .LVU152
 661 0002 0021     		movs	r1, #0
 191:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, false);
 662              		.loc 1 191 55 view .LVU153
 663 0004 0446     		mov	r4, r0
 664              		.loc 1 192 24 view .LVU154
 665 0006 FFF7FEFF 		bl	get_record_keycode
 666              	.LVL55:
 193:quantum/quantum.c ****     post_process_record_kb(keycode, record);
 667              		.loc 1 193 5 is_stmt 1 view .LVU155
 668 000a 2146     		mov	r1, r4
 669 000c FFF7FEFF 		bl	post_process_record_kb
 670              	.LVL56:
 194:quantum/quantum.c **** }
 671              		.loc 1 194 1 is_stmt 0 view .LVU156
 672 0010 10BD     		pop	{r4, pc}
 673              		.loc 1 194 1 view .LVU157
 674              		.cfi_endproc
 675              	.LFE355:
 677              		.section	.text.set_single_persistent_default_layer,"ax",%progbits
 678              		.align	1
 679              		.global	set_single_persistent_default_layer
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv4-sp-d16
 685              	set_single_persistent_default_layer:
 686              	.LVL57:
 687              	.LFB357:
 195:quantum/quantum.c **** 
 196:quantum/quantum.c **** /* Core keycode function, hands off handling to other functions,
 197:quantum/quantum.c ****     then processes internal quantum keycodes, and then processes
 198:quantum/quantum.c ****     ACTIONs.                                                      */
 199:quantum/quantum.c **** bool process_record_quantum(keyrecord_t *record) {
 200:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, true);
 201:quantum/quantum.c **** 
 202:quantum/quantum.c ****     // This is how you use actions here
 203:quantum/quantum.c ****     // if (keycode == KC_LEAD) {
 204:quantum/quantum.c ****     //   action_t action;
 205:quantum/quantum.c ****     //   action.code = ACTION_DEFAULT_LAYER_SET(0);
 206:quantum/quantum.c ****     //   process_action(record, action);
 207:quantum/quantum.c ****     //   return false;
 208:quantum/quantum.c ****     // }
 209:quantum/quantum.c **** 
 210:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 211:quantum/quantum.c ****     if (velocikey_enabled() && record->event.pressed) {
 212:quantum/quantum.c ****         velocikey_accelerate();
 213:quantum/quantum.c ****     }
 214:quantum/quantum.c **** #endif
 215:quantum/quantum.c **** 
 216:quantum/quantum.c **** #ifdef WPM_ENABLE
 217:quantum/quantum.c ****     if (record->event.pressed) {
 218:quantum/quantum.c ****         update_wpm(keycode);
 219:quantum/quantum.c ****     }
 220:quantum/quantum.c **** #endif
 221:quantum/quantum.c **** 
 222:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 223:quantum/quantum.c ****     preprocess_tap_dance(keycode, record);
 224:quantum/quantum.c **** #endif
 225:quantum/quantum.c **** 
 226:quantum/quantum.c ****     if (!(
 227:quantum/quantum.c **** #if defined(KEY_LOCK_ENABLE)
 228:quantum/quantum.c ****             // Must run first to be able to mask key_up events.
 229:quantum/quantum.c ****             process_key_lock(&keycode, record) &&
 230:quantum/quantum.c **** #endif
 231:quantum/quantum.c **** #if defined(DYNAMIC_MACRO_ENABLE) && !defined(DYNAMIC_MACRO_USER_CALL)
 232:quantum/quantum.c ****             // Must run asap to ensure all keypresses are recorded.
 233:quantum/quantum.c ****             process_dynamic_macro(keycode, record) &&
 234:quantum/quantum.c **** #endif
 235:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(AUDIO_CLICKY)
 236:quantum/quantum.c ****             process_clicky(keycode, record) &&
 237:quantum/quantum.c **** #endif
 238:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 239:quantum/quantum.c ****             process_haptic(keycode, record) &&
 240:quantum/quantum.c **** #endif
 241:quantum/quantum.c **** #if defined(VIA_ENABLE)
 242:quantum/quantum.c ****             process_record_via(keycode, record) &&
 243:quantum/quantum.c **** #endif
 244:quantum/quantum.c ****             process_record_kb(keycode, record) &&
 245:quantum/quantum.c **** #if defined(SEQUENCER_ENABLE)
 246:quantum/quantum.c ****             process_sequencer(keycode, record) &&
 247:quantum/quantum.c **** #endif
 248:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_ADVANCED)
 249:quantum/quantum.c ****             process_midi(keycode, record) &&
 250:quantum/quantum.c **** #endif
 251:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 252:quantum/quantum.c ****             process_audio(keycode, record) &&
 253:quantum/quantum.c **** #endif
 254:quantum/quantum.c **** #if defined(BACKLIGHT_ENABLE) || defined(LED_MATRIX_ENABLE)
 255:quantum/quantum.c ****             process_backlight(keycode, record) &&
 256:quantum/quantum.c **** #endif
 257:quantum/quantum.c **** #ifdef STENO_ENABLE
 258:quantum/quantum.c ****             process_steno(keycode, record) &&
 259:quantum/quantum.c **** #endif
 260:quantum/quantum.c **** #if (defined(AUDIO_ENABLE) || (defined(MIDI_ENABLE) && defined(MIDI_BASIC))) && !defined(NO_MUSIC_M
 261:quantum/quantum.c ****             process_music(keycode, record) &&
 262:quantum/quantum.c **** #endif
 263:quantum/quantum.c **** #ifdef KEY_OVERRIDE_ENABLE
 264:quantum/quantum.c ****             process_key_override(keycode, record) &&
 265:quantum/quantum.c **** #endif
 266:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 267:quantum/quantum.c ****             process_tap_dance(keycode, record) &&
 268:quantum/quantum.c **** #endif
 269:quantum/quantum.c **** #if defined(UNICODE_ENABLE) || defined(UNICODEMAP_ENABLE) || defined(UCIS_ENABLE)
 270:quantum/quantum.c ****             process_unicode_common(keycode, record) &&
 271:quantum/quantum.c **** #endif
 272:quantum/quantum.c **** #ifdef LEADER_ENABLE
 273:quantum/quantum.c ****             process_leader(keycode, record) &&
 274:quantum/quantum.c **** #endif
 275:quantum/quantum.c **** #ifdef PRINTING_ENABLE
 276:quantum/quantum.c ****             process_printer(keycode, record) &&
 277:quantum/quantum.c **** #endif
 278:quantum/quantum.c **** #ifdef AUTO_SHIFT_ENABLE
 279:quantum/quantum.c ****             process_auto_shift(keycode, record) &&
 280:quantum/quantum.c **** #endif
 281:quantum/quantum.c **** #ifdef TERMINAL_ENABLE
 282:quantum/quantum.c ****             process_terminal(keycode, record) &&
 283:quantum/quantum.c **** #endif
 284:quantum/quantum.c **** #ifdef SPACE_CADET_ENABLE
 285:quantum/quantum.c ****             process_space_cadet(keycode, record) &&
 286:quantum/quantum.c **** #endif
 287:quantum/quantum.c **** #ifdef MAGIC_KEYCODE_ENABLE
 288:quantum/quantum.c ****             process_magic(keycode, record) &&
 289:quantum/quantum.c **** #endif
 290:quantum/quantum.c **** #ifdef GRAVE_ESC_ENABLE
 291:quantum/quantum.c ****             process_grave_esc(keycode, record) &&
 292:quantum/quantum.c **** #endif
 293:quantum/quantum.c **** #if defined(RGBLIGHT_ENABLE) || defined(RGB_MATRIX_ENABLE)
 294:quantum/quantum.c ****             process_rgb(keycode, record) &&
 295:quantum/quantum.c **** #endif
 296:quantum/quantum.c **** #ifdef JOYSTICK_ENABLE
 297:quantum/quantum.c ****             process_joystick(keycode, record) &&
 298:quantum/quantum.c **** #endif
 299:quantum/quantum.c ****             true)) {
 300:quantum/quantum.c ****         return false;
 301:quantum/quantum.c ****     }
 302:quantum/quantum.c **** 
 303:quantum/quantum.c ****     if (record->event.pressed) {
 304:quantum/quantum.c ****         switch (keycode) {
 305:quantum/quantum.c **** #ifndef NO_RESET
 306:quantum/quantum.c ****             case RESET:
 307:quantum/quantum.c ****                 reset_keyboard();
 308:quantum/quantum.c ****                 return false;
 309:quantum/quantum.c **** #endif
 310:quantum/quantum.c **** #ifndef NO_DEBUG
 311:quantum/quantum.c ****             case DEBUG:
 312:quantum/quantum.c ****                 debug_enable ^= 1;
 313:quantum/quantum.c ****                 if (debug_enable) {
 314:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 315:quantum/quantum.c ****                 } else {
 316:quantum/quantum.c ****                     print("DEBUG: disabled.\n");
 317:quantum/quantum.c ****                 }
 318:quantum/quantum.c **** #endif
 319:quantum/quantum.c ****                 return false;
 320:quantum/quantum.c ****             case EEPROM_RESET:
 321:quantum/quantum.c ****                 eeconfig_init();
 322:quantum/quantum.c ****                 return false;
 323:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 324:quantum/quantum.c ****             case VLK_TOG:
 325:quantum/quantum.c ****                 velocikey_toggle();
 326:quantum/quantum.c ****                 return false;
 327:quantum/quantum.c **** #endif
 328:quantum/quantum.c **** #ifdef BLUETOOTH_ENABLE
 329:quantum/quantum.c ****             case OUT_AUTO:
 330:quantum/quantum.c ****                 set_output(OUTPUT_AUTO);
 331:quantum/quantum.c ****                 return false;
 332:quantum/quantum.c ****             case OUT_USB:
 333:quantum/quantum.c ****                 set_output(OUTPUT_USB);
 334:quantum/quantum.c ****                 return false;
 335:quantum/quantum.c ****             case OUT_BT:
 336:quantum/quantum.c ****                 set_output(OUTPUT_BLUETOOTH);
 337:quantum/quantum.c ****                 return false;
 338:quantum/quantum.c **** #endif
 339:quantum/quantum.c **** #ifndef NO_ACTION_ONESHOT
 340:quantum/quantum.c ****             case ONESHOT_TOGGLE:
 341:quantum/quantum.c ****                 oneshot_toggle();
 342:quantum/quantum.c ****                 break;
 343:quantum/quantum.c ****             case ONESHOT_ENABLE:
 344:quantum/quantum.c ****                 oneshot_enable();
 345:quantum/quantum.c ****                 break;
 346:quantum/quantum.c ****             case ONESHOT_DISABLE:
 347:quantum/quantum.c ****                 oneshot_disable();
 348:quantum/quantum.c ****                 break;
 349:quantum/quantum.c **** #endif
 350:quantum/quantum.c ****         }
 351:quantum/quantum.c ****     }
 352:quantum/quantum.c **** 
 353:quantum/quantum.c ****     return process_action_kb(record);
 354:quantum/quantum.c **** }
 355:quantum/quantum.c **** 
 356:quantum/quantum.c **** void set_single_persistent_default_layer(uint8_t default_layer) {
 688              		.loc 1 356 65 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 357:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(DEFAULT_LAYER_SONGS)
 358:quantum/quantum.c ****     PLAY_SONG(default_layer_songs[default_layer]);
 692              		.loc 1 358 5 view .LVU159
 356:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(DEFAULT_LAYER_SONGS)
 693              		.loc 1 356 65 is_stmt 0 view .LVU160
 694 0000 38B5     		push	{r3, r4, r5, lr}
 695              		.cfi_def_cfa_offset 16
 696              		.cfi_offset 3, -16
 697              		.cfi_offset 4, -12
 698              		.cfi_offset 5, -8
 699              		.cfi_offset 14, -4
 356:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(DEFAULT_LAYER_SONGS)
 700              		.loc 1 356 65 view .LVU161
 701 0002 0546     		mov	r5, r0
 702              		.loc 1 358 5 view .LVU162
 703 0004 0848     		ldr	r0, .L64
 704              	.LVL58:
 359:quantum/quantum.c **** #endif
 360:quantum/quantum.c ****     eeconfig_update_default_layer((layer_state_t)1 << default_layer);
 705              		.loc 1 360 52 view .LVU163
 706 0006 0124     		movs	r4, #1
 358:quantum/quantum.c **** #endif
 707              		.loc 1 358 5 view .LVU164
 708 0008 00EBC510 		add	r0, r0, r5, lsl #7
 709              		.loc 1 360 52 view .LVU165
 710 000c AC40     		lsls	r4, r4, r5
 358:quantum/quantum.c **** #endif
 711              		.loc 1 358 5 view .LVU166
 712 000e 0022     		movs	r2, #0
 713 0010 1021     		movs	r1, #16
 714 0012 FFF7FEFF 		bl	audio_play_melody
 715              	.LVL59:
 716              		.loc 1 360 5 is_stmt 1 view .LVU167
 717 0016 E0B2     		uxtb	r0, r4
 718 0018 FFF7FEFF 		bl	eeconfig_update_default_layer
 719              	.LVL60:
 361:quantum/quantum.c ****     default_layer_set((layer_state_t)1 << default_layer);
 720              		.loc 1 361 5 view .LVU168
 721 001c 2046     		mov	r0, r4
 362:quantum/quantum.c **** }
 722              		.loc 1 362 1 is_stmt 0 view .LVU169
 723 001e BDE83840 		pop	{r3, r4, r5, lr}
 724              		.cfi_restore 14
 725              		.cfi_restore 5
 726              		.cfi_restore 4
 727              		.cfi_restore 3
 728              		.cfi_def_cfa_offset 0
 361:quantum/quantum.c ****     default_layer_set((layer_state_t)1 << default_layer);
 729              		.loc 1 361 5 view .LVU170
 730 0022 FFF7FEBF 		b	default_layer_set
 731              	.LVL61:
 732              	.L65:
 733 0026 00BF     		.align	2
 734              	.L64:
 735 0028 00000000 		.word	.LANCHOR0
 736              		.cfi_endproc
 737              	.LFE357:
 739              		.section	.text.update_tri_layer_state,"ax",%progbits
 740              		.align	1
 741              		.global	update_tri_layer_state
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	update_tri_layer_state:
 748              	.LVL62:
 749              	.LFB358:
 363:quantum/quantum.c **** 
 364:quantum/quantum.c **** layer_state_t update_tri_layer_state(layer_state_t state, uint8_t layer1, uint8_t layer2, uint8_t l
 750              		.loc 1 364 107 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 365:quantum/quantum.c ****     layer_state_t mask12 = ((layer_state_t)1 << layer1) | ((layer_state_t)1 << layer2);
 754              		.loc 1 365 5 view .LVU172
 364:quantum/quantum.c ****     layer_state_t mask12 = ((layer_state_t)1 << layer1) | ((layer_state_t)1 << layer2);
 755              		.loc 1 364 107 is_stmt 0 view .LVU173
 756 0000 10B5     		push	{r4, lr}
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 4, -8
 759              		.cfi_offset 14, -4
 760              		.loc 1 365 46 view .LVU174
 761 0002 0124     		movs	r4, #1
 762 0004 04FA01F1 		lsl	r1, r4, r1
 763              	.LVL63:
 764              		.loc 1 365 77 view .LVU175
 765 0008 04FA02F2 		lsl	r2, r4, r2
 766              	.LVL64:
 767              		.loc 1 365 19 view .LVU176
 768 000c 1143     		orrs	r1, r1, r2
 769              	.LVL65:
 366:quantum/quantum.c ****     layer_state_t mask3  = (layer_state_t)1 << layer3;
 770              		.loc 1 366 5 is_stmt 1 view .LVU177
 771              		.loc 1 366 19 is_stmt 0 view .LVU178
 772 000e 04FA03F3 		lsl	r3, r4, r3
 773              	.LVL66:
 367:quantum/quantum.c ****     return (state & mask12) == mask12 ? (state | mask3) : (state & ~mask3);
 774              		.loc 1 367 5 is_stmt 1 view .LVU179
 775              		.loc 1 367 57 is_stmt 0 view .LVU180
 776 0012 8143     		bics	r1, r1, r0
 777              	.LVL67:
 778              		.loc 1 367 57 view .LVU181
 779 0014 0CBF     		ite	eq
 780 0016 1843     		orreq	r0, r0, r3
 781              	.LVL68:
 782              		.loc 1 367 57 view .LVU182
 783 0018 9843     		bicne	r0, r0, r3
 368:quantum/quantum.c **** }
 784              		.loc 1 368 1 view .LVU183
 785 001a 10BD     		pop	{r4, pc}
 786              		.loc 1 368 1 view .LVU184
 787              		.cfi_endproc
 788              	.LFE358:
 790              		.section	.text.update_tri_layer,"ax",%progbits
 791              		.align	1
 792              		.global	update_tri_layer
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 796              		.fpu fpv4-sp-d16
 798              	update_tri_layer:
 799              	.LVL69:
 800              	.LFB359:
 369:quantum/quantum.c **** 
 370:quantum/quantum.c **** void update_tri_layer(uint8_t layer1, uint8_t layer2, uint8_t layer3) { layer_state_set(update_tri_
 801              		.loc 1 370 71 is_stmt 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		.loc 1 370 73 view .LVU186
 806              		.loc 1 370 71 is_stmt 0 view .LVU187
 807 0000 08B5     		push	{r3, lr}
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 3, -8
 810              		.cfi_offset 14, -4
 811              		.loc 1 370 71 view .LVU188
 812 0002 1346     		mov	r3, r2
 813              		.loc 1 370 73 view .LVU189
 814 0004 0A46     		mov	r2, r1
 815              	.LVL70:
 816              		.loc 1 370 73 view .LVU190
 817 0006 0146     		mov	r1, r0
 818              	.LVL71:
 819              		.loc 1 370 73 view .LVU191
 820 0008 0348     		ldr	r0, .L70
 821              	.LVL72:
 822              		.loc 1 370 73 view .LVU192
 823 000a 0068     		ldr	r0, [r0]
 824 000c FFF7FEFF 		bl	update_tri_layer_state
 825              	.LVL73:
 826              		.loc 1 370 151 view .LVU193
 827 0010 BDE80840 		pop	{r3, lr}
 828              		.cfi_restore 14
 829              		.cfi_restore 3
 830              		.cfi_def_cfa_offset 0
 831              		.loc 1 370 73 view .LVU194
 832 0014 FFF7FEBF 		b	layer_state_set
 833              	.LVL74:
 834              	.L71:
 835              		.align	2
 836              	.L70:
 837 0018 00000000 		.word	layer_state
 838              		.cfi_endproc
 839              	.LFE359:
 841              		.section	.text.matrix_init_quantum,"ax",%progbits
 842              		.align	1
 843              		.global	matrix_init_quantum
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv4-sp-d16
 849              	matrix_init_quantum:
 850              	.LFB360:
 371:quantum/quantum.c **** 
 372:quantum/quantum.c **** void matrix_init_quantum() {
 851              		.loc 1 372 28 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 373:quantum/quantum.c ****     magic();
 855              		.loc 1 373 5 view .LVU196
 372:quantum/quantum.c ****     magic();
 856              		.loc 1 372 28 is_stmt 0 view .LVU197
 857 0000 08B5     		push	{r3, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 3, -8
 860              		.cfi_offset 14, -4
 861              		.loc 1 373 5 view .LVU198
 862 0002 FFF7FEFF 		bl	magic
 863              	.LVL75:
 374:quantum/quantum.c ****     led_init_ports();
 864              		.loc 1 374 5 is_stmt 1 view .LVU199
 865 0006 FFF7FEFF 		bl	led_init_ports
 866              	.LVL76:
 375:quantum/quantum.c **** #ifdef BACKLIGHT_ENABLE
 376:quantum/quantum.c ****     backlight_init_ports();
 377:quantum/quantum.c **** #endif
 378:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 379:quantum/quantum.c ****     audio_init();
 867              		.loc 1 379 5 view .LVU200
 868 000a FFF7FEFF 		bl	audio_init
 869              	.LVL77:
 380:quantum/quantum.c **** #endif
 381:quantum/quantum.c **** #ifdef LED_MATRIX_ENABLE
 382:quantum/quantum.c ****     led_matrix_init();
 383:quantum/quantum.c **** #endif
 384:quantum/quantum.c **** #ifdef RGB_MATRIX_ENABLE
 385:quantum/quantum.c ****     rgb_matrix_init();
 386:quantum/quantum.c **** #endif
 387:quantum/quantum.c **** #if defined(UNICODE_ENABLE) || defined(UNICODEMAP_ENABLE) || defined(UCIS_ENABLE)
 388:quantum/quantum.c ****     unicode_input_mode_init();
 389:quantum/quantum.c **** #endif
 390:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 391:quantum/quantum.c ****     haptic_init();
 392:quantum/quantum.c **** #endif
 393:quantum/quantum.c **** #if defined(BLUETOOTH_ENABLE) && defined(OUTPUT_AUTO_ENABLE)
 394:quantum/quantum.c ****     set_output(OUTPUT_AUTO);
 395:quantum/quantum.c **** #endif
 396:quantum/quantum.c **** 
 397:quantum/quantum.c ****     matrix_init_kb();
 870              		.loc 1 397 5 view .LVU201
 398:quantum/quantum.c **** }
 871              		.loc 1 398 1 is_stmt 0 view .LVU202
 872 000e BDE80840 		pop	{r3, lr}
 873              		.cfi_restore 14
 874              		.cfi_restore 3
 875              		.cfi_def_cfa_offset 0
 397:quantum/quantum.c **** }
 876              		.loc 1 397 5 view .LVU203
 877 0012 FFF7FEBF 		b	matrix_init_kb
 878              	.LVL78:
 879              		.cfi_endproc
 880              	.LFE360:
 882              		.section	.text.matrix_scan_quantum,"ax",%progbits
 883              		.align	1
 884              		.global	matrix_scan_quantum
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu fpv4-sp-d16
 890              	matrix_scan_quantum:
 891              	.LFB361:
 399:quantum/quantum.c **** 
 400:quantum/quantum.c **** void matrix_scan_quantum() {
 892              		.loc 1 400 28 is_stmt 1 view -0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 401:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(AUDIO_INIT_DELAY)
 402:quantum/quantum.c ****     // There are some tasks that need to be run a little bit
 403:quantum/quantum.c ****     // after keyboard startup, or else they will not work correctly
 404:quantum/quantum.c ****     // because of interaction with the USB device state, which
 405:quantum/quantum.c ****     // may still be in flux...
 406:quantum/quantum.c ****     //
 407:quantum/quantum.c ****     // At the moment the only feature that needs this is the
 408:quantum/quantum.c ****     // startup song.
 409:quantum/quantum.c ****     static bool     delayed_tasks_run  = false;
 410:quantum/quantum.c ****     static uint16_t delayed_task_timer = 0;
 411:quantum/quantum.c ****     if (!delayed_tasks_run) {
 412:quantum/quantum.c ****         if (!delayed_task_timer) {
 413:quantum/quantum.c ****             delayed_task_timer = timer_read();
 414:quantum/quantum.c ****         } else if (timer_elapsed(delayed_task_timer) > 300) {
 415:quantum/quantum.c ****             audio_startup();
 416:quantum/quantum.c ****             delayed_tasks_run = true;
 417:quantum/quantum.c ****         }
 418:quantum/quantum.c ****     }
 419:quantum/quantum.c **** #endif
 420:quantum/quantum.c **** 
 421:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && !defined(NO_MUSIC_MODE)
 422:quantum/quantum.c ****     music_task();
 896              		.loc 1 422 5 view .LVU205
 400:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(AUDIO_INIT_DELAY)
 897              		.loc 1 400 28 is_stmt 0 view .LVU206
 898 0000 08B5     		push	{r3, lr}
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 3, -8
 901              		.cfi_offset 14, -4
 902              		.loc 1 422 5 view .LVU207
 903 0002 FFF7FEFF 		bl	music_task
 904              	.LVL79:
 423:quantum/quantum.c **** #endif
 424:quantum/quantum.c **** 
 425:quantum/quantum.c **** #ifdef KEY_OVERRIDE_ENABLE
 426:quantum/quantum.c ****     key_override_task();
 427:quantum/quantum.c **** #endif
 428:quantum/quantum.c **** 
 429:quantum/quantum.c **** #ifdef SEQUENCER_ENABLE
 430:quantum/quantum.c ****     sequencer_task();
 431:quantum/quantum.c **** #endif
 432:quantum/quantum.c **** 
 433:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 434:quantum/quantum.c ****     tap_dance_task();
 435:quantum/quantum.c **** #endif
 436:quantum/quantum.c **** 
 437:quantum/quantum.c **** #ifdef COMBO_ENABLE
 438:quantum/quantum.c ****     combo_task();
 439:quantum/quantum.c **** #endif
 440:quantum/quantum.c **** 
 441:quantum/quantum.c **** #ifdef LED_MATRIX_ENABLE
 442:quantum/quantum.c ****     led_matrix_task();
 443:quantum/quantum.c **** #endif
 444:quantum/quantum.c **** 
 445:quantum/quantum.c **** #ifdef WPM_ENABLE
 446:quantum/quantum.c ****     decay_wpm();
 447:quantum/quantum.c **** #endif
 448:quantum/quantum.c **** 
 449:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 450:quantum/quantum.c ****     haptic_task();
 451:quantum/quantum.c **** #endif
 452:quantum/quantum.c **** 
 453:quantum/quantum.c **** #ifdef DIP_SWITCH_ENABLE
 454:quantum/quantum.c ****     dip_switch_read(false);
 905              		.loc 1 454 5 is_stmt 1 view .LVU208
 906 0006 0020     		movs	r0, #0
 907 0008 FFF7FEFF 		bl	dip_switch_read
 908              	.LVL80:
 455:quantum/quantum.c **** #endif
 456:quantum/quantum.c **** 
 457:quantum/quantum.c **** #ifdef AUTO_SHIFT_ENABLE
 458:quantum/quantum.c ****     autoshift_matrix_scan();
 459:quantum/quantum.c **** #endif
 460:quantum/quantum.c **** 
 461:quantum/quantum.c ****     matrix_scan_kb();
 909              		.loc 1 461 5 view .LVU209
 462:quantum/quantum.c **** }
 910              		.loc 1 462 1 is_stmt 0 view .LVU210
 911 000c BDE80840 		pop	{r3, lr}
 912              		.cfi_restore 14
 913              		.cfi_restore 3
 914              		.cfi_def_cfa_offset 0
 461:quantum/quantum.c **** }
 915              		.loc 1 461 5 view .LVU211
 916 0010 FFF7FEBF 		b	matrix_scan_kb
 917              	.LVL81:
 918              		.cfi_endproc
 919              	.LFE361:
 921              		.section	.text.api_send_unicode,"ax",%progbits
 922              		.align	1
 923              		.global	api_send_unicode
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu fpv4-sp-d16
 929              	api_send_unicode:
 930              	.LVL82:
 931              	.LFB362:
 463:quantum/quantum.c **** 
 464:quantum/quantum.c **** #ifdef HD44780_ENABLED
 465:quantum/quantum.c **** #    include "hd44780.h"
 466:quantum/quantum.c **** #endif
 467:quantum/quantum.c **** 
 468:quantum/quantum.c **** void api_send_unicode(uint32_t unicode) {
 932              		.loc 1 468 41 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 469:quantum/quantum.c **** #ifdef API_ENABLE
 470:quantum/quantum.c ****     uint8_t chunk[4];
 471:quantum/quantum.c ****     dword_to_bytes(unicode, chunk);
 472:quantum/quantum.c ****     MT_SEND_DATA(DT_UNICODE, chunk, 5);
 473:quantum/quantum.c **** #endif
 474:quantum/quantum.c **** }
 937              		.loc 1 474 1 view .LVU213
 938 0000 7047     		bx	lr
 939              		.cfi_endproc
 940              	.LFE362:
 942              		.section	.text.startup_user,"ax",%progbits
 943              		.align	1
 944              		.weak	startup_user
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu fpv4-sp-d16
 950              	startup_user:
 951              	.LFB363:
 475:quantum/quantum.c **** 
 476:quantum/quantum.c **** //------------------------------------------------------------------------------
 477:quantum/quantum.c **** // Override these functions in your keymap file to play different tunes on
 478:quantum/quantum.c **** // different events such as startup and bootloader jump
 479:quantum/quantum.c **** 
 480:quantum/quantum.c **** __attribute__((weak)) void startup_user() {}
 952              		.loc 1 480 43 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		@ link register save eliminated.
 957              		.loc 1 480 44 view .LVU215
 958 0000 7047     		bx	lr
 959              		.cfi_endproc
 960              	.LFE363:
 962              		.section	.text.shutdown_user,"ax",%progbits
 963              		.align	1
 964              		.weak	shutdown_user
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 968              		.fpu fpv4-sp-d16
 970              	shutdown_user:
 971              	.LFB367:
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              		@ link register save eliminated.
 976 0000 7047     		bx	lr
 977              		.cfi_endproc
 978              	.LFE367:
 980              		.section	.text.reset_keyboard,"ax",%progbits
 981              		.align	1
 982              		.global	reset_keyboard
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu fpv4-sp-d16
 988              	reset_keyboard:
 989              	.LFB351:
 121:quantum/quantum.c ****     clear_keyboard();
 990              		.loc 1 121 27 view -0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 122:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 994              		.loc 1 122 5 view .LVU217
 121:quantum/quantum.c ****     clear_keyboard();
 995              		.loc 1 121 27 is_stmt 0 view .LVU218
 996 0000 10B5     		push	{r4, lr}
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 4, -8
 999              		.cfi_offset 14, -4
 122:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 1000              		.loc 1 122 5 view .LVU219
 1001 0002 FFF7FEFF 		bl	clear_keyboard
 1002              	.LVL83:
 128:quantum/quantum.c **** #    endif
 1003              		.loc 1 128 5 is_stmt 1 view .LVU220
 1004 0006 FFF7FEFF 		bl	music_all_notes_off
 1005              	.LVL84:
 130:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 1006              		.loc 1 130 5 view .LVU221
 130:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 1007              		.loc 1 130 28 is_stmt 0 view .LVU222
 1008 000a FFF7FEFF 		bl	timer_read
 1009              	.LVL85:
 131:quantum/quantum.c ****     shutdown_user();
 1010              		.loc 1 131 5 view .LVU223
 1011 000e 0022     		movs	r2, #0
 130:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 1012              		.loc 1 130 28 view .LVU224
 1013 0010 0446     		mov	r4, r0
 1014              	.LVL86:
 131:quantum/quantum.c ****     shutdown_user();
 1015              		.loc 1 131 5 is_stmt 1 view .LVU225
 1016 0012 0321     		movs	r1, #3
 1017 0014 0948     		ldr	r0, .L80
 1018 0016 FFF7FEFF 		bl	audio_play_melody
 1019              	.LVL87:
 132:quantum/quantum.c ****     while (timer_elapsed(timer_start) < 250) wait_ms(1);
 1020              		.loc 1 132 5 view .LVU226
 1021 001a FFF7FEFF 		bl	shutdown_user
 1022              	.LVL88:
 133:quantum/quantum.c ****     stop_all_notes();
 1023              		.loc 1 133 5 view .LVU227
 1024              	.L78:
 133:quantum/quantum.c ****     stop_all_notes();
 1025              		.loc 1 133 46 discriminator 4 view .LVU228
 133:quantum/quantum.c ****     stop_all_notes();
 1026              		.loc 1 133 39 discriminator 4 view .LVU229
 133:quantum/quantum.c ****     stop_all_notes();
 1027              		.loc 1 133 12 is_stmt 0 discriminator 4 view .LVU230
 1028 001e 2046     		mov	r0, r4
 1029 0020 FFF7FEFF 		bl	timer_elapsed
 1030              	.LVL89:
 133:quantum/quantum.c ****     stop_all_notes();
 1031              		.loc 1 133 39 discriminator 4 view .LVU231
 1032 0024 F928     		cmp	r0, #249
 1033 0026 05D9     		bls	.L79
 134:quantum/quantum.c **** #else
 1034              		.loc 1 134 5 is_stmt 1 view .LVU232
 1035 0028 FFF7FEFF 		bl	audio_stop_all
 1036              	.LVL90:
 142:quantum/quantum.c **** }
 1037              		.loc 1 142 5 view .LVU233
 143:quantum/quantum.c **** 
 1038              		.loc 1 143 1 is_stmt 0 view .LVU234
 1039 002c BDE81040 		pop	{r4, lr}
 1040              		.cfi_remember_state
 1041              		.cfi_restore 14
 1042              		.cfi_restore 4
 1043              		.cfi_def_cfa_offset 0
 1044              	.LVL91:
 142:quantum/quantum.c **** }
 1045              		.loc 1 142 5 view .LVU235
 1046 0030 FFF7FEBF 		b	bootloader_jump
 1047              	.LVL92:
 1048              	.L79:
 1049              		.cfi_restore_state
 133:quantum/quantum.c ****     stop_all_notes();
 1050              		.loc 1 133 46 is_stmt 1 discriminator 1 view .LVU236
 133:quantum/quantum.c ****     stop_all_notes();
 1051              		.loc 1 133 46 discriminator 1 view .LVU237
 133:quantum/quantum.c ****     stop_all_notes();
 1052              		.loc 1 133 46 discriminator 1 view .LVU238
 1053 0034 0A20     		movs	r0, #10
 1054 0036 FFF7FEFF 		bl	chThdSleep
 1055              	.LVL93:
 1056 003a F0E7     		b	.L78
 1057              	.L81:
 1058              		.align	2
 1059              	.L80:
 1060 003c 00000000 		.word	.LANCHOR1
 1061              		.cfi_endproc
 1062              	.LFE351:
 1064              		.section	.rodata.process_record_quantum.str1.1,"aMS",%progbits,1
 1065              	.LC0:
 1066 0000 44454255 		.ascii	"DEBUG: enabled.\012\000"
 1066      473A2065 
 1066      6E61626C 
 1066      65642E0A 
 1066      00
 1067              	.LC1:
 1068 0011 44454255 		.ascii	"DEBUG: disabled.\012\000"
 1068      473A2064 
 1068      69736162 
 1068      6C65642E 
 1068      0A00
 1069              		.section	.text.process_record_quantum,"ax",%progbits
 1070              		.align	1
 1071              		.global	process_record_quantum
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1075              		.fpu fpv4-sp-d16
 1077              	process_record_quantum:
 1078              	.LVL94:
 1079              	.LFB356:
 199:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, true);
 1080              		.loc 1 199 50 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 200:quantum/quantum.c **** 
 1084              		.loc 1 200 5 view .LVU240
 199:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, true);
 1085              		.loc 1 199 50 is_stmt 0 view .LVU241
 1086 0000 38B5     		push	{r3, r4, r5, lr}
 1087              		.cfi_def_cfa_offset 16
 1088              		.cfi_offset 3, -16
 1089              		.cfi_offset 4, -12
 1090              		.cfi_offset 5, -8
 1091              		.cfi_offset 14, -4
 200:quantum/quantum.c **** 
 1092              		.loc 1 200 24 view .LVU242
 1093 0002 0121     		movs	r1, #1
 199:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, true);
 1094              		.loc 1 199 50 view .LVU243
 1095 0004 0546     		mov	r5, r0
 200:quantum/quantum.c **** 
 1096              		.loc 1 200 24 view .LVU244
 1097 0006 FFF7FEFF 		bl	get_record_keycode
 1098              	.LVL95:
 244:quantum/quantum.c **** #if defined(SEQUENCER_ENABLE)
 1099              		.loc 1 244 13 view .LVU245
 1100 000a 2946     		mov	r1, r5
 200:quantum/quantum.c **** 
 1101              		.loc 1 200 24 view .LVU246
 1102 000c 0446     		mov	r4, r0
 1103              	.LVL96:
 226:quantum/quantum.c **** #if defined(KEY_LOCK_ENABLE)
 1104              		.loc 1 226 5 is_stmt 1 view .LVU247
 244:quantum/quantum.c **** #if defined(SEQUENCER_ENABLE)
 1105              		.loc 1 244 13 is_stmt 0 view .LVU248
 1106 000e FFF7FEFF 		bl	process_record_kb
 1107              	.LVL97:
 291:quantum/quantum.c **** #endif
 1108              		.loc 1 291 48 view .LVU249
 1109 0012 08B9     		cbnz	r0, .L83
 1110              	.LVL98:
 1111              	.L116:
 319:quantum/quantum.c ****             case EEPROM_RESET:
 1112              		.loc 1 319 24 view .LVU250
 1113 0014 0020     		movs	r0, #0
 1114              	.L84:
 354:quantum/quantum.c **** 
 1115              		.loc 1 354 1 view .LVU251
 1116 0016 38BD     		pop	{r3, r4, r5, pc}
 1117              	.LVL99:
 1118              	.L83:
 252:quantum/quantum.c **** #endif
 1119              		.loc 1 252 13 view .LVU252
 1120 0018 2946     		mov	r1, r5
 1121 001a 2046     		mov	r0, r4
 1122 001c FFF7FEFF 		bl	process_audio
 1123              	.LVL100:
 244:quantum/quantum.c **** #if defined(SEQUENCER_ENABLE)
 1124              		.loc 1 244 48 view .LVU253
 1125 0020 0028     		cmp	r0, #0
 1126 0022 F7D0     		beq	.L116
 261:quantum/quantum.c **** #endif
 1127              		.loc 1 261 13 view .LVU254
 1128 0024 2946     		mov	r1, r5
 1129 0026 2046     		mov	r0, r4
 1130 0028 FFF7FEFF 		bl	process_music
 1131              	.LVL101:
 252:quantum/quantum.c **** #endif
 1132              		.loc 1 252 44 view .LVU255
 1133 002c 0028     		cmp	r0, #0
 1134 002e F1D0     		beq	.L116
 285:quantum/quantum.c **** #endif
 1135              		.loc 1 285 13 view .LVU256
 1136 0030 2946     		mov	r1, r5
 1137 0032 2046     		mov	r0, r4
 1138 0034 FFF7FEFF 		bl	process_space_cadet
 1139              	.LVL102:
 261:quantum/quantum.c **** #endif
 1140              		.loc 1 261 44 view .LVU257
 1141 0038 0028     		cmp	r0, #0
 1142 003a EBD0     		beq	.L116
 288:quantum/quantum.c **** #endif
 1143              		.loc 1 288 13 view .LVU258
 1144 003c 2946     		mov	r1, r5
 1145 003e 2046     		mov	r0, r4
 1146 0040 FFF7FEFF 		bl	process_magic
 1147              	.LVL103:
 285:quantum/quantum.c **** #endif
 1148              		.loc 1 285 50 view .LVU259
 1149 0044 0028     		cmp	r0, #0
 1150 0046 E5D0     		beq	.L116
 291:quantum/quantum.c **** #endif
 1151              		.loc 1 291 13 view .LVU260
 1152 0048 2946     		mov	r1, r5
 1153 004a 2046     		mov	r0, r4
 1154 004c FFF7FEFF 		bl	process_grave_esc
 1155              	.LVL104:
 288:quantum/quantum.c **** #endif
 1156              		.loc 1 288 44 view .LVU261
 1157 0050 0028     		cmp	r0, #0
 1158 0052 DFD0     		beq	.L116
 294:quantum/quantum.c **** #endif
 1159              		.loc 1 294 13 discriminator 2 view .LVU262
 1160 0054 2946     		mov	r1, r5
 1161 0056 2046     		mov	r0, r4
 1162 0058 FFF7FEFF 		bl	process_rgb
 1163              	.LVL105:
 291:quantum/quantum.c **** #endif
 1164              		.loc 1 291 48 discriminator 2 view .LVU263
 1165 005c 0028     		cmp	r0, #0
 1166 005e D9D0     		beq	.L116
 303:quantum/quantum.c ****         switch (keycode) {
 1167              		.loc 1 303 5 is_stmt 1 view .LVU264
 303:quantum/quantum.c ****         switch (keycode) {
 1168              		.loc 1 303 8 is_stmt 0 view .LVU265
 1169 0060 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1170 0062 7BB1     		cbz	r3, .L86
 304:quantum/quantum.c **** #ifndef NO_RESET
 1171              		.loc 1 304 9 is_stmt 1 view .LVU266
 1172 0064 45F65B53 		movw	r3, #23899
 1173 0068 9C42     		cmp	r4, r3
 1174 006a 32D0     		beq	.L87
 1175 006c 0ED8     		bhi	.L88
 1176 006e 45F60143 		movw	r3, #23553
 1177 0072 9C42     		cmp	r4, r3
 1178 0074 18D0     		beq	.L89
 1179 0076 45F6DF43 		movw	r3, #23775
 1180 007a 9C42     		cmp	r4, r3
 1181 007c 26D0     		beq	.L90
 1182 007e B4F5B84F 		cmp	r4, #23552
 1183 0082 0ED0     		beq	.L91
 1184              	.L86:
 353:quantum/quantum.c **** }
 1185              		.loc 1 353 5 view .LVU267
 353:quantum/quantum.c **** }
 1186              		.loc 1 353 12 is_stmt 0 view .LVU268
 1187 0084 2846     		mov	r0, r5
 1188 0086 FFF7FEFF 		bl	process_action_kb
 1189              	.LVL106:
 1190 008a C4E7     		b	.L84
 1191              	.L88:
 304:quantum/quantum.c **** #ifndef NO_RESET
 1192              		.loc 1 304 9 view .LVU269
 1193 008c 45F65C53 		movw	r3, #23900
 1194 0090 9C42     		cmp	r4, r3
 1195 0092 21D0     		beq	.L92
 1196 0094 45F65D53 		movw	r3, #23901
 1197 0098 9C42     		cmp	r4, r3
 1198 009a F3D1     		bne	.L86
 341:quantum/quantum.c ****                 break;
 1199              		.loc 1 341 17 is_stmt 1 view .LVU270
 1200 009c FFF7FEFF 		bl	oneshot_toggle
 1201              	.LVL107:
 342:quantum/quantum.c ****             case ONESHOT_ENABLE:
 1202              		.loc 1 342 17 view .LVU271
 1203 00a0 F0E7     		b	.L86
 1204              	.L91:
 307:quantum/quantum.c ****                 return false;
 1205              		.loc 1 307 17 view .LVU272
 1206 00a2 FFF7FEFF 		bl	reset_keyboard
 1207              	.LVL108:
 308:quantum/quantum.c **** #endif
 1208              		.loc 1 308 17 view .LVU273
 1209 00a6 B5E7     		b	.L116
 1210              	.L89:
 312:quantum/quantum.c ****                 if (debug_enable) {
 1211              		.loc 1 312 17 view .LVU274
 312:quantum/quantum.c ****                 if (debug_enable) {
 1212              		.loc 1 312 30 is_stmt 0 view .LVU275
 1213 00a8 0D4A     		ldr	r2, .L118
 1214 00aa 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1215 00ac C0F30003 		ubfx	r3, r0, #0, #1
 1216 00b0 83F00103 		eor	r3, r3, #1
 1217 00b4 63F30000 		bfi	r0, r3, #0, #1
 313:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 1218              		.loc 1 313 20 view .LVU276
 1219 00b8 10F00104 		ands	r4, r0, #1
 1220              	.LVL109:
 312:quantum/quantum.c ****                 if (debug_enable) {
 1221              		.loc 1 312 30 view .LVU277
 1222 00bc 1070     		strb	r0, [r2]
 313:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 1223              		.loc 1 313 17 is_stmt 1 view .LVU278
 313:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 1224              		.loc 1 313 20 is_stmt 0 view .LVU279
 1225 00be 03D0     		beq	.L94
 314:quantum/quantum.c ****                 } else {
 1226              		.loc 1 314 21 is_stmt 1 view .LVU280
 1227 00c0 0848     		ldr	r0, .L118+4
 1228              	.L117:
 1229 00c2 FFF7FEFF 		bl	printf_
 1230              	.LVL110:
 1231 00c6 A5E7     		b	.L116
 1232              	.L94:
 316:quantum/quantum.c ****                 }
 1233              		.loc 1 316 21 view .LVU281
 1234 00c8 0748     		ldr	r0, .L118+8
 1235 00ca FAE7     		b	.L117
 1236              	.LVL111:
 1237              	.L90:
 321:quantum/quantum.c ****                 return false;
 1238              		.loc 1 321 17 view .LVU282
 1239 00cc FFF7FEFF 		bl	eeconfig_init
 1240              	.LVL112:
 322:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 1241              		.loc 1 322 17 view .LVU283
 1242 00d0 A0E7     		b	.L116
 1243              	.L87:
 344:quantum/quantum.c ****                 break;
 1244              		.loc 1 344 17 view .LVU284
 1245 00d2 FFF7FEFF 		bl	oneshot_enable
 1246              	.LVL113:
 345:quantum/quantum.c ****             case ONESHOT_DISABLE:
 1247              		.loc 1 345 17 view .LVU285
 1248 00d6 D5E7     		b	.L86
 1249              	.L92:
 347:quantum/quantum.c ****                 break;
 1250              		.loc 1 347 17 view .LVU286
 1251 00d8 FFF7FEFF 		bl	oneshot_disable
 1252              	.LVL114:
 348:quantum/quantum.c **** #endif
 1253              		.loc 1 348 17 view .LVU287
 1254 00dc D2E7     		b	.L86
 1255              	.L119:
 1256 00de 00BF     		.align	2
 1257              	.L118:
 1258 00e0 00000000 		.word	debug_config
 1259 00e4 00000000 		.word	.LC0
 1260 00e8 11000000 		.word	.LC1
 1261              		.cfi_endproc
 1262              	.LFE356:
 1264              		.global	default_layer_songs
 1265              		.global	goodbye_song
 1266              		.section	.data.default_layer_songs,"aw"
 1267              		.align	2
 1268              		.set	.LANCHOR0,. + 0
 1271              	default_layer_songs:
 1272 0000 0AA7CF44 		.word	1154459402
 1273 0004 00000041 		.word	1090519040
 1274 0008 0000DC44 		.word	1155268608
 1275 000c 00000041 		.word	1090519040
 1276 0010 00000000 		.word	0
 1277 0014 00008040 		.word	1082130432
 1278 0018 52D02445 		.word	1160040530
 1279 001c 00008041 		.word	1098907648
 1280 0020 00000000 		.space	96
 1280      00000000 
 1280      00000000 
 1280      00000000 
 1280      00000000 
 1281 0080 0AA7CF44 		.word	1154459402
 1282 0084 00000041 		.word	1090519040
 1283 0088 0000DC44 		.word	1155268608
 1284 008c 00000041 		.word	1090519040
 1285 0090 00000000 		.word	0
 1286 0094 00008040 		.word	1082130432
 1287 0098 52D02445 		.word	1160040530
 1288 009c 00004041 		.word	1094713344
 1289 00a0 00000000 		.word	0
 1290 00a4 00008040 		.word	1082130432
 1291 00a8 0AA74F45 		.word	1162848010
 1292 00ac 00004041 		.word	1094713344
 1293 00b0 00000000 		.space	80
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1294 0100 0AA7CF44 		.word	1154459402
 1295 0104 00000041 		.word	1090519040
 1296 0108 0000DC44 		.word	1155268608
 1297 010c 00000041 		.word	1090519040
 1298 0110 00000000 		.word	0
 1299 0114 00008040 		.word	1082130432
 1300 0118 52D02445 		.word	1160040530
 1301 011c 00000041 		.word	1090519040
 1302 0120 00000000 		.word	0
 1303 0124 00008040 		.word	1082130432
 1304 0128 5CFF3845 		.word	1161363292
 1305 012c 00000041 		.word	1090519040
 1306 0130 00000000 		.word	0
 1307 0134 00008040 		.word	1082130432
 1308 0138 52D02445 		.word	1160040530
 1309 013c 00000041 		.word	1090519040
 1310 0140 00000000 		.space	64
 1310      00000000 
 1310      00000000 
 1310      00000000 
 1310      00000000 
 1311              		.section	.data.goodbye_song,"aw"
 1312              		.align	2
 1313              		.set	.LANCHOR1,. + 0
 1316              	goodbye_song:
 1317 0000 52D02445 		.word	1160040530
 1318 0004 00000041 		.word	1090519040
 1319 0008 0000DC44 		.word	1155268608
 1320 000c 00000041 		.word	1090519040
 1321 0010 52D0A444 		.word	1151651922
 1322 0014 00004041 		.word	1094713344
 1323              		.text
 1324              	.Letext0:
 1325              		.file 2 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 1326              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1327              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1328              		.file 5 "./lib/chibios/os/rt/include/chtime.h"
 1329              		.file 6 "quantum/keyboard.h"
 1330              		.file 7 "quantum/action.h"
 1331              		.file 8 "quantum/logging/debug.h"
 1332              		.file 9 "quantum/keycode.h"
 1333              		.file 10 "quantum/quantum_keycodes.h"
 1334              		.file 11 "quantum/action_layer.h"
 1335              		.file 12 "quantum/matrix.h"
 1336              		.file 13 "quantum/process_keycode/process_music.h"
 1337              		.file 14 "quantum/audio/audio.h"
 1338              		.file 15 "quantum/led.h"
 1339              		.file 16 "quantum/bootmagic/magic.h"
 1340              		.file 17 "quantum/dip_switch.h"
 1341              		.file 18 "quantum/eeconfig.h"
 1342              		.file 19 "quantum/action_util.h"
 1343              		.file 20 "lib/printf/printf.h"
 1344              		.file 21 "quantum/process_keycode/process_rgb.h"
 1345              		.file 22 "quantum/process_keycode/process_grave_esc.h"
 1346              		.file 23 "quantum/process_keycode/process_magic.h"
 1347              		.file 24 "quantum/process_keycode/process_space_cadet.h"
 1348              		.file 25 "quantum/process_keycode/process_audio.h"
 1349              		.file 26 "quantum/keymap.h"
 1350              		.file 27 "tmk_core/common/bootloader.h"
 1351              		.file 28 "tmk_core/common/timer.h"
 1352              		.file 29 "./lib/chibios/os/rt/include/chthreads.h"
 1353              		.file 30 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 quantum.c
     /tmp/ccbwZCcl.s:18     .text.extract_mod_bits:0000000000000000 $t
     /tmp/ccbwZCcl.s:26     .text.extract_mod_bits:0000000000000000 extract_mod_bits
     /tmp/ccbwZCcl.s:142    .text.do_code16:0000000000000000 $t
     /tmp/ccbwZCcl.s:148    .text.do_code16:0000000000000000 do_code16
     /tmp/ccbwZCcl.s:182    .text.register_code16:0000000000000000 $t
     /tmp/ccbwZCcl.s:189    .text.register_code16:0000000000000000 register_code16
     /tmp/ccbwZCcl.s:239    .text.register_code16:0000000000000024 $d
     /tmp/ccbwZCcl.s:245    .text.unregister_code16:0000000000000000 $t
     /tmp/ccbwZCcl.s:252    .text.unregister_code16:0000000000000000 unregister_code16
     /tmp/ccbwZCcl.s:303    .text.unregister_code16:0000000000000024 $d
     /tmp/ccbwZCcl.s:309    .text.tap_code16:0000000000000000 $t
     /tmp/ccbwZCcl.s:316    .text.tap_code16:0000000000000000 tap_code16
     /tmp/ccbwZCcl.s:348    .text.process_action_kb:0000000000000000 $t
     /tmp/ccbwZCcl.s:355    .text.process_action_kb:0000000000000000 process_action_kb
     /tmp/ccbwZCcl.s:373    .text.process_record_user:0000000000000000 $t
     /tmp/ccbwZCcl.s:380    .text.process_record_user:0000000000000000 process_record_user
     /tmp/ccbwZCcl.s:398    .text.process_record_kb:0000000000000000 $t
     /tmp/ccbwZCcl.s:405    .text.process_record_kb:0000000000000000 process_record_kb
     /tmp/ccbwZCcl.s:427    .text.post_process_record_user:0000000000000000 $t
     /tmp/ccbwZCcl.s:434    .text.post_process_record_user:0000000000000000 post_process_record_user
     /tmp/ccbwZCcl.s:448    .text.post_process_record_kb:0000000000000000 $t
     /tmp/ccbwZCcl.s:455    .text.post_process_record_kb:0000000000000000 post_process_record_kb
     /tmp/ccbwZCcl.s:477    .text.get_event_keycode:0000000000000000 $t
     /tmp/ccbwZCcl.s:484    .text.get_event_keycode:0000000000000000 get_event_keycode
     /tmp/ccbwZCcl.s:576    .text.get_event_keycode:0000000000000048 $d
     /tmp/ccbwZCcl.s:581    .text.get_record_keycode:0000000000000000 $t
     /tmp/ccbwZCcl.s:588    .text.get_record_keycode:0000000000000000 get_record_keycode
     /tmp/ccbwZCcl.s:614    .text.pre_process_record_quantum:0000000000000000 $t
     /tmp/ccbwZCcl.s:621    .text.pre_process_record_quantum:0000000000000000 pre_process_record_quantum
     /tmp/ccbwZCcl.s:640    .text.post_process_record_quantum:0000000000000000 $t
     /tmp/ccbwZCcl.s:647    .text.post_process_record_quantum:0000000000000000 post_process_record_quantum
     /tmp/ccbwZCcl.s:678    .text.set_single_persistent_default_layer:0000000000000000 $t
     /tmp/ccbwZCcl.s:685    .text.set_single_persistent_default_layer:0000000000000000 set_single_persistent_default_layer
     /tmp/ccbwZCcl.s:735    .text.set_single_persistent_default_layer:0000000000000028 $d
     /tmp/ccbwZCcl.s:740    .text.update_tri_layer_state:0000000000000000 $t
     /tmp/ccbwZCcl.s:747    .text.update_tri_layer_state:0000000000000000 update_tri_layer_state
     /tmp/ccbwZCcl.s:791    .text.update_tri_layer:0000000000000000 $t
     /tmp/ccbwZCcl.s:798    .text.update_tri_layer:0000000000000000 update_tri_layer
     /tmp/ccbwZCcl.s:837    .text.update_tri_layer:0000000000000018 $d
     /tmp/ccbwZCcl.s:842    .text.matrix_init_quantum:0000000000000000 $t
     /tmp/ccbwZCcl.s:849    .text.matrix_init_quantum:0000000000000000 matrix_init_quantum
     /tmp/ccbwZCcl.s:883    .text.matrix_scan_quantum:0000000000000000 $t
     /tmp/ccbwZCcl.s:890    .text.matrix_scan_quantum:0000000000000000 matrix_scan_quantum
     /tmp/ccbwZCcl.s:922    .text.api_send_unicode:0000000000000000 $t
     /tmp/ccbwZCcl.s:929    .text.api_send_unicode:0000000000000000 api_send_unicode
     /tmp/ccbwZCcl.s:943    .text.startup_user:0000000000000000 $t
     /tmp/ccbwZCcl.s:950    .text.startup_user:0000000000000000 startup_user
     /tmp/ccbwZCcl.s:963    .text.shutdown_user:0000000000000000 $t
     /tmp/ccbwZCcl.s:970    .text.shutdown_user:0000000000000000 shutdown_user
     /tmp/ccbwZCcl.s:981    .text.reset_keyboard:0000000000000000 $t
     /tmp/ccbwZCcl.s:988    .text.reset_keyboard:0000000000000000 reset_keyboard
     /tmp/ccbwZCcl.s:1060   .text.reset_keyboard:000000000000003c $d
     /tmp/ccbwZCcl.s:1070   .text.process_record_quantum:0000000000000000 $t
     /tmp/ccbwZCcl.s:1077   .text.process_record_quantum:0000000000000000 process_record_quantum
     /tmp/ccbwZCcl.s:1258   .text.process_record_quantum:00000000000000e0 $d
     /tmp/ccbwZCcl.s:1271   .data.default_layer_songs:0000000000000000 default_layer_songs
     /tmp/ccbwZCcl.s:1316   .data.goodbye_song:0000000000000000 goodbye_song
     /tmp/ccbwZCcl.s:1267   .data.default_layer_songs:0000000000000000 $d
     /tmp/ccbwZCcl.s:1312   .data.goodbye_song:0000000000000000 $d

UNDEFINED SYMBOLS
register_code
register_mods
register_weak_mods
unregister_code
unregister_mods
unregister_weak_mods
layer_switch_get_layer
update_source_layers_cache
keymap_key_to_keycode
read_source_layers_cache
disable_action_cache
audio_play_melody
eeconfig_update_default_layer
default_layer_set
layer_state_set
layer_state
magic
led_init_ports
audio_init
matrix_init_kb
music_task
dip_switch_read
matrix_scan_kb
clear_keyboard
music_all_notes_off
timer_read
timer_elapsed
audio_stop_all
bootloader_jump
chThdSleep
process_audio
process_music
process_space_cadet
process_magic
process_grave_esc
process_rgb
oneshot_toggle
printf_
eeconfig_init
oneshot_enable
oneshot_disable
debug_config
