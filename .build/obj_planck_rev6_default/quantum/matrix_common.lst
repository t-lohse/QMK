   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"matrix_common.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.matrix_init_user,"ax",%progbits
  18              		.align	1
  19              		.weak	matrix_init_user
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	matrix_init_user:
  27              	.LFB343:
  28              		.file 1 "quantum/matrix_common.c"
   1:quantum/matrix_common.c **** #include "quantum.h"
   2:quantum/matrix_common.c **** #include "matrix.h"
   3:quantum/matrix_common.c **** #include "debounce.h"
   4:quantum/matrix_common.c **** #include "wait.h"
   5:quantum/matrix_common.c **** #include "print.h"
   6:quantum/matrix_common.c **** #include "debug.h"
   7:quantum/matrix_common.c **** 
   8:quantum/matrix_common.c **** #ifndef MATRIX_IO_DELAY
   9:quantum/matrix_common.c **** #    define MATRIX_IO_DELAY 30
  10:quantum/matrix_common.c **** #endif
  11:quantum/matrix_common.c **** 
  12:quantum/matrix_common.c **** /* matrix state(1:on, 0:off) */
  13:quantum/matrix_common.c **** matrix_row_t raw_matrix[MATRIX_ROWS];
  14:quantum/matrix_common.c **** matrix_row_t matrix[MATRIX_ROWS];
  15:quantum/matrix_common.c **** 
  16:quantum/matrix_common.c **** #ifdef MATRIX_MASKED
  17:quantum/matrix_common.c **** extern const matrix_row_t matrix_mask[];
  18:quantum/matrix_common.c **** #endif
  19:quantum/matrix_common.c **** 
  20:quantum/matrix_common.c **** // user-defined overridable functions
  21:quantum/matrix_common.c **** 
  22:quantum/matrix_common.c **** __attribute__((weak)) void matrix_init_kb(void) { matrix_init_user(); }
  23:quantum/matrix_common.c **** 
  24:quantum/matrix_common.c **** __attribute__((weak)) void matrix_scan_kb(void) { matrix_scan_user(); }
  25:quantum/matrix_common.c **** 
  26:quantum/matrix_common.c **** __attribute__((weak)) void matrix_init_user(void) {}
  29              		.loc 1 26 51 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 26 52 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE343:
  39              		.section	.text.matrix_init_kb,"ax",%progbits
  40              		.align	1
  41              		.weak	matrix_init_kb
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	matrix_init_kb:
  48              	.LFB341:
  22:quantum/matrix_common.c **** 
  49              		.loc 1 22 49 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  22:quantum/matrix_common.c **** 
  53              		.loc 1 22 51 view .LVU3
  22:quantum/matrix_common.c **** 
  54              		.loc 1 22 49 is_stmt 0 view .LVU4
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
  22:quantum/matrix_common.c **** 
  59              		.loc 1 22 51 view .LVU5
  60 0002 FFF7FEFF 		bl	matrix_init_user
  61              	.LVL0:
  22:quantum/matrix_common.c **** 
  62              		.loc 1 22 71 view .LVU6
  63 0006 08BD     		pop	{r3, pc}
  64              		.cfi_endproc
  65              	.LFE341:
  67              		.section	.text.matrix_scan_user,"ax",%progbits
  68              		.align	1
  69              		.weak	matrix_scan_user
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	matrix_scan_user:
  76              	.LFB361:
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81 0000 7047     		bx	lr
  82              		.cfi_endproc
  83              	.LFE361:
  85              		.section	.text.matrix_scan_kb,"ax",%progbits
  86              		.align	1
  87              		.weak	matrix_scan_kb
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	matrix_scan_kb:
  94              	.LFB342:
  24:quantum/matrix_common.c **** 
  95              		.loc 1 24 49 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  24:quantum/matrix_common.c **** 
  99              		.loc 1 24 51 view .LVU8
  24:quantum/matrix_common.c **** 
 100              		.loc 1 24 49 is_stmt 0 view .LVU9
 101 0000 08B5     		push	{r3, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 3, -8
 104              		.cfi_offset 14, -4
  24:quantum/matrix_common.c **** 
 105              		.loc 1 24 51 view .LVU10
 106 0002 FFF7FEFF 		bl	matrix_scan_user
 107              	.LVL1:
  24:quantum/matrix_common.c **** 
 108              		.loc 1 24 71 view .LVU11
 109 0006 08BD     		pop	{r3, pc}
 110              		.cfi_endproc
 111              	.LFE342:
 113              		.section	.text.matrix_rows,"ax",%progbits
 114              		.align	1
 115              		.global	matrix_rows
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	matrix_rows:
 122              	.LFB345:
  27:quantum/matrix_common.c **** 
  28:quantum/matrix_common.c **** __attribute__((weak)) void matrix_scan_user(void) {}
  29:quantum/matrix_common.c **** 
  30:quantum/matrix_common.c **** // helper functions
  31:quantum/matrix_common.c **** 
  32:quantum/matrix_common.c **** inline uint8_t matrix_rows(void) { return MATRIX_ROWS; }
 123              		.loc 1 32 34 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              		.loc 1 32 36 view .LVU13
 129              		.loc 1 32 56 is_stmt 0 view .LVU14
 130 0000 0820     		movs	r0, #8
 131 0002 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE345:
 135              		.section	.text.matrix_cols,"ax",%progbits
 136              		.align	1
 137              		.global	matrix_cols
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	matrix_cols:
 144              	.LFB346:
  33:quantum/matrix_common.c **** 
  34:quantum/matrix_common.c **** inline uint8_t matrix_cols(void) { return MATRIX_COLS; }
 145              		.loc 1 34 34 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              		.loc 1 34 36 view .LVU16
 151              		.loc 1 34 56 is_stmt 0 view .LVU17
 152 0000 0620     		movs	r0, #6
 153 0002 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE346:
 157              		.section	.text.matrix_is_on,"ax",%progbits
 158              		.align	1
 159              		.global	matrix_is_on
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	matrix_is_on:
 166              	.LVL2:
 167              	.LFB347:
  35:quantum/matrix_common.c **** 
  36:quantum/matrix_common.c **** inline bool matrix_is_on(uint8_t row, uint8_t col) { return (matrix[row] & ((matrix_row_t)1 << col)
 168              		.loc 1 36 52 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              		.loc 1 36 54 view .LVU19
 174              		.loc 1 36 68 is_stmt 0 view .LVU20
 175 0000 044B     		ldr	r3, .L8
 176 0002 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 177              		.loc 1 36 93 view .LVU21
 178 0004 0123     		movs	r3, #1
 179 0006 03FA01F1 		lsl	r1, r3, r1
 180              	.LVL3:
 181              		.loc 1 36 74 view .LVU22
 182 000a 0A42     		tst	r2, r1
 183              		.loc 1 36 103 view .LVU23
 184 000c 14BF     		ite	ne
 185 000e 1846     		movne	r0, r3
 186              	.LVL4:
 187              		.loc 1 36 103 view .LVU24
 188 0010 0020     		moveq	r0, #0
 189 0012 7047     		bx	lr
 190              	.L9:
 191              		.align	2
 192              	.L8:
 193 0014 00000000 		.word	matrix
 194              		.cfi_endproc
 195              	.LFE347:
 197              		.section	.text.matrix_get_row,"ax",%progbits
 198              		.align	1
 199              		.global	matrix_get_row
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv4-sp-d16
 205              	matrix_get_row:
 206              	.LVL5:
 207              	.LFB348:
  37:quantum/matrix_common.c **** 
  38:quantum/matrix_common.c **** inline matrix_row_t matrix_get_row(uint8_t row) {
 208              		.loc 1 38 49 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
  39:quantum/matrix_common.c ****     // Matrix mask lets you disable switches in the returned matrix data. For example, if you have 
  40:quantum/matrix_common.c ****     // switch blocker installed and the switch is always pressed.
  41:quantum/matrix_common.c **** #ifdef MATRIX_MASKED
  42:quantum/matrix_common.c ****     return matrix[row] & matrix_mask[row];
  43:quantum/matrix_common.c **** #else
  44:quantum/matrix_common.c ****     return matrix[row];
 213              		.loc 1 44 5 view .LVU26
  45:quantum/matrix_common.c **** #endif
  46:quantum/matrix_common.c **** }
 214              		.loc 1 46 1 is_stmt 0 view .LVU27
 215 0000 014B     		ldr	r3, .L11
 216 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 217              	.LVL6:
 218              		.loc 1 46 1 view .LVU28
 219 0004 7047     		bx	lr
 220              	.L12:
 221 0006 00BF     		.align	2
 222              	.L11:
 223 0008 00000000 		.word	matrix
 224              		.cfi_endproc
 225              	.LFE348:
 227              		.section	.text.matrix_is_modified,"ax",%progbits
 228              		.align	1
 229              		.global	matrix_is_modified
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	matrix_is_modified:
 236              	.LFB349:
  47:quantum/matrix_common.c **** 
  48:quantum/matrix_common.c **** // Deprecated.
  49:quantum/matrix_common.c **** bool matrix_is_modified(void) {
 237              		.loc 1 49 31 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
  50:quantum/matrix_common.c ****     if (debounce_active()) return false;
 241              		.loc 1 50 5 view .LVU30
  49:quantum/matrix_common.c ****     if (debounce_active()) return false;
 242              		.loc 1 49 31 is_stmt 0 view .LVU31
 243 0000 08B5     		push	{r3, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 247              		.loc 1 50 9 view .LVU32
 248 0002 FFF7FEFF 		bl	debounce_active
 249              	.LVL7:
 250              		.loc 1 50 8 view .LVU33
 251 0006 80F00100 		eor	r0, r0, #1
  51:quantum/matrix_common.c ****     return true;
  52:quantum/matrix_common.c **** }
 252              		.loc 1 52 1 view .LVU34
 253 000a C0B2     		uxtb	r0, r0
 254 000c 08BD     		pop	{r3, pc}
 255              		.cfi_endproc
 256              	.LFE349:
 258              		.section	.rodata.matrix_print.str1.1,"aMS",%progbits,1
 259              	.LC0:
 260 0000 0A722F63 		.ascii	"\012r/c 01234567\012\000"
 260      20303132 
 260      33343536 
 260      370A00
 261              	.LC1:
 262 000f 25303258 		.ascii	"%02X\000"
 262      00
 263              	.LC2:
 264 0014 3A2000   		.ascii	": \000"
 265              	.LC3:
 266 0017 25303862 		.ascii	"%08b\000"
 266      00
 267              	.LC4:
 268 001c 0A00     		.ascii	"\012\000"
 269              		.section	.text.matrix_print,"ax",%progbits
 270              		.align	1
 271              		.global	matrix_print
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	matrix_print:
 278              	.LFB350:
  53:quantum/matrix_common.c **** 
  54:quantum/matrix_common.c **** #if (MATRIX_COLS <= 8)
  55:quantum/matrix_common.c **** #    define print_matrix_header() print("\nr/c 01234567\n")
  56:quantum/matrix_common.c **** #    define print_matrix_row(row) print_bin_reverse8(matrix_get_row(row))
  57:quantum/matrix_common.c **** #    define matrix_bitpop(row) bitpop(matrix_get_row(row))
  58:quantum/matrix_common.c **** #elif (MATRIX_COLS <= 16)
  59:quantum/matrix_common.c **** #    define print_matrix_header() print("\nr/c 0123456789ABCDEF\n")
  60:quantum/matrix_common.c **** #    define print_matrix_row(row) print_bin_reverse16(matrix_get_row(row))
  61:quantum/matrix_common.c **** #    define matrix_bitpop(row) bitpop16(matrix_get_row(row))
  62:quantum/matrix_common.c **** #elif (MATRIX_COLS <= 32)
  63:quantum/matrix_common.c **** #    define print_matrix_header() print("\nr/c 0123456789ABCDEF0123456789ABCDEF\n")
  64:quantum/matrix_common.c **** #    define print_matrix_row(row) print_bin_reverse32(matrix_get_row(row))
  65:quantum/matrix_common.c **** #    define matrix_bitpop(row) bitpop32(matrix_get_row(row))
  66:quantum/matrix_common.c **** #endif
  67:quantum/matrix_common.c **** 
  68:quantum/matrix_common.c **** void matrix_print(void) {
 279              		.loc 1 68 25 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
  69:quantum/matrix_common.c ****     print_matrix_header();
 283              		.loc 1 69 5 view .LVU36
  68:quantum/matrix_common.c ****     print_matrix_header();
 284              		.loc 1 68 25 is_stmt 0 view .LVU37
 285 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 286              		.cfi_def_cfa_offset 24
 287              		.cfi_offset 4, -24
 288              		.cfi_offset 5, -20
 289              		.cfi_offset 6, -16
 290              		.cfi_offset 7, -12
 291              		.cfi_offset 8, -8
 292              		.cfi_offset 14, -4
 293              		.loc 1 69 5 view .LVU38
 294 0004 0F48     		ldr	r0, .L17
 295 0006 104D     		ldr	r5, .L17+4
 296              	.LBB11:
  70:quantum/matrix_common.c **** 
  71:quantum/matrix_common.c ****     for (uint8_t row = 0; row < MATRIX_ROWS; row++) {
  72:quantum/matrix_common.c ****         print_hex8(row);
 297              		.loc 1 72 9 view .LVU39
 298 0008 DFF84C80 		ldr	r8, .L17+20
  73:quantum/matrix_common.c ****         print(": ");
 299              		.loc 1 73 9 view .LVU40
 300 000c 0F4F     		ldr	r7, .L17+8
  74:quantum/matrix_common.c ****         print_matrix_row(row);
 301              		.loc 1 74 9 view .LVU41
 302 000e 104E     		ldr	r6, .L17+12
 303              	.LBE11:
  69:quantum/matrix_common.c **** 
 304              		.loc 1 69 5 view .LVU42
 305 0010 FFF7FEFF 		bl	printf_
 306              	.LVL8:
  71:quantum/matrix_common.c ****         print_hex8(row);
 307              		.loc 1 71 5 is_stmt 1 view .LVU43
 308              	.LBB14:
  71:quantum/matrix_common.c ****         print_hex8(row);
 309              		.loc 1 71 10 view .LVU44
  71:quantum/matrix_common.c ****         print_hex8(row);
 310              		.loc 1 71 31 view .LVU45
 311              	.LBE14:
  69:quantum/matrix_common.c **** 
 312              		.loc 1 69 5 is_stmt 0 view .LVU46
 313 0014 0024     		movs	r4, #0
 314              	.LVL9:
 315              	.L15:
 316              	.LBB15:
  72:quantum/matrix_common.c ****         print(": ");
 317              		.loc 1 72 9 is_stmt 1 discriminator 3 view .LVU47
 318 0016 2146     		mov	r1, r4
 319 0018 4046     		mov	r0, r8
 320 001a FFF7FEFF 		bl	printf_
 321              	.LVL10:
  73:quantum/matrix_common.c ****         print_matrix_row(row);
 322              		.loc 1 73 9 discriminator 3 view .LVU48
 323 001e 3846     		mov	r0, r7
 324 0020 FFF7FEFF 		bl	printf_
 325              	.LVL11:
 326              		.loc 1 74 9 discriminator 3 view .LVU49
 327              	.LBB12:
 328              	.LBI12:
  38:quantum/matrix_common.c ****     // Matrix mask lets you disable switches in the returned matrix data. For example, if you have 
 329              		.loc 1 38 21 discriminator 3 view .LVU50
 330              	.LBB13:
  44:quantum/matrix_common.c **** #endif
 331              		.loc 1 44 5 discriminator 3 view .LVU51
  44:quantum/matrix_common.c **** #endif
 332              		.loc 1 44 5 is_stmt 0 discriminator 3 view .LVU52
 333              	.LBE13:
 334              	.LBE12:
 335              		.loc 1 74 9 discriminator 3 view .LVU53
 336 0024 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 337 0028 FFF7FEFF 		bl	bitrev
 338              	.LVL12:
 339 002c 0146     		mov	r1, r0
 340 002e 3046     		mov	r0, r6
 341 0030 FFF7FEFF 		bl	printf_
 342              	.LVL13:
  75:quantum/matrix_common.c ****         print("\n");
 343              		.loc 1 75 9 is_stmt 1 discriminator 3 view .LVU54
  71:quantum/matrix_common.c ****         print_hex8(row);
 344              		.loc 1 71 31 is_stmt 0 discriminator 3 view .LVU55
 345 0034 0134     		adds	r4, r4, #1
 346              	.LVL14:
 347              		.loc 1 75 9 discriminator 3 view .LVU56
 348 0036 0748     		ldr	r0, .L17+16
 349 0038 FFF7FEFF 		bl	printf_
 350              	.LVL15:
  71:quantum/matrix_common.c ****         print_hex8(row);
 351              		.loc 1 71 49 is_stmt 1 discriminator 3 view .LVU57
  71:quantum/matrix_common.c ****         print_hex8(row);
 352              		.loc 1 71 31 discriminator 3 view .LVU58
 353 003c 082C     		cmp	r4, #8
 354 003e EAD1     		bne	.L15
 355              	.LBE15:
  76:quantum/matrix_common.c ****     }
  77:quantum/matrix_common.c **** }
 356              		.loc 1 77 1 is_stmt 0 view .LVU59
 357 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 358              	.L18:
 359              		.align	2
 360              	.L17:
 361 0044 00000000 		.word	.LC0
 362 0048 00000000 		.word	matrix
 363 004c 14000000 		.word	.LC2
 364 0050 17000000 		.word	.LC3
 365 0054 1C000000 		.word	.LC4
 366 0058 0F000000 		.word	.LC1
 367              		.cfi_endproc
 368              	.LFE350:
 370              		.section	.text.matrix_key_count,"ax",%progbits
 371              		.align	1
 372              		.global	matrix_key_count
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	matrix_key_count:
 379              	.LFB351:
  78:quantum/matrix_common.c **** 
  79:quantum/matrix_common.c **** uint8_t matrix_key_count(void) {
 380              		.loc 1 79 32 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
  80:quantum/matrix_common.c ****     uint8_t count = 0;
 384              		.loc 1 80 5 view .LVU61
 385              	.LVL16:
  81:quantum/matrix_common.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 386              		.loc 1 81 5 view .LVU62
 387              	.LBB16:
 388              		.loc 1 81 10 view .LVU63
 389              		.loc 1 81 27 view .LVU64
 390              	.LBE16:
  79:quantum/matrix_common.c ****     uint8_t count = 0;
 391              		.loc 1 79 32 is_stmt 0 view .LVU65
 392 0000 70B5     		push	{r4, r5, r6, lr}
 393              		.cfi_def_cfa_offset 16
 394              		.cfi_offset 4, -16
 395              		.cfi_offset 5, -12
 396              		.cfi_offset 6, -8
 397              		.cfi_offset 14, -4
 398 0002 074E     		ldr	r6, .L22
  79:quantum/matrix_common.c ****     uint8_t count = 0;
 399              		.loc 1 79 32 view .LVU66
 400 0004 0825     		movs	r5, #8
  80:quantum/matrix_common.c ****     uint8_t count = 0;
 401              		.loc 1 80 13 view .LVU67
 402 0006 0024     		movs	r4, #0
 403              	.LVL17:
 404              	.L20:
 405              	.LBB19:
  82:quantum/matrix_common.c ****         count += matrix_bitpop(i);
 406              		.loc 1 82 9 is_stmt 1 view .LVU68
 407              	.LBB17:
 408              	.LBI17:
  38:quantum/matrix_common.c ****     // Matrix mask lets you disable switches in the returned matrix data. For example, if you have 
 409              		.loc 1 38 21 view .LVU69
 410              	.LBB18:
  44:quantum/matrix_common.c **** #endif
 411              		.loc 1 44 5 view .LVU70
  44:quantum/matrix_common.c **** #endif
 412              		.loc 1 44 5 is_stmt 0 view .LVU71
 413              	.LBE18:
 414              	.LBE17:
 415              		.loc 1 82 18 view .LVU72
 416 0008 16F8010B 		ldrb	r0, [r6], #1	@ zero_extendqisi2
 417              	.LVL18:
 418              		.loc 1 82 18 view .LVU73
 419 000c FFF7FEFF 		bl	bitpop
 420              	.LVL19:
  81:quantum/matrix_common.c ****         count += matrix_bitpop(i);
 421              		.loc 1 81 27 view .LVU74
 422 0010 013D     		subs	r5, r5, #1
 423              		.loc 1 82 15 view .LVU75
 424 0012 0444     		add	r4, r4, r0
 425              	.LVL20:
  81:quantum/matrix_common.c ****         count += matrix_bitpop(i);
 426              		.loc 1 81 27 view .LVU76
 427 0014 15F0FF05 		ands	r5, r5, #255
 428              		.loc 1 82 15 view .LVU77
 429 0018 E4B2     		uxtb	r4, r4
 430              	.LVL21:
  81:quantum/matrix_common.c ****         count += matrix_bitpop(i);
 431              		.loc 1 81 43 is_stmt 1 view .LVU78
  81:quantum/matrix_common.c ****         count += matrix_bitpop(i);
 432              		.loc 1 81 27 view .LVU79
 433 001a F5D1     		bne	.L20
 434              	.LBE19:
  83:quantum/matrix_common.c ****     }
  84:quantum/matrix_common.c ****     return count;
 435              		.loc 1 84 5 view .LVU80
  85:quantum/matrix_common.c **** }
 436              		.loc 1 85 1 is_stmt 0 view .LVU81
 437 001c 2046     		mov	r0, r4
 438 001e 70BD     		pop	{r4, r5, r6, pc}
 439              	.LVL22:
 440              	.L23:
 441              		.loc 1 85 1 view .LVU82
 442              		.align	2
 443              	.L22:
 444 0020 00000000 		.word	matrix
 445              		.cfi_endproc
 446              	.LFE351:
 448              		.section	.text.matrix_io_delay,"ax",%progbits
 449              		.align	1
 450              		.weak	matrix_io_delay
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu fpv4-sp-d16
 456              	matrix_io_delay:
 457              	.LFB352:
  86:quantum/matrix_common.c **** 
  87:quantum/matrix_common.c **** /*　`matrix_io_delay ()` exists for backwards compatibility. From now on, use matrix_output_unsele
  88:quantum/matrix_common.c **** __attribute__((weak)) void matrix_io_delay(void) { wait_us(MATRIX_IO_DELAY); }
 458              		.loc 1 88 50 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463              		.loc 1 88 52 view .LVU84
 464              		.loc 1 88 52 view .LVU85
 465              		.loc 1 88 52 view .LVU86
 466 0000 0120     		movs	r0, #1
 467 0002 FFF7FEBF 		b	chThdSleep
 468              	.LVL23:
 469              		.cfi_endproc
 470              	.LFE352:
 472              		.section	.text.matrix_output_select_delay,"ax",%progbits
 473              		.align	1
 474              		.weak	matrix_output_select_delay
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu fpv4-sp-d16
 480              	matrix_output_select_delay:
 481              	.LFB353:
  89:quantum/matrix_common.c **** 
  90:quantum/matrix_common.c **** __attribute__((weak)) void matrix_output_select_delay(void) { waitInputPinDelay(); }
 482              		.loc 1 90 61 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487              		.loc 1 90 63 view .LVU88
 488              	.LVL24:
 489              	.LBB20:
 490              	.LBI20:
 491              		.file 2 "tmk_core/common/chibios/_wait.c"
   1:tmk_core/common/chibios/_wait.c **** /* Copyright 2021 QMK
   2:tmk_core/common/chibios/_wait.c ****  *
   3:tmk_core/common/chibios/_wait.c ****  * This program is free software: you can redistribute it and/or modify
   4:tmk_core/common/chibios/_wait.c ****  * it under the terms of the GNU General Public License as published by
   5:tmk_core/common/chibios/_wait.c ****  * the Free Software Foundation, either version 3 of the License, or
   6:tmk_core/common/chibios/_wait.c ****  * (at your option) any later version.
   7:tmk_core/common/chibios/_wait.c ****  *
   8:tmk_core/common/chibios/_wait.c ****  * This program is distributed in the hope that it will be useful,
   9:tmk_core/common/chibios/_wait.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:tmk_core/common/chibios/_wait.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:tmk_core/common/chibios/_wait.c ****  * GNU General Public License for more details.
  12:tmk_core/common/chibios/_wait.c ****  *
  13:tmk_core/common/chibios/_wait.c ****  * You should have received a copy of the GNU General Public License
  14:tmk_core/common/chibios/_wait.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:tmk_core/common/chibios/_wait.c ****  */
  16:tmk_core/common/chibios/_wait.c **** 
  17:tmk_core/common/chibios/_wait.c **** #ifndef __OPTIMIZE__
  18:tmk_core/common/chibios/_wait.c **** #    pragma message "Compiler optimizations disabled; wait_cpuclock() won't work as designed"
  19:tmk_core/common/chibios/_wait.c **** #endif
  20:tmk_core/common/chibios/_wait.c **** 
  21:tmk_core/common/chibios/_wait.c **** #define CLOCK_DELAY_NOP8 "nop\n\t nop\n\t nop\n\t nop\n\t   nop\n\t nop\n\t nop\n\t nop\n\t"
  22:tmk_core/common/chibios/_wait.c **** 
  23:tmk_core/common/chibios/_wait.c **** __attribute__((always_inline)) static inline void wait_cpuclock(unsigned int n) { /* n: 1..135 */
 492              		.loc 2 23 51 view .LVU89
 493              	.LBB21:
  24:tmk_core/common/chibios/_wait.c ****     /* The argument n must be a constant expression.
  25:tmk_core/common/chibios/_wait.c ****      * That way, compiler optimization will remove unnecessary code. */
  26:tmk_core/common/chibios/_wait.c ****     if (n < 1) {
 494              		.loc 2 26 5 view .LVU90
  27:tmk_core/common/chibios/_wait.c ****         return;
  28:tmk_core/common/chibios/_wait.c ****     }
  29:tmk_core/common/chibios/_wait.c ****     if (n > 8) {
 495              		.loc 2 29 5 view .LVU91
 496              	.LBB22:
  30:tmk_core/common/chibios/_wait.c ****         unsigned int n8 = n / 8;
 497              		.loc 2 30 9 view .LVU92
  31:tmk_core/common/chibios/_wait.c ****         n               = n - n8 * 8;
 498              		.loc 2 31 9 view .LVU93
  32:tmk_core/common/chibios/_wait.c ****         switch (n8) {
 499              		.loc 2 32 9 view .LVU94
  33:tmk_core/common/chibios/_wait.c ****             case 16:
  34:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  35:tmk_core/common/chibios/_wait.c ****             case 15:
  36:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  37:tmk_core/common/chibios/_wait.c ****             case 14:
  38:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  39:tmk_core/common/chibios/_wait.c ****             case 13:
  40:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  41:tmk_core/common/chibios/_wait.c ****             case 12:
  42:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  43:tmk_core/common/chibios/_wait.c ****             case 11:
  44:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  45:tmk_core/common/chibios/_wait.c ****             case 10:
  46:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  47:tmk_core/common/chibios/_wait.c ****             case 9:
  48:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  49:tmk_core/common/chibios/_wait.c ****             case 8:
  50:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  51:tmk_core/common/chibios/_wait.c ****             case 7:
  52:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  53:tmk_core/common/chibios/_wait.c ****             case 6:
  54:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  55:tmk_core/common/chibios/_wait.c ****             case 5:
  56:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  57:tmk_core/common/chibios/_wait.c ****             case 4:
  58:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  59:tmk_core/common/chibios/_wait.c ****             case 3:
  60:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
  61:tmk_core/common/chibios/_wait.c ****             case 2:
  62:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
 500              		.loc 2 62 17 view .LVU95
 501              		.syntax unified
 502              	@ 62 "tmk_core/common/chibios/_wait.c" 1
 503 0000 00BF     		nop
 504 0002 00BF     		 nop
 505 0004 00BF     		 nop
 506 0006 00BF     		 nop
 507 0008 00BF     		   nop
 508 000a 00BF     		 nop
 509 000c 00BF     		 nop
 510 000e 00BF     		 nop
 511              		
 512              	@ 0 "" 2
  63:tmk_core/common/chibios/_wait.c ****             case 1:
  64:tmk_core/common/chibios/_wait.c ****                 asm volatile(CLOCK_DELAY_NOP8::: "memory");
 513              		.loc 2 64 17 view .LVU96
 514              	@ 64 "tmk_core/common/chibios/_wait.c" 1
 515 0010 00BF     		nop
 516 0012 00BF     		 nop
 517 0014 00BF     		 nop
 518 0016 00BF     		 nop
 519 0018 00BF     		   nop
 520 001a 00BF     		 nop
 521 001c 00BF     		 nop
 522 001e 00BF     		 nop
 523              		
 524              	@ 0 "" 2
 525              		.loc 2 64 17 is_stmt 0 view .LVU97
 526              		.thumb
 527              		.syntax unified
 528              	.LBE22:
  65:tmk_core/common/chibios/_wait.c ****             case 0:
  66:tmk_core/common/chibios/_wait.c ****                 break;
  67:tmk_core/common/chibios/_wait.c ****         }
  68:tmk_core/common/chibios/_wait.c ****     }
  69:tmk_core/common/chibios/_wait.c ****     switch (n) {
 529              		.loc 2 69 5 is_stmt 1 view .LVU98
  70:tmk_core/common/chibios/_wait.c ****         case 8:
  71:tmk_core/common/chibios/_wait.c ****             asm volatile("nop" ::: "memory");
  72:tmk_core/common/chibios/_wait.c ****         case 7:
  73:tmk_core/common/chibios/_wait.c ****             asm volatile("nop" ::: "memory");
  74:tmk_core/common/chibios/_wait.c ****         case 6:
  75:tmk_core/common/chibios/_wait.c ****             asm volatile("nop" ::: "memory");
  76:tmk_core/common/chibios/_wait.c ****         case 5:
  77:tmk_core/common/chibios/_wait.c ****             asm volatile("nop" ::: "memory");
  78:tmk_core/common/chibios/_wait.c ****         case 4:
  79:tmk_core/common/chibios/_wait.c ****             asm volatile("nop" ::: "memory");
  80:tmk_core/common/chibios/_wait.c ****         case 3:
  81:tmk_core/common/chibios/_wait.c ****             asm volatile("nop" ::: "memory");
  82:tmk_core/common/chibios/_wait.c ****         case 2:
  83:tmk_core/common/chibios/_wait.c ****             asm volatile("nop" ::: "memory");
 530              		.loc 2 83 13 view .LVU99
 531              		.syntax unified
 532              	@ 83 "tmk_core/common/chibios/_wait.c" 1
 533 0020 00BF     		nop
 534              	@ 0 "" 2
  84:tmk_core/common/chibios/_wait.c ****         case 1:
  85:tmk_core/common/chibios/_wait.c ****             asm volatile("nop" ::: "memory");
 535              		.loc 2 85 13 view .LVU100
 536              	@ 85 "tmk_core/common/chibios/_wait.c" 1
 537 0022 00BF     		nop
 538              	@ 0 "" 2
 539              	.LVL25:
 540              		.loc 2 85 13 is_stmt 0 view .LVU101
 541              		.thumb
 542              		.syntax unified
 543              	.LBE21:
 544              	.LBE20:
 545              		.loc 1 90 84 view .LVU102
 546 0024 7047     		bx	lr
 547              		.cfi_endproc
 548              	.LFE353:
 550              		.section	.text.matrix_output_unselect_delay,"ax",%progbits
 551              		.align	1
 552              		.weak	matrix_output_unselect_delay
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv4-sp-d16
 558              	matrix_output_unselect_delay:
 559              	.LVL26:
 560              	.LFB354:
  91:quantum/matrix_common.c **** __attribute__((weak)) void matrix_output_unselect_delay(uint8_t line, bool key_pressed) { matrix_io
 561              		.loc 1 91 89 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		.loc 1 91 91 view .LVU104
 566              		.loc 1 91 89 is_stmt 0 view .LVU105
 567 0000 08B5     		push	{r3, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 3, -8
 570              		.cfi_offset 14, -4
 571              		.loc 1 91 91 view .LVU106
 572 0002 FFF7FEFF 		bl	matrix_io_delay
 573              	.LVL27:
 574              		.loc 1 91 110 view .LVU107
 575 0006 08BD     		pop	{r3, pc}
 576              		.cfi_endproc
 577              	.LFE354:
 579              		.section	.text.matrix_init_custom,"ax",%progbits
 580              		.align	1
 581              		.weak	matrix_init_custom
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv4-sp-d16
 587              	matrix_init_custom:
 588              	.LFB363:
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593 0000 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE363:
 597              		.section	.text.matrix_scan_custom,"ax",%progbits
 598              		.align	1
 599              		.weak	matrix_scan_custom
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv4-sp-d16
 605              	matrix_scan_custom:
 606              	.LVL28:
 607              	.LFB356:
  92:quantum/matrix_common.c **** 
  93:quantum/matrix_common.c **** // CUSTOM MATRIX 'LITE'
  94:quantum/matrix_common.c **** __attribute__((weak)) void matrix_init_custom(void) {}
  95:quantum/matrix_common.c **** 
  96:quantum/matrix_common.c **** __attribute__((weak)) bool matrix_scan_custom(matrix_row_t current_matrix[]) { return true; }
 608              		.loc 1 96 78 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613              		.loc 1 96 80 view .LVU109
 614              		.loc 1 96 93 is_stmt 0 view .LVU110
 615 0000 0120     		movs	r0, #1
 616              	.LVL29:
 617              		.loc 1 96 93 view .LVU111
 618 0002 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE356:
 622              		.section	.text.matrix_init,"ax",%progbits
 623              		.align	1
 624              		.weak	matrix_init
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu fpv4-sp-d16
 630              	matrix_init:
 631              	.LFB357:
  97:quantum/matrix_common.c **** 
  98:quantum/matrix_common.c **** __attribute__((weak)) void matrix_init(void) {
 632              		.loc 1 98 46 is_stmt 1 view -0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
  99:quantum/matrix_common.c ****     matrix_init_custom();
 636              		.loc 1 99 5 view .LVU113
  98:quantum/matrix_common.c ****     matrix_init_custom();
 637              		.loc 1 98 46 is_stmt 0 view .LVU114
 638 0000 08B5     		push	{r3, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 3, -8
 641              		.cfi_offset 14, -4
 642              		.loc 1 99 5 view .LVU115
 643 0002 FFF7FEFF 		bl	matrix_init_custom
 644              	.LVL30:
 100:quantum/matrix_common.c **** 
 101:quantum/matrix_common.c ****     // initialize matrix state: all keys off
 102:quantum/matrix_common.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 645              		.loc 1 102 5 is_stmt 1 view .LVU116
 646              	.LBB23:
 647              		.loc 1 102 10 view .LVU117
 648              		.loc 1 102 27 view .LVU118
 103:quantum/matrix_common.c ****         raw_matrix[i] = 0;
 649              		.loc 1 103 23 is_stmt 0 view .LVU119
 650 0006 074A     		ldr	r2, .L30
 651 0008 0023     		movs	r3, #0
 652 000a 1360     		str	r3, [r2]	@ unaligned
 653 000c 5360     		str	r3, [r2, #4]	@ unaligned
 104:quantum/matrix_common.c ****         matrix[i]     = 0;
 654              		.loc 1 104 23 view .LVU120
 655 000e 064A     		ldr	r2, .L30+4
 656              	.LBE23:
 105:quantum/matrix_common.c ****     }
 106:quantum/matrix_common.c **** 
 107:quantum/matrix_common.c ****     debounce_init(MATRIX_ROWS);
 657              		.loc 1 107 5 view .LVU121
 658 0010 0820     		movs	r0, #8
 659              	.LBB24:
 104:quantum/matrix_common.c ****         matrix[i]     = 0;
 660              		.loc 1 104 23 view .LVU122
 661 0012 1360     		str	r3, [r2]	@ unaligned
 662 0014 5360     		str	r3, [r2, #4]	@ unaligned
 663              	.LVL31:
 104:quantum/matrix_common.c ****         matrix[i]     = 0;
 664              		.loc 1 104 23 view .LVU123
 665              	.LBE24:
 666              		.loc 1 107 5 is_stmt 1 view .LVU124
 667 0016 FFF7FEFF 		bl	debounce_init
 668              	.LVL32:
 108:quantum/matrix_common.c **** 
 109:quantum/matrix_common.c ****     matrix_init_quantum();
 669              		.loc 1 109 5 view .LVU125
 110:quantum/matrix_common.c **** }
 670              		.loc 1 110 1 is_stmt 0 view .LVU126
 671 001a BDE80840 		pop	{r3, lr}
 672              		.cfi_restore 14
 673              		.cfi_restore 3
 674              		.cfi_def_cfa_offset 0
 109:quantum/matrix_common.c **** }
 675              		.loc 1 109 5 view .LVU127
 676 001e FFF7FEBF 		b	matrix_init_quantum
 677              	.LVL33:
 678              	.L31:
 679 0022 00BF     		.align	2
 680              	.L30:
 681 0024 00000000 		.word	raw_matrix
 682 0028 00000000 		.word	matrix
 683              		.cfi_endproc
 684              	.LFE357:
 686              		.section	.text.matrix_scan,"ax",%progbits
 687              		.align	1
 688              		.weak	matrix_scan
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	matrix_scan:
 695              	.LFB358:
 111:quantum/matrix_common.c **** 
 112:quantum/matrix_common.c **** __attribute__((weak)) uint8_t matrix_scan(void) {
 696              		.loc 1 112 49 is_stmt 1 view -0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 113:quantum/matrix_common.c ****     bool changed = matrix_scan_custom(raw_matrix);
 700              		.loc 1 113 5 view .LVU129
 112:quantum/matrix_common.c ****     bool changed = matrix_scan_custom(raw_matrix);
 701              		.loc 1 112 49 is_stmt 0 view .LVU130
 702 0000 38B5     		push	{r3, r4, r5, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 3, -16
 705              		.cfi_offset 4, -12
 706              		.cfi_offset 5, -8
 707              		.cfi_offset 14, -4
 708              		.loc 1 113 20 view .LVU131
 709 0002 074D     		ldr	r5, .L33
 710 0004 2846     		mov	r0, r5
 711 0006 FFF7FEFF 		bl	matrix_scan_custom
 712              	.LVL34:
 114:quantum/matrix_common.c **** 
 115:quantum/matrix_common.c ****     debounce(raw_matrix, matrix, MATRIX_ROWS, changed);
 713              		.loc 1 115 5 view .LVU132
 714 000a 0649     		ldr	r1, .L33+4
 715 000c 0346     		mov	r3, r0
 113:quantum/matrix_common.c **** 
 716              		.loc 1 113 20 view .LVU133
 717 000e 0446     		mov	r4, r0
 718              	.LVL35:
 719              		.loc 1 115 5 is_stmt 1 view .LVU134
 720 0010 0822     		movs	r2, #8
 721 0012 2846     		mov	r0, r5
 722              	.LVL36:
 723              		.loc 1 115 5 is_stmt 0 view .LVU135
 724 0014 FFF7FEFF 		bl	debounce
 725              	.LVL37:
 116:quantum/matrix_common.c **** 
 117:quantum/matrix_common.c ****     matrix_scan_quantum();
 726              		.loc 1 117 5 is_stmt 1 view .LVU136
 727 0018 FFF7FEFF 		bl	matrix_scan_quantum
 728              	.LVL38:
 118:quantum/matrix_common.c ****     return changed;
 729              		.loc 1 118 5 view .LVU137
 119:quantum/matrix_common.c **** }
 730              		.loc 1 119 1 is_stmt 0 view .LVU138
 731 001c 2046     		mov	r0, r4
 732 001e 38BD     		pop	{r3, r4, r5, pc}
 733              	.L34:
 734              		.align	2
 735              	.L33:
 736 0020 00000000 		.word	raw_matrix
 737 0024 00000000 		.word	matrix
 738              		.cfi_endproc
 739              	.LFE358:
 741              		.section	.text.peek_matrix,"ax",%progbits
 742              		.align	1
 743              		.weak	peek_matrix
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	peek_matrix:
 750              	.LVL39:
 751              	.LFB359:
 120:quantum/matrix_common.c **** 
 121:quantum/matrix_common.c **** __attribute__((weak)) bool peek_matrix(uint8_t row_index, uint8_t col_index, bool raw) { return 0 !
 752              		.loc 1 121 88 is_stmt 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757              		.loc 1 121 90 view .LVU140
 758              		.loc 1 121 132 is_stmt 0 view .LVU141
 759 0000 2AB1     		cbz	r2, .L36
 760              		.loc 1 121 120 discriminator 1 view .LVU142
 761 0002 044B     		ldr	r3, .L39
 762              	.L38:
 763              		.loc 1 121 132 discriminator 2 view .LVU143
 764 0004 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 765              	.LVL40:
 766              		.loc 1 121 99 discriminator 2 view .LVU144
 767 0006 0841     		asrs	r0, r0, r1
 768              		.loc 1 121 191 discriminator 2 view .LVU145
 769 0008 00F00100 		and	r0, r0, #1
 770 000c 7047     		bx	lr
 771              	.LVL41:
 772              	.L36:
 773              		.loc 1 121 140 discriminator 2 view .LVU146
 774 000e 024B     		ldr	r3, .L39+4
 775 0010 F8E7     		b	.L38
 776              	.L40:
 777 0012 00BF     		.align	2
 778              	.L39:
 779 0014 00000000 		.word	raw_matrix
 780 0018 00000000 		.word	matrix
 781              		.cfi_endproc
 782              	.LFE359:
 784              		.comm	matrix,8,1
 785              		.comm	raw_matrix,8,1
 786              		.text
 787              	.Letext0:
 788              		.file 3 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 789              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 790              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 791              		.file 6 "./lib/chibios/os/rt/include/chtime.h"
 792              		.file 7 "quantum/matrix.h"
 793              		.file 8 "quantum/debounce.h"
 794              		.file 9 "./lib/chibios/os/rt/include/chthreads.h"
 795              		.file 10 "quantum/bitwise.h"
 796              		.file 11 "lib/printf/printf.h"
 797              		.file 12 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 matrix_common.c
     /tmp/cc3tUsyw.s:18     .text.matrix_init_user:0000000000000000 $t
     /tmp/cc3tUsyw.s:26     .text.matrix_init_user:0000000000000000 matrix_init_user
     /tmp/cc3tUsyw.s:40     .text.matrix_init_kb:0000000000000000 $t
     /tmp/cc3tUsyw.s:47     .text.matrix_init_kb:0000000000000000 matrix_init_kb
     /tmp/cc3tUsyw.s:68     .text.matrix_scan_user:0000000000000000 $t
     /tmp/cc3tUsyw.s:75     .text.matrix_scan_user:0000000000000000 matrix_scan_user
     /tmp/cc3tUsyw.s:86     .text.matrix_scan_kb:0000000000000000 $t
     /tmp/cc3tUsyw.s:93     .text.matrix_scan_kb:0000000000000000 matrix_scan_kb
     /tmp/cc3tUsyw.s:114    .text.matrix_rows:0000000000000000 $t
     /tmp/cc3tUsyw.s:121    .text.matrix_rows:0000000000000000 matrix_rows
     /tmp/cc3tUsyw.s:136    .text.matrix_cols:0000000000000000 $t
     /tmp/cc3tUsyw.s:143    .text.matrix_cols:0000000000000000 matrix_cols
     /tmp/cc3tUsyw.s:158    .text.matrix_is_on:0000000000000000 $t
     /tmp/cc3tUsyw.s:165    .text.matrix_is_on:0000000000000000 matrix_is_on
     /tmp/cc3tUsyw.s:193    .text.matrix_is_on:0000000000000014 $d
                            *COM*:0000000000000008 matrix
     /tmp/cc3tUsyw.s:198    .text.matrix_get_row:0000000000000000 $t
     /tmp/cc3tUsyw.s:205    .text.matrix_get_row:0000000000000000 matrix_get_row
     /tmp/cc3tUsyw.s:223    .text.matrix_get_row:0000000000000008 $d
     /tmp/cc3tUsyw.s:228    .text.matrix_is_modified:0000000000000000 $t
     /tmp/cc3tUsyw.s:235    .text.matrix_is_modified:0000000000000000 matrix_is_modified
     /tmp/cc3tUsyw.s:270    .text.matrix_print:0000000000000000 $t
     /tmp/cc3tUsyw.s:277    .text.matrix_print:0000000000000000 matrix_print
     /tmp/cc3tUsyw.s:361    .text.matrix_print:0000000000000044 $d
     /tmp/cc3tUsyw.s:371    .text.matrix_key_count:0000000000000000 $t
     /tmp/cc3tUsyw.s:378    .text.matrix_key_count:0000000000000000 matrix_key_count
     /tmp/cc3tUsyw.s:444    .text.matrix_key_count:0000000000000020 $d
     /tmp/cc3tUsyw.s:449    .text.matrix_io_delay:0000000000000000 $t
     /tmp/cc3tUsyw.s:456    .text.matrix_io_delay:0000000000000000 matrix_io_delay
     /tmp/cc3tUsyw.s:473    .text.matrix_output_select_delay:0000000000000000 $t
     /tmp/cc3tUsyw.s:480    .text.matrix_output_select_delay:0000000000000000 matrix_output_select_delay
     /tmp/cc3tUsyw.s:551    .text.matrix_output_unselect_delay:0000000000000000 $t
     /tmp/cc3tUsyw.s:558    .text.matrix_output_unselect_delay:0000000000000000 matrix_output_unselect_delay
     /tmp/cc3tUsyw.s:580    .text.matrix_init_custom:0000000000000000 $t
     /tmp/cc3tUsyw.s:587    .text.matrix_init_custom:0000000000000000 matrix_init_custom
     /tmp/cc3tUsyw.s:598    .text.matrix_scan_custom:0000000000000000 $t
     /tmp/cc3tUsyw.s:605    .text.matrix_scan_custom:0000000000000000 matrix_scan_custom
     /tmp/cc3tUsyw.s:623    .text.matrix_init:0000000000000000 $t
     /tmp/cc3tUsyw.s:630    .text.matrix_init:0000000000000000 matrix_init
     /tmp/cc3tUsyw.s:681    .text.matrix_init:0000000000000024 $d
                            *COM*:0000000000000008 raw_matrix
     /tmp/cc3tUsyw.s:687    .text.matrix_scan:0000000000000000 $t
     /tmp/cc3tUsyw.s:694    .text.matrix_scan:0000000000000000 matrix_scan
     /tmp/cc3tUsyw.s:736    .text.matrix_scan:0000000000000020 $d
     /tmp/cc3tUsyw.s:742    .text.peek_matrix:0000000000000000 $t
     /tmp/cc3tUsyw.s:749    .text.peek_matrix:0000000000000000 peek_matrix
     /tmp/cc3tUsyw.s:779    .text.peek_matrix:0000000000000014 $d

UNDEFINED SYMBOLS
debounce_active
printf_
bitrev
bitpop
chThdSleep
debounce_init
matrix_init_quantum
debounce
matrix_scan_quantum
