   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"chmboxes.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/chibios/os/oslib/src/chmboxes.c"
  20              		.section	.text.chMBObjectInit,"ax",%progbits
  21              		.align	1
  22              		.global	chMBObjectInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	chMBObjectInit:
  28              	.LVL0:
  29              	.LFB289:
   1:lib/chibios/os/oslib/src/chmboxes.c **** /*
   2:lib/chibios/os/oslib/src/chmboxes.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/oslib/src/chmboxes.c **** 
   4:lib/chibios/os/oslib/src/chmboxes.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/oslib/src/chmboxes.c **** 
   6:lib/chibios/os/oslib/src/chmboxes.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/oslib/src/chmboxes.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/oslib/src/chmboxes.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/oslib/src/chmboxes.c ****     (at your option) any later version.
  10:lib/chibios/os/oslib/src/chmboxes.c **** 
  11:lib/chibios/os/oslib/src/chmboxes.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/oslib/src/chmboxes.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/oslib/src/chmboxes.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/oslib/src/chmboxes.c ****     GNU General Public License for more details.
  15:lib/chibios/os/oslib/src/chmboxes.c **** 
  16:lib/chibios/os/oslib/src/chmboxes.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/oslib/src/chmboxes.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/oslib/src/chmboxes.c **** */
  19:lib/chibios/os/oslib/src/chmboxes.c **** 
  20:lib/chibios/os/oslib/src/chmboxes.c **** /**
  21:lib/chibios/os/oslib/src/chmboxes.c ****  * @file    oslib/src/chmboxes.c
  22:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Mailboxes code.
  23:lib/chibios/os/oslib/src/chmboxes.c ****  *
  24:lib/chibios/os/oslib/src/chmboxes.c ****  * @addtogroup oslib_mailboxes
  25:lib/chibios/os/oslib/src/chmboxes.c ****  * @details Asynchronous messages.
  26:lib/chibios/os/oslib/src/chmboxes.c ****  *          <h2>Operation mode</h2>
  27:lib/chibios/os/oslib/src/chmboxes.c ****  *          A mailbox is an asynchronous communication mechanism.<br>
  28:lib/chibios/os/oslib/src/chmboxes.c ****  *          Operations defined for mailboxes:
  29:lib/chibios/os/oslib/src/chmboxes.c ****  *          - <b>Post</b>: Posts a message on the mailbox in FIFO order.
  30:lib/chibios/os/oslib/src/chmboxes.c ****  *          - <b>Post Ahead</b>: Posts a message on the mailbox with urgent
  31:lib/chibios/os/oslib/src/chmboxes.c ****  *            priority.
  32:lib/chibios/os/oslib/src/chmboxes.c ****  *          - <b>Fetch</b>: A message is fetched from the mailbox and removed
  33:lib/chibios/os/oslib/src/chmboxes.c ****  *            from the queue.
  34:lib/chibios/os/oslib/src/chmboxes.c ****  *          - <b>Reset</b>: The mailbox is emptied and all the stored messages
  35:lib/chibios/os/oslib/src/chmboxes.c ****  *            are lost.
  36:lib/chibios/os/oslib/src/chmboxes.c ****  *          .
  37:lib/chibios/os/oslib/src/chmboxes.c ****  *          A message is a variable of type msg_t that is guaranteed to have
  38:lib/chibios/os/oslib/src/chmboxes.c ****  *          the same size of and be compatible with (data) pointers (anyway an
  39:lib/chibios/os/oslib/src/chmboxes.c ****  *          explicit cast is needed).
  40:lib/chibios/os/oslib/src/chmboxes.c ****  *          If larger messages need to be exchanged then a pointer to a
  41:lib/chibios/os/oslib/src/chmboxes.c ****  *          structure can be posted in the mailbox but the posting side has
  42:lib/chibios/os/oslib/src/chmboxes.c ****  *          no predefined way to know when the message has been processed. A
  43:lib/chibios/os/oslib/src/chmboxes.c ****  *          possible approach is to allocate memory (from a memory pool for
  44:lib/chibios/os/oslib/src/chmboxes.c ****  *          example) from the posting side and free it on the fetching side.
  45:lib/chibios/os/oslib/src/chmboxes.c ****  *          Another approach is to set a "done" flag into the structure pointed
  46:lib/chibios/os/oslib/src/chmboxes.c ****  *          by the message.
  47:lib/chibios/os/oslib/src/chmboxes.c ****  * @pre     In order to use the mailboxes APIs the @p CH_CFG_USE_MAILBOXES
  48:lib/chibios/os/oslib/src/chmboxes.c ****  *          option must be enabled in @p chconf.h.
  49:lib/chibios/os/oslib/src/chmboxes.c ****  * @note    Compatible with RT and NIL.
  50:lib/chibios/os/oslib/src/chmboxes.c ****  * @{
  51:lib/chibios/os/oslib/src/chmboxes.c ****  */
  52:lib/chibios/os/oslib/src/chmboxes.c **** 
  53:lib/chibios/os/oslib/src/chmboxes.c **** #include "ch.h"
  54:lib/chibios/os/oslib/src/chmboxes.c **** 
  55:lib/chibios/os/oslib/src/chmboxes.c **** #if (CH_CFG_USE_MAILBOXES == TRUE) || defined(__DOXYGEN__)
  56:lib/chibios/os/oslib/src/chmboxes.c **** 
  57:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  58:lib/chibios/os/oslib/src/chmboxes.c **** /* Module exported variables.                                                */
  59:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  60:lib/chibios/os/oslib/src/chmboxes.c **** 
  61:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  62:lib/chibios/os/oslib/src/chmboxes.c **** /* Module local types.                                                       */
  63:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  64:lib/chibios/os/oslib/src/chmboxes.c **** 
  65:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  66:lib/chibios/os/oslib/src/chmboxes.c **** /* Module local variables.                                                   */
  67:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  68:lib/chibios/os/oslib/src/chmboxes.c **** 
  69:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  70:lib/chibios/os/oslib/src/chmboxes.c **** /* Module local functions.                                                   */
  71:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  72:lib/chibios/os/oslib/src/chmboxes.c **** 
  73:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  74:lib/chibios/os/oslib/src/chmboxes.c **** /* Module exported functions.                                                */
  75:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  76:lib/chibios/os/oslib/src/chmboxes.c **** 
  77:lib/chibios/os/oslib/src/chmboxes.c **** /**
  78:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Initializes a @p mailbox_t object.
  79:lib/chibios/os/oslib/src/chmboxes.c ****  *
  80:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[out] mbp      the pointer to the @p mailbox_t structure to be
  81:lib/chibios/os/oslib/src/chmboxes.c ****  *                      initialized
  82:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] buf       pointer to the messages buffer as an array of @p msg_t
  83:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] n         number of elements in the buffer array
  84:lib/chibios/os/oslib/src/chmboxes.c ****  *
  85:lib/chibios/os/oslib/src/chmboxes.c ****  * @init
  86:lib/chibios/os/oslib/src/chmboxes.c ****  */
  87:lib/chibios/os/oslib/src/chmboxes.c **** void chMBObjectInit(mailbox_t *mbp, msg_t *buf, size_t n) {
  30              		.loc 1 87 59 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  88:lib/chibios/os/oslib/src/chmboxes.c **** 
  89:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (buf != NULL) && (n > (size_t)0));
  35              		.loc 1 89 3 view .LVU1
  36              		.loc 1 89 3 view .LVU2
  37              		.loc 1 89 3 view .LVU3
  90:lib/chibios/os/oslib/src/chmboxes.c **** 
  91:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->buffer = buf;
  38              		.loc 1 91 3 view .LVU4
  92:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->rdptr  = buf;
  93:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->wrptr  = buf;
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->top    = &buf[n];
  95:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  39              		.loc 1 95 15 is_stmt 0 view .LVU5
  40 0000 0023     		movs	r3, #0
  41 0002 0361     		str	r3, [r0, #16]
  96:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->reset  = false;
  42              		.loc 1 96 15 view .LVU6
  43 0004 0375     		strb	r3, [r0, #20]
  44              	.LBB72:
  45              	.LBB73:
  46              		.file 2 "./lib/chibios/os/rt/include/chthreads.h"
   1:./lib/chibios/os/rt/include/chthreads.h **** /*
   2:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chthreads.h **** 
   4:./lib/chibios/os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chthreads.h **** 
   6:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chthreads.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chthreads.h **** 
  11:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chthreads.h **** 
  16:./lib/chibios/os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chthreads.h **** */
  19:./lib/chibios/os/rt/include/chthreads.h **** 
  20:./lib/chibios/os/rt/include/chthreads.h **** /**
  21:./lib/chibios/os/rt/include/chthreads.h ****  * @file    rt/include/chthreads.h
  22:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:./lib/chibios/os/rt/include/chthreads.h ****  *
  24:./lib/chibios/os/rt/include/chthreads.h ****  * @addtogroup threads
  25:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  26:./lib/chibios/os/rt/include/chthreads.h ****  */
  27:./lib/chibios/os/rt/include/chthreads.h **** 
  28:./lib/chibios/os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:./lib/chibios/os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:./lib/chibios/os/rt/include/chthreads.h **** 
  31:./lib/chibios/os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:./lib/chibios/os/rt/include/chthreads.h **** 
  33:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chthreads.h **** 
  37:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chthreads.h **** 
  41:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chthreads.h **** 
  45:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chthreads.h **** 
  49:./lib/chibios/os/rt/include/chthreads.h **** /**
  50:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:./lib/chibios/os/rt/include/chthreads.h ****  */
  52:./lib/chibios/os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:./lib/chibios/os/rt/include/chthreads.h **** 
  54:./lib/chibios/os/rt/include/chthreads.h **** /**
  55:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:./lib/chibios/os/rt/include/chthreads.h ****  */
  57:./lib/chibios/os/rt/include/chthreads.h **** typedef struct {
  58:./lib/chibios/os/rt/include/chthreads.h ****   /**
  59:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:./lib/chibios/os/rt/include/chthreads.h ****    */
  61:./lib/chibios/os/rt/include/chthreads.h ****   const char        *name;
  62:./lib/chibios/os/rt/include/chthreads.h ****   /**
  63:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:./lib/chibios/os/rt/include/chthreads.h ****    */
  65:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:./lib/chibios/os/rt/include/chthreads.h ****   /**
  67:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:./lib/chibios/os/rt/include/chthreads.h ****    */
  69:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:./lib/chibios/os/rt/include/chthreads.h ****   /**
  71:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:./lib/chibios/os/rt/include/chthreads.h ****    */
  73:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t           prio;
  74:./lib/chibios/os/rt/include/chthreads.h ****   /**
  75:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:./lib/chibios/os/rt/include/chthreads.h ****    */
  77:./lib/chibios/os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:./lib/chibios/os/rt/include/chthreads.h ****   /**
  79:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:./lib/chibios/os/rt/include/chthreads.h ****    */
  81:./lib/chibios/os/rt/include/chthreads.h ****   void              *arg;
  82:./lib/chibios/os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:./lib/chibios/os/rt/include/chthreads.h **** 
  84:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  87:./lib/chibios/os/rt/include/chthreads.h **** 
  88:./lib/chibios/os/rt/include/chthreads.h **** /**
  89:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads queues
  90:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  91:./lib/chibios/os/rt/include/chthreads.h ****  */
  92:./lib/chibios/os/rt/include/chthreads.h **** /**
  93:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  94:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  95:./lib/chibios/os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  96:./lib/chibios/os/rt/include/chthreads.h ****  *
  97:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  98:./lib/chibios/os/rt/include/chthreads.h ****  */
  99:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {_CH_QUEUE_DATA(name)}
 100:./lib/chibios/os/rt/include/chthreads.h **** 
 101:./lib/chibios/os/rt/include/chthreads.h **** /**
 102:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 103:./lib/chibios/os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 104:./lib/chibios/os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 105:./lib/chibios/os/rt/include/chthreads.h ****  *
 106:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 107:./lib/chibios/os/rt/include/chthreads.h ****  */
 108:./lib/chibios/os/rt/include/chthreads.h **** #define THREADS_QUEUE_DECL(name)                                            \
 109:./lib/chibios/os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 110:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 111:./lib/chibios/os/rt/include/chthreads.h **** 
 112:./lib/chibios/os/rt/include/chthreads.h **** /**
 113:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Working Areas
 114:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 115:./lib/chibios/os/rt/include/chthreads.h ****  */
 116:./lib/chibios/os/rt/include/chthreads.h **** /**
 117:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 118:./lib/chibios/os/rt/include/chthreads.h ****  *
 119:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 120:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 121:./lib/chibios/os/rt/include/chthreads.h ****  *
 122:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 123:./lib/chibios/os/rt/include/chthreads.h ****  */
 124:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 125:./lib/chibios/os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 126:./lib/chibios/os/rt/include/chthreads.h **** 
 127:./lib/chibios/os/rt/include/chthreads.h **** /**
 128:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 129:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 130:./lib/chibios/os/rt/include/chthreads.h ****  *          aligned as both position and size.
 131:./lib/chibios/os/rt/include/chthreads.h ****  *
 132:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 133:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 134:./lib/chibios/os/rt/include/chthreads.h ****  *
 135:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 136:./lib/chibios/os/rt/include/chthreads.h ****  */
 137:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 138:./lib/chibios/os/rt/include/chthreads.h **** 
 139:./lib/chibios/os/rt/include/chthreads.h **** /**
 140:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 141:./lib/chibios/os/rt/include/chthreads.h ****  *
 142:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 143:./lib/chibios/os/rt/include/chthreads.h ****  */
 144:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 145:./lib/chibios/os/rt/include/chthreads.h **** 
 146:./lib/chibios/os/rt/include/chthreads.h **** /**
 147:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 148:./lib/chibios/os/rt/include/chthreads.h ****  *
 149:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 150:./lib/chibios/os/rt/include/chthreads.h ****  */
 151:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 152:./lib/chibios/os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 153:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 154:./lib/chibios/os/rt/include/chthreads.h **** 
 155:./lib/chibios/os/rt/include/chthreads.h **** /**
 156:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 157:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 158:./lib/chibios/os/rt/include/chthreads.h ****  */
 159:./lib/chibios/os/rt/include/chthreads.h **** /**
 160:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 161:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 162:./lib/chibios/os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 163:./lib/chibios/os/rt/include/chthreads.h ****  */
 164:./lib/chibios/os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 165:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 166:./lib/chibios/os/rt/include/chthreads.h **** 
 167:./lib/chibios/os/rt/include/chthreads.h **** /**
 168:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Macro Functions
 169:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 170:./lib/chibios/os/rt/include/chthreads.h ****  */
 171:./lib/chibios/os/rt/include/chthreads.h **** /**
 172:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 173:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 174:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 175:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 176:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 177:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 178:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 179:./lib/chibios/os/rt/include/chthreads.h ****  *
 180:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 181:./lib/chibios/os/rt/include/chthreads.h ****  *
 182:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 183:./lib/chibios/os/rt/include/chthreads.h ****  */
 184:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 185:./lib/chibios/os/rt/include/chthreads.h **** 
 186:./lib/chibios/os/rt/include/chthreads.h **** /**
 187:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 188:./lib/chibios/os/rt/include/chthreads.h ****  *          milliseconds.
 189:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 190:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 191:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 192:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 193:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 194:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 195:./lib/chibios/os/rt/include/chthreads.h ****  *
 196:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 197:./lib/chibios/os/rt/include/chthreads.h ****  *
 198:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 199:./lib/chibios/os/rt/include/chthreads.h ****  */
 200:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 201:./lib/chibios/os/rt/include/chthreads.h **** 
 202:./lib/chibios/os/rt/include/chthreads.h **** /**
 203:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 204:./lib/chibios/os/rt/include/chthreads.h ****  *          microseconds.
 205:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 206:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 207:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 208:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 209:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 210:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 211:./lib/chibios/os/rt/include/chthreads.h ****  *
 212:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 213:./lib/chibios/os/rt/include/chthreads.h ****  *
 214:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 215:./lib/chibios/os/rt/include/chthreads.h ****  */
 216:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 217:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 218:./lib/chibios/os/rt/include/chthreads.h **** 
 219:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 220:./lib/chibios/os/rt/include/chthreads.h **** /* External declarations.                                                    */
 221:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 222:./lib/chibios/os/rt/include/chthreads.h **** 
 223:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 224:./lib/chibios/os/rt/include/chthreads.h **** extern "C" {
 225:./lib/chibios/os/rt/include/chthreads.h **** #endif
 226:./lib/chibios/os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 227:./lib/chibios/os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 228:./lib/chibios/os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 229:./lib/chibios/os/rt/include/chthreads.h **** #endif
 230:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 231:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 232:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 233:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 234:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 235:./lib/chibios/os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 236:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 237:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 238:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 239:./lib/chibios/os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 240:./lib/chibios/os/rt/include/chthreads.h **** #endif
 241:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 242:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 243:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 244:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 245:./lib/chibios/os/rt/include/chthreads.h **** #endif
 246:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 247:./lib/chibios/os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 248:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 249:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 250:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 251:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 252:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 253:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 254:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 255:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 256:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 257:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 258:./lib/chibios/os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 259:./lib/chibios/os/rt/include/chthreads.h ****   void chThdYield(void);
 260:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 261:./lib/chibios/os/rt/include/chthreads.h **** }
 262:./lib/chibios/os/rt/include/chthreads.h **** #endif
 263:./lib/chibios/os/rt/include/chthreads.h **** 
 264:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 265:./lib/chibios/os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 266:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 267:./lib/chibios/os/rt/include/chthreads.h **** 
 268:./lib/chibios/os/rt/include/chthreads.h **** /**
 269:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns a pointer to the current @p thread_t.
 270:./lib/chibios/os/rt/include/chthreads.h ****  *
 271:./lib/chibios/os/rt/include/chthreads.h ****  * @return              A pointer to the current thread.
 272:./lib/chibios/os/rt/include/chthreads.h ****  *
 273:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 274:./lib/chibios/os/rt/include/chthreads.h ****  */
 275:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 276:./lib/chibios/os/rt/include/chthreads.h **** 
 277:./lib/chibios/os/rt/include/chthreads.h ****   return ch.rlist.current;
 278:./lib/chibios/os/rt/include/chthreads.h **** }
 279:./lib/chibios/os/rt/include/chthreads.h **** 
 280:./lib/chibios/os/rt/include/chthreads.h **** /**
 281:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 282:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 283:./lib/chibios/os/rt/include/chthreads.h ****  *
 284:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The current thread priority.
 285:./lib/chibios/os/rt/include/chthreads.h ****  *
 286:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 287:./lib/chibios/os/rt/include/chthreads.h ****  */
 288:./lib/chibios/os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 289:./lib/chibios/os/rt/include/chthreads.h **** 
 290:./lib/chibios/os/rt/include/chthreads.h ****   return chThdGetSelfX()->hdr.pqueue.prio;
 291:./lib/chibios/os/rt/include/chthreads.h **** }
 292:./lib/chibios/os/rt/include/chthreads.h **** 
 293:./lib/chibios/os/rt/include/chthreads.h **** /**
 294:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 295:./lib/chibios/os/rt/include/chthreads.h ****  * @note    This function is only available when the
 296:./lib/chibios/os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 297:./lib/chibios/os/rt/include/chthreads.h ****  *
 298:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 299:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 300:./lib/chibios/os/rt/include/chthreads.h ****  *
 301:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 302:./lib/chibios/os/rt/include/chthreads.h ****  */
 303:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 305:./lib/chibios/os/rt/include/chthreads.h **** 
 306:./lib/chibios/os/rt/include/chthreads.h ****   return tp->time;
 307:./lib/chibios/os/rt/include/chthreads.h **** }
 308:./lib/chibios/os/rt/include/chthreads.h **** #endif
 309:./lib/chibios/os/rt/include/chthreads.h **** 
 310:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 311:./lib/chibios/os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 312:./lib/chibios/os/rt/include/chthreads.h **** /**
 313:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 314:./lib/chibios/os/rt/include/chthreads.h ****  *
 315:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 316:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 317:./lib/chibios/os/rt/include/chthreads.h ****  *
 318:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 319:./lib/chibios/os/rt/include/chthreads.h ****  */
 320:./lib/chibios/os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 321:./lib/chibios/os/rt/include/chthreads.h **** 
 322:./lib/chibios/os/rt/include/chthreads.h ****   return tp->wabase;
 323:./lib/chibios/os/rt/include/chthreads.h **** }
 324:./lib/chibios/os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 325:./lib/chibios/os/rt/include/chthreads.h **** 
 326:./lib/chibios/os/rt/include/chthreads.h **** /**
 327:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 328:./lib/chibios/os/rt/include/chthreads.h ****  *
 329:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 330:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 331:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 332:./lib/chibios/os/rt/include/chthreads.h ****  *
 333:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 334:./lib/chibios/os/rt/include/chthreads.h ****  */
 335:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 336:./lib/chibios/os/rt/include/chthreads.h **** 
 337:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 338:./lib/chibios/os/rt/include/chthreads.h **** }
 339:./lib/chibios/os/rt/include/chthreads.h **** 
 340:./lib/chibios/os/rt/include/chthreads.h **** /**
 341:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 342:./lib/chibios/os/rt/include/chthreads.h ****  *
 343:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 344:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 345:./lib/chibios/os/rt/include/chthreads.h ****  *
 346:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 347:./lib/chibios/os/rt/include/chthreads.h ****  */
 348:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 349:./lib/chibios/os/rt/include/chthreads.h **** 
 350:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 351:./lib/chibios/os/rt/include/chthreads.h **** }
 352:./lib/chibios/os/rt/include/chthreads.h **** 
 353:./lib/chibios/os/rt/include/chthreads.h **** /**
 354:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 355:./lib/chibios/os/rt/include/chthreads.h ****  *
 356:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 357:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 358:./lib/chibios/os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 359:./lib/chibios/os/rt/include/chthreads.h ****  *
 360:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 361:./lib/chibios/os/rt/include/chthreads.h ****  */
 362:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 363:./lib/chibios/os/rt/include/chthreads.h **** 
 364:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 365:./lib/chibios/os/rt/include/chthreads.h **** 
 366:./lib/chibios/os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 367:./lib/chibios/os/rt/include/chthreads.h **** }
 368:./lib/chibios/os/rt/include/chthreads.h **** 
 369:./lib/chibios/os/rt/include/chthreads.h **** /**
 370:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 371:./lib/chibios/os/rt/include/chthreads.h ****  *
 372:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 373:./lib/chibios/os/rt/include/chthreads.h ****  *                      handled as follow:
 374:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 375:./lib/chibios/os/rt/include/chthreads.h ****  *                        state.
 376:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 377:./lib/chibios/os/rt/include/chthreads.h ****  *                      .
 378:./lib/chibios/os/rt/include/chthreads.h ****  *
 379:./lib/chibios/os/rt/include/chthreads.h ****  * @sclass
 380:./lib/chibios/os/rt/include/chthreads.h ****  */
 381:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 382:./lib/chibios/os/rt/include/chthreads.h **** 
 383:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 384:./lib/chibios/os/rt/include/chthreads.h **** 
 385:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 386:./lib/chibios/os/rt/include/chthreads.h **** }
 387:./lib/chibios/os/rt/include/chthreads.h **** 
 388:./lib/chibios/os/rt/include/chthreads.h **** /**
 389:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 390:./lib/chibios/os/rt/include/chthreads.h ****  *
 391:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 392:./lib/chibios/os/rt/include/chthreads.h ****  *
 393:./lib/chibios/os/rt/include/chthreads.h ****  * @init
 394:./lib/chibios/os/rt/include/chthreads.h ****  */
 395:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
 396:./lib/chibios/os/rt/include/chthreads.h **** 
 397:./lib/chibios/os/rt/include/chthreads.h ****   ch_queue_init(&tqp->queue);
  47              		.loc 2 397 3 view .LVU7
  48 0006 00F11803 		add	r3, r0, #24
  49              	.LBE73:
  50              	.LBE72:
  93:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->top    = &buf[n];
  51              		.loc 1 93 15 view .LVU8
  52 000a C0E90211 		strd	r1, r1, [r0, #8]
  53              	.LBB80:
  54              	.LBB78:
  55              	.LBB74:
  56              	.LBB75:
  57              		.file 3 "./lib/chibios/os/rt/include/chlists.h"
   1:./lib/chibios/os/rt/include/chlists.h **** /*
   2:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chlists.h **** 
   4:./lib/chibios/os/rt/include/chlists.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chlists.h **** 
   6:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chlists.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chlists.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chlists.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chlists.h **** 
  11:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chlists.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chlists.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chlists.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chlists.h **** 
  16:./lib/chibios/os/rt/include/chlists.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chlists.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chlists.h **** */
  19:./lib/chibios/os/rt/include/chlists.h **** 
  20:./lib/chibios/os/rt/include/chlists.h **** /**
  21:./lib/chibios/os/rt/include/chlists.h ****  * @file    chlists.h
  22:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Lists and Queues header.
  23:./lib/chibios/os/rt/include/chlists.h ****  *
  24:./lib/chibios/os/rt/include/chlists.h ****  * @addtogroup os_lists
  25:./lib/chibios/os/rt/include/chlists.h ****  * @{
  26:./lib/chibios/os/rt/include/chlists.h ****  */
  27:./lib/chibios/os/rt/include/chlists.h **** 
  28:./lib/chibios/os/rt/include/chlists.h **** #ifndef CHLISTS_H
  29:./lib/chibios/os/rt/include/chlists.h **** #define CHLISTS_H
  30:./lib/chibios/os/rt/include/chlists.h **** 
  31:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chlists.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chlists.h **** 
  35:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chlists.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chlists.h **** 
  39:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chlists.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chlists.h **** 
  43:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chlists.h **** /* Module data structures and types.                                         */
  45:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chlists.h **** 
  47:./lib/chibios/os/rt/include/chlists.h **** /**
  48:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic single link list header and element.
  49:./lib/chibios/os/rt/include/chlists.h ****  */
  50:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_list ch_list_t;
  51:./lib/chibios/os/rt/include/chlists.h **** 
  52:./lib/chibios/os/rt/include/chlists.h **** /**
  53:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic single link list header
  54:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  55:./lib/chibios/os/rt/include/chlists.h ****  */
  56:./lib/chibios/os/rt/include/chlists.h **** struct ch_list {
  57:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t             *next;      /**< @brief Next in the list/queue.     */
  58:./lib/chibios/os/rt/include/chlists.h **** };
  59:./lib/chibios/os/rt/include/chlists.h **** 
  60:./lib/chibios/os/rt/include/chlists.h **** /**
  61:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic bidirectional linked list header and element.
  62:./lib/chibios/os/rt/include/chlists.h ****  */
  63:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_queue ch_queue_t;
  64:./lib/chibios/os/rt/include/chlists.h **** 
  65:./lib/chibios/os/rt/include/chlists.h **** /**
  66:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic bidirectional linked list header
  67:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  68:./lib/chibios/os/rt/include/chlists.h ****  */
  69:./lib/chibios/os/rt/include/chlists.h **** struct ch_queue {
  70:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *next;      /**< @brief Next in the list/queue.     */
  71:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *prev;      /**< @brief Previous in the queue.      */
  72:./lib/chibios/os/rt/include/chlists.h **** };
  73:./lib/chibios/os/rt/include/chlists.h **** 
  74:./lib/chibios/os/rt/include/chlists.h **** /**
  75:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic priority-ordered bidirectional linked list
  76:./lib/chibios/os/rt/include/chlists.h ****  *          header and element.
  77:./lib/chibios/os/rt/include/chlists.h ****  */
  78:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_priority_queue ch_priority_queue_t;
  79:./lib/chibios/os/rt/include/chlists.h **** 
  80:./lib/chibios/os/rt/include/chlists.h **** /**
  81:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic priority-ordered bidirectional
  82:./lib/chibios/os/rt/include/chlists.h ****  *          linked list header and element.
  83:./lib/chibios/os/rt/include/chlists.h ****  * @note    Link fields are void pointers in order to avoid aliasing issues.
  84:./lib/chibios/os/rt/include/chlists.h ****  */
  85:./lib/chibios/os/rt/include/chlists.h **** struct ch_priority_queue {
  86:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *next;      /**< @brief Next in the list/queue.     */
  87:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *prev;      /**< @brief Previous in the queue.      */
  88:./lib/chibios/os/rt/include/chlists.h ****   tprio_t               prio;
  89:./lib/chibios/os/rt/include/chlists.h **** };
  90:./lib/chibios/os/rt/include/chlists.h **** 
  91:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  92:./lib/chibios/os/rt/include/chlists.h **** /* Module macros.                                                            */
  93:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  94:./lib/chibios/os/rt/include/chlists.h **** 
  95:./lib/chibios/os/rt/include/chlists.h **** /**
  96:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Data part of a static queue object initializer.
  97:./lib/chibios/os/rt/include/chlists.h ****  * @details This macro should be used when statically initializing a
  98:./lib/chibios/os/rt/include/chlists.h ****  *          queue that is part of a bigger structure.
  99:./lib/chibios/os/rt/include/chlists.h ****  *
 100:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 101:./lib/chibios/os/rt/include/chlists.h ****  */
 102:./lib/chibios/os/rt/include/chlists.h **** #define _CH_QUEUE_DATA(name) {(ch_queue_t *)&name, (ch_queue_t *)&name}
 103:./lib/chibios/os/rt/include/chlists.h **** 
 104:./lib/chibios/os/rt/include/chlists.h **** /**
 105:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Static queue object initializer.
 106:./lib/chibios/os/rt/include/chlists.h ****  * @details Statically initialized queues require no explicit
 107:./lib/chibios/os/rt/include/chlists.h ****  *          initialization using @p queue_init().
 108:./lib/chibios/os/rt/include/chlists.h ****  *
 109:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 110:./lib/chibios/os/rt/include/chlists.h ****  */
 111:./lib/chibios/os/rt/include/chlists.h **** #define CH_QUEUE_DECL(name)                                                 \
 112:./lib/chibios/os/rt/include/chlists.h ****     ch_queue_t name = _CH_QUEUE_DATA(name)
 113:./lib/chibios/os/rt/include/chlists.h **** 
 114:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 115:./lib/chibios/os/rt/include/chlists.h **** /* External declarations.                                                    */
 116:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chlists.h **** 
 118:./lib/chibios/os/rt/include/chlists.h **** /* Early function prototypes required by the following headers.*/
 119:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 120:./lib/chibios/os/rt/include/chlists.h **** extern "C" {
 121:./lib/chibios/os/rt/include/chlists.h **** #endif
 122:./lib/chibios/os/rt/include/chlists.h **** 
 123:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 124:./lib/chibios/os/rt/include/chlists.h **** }
 125:./lib/chibios/os/rt/include/chlists.h **** #endif
 126:./lib/chibios/os/rt/include/chlists.h **** 
 127:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 128:./lib/chibios/os/rt/include/chlists.h **** /* Module inline functions.                                                  */
 129:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 130:./lib/chibios/os/rt/include/chlists.h **** 
 131:./lib/chibios/os/rt/include/chlists.h **** /**
 132:./lib/chibios/os/rt/include/chlists.h ****  * @brief   List initialization.
 133:./lib/chibios/os/rt/include/chlists.h ****  *
 134:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] lp       pointer to the list header
 135:./lib/chibios/os/rt/include/chlists.h ****  *
 136:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 137:./lib/chibios/os/rt/include/chlists.h ****  */
 138:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_init(ch_list_t *lp) {
 139:./lib/chibios/os/rt/include/chlists.h **** 
 140:./lib/chibios/os/rt/include/chlists.h ****   lp->next = lp;
 141:./lib/chibios/os/rt/include/chlists.h **** }
 142:./lib/chibios/os/rt/include/chlists.h **** 
 143:./lib/chibios/os/rt/include/chlists.h **** /**
 144:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is empty.
 145:./lib/chibios/os/rt/include/chlists.h ****  *
 146:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 147:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 148:./lib/chibios/os/rt/include/chlists.h ****  *
 149:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 150:./lib/chibios/os/rt/include/chlists.h ****  */
 151:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_isempty(ch_list_t *lp) {
 152:./lib/chibios/os/rt/include/chlists.h **** 
 153:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next == lp);
 154:./lib/chibios/os/rt/include/chlists.h **** }
 155:./lib/chibios/os/rt/include/chlists.h **** 
 156:./lib/chibios/os/rt/include/chlists.h **** /**
 157:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is not empty.
 158:./lib/chibios/os/rt/include/chlists.h ****  *
 159:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 160:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 161:./lib/chibios/os/rt/include/chlists.h ****  *
 162:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 163:./lib/chibios/os/rt/include/chlists.h ****  */
 164:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_notempty(ch_list_t *lp) {
 165:./lib/chibios/os/rt/include/chlists.h **** 
 166:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next != lp);
 167:./lib/chibios/os/rt/include/chlists.h **** }
 168:./lib/chibios/os/rt/include/chlists.h **** 
 169:./lib/chibios/os/rt/include/chlists.h **** /**
 170:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pushes an element on top of a stack list.
 171:./lib/chibios/os/rt/include/chlists.h ****  *
 172:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] p     the pointer to the element to be inserted in the list
 173:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp    the pointer to the list header
 174:./lib/chibios/os/rt/include/chlists.h ****  *
 175:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 176:./lib/chibios/os/rt/include/chlists.h ****  */
 177:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_push(ch_list_t *p, ch_list_t *lp) {
 178:./lib/chibios/os/rt/include/chlists.h **** 
 179:./lib/chibios/os/rt/include/chlists.h ****   p->next = lp->next;
 180:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p;
 181:./lib/chibios/os/rt/include/chlists.h **** }
 182:./lib/chibios/os/rt/include/chlists.h **** 
 183:./lib/chibios/os/rt/include/chlists.h **** /**
 184:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pops an element from the top of a stack list and returns it.
 185:./lib/chibios/os/rt/include/chlists.h ****  * @pre     The list must be non-empty before calling this function.
 186:./lib/chibios/os/rt/include/chlists.h ****  *
 187:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        the pointer to the list header
 188:./lib/chibios/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 189:./lib/chibios/os/rt/include/chlists.h ****  *
 190:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 191:./lib/chibios/os/rt/include/chlists.h ****  */
 192:./lib/chibios/os/rt/include/chlists.h **** static inline ch_list_t *ch_list_pop(ch_list_t *lp) {
 193:./lib/chibios/os/rt/include/chlists.h **** 
 194:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t *p = lp->next;
 195:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p->next;
 196:./lib/chibios/os/rt/include/chlists.h **** 
 197:./lib/chibios/os/rt/include/chlists.h ****   return p;
 198:./lib/chibios/os/rt/include/chlists.h **** }
 199:./lib/chibios/os/rt/include/chlists.h **** 
 200:./lib/chibios/os/rt/include/chlists.h **** /**
 201:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Queue initialization.
 202:./lib/chibios/os/rt/include/chlists.h ****  *
 203:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] qp       pointer to the queue header
 204:./lib/chibios/os/rt/include/chlists.h ****  *
 205:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 206:./lib/chibios/os/rt/include/chlists.h ****  */
 207:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_queue_init(ch_queue_t *qp) {
 208:./lib/chibios/os/rt/include/chlists.h **** 
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->next = qp;
 210:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
  58              		.loc 3 210 12 view .LVU9
  59 000e C0E90633 		strd	r3, r3, [r0, #24]
  60              	.LBE75:
  61              	.LBE74:
  62              	.LBE78:
  63              	.LBE80:
  91:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->rdptr  = buf;
  64              		.loc 1 91 15 view .LVU10
  65 0012 0160     		str	r1, [r0]
  92:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->wrptr  = buf;
  66              		.loc 1 92 3 is_stmt 1 view .LVU11
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  67              		.loc 1 94 3 view .LVU12
  68              	.LBB81:
  69              	.LBB82:
  70              		.loc 2 397 3 is_stmt 0 view .LVU13
  71 0014 00F12003 		add	r3, r0, #32
  72              	.LBE82:
  73              	.LBE81:
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  74              		.loc 1 94 17 view .LVU14
  75 0018 01EB8201 		add	r1, r1, r2, lsl #2
  76              	.LVL1:
  77              	.LBB89:
  78              	.LBB87:
  79              	.LBB83:
  80              	.LBB84:
  81              		.loc 3 210 12 view .LVU15
  82 001c C0E90833 		strd	r3, r3, [r0, #32]
  83              	.LBE84:
  84              	.LBE83:
  85              	.LBE87:
  86              	.LBE89:
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  87              		.loc 1 94 15 view .LVU16
  88 0020 4160     		str	r1, [r0, #4]
  95:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->reset  = false;
  89              		.loc 1 95 3 is_stmt 1 view .LVU17
  90              		.loc 1 96 3 view .LVU18
  97:lib/chibios/os/oslib/src/chmboxes.c ****   chThdQueueObjectInit(&mbp->qw);
  91              		.loc 1 97 3 view .LVU19
  92              	.LVL2:
  93              	.LBB90:
  94              	.LBI72:
 395:./lib/chibios/os/rt/include/chthreads.h **** 
  95              		.loc 2 395 20 view .LVU20
  96              	.LBB79:
  97              		.loc 2 397 3 view .LVU21
  98              	.LBB77:
  99              	.LBI74:
 207:./lib/chibios/os/rt/include/chlists.h **** 
 100              		.loc 3 207 20 view .LVU22
 101              	.LBB76:
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
 102              		.loc 3 209 3 view .LVU23
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
 103              		.loc 3 209 3 is_stmt 0 view .LVU24
 104              	.LBE76:
 105              	.LBE77:
 106              	.LBE79:
 107              	.LBE90:
  98:lib/chibios/os/oslib/src/chmboxes.c ****   chThdQueueObjectInit(&mbp->qr);
 108              		.loc 1 98 3 is_stmt 1 view .LVU25
 109              	.LBB91:
 110              	.LBI81:
 395:./lib/chibios/os/rt/include/chthreads.h **** 
 111              		.loc 2 395 20 view .LVU26
 112              	.LBB88:
 113              		.loc 2 397 3 view .LVU27
 114              	.LBB86:
 115              	.LBI83:
 207:./lib/chibios/os/rt/include/chlists.h **** 
 116              		.loc 3 207 20 view .LVU28
 117              	.LBB85:
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
 118              		.loc 3 209 3 view .LVU29
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
 119              		.loc 3 209 3 is_stmt 0 view .LVU30
 120              	.LBE85:
 121              	.LBE86:
 122              	.LBE88:
 123              	.LBE91:
  99:lib/chibios/os/oslib/src/chmboxes.c **** }
 124              		.loc 1 99 1 view .LVU31
 125 0022 7047     		bx	lr
 126              		.cfi_endproc
 127              	.LFE289:
 129              		.section	.text.chMBResetI,"ax",%progbits
 130              		.align	1
 131              		.global	chMBResetI
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	chMBResetI:
 137              	.LVL3:
 138              	.LFB291:
 100:lib/chibios/os/oslib/src/chmboxes.c **** 
 101:lib/chibios/os/oslib/src/chmboxes.c **** /**
 102:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Resets a @p mailbox_t object.
 103:lib/chibios/os/oslib/src/chmboxes.c ****  * @details All the waiting threads are resumed with status @p MSG_RESET and
 104:lib/chibios/os/oslib/src/chmboxes.c ****  *          the queued messages are lost.
 105:lib/chibios/os/oslib/src/chmboxes.c ****  * @post    The mailbox is in reset state, all operations will fail and
 106:lib/chibios/os/oslib/src/chmboxes.c ****  *          return @p MSG_RESET until the mailbox is enabled again using
 107:lib/chibios/os/oslib/src/chmboxes.c ****  *          @p chMBResumeX().
 108:lib/chibios/os/oslib/src/chmboxes.c ****  *
 109:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 110:lib/chibios/os/oslib/src/chmboxes.c ****  *
 111:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 112:lib/chibios/os/oslib/src/chmboxes.c ****  */
 113:lib/chibios/os/oslib/src/chmboxes.c **** void chMBReset(mailbox_t *mbp) {
 114:lib/chibios/os/oslib/src/chmboxes.c **** 
 115:lib/chibios/os/oslib/src/chmboxes.c ****   chSysLock();
 116:lib/chibios/os/oslib/src/chmboxes.c ****   chMBResetI(mbp);
 117:lib/chibios/os/oslib/src/chmboxes.c ****   chSchRescheduleS();
 118:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 119:lib/chibios/os/oslib/src/chmboxes.c **** }
 120:lib/chibios/os/oslib/src/chmboxes.c **** 
 121:lib/chibios/os/oslib/src/chmboxes.c **** /**
 122:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Resets a @p mailbox_t object.
 123:lib/chibios/os/oslib/src/chmboxes.c ****  * @details All the waiting threads are resumed with status @p MSG_RESET and
 124:lib/chibios/os/oslib/src/chmboxes.c ****  *          the queued messages are lost.
 125:lib/chibios/os/oslib/src/chmboxes.c ****  * @post    The mailbox is in reset state, all operations will fail and
 126:lib/chibios/os/oslib/src/chmboxes.c ****  *          return @p MSG_RESET until the mailbox is enabled again using
 127:lib/chibios/os/oslib/src/chmboxes.c ****  *          @p chMBResumeX().
 128:lib/chibios/os/oslib/src/chmboxes.c ****  *
 129:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 130:lib/chibios/os/oslib/src/chmboxes.c ****  *
 131:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 132:lib/chibios/os/oslib/src/chmboxes.c ****  */
 133:lib/chibios/os/oslib/src/chmboxes.c **** void chMBResetI(mailbox_t *mbp) {
 139              		.loc 1 133 33 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 134:lib/chibios/os/oslib/src/chmboxes.c **** 
 135:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 143              		.loc 1 135 21 view .LVU33
 136:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 144              		.loc 1 136 3 view .LVU34
 145              		.loc 1 136 3 view .LVU35
 146              		.loc 1 136 3 view .LVU36
 137:lib/chibios/os/oslib/src/chmboxes.c **** 
 138:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->wrptr = mbp->buffer;
 147              		.loc 1 138 3 view .LVU37
 133:lib/chibios/os/oslib/src/chmboxes.c **** 
 148              		.loc 1 133 33 is_stmt 0 view .LVU38
 149 0000 10B5     		push	{r4, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 4, -8
 152              		.cfi_offset 14, -4
 153              		.loc 1 138 19 view .LVU39
 154 0002 0368     		ldr	r3, [r0]
 139:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->rdptr = mbp->buffer;
 155              		.loc 1 139 14 view .LVU40
 156 0004 C0E90233 		strd	r3, r3, [r0, #8]
 140:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt   = (size_t)0;
 157              		.loc 1 140 3 is_stmt 1 view .LVU41
 158              		.loc 1 140 14 is_stmt 0 view .LVU42
 159 0008 0023     		movs	r3, #0
 160 000a 0361     		str	r3, [r0, #16]
 141:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->reset = true;
 161              		.loc 1 141 3 is_stmt 1 view .LVU43
 162              		.loc 1 141 14 is_stmt 0 view .LVU44
 163 000c 0123     		movs	r3, #1
 133:lib/chibios/os/oslib/src/chmboxes.c **** 
 164              		.loc 1 133 33 view .LVU45
 165 000e 0446     		mov	r4, r0
 166              		.loc 1 141 14 view .LVU46
 167 0010 0375     		strb	r3, [r0, #20]
 142:lib/chibios/os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qw, MSG_RESET);
 168              		.loc 1 142 3 is_stmt 1 view .LVU47
 169 0012 6FF00101 		mvn	r1, #1
 170 0016 1830     		adds	r0, r0, #24
 171              	.LVL4:
 172              		.loc 1 142 3 is_stmt 0 view .LVU48
 173 0018 FFF7FEFF 		bl	chThdDequeueAllI
 174              	.LVL5:
 143:lib/chibios/os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qr, MSG_RESET);
 175              		.loc 1 143 3 is_stmt 1 view .LVU49
 176 001c 04F12000 		add	r0, r4, #32
 177 0020 6FF00101 		mvn	r1, #1
 144:lib/chibios/os/oslib/src/chmboxes.c **** }
 178              		.loc 1 144 1 is_stmt 0 view .LVU50
 179 0024 BDE81040 		pop	{r4, lr}
 180              		.cfi_restore 14
 181              		.cfi_restore 4
 182              		.cfi_def_cfa_offset 0
 183              	.LVL6:
 143:lib/chibios/os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qr, MSG_RESET);
 184              		.loc 1 143 3 view .LVU51
 185 0028 FFF7FEBF 		b	chThdDequeueAllI
 186              	.LVL7:
 143:lib/chibios/os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qr, MSG_RESET);
 187              		.loc 1 143 3 view .LVU52
 188              		.cfi_endproc
 189              	.LFE291:
 191              		.section	.text.chMBReset,"ax",%progbits
 192              		.align	1
 193              		.global	chMBReset
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	chMBReset:
 199              	.LVL8:
 200              	.LFB290:
 113:lib/chibios/os/oslib/src/chmboxes.c **** 
 201              		.loc 1 113 32 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 115:lib/chibios/os/oslib/src/chmboxes.c ****   chMBResetI(mbp);
 205              		.loc 1 115 3 view .LVU54
 206              	.LBB92:
 207              	.LBI92:
 208              		.file 4 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 209              		.loc 4 355 20 view .LVU55
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 210              		.loc 4 357 3 view .LVU56
 211              	.LBB93:
 212              	.LBI93:
 213              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 214              		.loc 5 669 27 view .LVU57
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 215              		.loc 5 677 3 view .LVU58
 216              	.LBB94:
 217              	.LBI94:
 218              		.file 6 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 219              		.loc 6 491 27 view .LVU59
 220              	.LBB95:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 221              		.loc 6 493 3 view .LVU60
 222              	.LBE95:
 223              	.LBE94:
 224              	.LBE93:
 225              	.LBE92:
 113:lib/chibios/os/oslib/src/chmboxes.c **** 
 226              		.loc 1 113 32 is_stmt 0 view .LVU61
 227 0000 08B5     		push	{r3, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 3, -8
 230              		.cfi_offset 14, -4
 231              	.LBB99:
 232              	.LBB98:
 233              	.LBB97:
 234              	.LBB96:
 235              		.loc 6 493 3 view .LVU62
 236 0002 2023     		movs	r3, #32
 237              		.syntax unified
 238              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 239 0004 83F31188 		MSR basepri, r3
 240              	@ 0 "" 2
 241              	.LVL9:
 242              		.loc 6 493 3 view .LVU63
 243              		.thumb
 244              		.syntax unified
 245              	.LBE96:
 246              	.LBE97:
 247              	.LBE98:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 248              		.loc 4 358 34 is_stmt 1 view .LVU64
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 249              		.loc 4 359 20 view .LVU65
 250              	.LBE99:
 116:lib/chibios/os/oslib/src/chmboxes.c ****   chSchRescheduleS();
 251              		.loc 1 116 3 view .LVU66
 252 0008 FFF7FEFF 		bl	chMBResetI
 253              	.LVL10:
 117:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 254              		.loc 1 117 3 view .LVU67
 255 000c FFF7FEFF 		bl	chSchRescheduleS
 256              	.LVL11:
 118:lib/chibios/os/oslib/src/chmboxes.c **** }
 257              		.loc 1 118 3 view .LVU68
 258              	.LBB100:
 259              	.LBI100:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 260              		.loc 4 367 20 view .LVU69
 261              	.LBB101:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 262              		.loc 4 369 22 view .LVU70
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 263              		.loc 4 370 33 view .LVU71
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 264              		.loc 4 376 3 view .LVU72
 265              		.loc 4 376 3 view .LVU73
 266              		.loc 4 376 3 view .LVU74
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 267              		.loc 4 380 3 view .LVU75
 268              	.LBB102:
 269              	.LBI102:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 270              		.loc 5 693 27 view .LVU76
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 271              		.loc 5 696 3 view .LVU77
 272              	.LBB103:
 273              	.LBI103:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 274              		.loc 6 491 27 view .LVU78
 275              	.LBB104:
 276              		.loc 6 493 3 view .LVU79
 277 0010 0023     		movs	r3, #0
 278              		.syntax unified
 279              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 280 0012 83F31188 		MSR basepri, r3
 281              	@ 0 "" 2
 282              	.LVL12:
 283              		.loc 6 493 3 is_stmt 0 view .LVU80
 284              		.thumb
 285              		.syntax unified
 286              	.LBE104:
 287              	.LBE103:
 288              	.LBE102:
 289              	.LBE101:
 290              	.LBE100:
 119:lib/chibios/os/oslib/src/chmboxes.c **** 
 291              		.loc 1 119 1 view .LVU81
 292 0016 08BD     		pop	{r3, pc}
 293              		.cfi_endproc
 294              	.LFE290:
 296              		.section	.text.chMBPostTimeoutS,"ax",%progbits
 297              		.align	1
 298              		.global	chMBPostTimeoutS
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	chMBPostTimeoutS:
 304              	.LVL13:
 305              	.LFB293:
 145:lib/chibios/os/oslib/src/chmboxes.c **** 
 146:lib/chibios/os/oslib/src/chmboxes.c **** /**
 147:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 148:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 149:lib/chibios/os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 150:lib/chibios/os/oslib/src/chmboxes.c ****  *
 151:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 152:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 153:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 154:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 155:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 156:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 157:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 158:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 159:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 160:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 161:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 162:lib/chibios/os/oslib/src/chmboxes.c ****  *
 163:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 164:lib/chibios/os/oslib/src/chmboxes.c ****  */
 165:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 166:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 167:lib/chibios/os/oslib/src/chmboxes.c **** 
 168:lib/chibios/os/oslib/src/chmboxes.c ****   chSysLock();
 169:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBPostTimeoutS(mbp, msg, timeout);
 170:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 171:lib/chibios/os/oslib/src/chmboxes.c **** 
 172:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 173:lib/chibios/os/oslib/src/chmboxes.c **** }
 174:lib/chibios/os/oslib/src/chmboxes.c **** 
 175:lib/chibios/os/oslib/src/chmboxes.c **** /**
 176:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 177:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 178:lib/chibios/os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 179:lib/chibios/os/oslib/src/chmboxes.c ****  *
 180:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 181:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 182:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 183:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 184:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 185:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 186:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 187:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 188:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 189:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 190:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 191:lib/chibios/os/oslib/src/chmboxes.c ****  *
 192:lib/chibios/os/oslib/src/chmboxes.c ****  * @sclass
 193:lib/chibios/os/oslib/src/chmboxes.c ****  */
 194:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 306              		.loc 1 194 74 is_stmt 1 view -0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		.loc 1 194 74 is_stmt 0 view .LVU83
 311 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 312              		.cfi_def_cfa_offset 24
 313              		.cfi_offset 3, -24
 314              		.cfi_offset 4, -20
 315              		.cfi_offset 5, -16
 316              		.cfi_offset 6, -12
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319              		.loc 1 194 74 view .LVU84
 320 0002 0446     		mov	r4, r0
 321 0004 0E46     		mov	r6, r1
 195:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 322              		.loc 1 195 3 is_stmt 1 view .LVU85
 196:lib/chibios/os/oslib/src/chmboxes.c **** 
 197:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 323              		.loc 1 197 21 view .LVU86
 198:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 324              		.loc 1 198 3 view .LVU87
 325              		.loc 1 198 3 view .LVU88
 194:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 326              		.loc 1 194 74 is_stmt 0 view .LVU89
 327 0006 1546     		mov	r5, r2
 199:lib/chibios/os/oslib/src/chmboxes.c **** 
 200:lib/chibios/os/oslib/src/chmboxes.c ****   do {
 201:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 202:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 203:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 204:lib/chibios/os/oslib/src/chmboxes.c ****     }
 205:lib/chibios/os/oslib/src/chmboxes.c **** 
 206:lib/chibios/os/oslib/src/chmboxes.c ****     /* Is there a free message slot in queue? if so then post.*/
 207:lib/chibios/os/oslib/src/chmboxes.c ****     if (chMBGetFreeCountI(mbp) > (size_t)0) {
 208:lib/chibios/os/oslib/src/chmboxes.c ****       *mbp->wrptr++ = msg;
 209:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 210:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->wrptr = mbp->buffer;
 211:lib/chibios/os/oslib/src/chmboxes.c ****       }
 212:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 213:lib/chibios/os/oslib/src/chmboxes.c **** 
 214:lib/chibios/os/oslib/src/chmboxes.c ****       /* If there is a reader waiting then makes it ready.*/
 215:lib/chibios/os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qr, MSG_OK);
 216:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 217:lib/chibios/os/oslib/src/chmboxes.c **** 
 218:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_OK;
 219:lib/chibios/os/oslib/src/chmboxes.c ****     }
 220:lib/chibios/os/oslib/src/chmboxes.c **** 
 221:lib/chibios/os/oslib/src/chmboxes.c ****     /* No space in the queue, waiting for a slot to become available.*/
 222:lib/chibios/os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qw, timeout);
 328              		.loc 1 222 14 view .LVU90
 329 0008 00F11807 		add	r7, r0, #24
 330              	.LVL14:
 331              	.L8:
 198:lib/chibios/os/oslib/src/chmboxes.c **** 
 332              		.loc 1 198 3 is_stmt 1 discriminator 5 view .LVU91
 200:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 333              		.loc 1 200 3 discriminator 5 view .LVU92
 202:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 334              		.loc 1 202 5 discriminator 5 view .LVU93
 202:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 335              		.loc 1 202 8 is_stmt 0 discriminator 5 view .LVU94
 336 000c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 337 000e 03BB     		cbnz	r3, .L9
 207:lib/chibios/os/oslib/src/chmboxes.c ****       *mbp->wrptr++ = msg;
 338              		.loc 1 207 5 is_stmt 1 view .LVU95
 339              	.LVL15:
 340              	.LBB113:
 341              	.LBI113:
 342              		.file 7 "./lib/chibios/os/oslib/include/chmboxes.h"
   1:./lib/chibios/os/oslib/include/chmboxes.h **** /*
   2:./lib/chibios/os/oslib/include/chmboxes.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/oslib/include/chmboxes.h **** 
   4:./lib/chibios/os/oslib/include/chmboxes.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/oslib/include/chmboxes.h **** 
   6:./lib/chibios/os/oslib/include/chmboxes.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/oslib/include/chmboxes.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/oslib/include/chmboxes.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/oslib/include/chmboxes.h ****     (at your option) any later version.
  10:./lib/chibios/os/oslib/include/chmboxes.h **** 
  11:./lib/chibios/os/oslib/include/chmboxes.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/oslib/include/chmboxes.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/oslib/include/chmboxes.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/oslib/include/chmboxes.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/oslib/include/chmboxes.h **** 
  16:./lib/chibios/os/oslib/include/chmboxes.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/oslib/include/chmboxes.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/oslib/include/chmboxes.h **** */
  19:./lib/chibios/os/oslib/include/chmboxes.h **** 
  20:./lib/chibios/os/oslib/include/chmboxes.h **** /**
  21:./lib/chibios/os/oslib/include/chmboxes.h ****  * @file    oslib/include/chmboxes.h
  22:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Mailboxes macros and structures.
  23:./lib/chibios/os/oslib/include/chmboxes.h ****  *
  24:./lib/chibios/os/oslib/include/chmboxes.h ****  * @addtogroup oslib_mailboxes
  25:./lib/chibios/os/oslib/include/chmboxes.h ****  * @{
  26:./lib/chibios/os/oslib/include/chmboxes.h ****  */
  27:./lib/chibios/os/oslib/include/chmboxes.h **** 
  28:./lib/chibios/os/oslib/include/chmboxes.h **** #ifndef CHMBOXES_H
  29:./lib/chibios/os/oslib/include/chmboxes.h **** #define CHMBOXES_H
  30:./lib/chibios/os/oslib/include/chmboxes.h **** 
  31:./lib/chibios/os/oslib/include/chmboxes.h **** #if (CH_CFG_USE_MAILBOXES == TRUE) || defined(__DOXYGEN__)
  32:./lib/chibios/os/oslib/include/chmboxes.h **** 
  33:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  34:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  36:./lib/chibios/os/oslib/include/chmboxes.h **** 
  37:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  38:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  40:./lib/chibios/os/oslib/include/chmboxes.h **** 
  41:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  42:./lib/chibios/os/oslib/include/chmboxes.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  44:./lib/chibios/os/oslib/include/chmboxes.h **** 
  45:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  46:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  48:./lib/chibios/os/oslib/include/chmboxes.h **** 
  49:./lib/chibios/os/oslib/include/chmboxes.h **** /**
  50:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Structure representing a mailbox object.
  51:./lib/chibios/os/oslib/include/chmboxes.h ****  */
  52:./lib/chibios/os/oslib/include/chmboxes.h **** typedef struct {
  53:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t                 *buffer;        /**< @brief Pointer to the mailbox
  54:./lib/chibios/os/oslib/include/chmboxes.h ****                                                     buffer.                 */
  55:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t                 *top;           /**< @brief Pointer to the location
  56:./lib/chibios/os/oslib/include/chmboxes.h ****                                                     after the buffer.       */
  57:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t                 *wrptr;         /**< @brief Write pointer.          */
  58:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t                 *rdptr;         /**< @brief Read pointer.           */
  59:./lib/chibios/os/oslib/include/chmboxes.h ****   size_t                cnt;            /**< @brief Messages in queue.      */
  60:./lib/chibios/os/oslib/include/chmboxes.h ****   bool                  reset;          /**< @brief True in reset state.    */
  61:./lib/chibios/os/oslib/include/chmboxes.h ****   threads_queue_t       qw;             /**< @brief Queued writers.         */
  62:./lib/chibios/os/oslib/include/chmboxes.h ****   threads_queue_t       qr;             /**< @brief Queued readers.         */
  63:./lib/chibios/os/oslib/include/chmboxes.h **** } mailbox_t;
  64:./lib/chibios/os/oslib/include/chmboxes.h **** 
  65:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  66:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module macros.                                                            */
  67:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  68:./lib/chibios/os/oslib/include/chmboxes.h **** 
  69:./lib/chibios/os/oslib/include/chmboxes.h **** /**
  70:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Data part of a static mailbox initializer.
  71:./lib/chibios/os/oslib/include/chmboxes.h ****  * @details This macro should be used when statically initializing a
  72:./lib/chibios/os/oslib/include/chmboxes.h ****  *          mailbox that is part of a bigger structure.
  73:./lib/chibios/os/oslib/include/chmboxes.h ****  *
  74:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] name      the name of the mailbox variable
  75:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] buffer    pointer to the mailbox buffer array of @p msg_t
  76:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] size      number of @p msg_t elements in the buffer array
  77:./lib/chibios/os/oslib/include/chmboxes.h ****  */
  78:./lib/chibios/os/oslib/include/chmboxes.h **** #define _MAILBOX_DATA(name, buffer, size) {                                 \
  79:./lib/chibios/os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  80:./lib/chibios/os/oslib/include/chmboxes.h ****   (msg_t *)(buffer) + size,                                                 \
  81:./lib/chibios/os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  82:./lib/chibios/os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  83:./lib/chibios/os/oslib/include/chmboxes.h ****   (size_t)0,                                                                \
  84:./lib/chibios/os/oslib/include/chmboxes.h ****   false,                                                                    \
  85:./lib/chibios/os/oslib/include/chmboxes.h ****   _THREADS_QUEUE_DATA(name.qw),                                             \
  86:./lib/chibios/os/oslib/include/chmboxes.h ****   _THREADS_QUEUE_DATA(name.qr),                                             \
  87:./lib/chibios/os/oslib/include/chmboxes.h **** }
  88:./lib/chibios/os/oslib/include/chmboxes.h **** 
  89:./lib/chibios/os/oslib/include/chmboxes.h **** /**
  90:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Static mailbox initializer.
  91:./lib/chibios/os/oslib/include/chmboxes.h ****  * @details Statically initialized mailboxes require no explicit
  92:./lib/chibios/os/oslib/include/chmboxes.h ****  *          initialization using @p chMBObjectInit().
  93:./lib/chibios/os/oslib/include/chmboxes.h ****  *
  94:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] name      the name of the mailbox variable
  95:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] buffer    pointer to the mailbox buffer array of @p msg_t
  96:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] size      number of @p msg_t elements in the buffer array
  97:./lib/chibios/os/oslib/include/chmboxes.h ****  */
  98:./lib/chibios/os/oslib/include/chmboxes.h **** #define MAILBOX_DECL(name, buffer, size)                                    \
  99:./lib/chibios/os/oslib/include/chmboxes.h ****   mailbox_t name = _MAILBOX_DATA(name, buffer, size)
 100:./lib/chibios/os/oslib/include/chmboxes.h **** 
 101:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
 102:./lib/chibios/os/oslib/include/chmboxes.h **** /* External declarations.                                                    */
 103:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
 104:./lib/chibios/os/oslib/include/chmboxes.h **** 
 105:./lib/chibios/os/oslib/include/chmboxes.h **** #ifdef __cplusplus
 106:./lib/chibios/os/oslib/include/chmboxes.h **** extern "C" {
 107:./lib/chibios/os/oslib/include/chmboxes.h **** #endif
 108:./lib/chibios/os/oslib/include/chmboxes.h ****   void chMBObjectInit(mailbox_t *mbp, msg_t *buf, size_t n);
 109:./lib/chibios/os/oslib/include/chmboxes.h ****   void chMBReset(mailbox_t *mbp);
 110:./lib/chibios/os/oslib/include/chmboxes.h ****   void chMBResetI(mailbox_t *mbp);
 111:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 112:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 113:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostI(mailbox_t *mbp, msg_t msg);
 114:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 115:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 116:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadI(mailbox_t *mbp, msg_t msg);
 117:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBFetchTimeout(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout);
 118:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBFetchTimeoutS(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout);
 119:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBFetchI(mailbox_t *mbp, msg_t *msgp);
 120:./lib/chibios/os/oslib/include/chmboxes.h **** #ifdef __cplusplus
 121:./lib/chibios/os/oslib/include/chmboxes.h **** }
 122:./lib/chibios/os/oslib/include/chmboxes.h **** #endif
 123:./lib/chibios/os/oslib/include/chmboxes.h **** 
 124:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
 125:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module inline functions.                                                  */
 126:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
 127:./lib/chibios/os/oslib/include/chmboxes.h **** 
 128:./lib/chibios/os/oslib/include/chmboxes.h **** /**
 129:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Returns the mailbox buffer size as number of messages.
 130:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 131:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 132:./lib/chibios/os/oslib/include/chmboxes.h ****  * @return              The size of the mailbox.
 133:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 134:./lib/chibios/os/oslib/include/chmboxes.h ****  * @iclass
 135:./lib/chibios/os/oslib/include/chmboxes.h ****  */
 136:./lib/chibios/os/oslib/include/chmboxes.h **** static inline size_t chMBGetSizeI(const mailbox_t *mbp) {
 137:./lib/chibios/os/oslib/include/chmboxes.h **** 
 138:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -save -e9033 [10.8] Perfectly safe pointers
 139:./lib/chibios/os/oslib/include/chmboxes.h ****     arithmetic.*/
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   return (size_t)(mbp->top - mbp->buffer);
 141:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 142:./lib/chibios/os/oslib/include/chmboxes.h **** }
 143:./lib/chibios/os/oslib/include/chmboxes.h **** 
 144:./lib/chibios/os/oslib/include/chmboxes.h **** /**
 145:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Returns the number of used message slots into a mailbox.
 146:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 147:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 148:./lib/chibios/os/oslib/include/chmboxes.h ****  * @return              The number of queued messages.
 149:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 150:./lib/chibios/os/oslib/include/chmboxes.h ****  * @iclass
 151:./lib/chibios/os/oslib/include/chmboxes.h ****  */
 152:./lib/chibios/os/oslib/include/chmboxes.h **** static inline size_t chMBGetUsedCountI(const mailbox_t *mbp) {
 153:./lib/chibios/os/oslib/include/chmboxes.h **** 
 154:./lib/chibios/os/oslib/include/chmboxes.h ****   chDbgCheckClassI();
 155:./lib/chibios/os/oslib/include/chmboxes.h **** 
 156:./lib/chibios/os/oslib/include/chmboxes.h ****   return mbp->cnt;
 157:./lib/chibios/os/oslib/include/chmboxes.h **** }
 158:./lib/chibios/os/oslib/include/chmboxes.h **** 
 159:./lib/chibios/os/oslib/include/chmboxes.h **** /**
 160:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Returns the number of free message slots into a mailbox.
 161:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 162:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 163:./lib/chibios/os/oslib/include/chmboxes.h ****  * @return              The number of empty message slots.
 164:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 165:./lib/chibios/os/oslib/include/chmboxes.h ****  * @iclass
 166:./lib/chibios/os/oslib/include/chmboxes.h ****  */
 167:./lib/chibios/os/oslib/include/chmboxes.h **** static inline size_t chMBGetFreeCountI(const mailbox_t *mbp) {
 343              		.loc 7 167 22 view .LVU96
 168:./lib/chibios/os/oslib/include/chmboxes.h **** 
 169:./lib/chibios/os/oslib/include/chmboxes.h ****   chDbgCheckClassI();
 344              		.loc 7 169 21 view .LVU97
 170:./lib/chibios/os/oslib/include/chmboxes.h **** 
 171:./lib/chibios/os/oslib/include/chmboxes.h ****   return chMBGetSizeI(mbp) - chMBGetUsedCountI(mbp);
 345              		.loc 7 171 3 view .LVU98
 346              	.LBB114:
 347              	.LBI114:
 136:./lib/chibios/os/oslib/include/chmboxes.h **** 
 348              		.loc 7 136 22 view .LVU99
 349              	.LBB115:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 350              		.loc 7 140 3 view .LVU100
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 351              		.loc 7 140 33 is_stmt 0 view .LVU101
 352 0010 D4E90020 		ldrd	r2, r0, [r4]
 353              	.LVL16:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 354              		.loc 7 140 33 view .LVU102
 355              	.LBE115:
 356              	.LBE114:
 357              	.LBB117:
 358              	.LBI117:
 152:./lib/chibios/os/oslib/include/chmboxes.h **** 
 359              		.loc 7 152 22 is_stmt 1 view .LVU103
 360              	.LBB118:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 361              		.loc 7 154 21 view .LVU104
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 362              		.loc 7 156 3 view .LVU105
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 363              		.loc 7 156 13 is_stmt 0 view .LVU106
 364 0014 2369     		ldr	r3, [r4, #16]
 365              	.LVL17:
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 366              		.loc 7 156 13 view .LVU107
 367              	.LBE118:
 368              	.LBE117:
 369              	.LBB119:
 370              	.LBB116:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 371              		.loc 7 140 28 view .LVU108
 372 0016 811A     		subs	r1, r0, r2
 373              	.LBE116:
 374              	.LBE119:
 375              	.LBE113:
 207:lib/chibios/os/oslib/src/chmboxes.c ****       *mbp->wrptr++ = msg;
 376              		.loc 1 207 8 view .LVU109
 377 0018 B3EBA10F 		cmp	r3, r1, asr #2
 378 001c 12D0     		beq	.L6
 379              	.LVL18:
 380              	.LBB120:
 381              	.LBI120:
 194:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 382              		.loc 1 194 7 is_stmt 1 view .LVU110
 383              	.LBB121:
 208:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 384              		.loc 1 208 7 view .LVU111
 208:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 385              		.loc 1 208 11 is_stmt 0 view .LVU112
 386 001e A568     		ldr	r5, [r4, #8]
 387              	.LVL19:
 208:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 388              		.loc 1 208 18 view .LVU113
 389 0020 291D     		adds	r1, r5, #4
 390 0022 A160     		str	r1, [r4, #8]
 209:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->wrptr = mbp->buffer;
 391              		.loc 1 209 10 view .LVU114
 392 0024 8842     		cmp	r0, r1
 208:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 393              		.loc 1 208 21 view .LVU115
 394 0026 2E60     		str	r6, [r5]
 209:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->wrptr = mbp->buffer;
 395              		.loc 1 209 7 is_stmt 1 view .LVU116
 210:lib/chibios/os/oslib/src/chmboxes.c ****       }
 396              		.loc 1 210 20 is_stmt 0 view .LVU117
 397 0028 88BF     		it	hi
 398 002a A268     		ldrhi	r2, [r4, #8]
 399 002c A260     		str	r2, [r4, #8]
 212:lib/chibios/os/oslib/src/chmboxes.c **** 
 400              		.loc 1 212 7 is_stmt 1 view .LVU118
 212:lib/chibios/os/oslib/src/chmboxes.c **** 
 401              		.loc 1 212 15 is_stmt 0 view .LVU119
 402 002e 0133     		adds	r3, r3, #1
 215:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 403              		.loc 1 215 7 view .LVU120
 404 0030 04F12000 		add	r0, r4, #32
 212:lib/chibios/os/oslib/src/chmboxes.c **** 
 405              		.loc 1 212 15 view .LVU121
 406 0034 2361     		str	r3, [r4, #16]
 215:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 407              		.loc 1 215 7 is_stmt 1 view .LVU122
 408 0036 0021     		movs	r1, #0
 409 0038 FFF7FEFF 		bl	chThdDequeueNextI
 410              	.LVL20:
 216:lib/chibios/os/oslib/src/chmboxes.c **** 
 411              		.loc 1 216 7 view .LVU123
 412 003c FFF7FEFF 		bl	chSchRescheduleS
 413              	.LVL21:
 218:lib/chibios/os/oslib/src/chmboxes.c ****     }
 414              		.loc 1 218 7 view .LVU124
 216:lib/chibios/os/oslib/src/chmboxes.c **** 
 415              		.loc 1 216 7 is_stmt 0 view .LVU125
 416 0040 0020     		movs	r0, #0
 417              	.L4:
 216:lib/chibios/os/oslib/src/chmboxes.c **** 
 418              		.loc 1 216 7 view .LVU126
 419              	.LBE121:
 420              	.LBE120:
 223:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 224:lib/chibios/os/oslib/src/chmboxes.c **** 
 225:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 226:lib/chibios/os/oslib/src/chmboxes.c **** }
 421              		.loc 1 226 1 view .LVU127
 422 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 423              	.LVL22:
 424              	.L6:
 222:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 425              		.loc 1 222 5 is_stmt 1 view .LVU128
 222:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 426              		.loc 1 222 14 is_stmt 0 view .LVU129
 427 0044 2946     		mov	r1, r5
 428 0046 3846     		mov	r0, r7
 429 0048 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 430              	.LVL23:
 223:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 431              		.loc 1 223 19 is_stmt 1 view .LVU130
 432 004c 0028     		cmp	r0, #0
 433 004e DDD0     		beq	.L8
 434 0050 F7E7     		b	.L4
 435              	.LVL24:
 436              	.L9:
 203:lib/chibios/os/oslib/src/chmboxes.c ****     }
 437              		.loc 1 203 14 is_stmt 0 view .LVU131
 438 0052 6FF00100 		mvn	r0, #1
 439 0056 F4E7     		b	.L4
 440              		.cfi_endproc
 441              	.LFE293:
 443              		.section	.text.chMBPostTimeout,"ax",%progbits
 444              		.align	1
 445              		.global	chMBPostTimeout
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 450              	chMBPostTimeout:
 451              	.LVL25:
 452              	.LFB292:
 165:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 453              		.loc 1 165 73 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 166:lib/chibios/os/oslib/src/chmboxes.c **** 
 457              		.loc 1 166 3 view .LVU133
 168:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBPostTimeoutS(mbp, msg, timeout);
 458              		.loc 1 168 3 view .LVU134
 459              	.LBB122:
 460              	.LBI122:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 461              		.loc 4 355 20 view .LVU135
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 462              		.loc 4 357 3 view .LVU136
 463              	.LBB123:
 464              	.LBI123:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 465              		.loc 5 669 27 view .LVU137
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 466              		.loc 5 677 3 view .LVU138
 467              	.LBB124:
 468              	.LBI124:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 469              		.loc 6 491 27 view .LVU139
 470              	.LBB125:
 471              		.loc 6 493 3 view .LVU140
 472              	.LBE125:
 473              	.LBE124:
 474              	.LBE123:
 475              	.LBE122:
 165:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 476              		.loc 1 165 73 is_stmt 0 view .LVU141
 477 0000 08B5     		push	{r3, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 481              	.LBB129:
 482              	.LBB128:
 483              	.LBB127:
 484              	.LBB126:
 485              		.loc 6 493 3 view .LVU142
 486 0002 2023     		movs	r3, #32
 487              		.syntax unified
 488              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 489 0004 83F31188 		MSR basepri, r3
 490              	@ 0 "" 2
 491              	.LVL26:
 492              		.loc 6 493 3 view .LVU143
 493              		.thumb
 494              		.syntax unified
 495              	.LBE126:
 496              	.LBE127:
 497              	.LBE128:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 498              		.loc 4 358 34 is_stmt 1 view .LVU144
 359:./lib/chibios/os/rt/include/chsys.h **** }
 499              		.loc 4 359 20 view .LVU145
 500              	.LBE129:
 169:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 501              		.loc 1 169 3 view .LVU146
 169:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 502              		.loc 1 169 12 is_stmt 0 view .LVU147
 503 0008 FFF7FEFF 		bl	chMBPostTimeoutS
 504              	.LVL27:
 170:lib/chibios/os/oslib/src/chmboxes.c **** 
 505              		.loc 1 170 3 is_stmt 1 view .LVU148
 506              	.LBB130:
 507              	.LBI130:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 508              		.loc 4 367 20 view .LVU149
 509              	.LBB131:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 510              		.loc 4 369 22 view .LVU150
 370:./lib/chibios/os/rt/include/chsys.h **** 
 511              		.loc 4 370 33 view .LVU151
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 512              		.loc 4 376 3 view .LVU152
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 513              		.loc 4 376 3 view .LVU153
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 514              		.loc 4 376 3 view .LVU154
 515              		.loc 4 380 3 view .LVU155
 516              	.LBB132:
 517              	.LBI132:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 518              		.loc 5 693 27 view .LVU156
 519              		.loc 5 696 3 view .LVU157
 520              	.LBB133:
 521              	.LBI133:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 522              		.loc 6 491 27 view .LVU158
 523              	.LBB134:
 524              		.loc 6 493 3 view .LVU159
 525 000c 0023     		movs	r3, #0
 526              		.syntax unified
 527              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 528 000e 83F31188 		MSR basepri, r3
 529              	@ 0 "" 2
 530              	.LVL28:
 531              		.loc 6 493 3 is_stmt 0 view .LVU160
 532              		.thumb
 533              		.syntax unified
 534              	.LBE134:
 535              	.LBE133:
 536              	.LBE132:
 537              	.LBE131:
 538              	.LBE130:
 172:lib/chibios/os/oslib/src/chmboxes.c **** }
 539              		.loc 1 172 3 is_stmt 1 view .LVU161
 173:lib/chibios/os/oslib/src/chmboxes.c **** 
 540              		.loc 1 173 1 is_stmt 0 view .LVU162
 541 0012 08BD     		pop	{r3, pc}
 542              		.cfi_endproc
 543              	.LFE292:
 545              		.section	.text.chMBPostI,"ax",%progbits
 546              		.align	1
 547              		.global	chMBPostI
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 552              	chMBPostI:
 553              	.LVL29:
 554              	.LFB294:
 227:lib/chibios/os/oslib/src/chmboxes.c **** 
 228:lib/chibios/os/oslib/src/chmboxes.c **** /**
 229:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 230:lib/chibios/os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 231:lib/chibios/os/oslib/src/chmboxes.c ****  *          condition if the queue is full.
 232:lib/chibios/os/oslib/src/chmboxes.c ****  *
 233:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 234:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 235:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 236:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 237:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 238:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is full and the message cannot be
 239:lib/chibios/os/oslib/src/chmboxes.c ****  *                      posted.
 240:lib/chibios/os/oslib/src/chmboxes.c ****  *
 241:lib/chibios/os/oslib/src/chmboxes.c ****  * @iclass
 242:lib/chibios/os/oslib/src/chmboxes.c ****  */
 243:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostI(mailbox_t *mbp, msg_t msg) {
 555              		.loc 1 243 44 is_stmt 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 244:lib/chibios/os/oslib/src/chmboxes.c **** 
 245:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 559              		.loc 1 245 21 view .LVU164
 246:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 560              		.loc 1 246 3 view .LVU165
 561              		.loc 1 246 3 view .LVU166
 562              		.loc 1 246 3 view .LVU167
 247:lib/chibios/os/oslib/src/chmboxes.c **** 
 248:lib/chibios/os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 249:lib/chibios/os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 563              		.loc 1 249 3 view .LVU168
 564              		.loc 1 249 6 is_stmt 0 view .LVU169
 565 0000 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 243:lib/chibios/os/oslib/src/chmboxes.c **** 
 566              		.loc 1 243 44 view .LVU170
 567 0002 70B5     		push	{r4, r5, r6, lr}
 568              		.cfi_def_cfa_offset 16
 569              		.cfi_offset 4, -16
 570              		.cfi_offset 5, -12
 571              		.cfi_offset 6, -8
 572              		.cfi_offset 14, -4
 573              		.loc 1 249 6 view .LVU171
 574 0004 B3B9     		cbnz	r3, .L16
 250:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_RESET;
 251:lib/chibios/os/oslib/src/chmboxes.c ****   }
 252:lib/chibios/os/oslib/src/chmboxes.c **** 
 253:lib/chibios/os/oslib/src/chmboxes.c ****   /* Is there a free message slot in queue? if so then post.*/
 254:lib/chibios/os/oslib/src/chmboxes.c ****   if (chMBGetFreeCountI(mbp) > (size_t)0) {
 575              		.loc 1 254 3 is_stmt 1 view .LVU172
 576              	.LVL30:
 577              	.LBB141:
 578              	.LBI141:
 167:./lib/chibios/os/oslib/include/chmboxes.h **** 
 579              		.loc 7 167 22 view .LVU173
 169:./lib/chibios/os/oslib/include/chmboxes.h **** 
 580              		.loc 7 169 21 view .LVU174
 581              		.loc 7 171 3 view .LVU175
 582              	.LBB142:
 583              	.LBI142:
 136:./lib/chibios/os/oslib/include/chmboxes.h **** 
 584              		.loc 7 136 22 view .LVU176
 585              	.LBB143:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 586              		.loc 7 140 3 view .LVU177
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 587              		.loc 7 140 33 is_stmt 0 view .LVU178
 588 0006 D0E90024 		ldrd	r2, r4, [r0]
 589              	.LVL31:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 590              		.loc 7 140 33 view .LVU179
 591              	.LBE143:
 592              	.LBE142:
 593              	.LBB145:
 594              	.LBI145:
 152:./lib/chibios/os/oslib/include/chmboxes.h **** 
 595              		.loc 7 152 22 is_stmt 1 view .LVU180
 596              	.LBB146:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 597              		.loc 7 154 21 view .LVU181
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 598              		.loc 7 156 3 view .LVU182
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 599              		.loc 7 156 13 is_stmt 0 view .LVU183
 600 000a 0369     		ldr	r3, [r0, #16]
 601              	.LVL32:
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 602              		.loc 7 156 13 view .LVU184
 603              	.LBE146:
 604              	.LBE145:
 605              	.LBB147:
 606              	.LBB144:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 607              		.loc 7 140 28 view .LVU185
 608 000c A51A     		subs	r5, r4, r2
 609              	.LBE144:
 610              	.LBE147:
 611              	.LBE141:
 612              		.loc 1 254 6 view .LVU186
 613 000e B3EBA50F 		cmp	r3, r5, asr #2
 614 0012 12D0     		beq	.L17
 255:lib/chibios/os/oslib/src/chmboxes.c ****     *mbp->wrptr++ = msg;
 615              		.loc 1 255 5 is_stmt 1 view .LVU187
 616              		.loc 1 255 9 is_stmt 0 view .LVU188
 617 0014 8668     		ldr	r6, [r0, #8]
 618              		.loc 1 255 16 view .LVU189
 619 0016 351D     		adds	r5, r6, #4
 620 0018 8560     		str	r5, [r0, #8]
 256:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->wrptr >= mbp->top) {
 621              		.loc 1 256 8 view .LVU190
 622 001a A542     		cmp	r5, r4
 255:lib/chibios/os/oslib/src/chmboxes.c ****     *mbp->wrptr++ = msg;
 623              		.loc 1 255 19 view .LVU191
 624 001c 3160     		str	r1, [r6]
 625              		.loc 1 256 5 is_stmt 1 view .LVU192
 257:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->wrptr = mbp->buffer;
 626              		.loc 1 257 18 is_stmt 0 view .LVU193
 627 001e 38BF     		it	cc
 628 0020 8268     		ldrcc	r2, [r0, #8]
 629 0022 8260     		str	r2, [r0, #8]
 258:lib/chibios/os/oslib/src/chmboxes.c ****     }
 259:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt++;
 630              		.loc 1 259 5 is_stmt 1 view .LVU194
 631              		.loc 1 259 13 is_stmt 0 view .LVU195
 632 0024 0133     		adds	r3, r3, #1
 633 0026 0361     		str	r3, [r0, #16]
 260:lib/chibios/os/oslib/src/chmboxes.c **** 
 261:lib/chibios/os/oslib/src/chmboxes.c ****     /* If there is a reader waiting then makes it ready.*/
 262:lib/chibios/os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qr, MSG_OK);
 634              		.loc 1 262 5 is_stmt 1 view .LVU196
 635 0028 0021     		movs	r1, #0
 636              	.LVL33:
 637              		.loc 1 262 5 is_stmt 0 view .LVU197
 638 002a 2030     		adds	r0, r0, #32
 639              	.LVL34:
 640              		.loc 1 262 5 view .LVU198
 641 002c FFF7FEFF 		bl	chThdDequeueNextI
 642              	.LVL35:
 263:lib/chibios/os/oslib/src/chmboxes.c **** 
 264:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_OK;
 643              		.loc 1 264 5 is_stmt 1 view .LVU199
 644              		.loc 1 264 12 is_stmt 0 view .LVU200
 645 0030 0020     		movs	r0, #0
 646              	.L13:
 265:lib/chibios/os/oslib/src/chmboxes.c ****   }
 266:lib/chibios/os/oslib/src/chmboxes.c **** 
 267:lib/chibios/os/oslib/src/chmboxes.c ****   /* No space, immediate timeout.*/
 268:lib/chibios/os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 269:lib/chibios/os/oslib/src/chmboxes.c **** }
 647              		.loc 1 269 1 view .LVU201
 648 0032 70BD     		pop	{r4, r5, r6, pc}
 649              	.LVL36:
 650              	.L16:
 250:lib/chibios/os/oslib/src/chmboxes.c ****   }
 651              		.loc 1 250 12 view .LVU202
 652 0034 6FF00100 		mvn	r0, #1
 653              	.LVL37:
 250:lib/chibios/os/oslib/src/chmboxes.c ****   }
 654              		.loc 1 250 12 view .LVU203
 655 0038 FBE7     		b	.L13
 656              	.LVL38:
 657              	.L17:
 268:lib/chibios/os/oslib/src/chmboxes.c **** }
 658              		.loc 1 268 10 view .LVU204
 659 003a 4FF0FF30 		mov	r0, #-1
 660              	.LVL39:
 268:lib/chibios/os/oslib/src/chmboxes.c **** }
 661              		.loc 1 268 10 view .LVU205
 662 003e F8E7     		b	.L13
 663              		.cfi_endproc
 664              	.LFE294:
 666              		.section	.text.chMBPostAheadTimeoutS,"ax",%progbits
 667              		.align	1
 668              		.global	chMBPostAheadTimeoutS
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 673              	chMBPostAheadTimeoutS:
 674              	.LVL40:
 675              	.LFB296:
 270:lib/chibios/os/oslib/src/chmboxes.c **** 
 271:lib/chibios/os/oslib/src/chmboxes.c **** /**
 272:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 273:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 274:lib/chibios/os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 275:lib/chibios/os/oslib/src/chmboxes.c ****  *
 276:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 277:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 278:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 279:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 280:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 281:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 282:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 283:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 284:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 285:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 286:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 287:lib/chibios/os/oslib/src/chmboxes.c ****  *
 288:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 289:lib/chibios/os/oslib/src/chmboxes.c ****  */
 290:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostAheadTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 291:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 292:lib/chibios/os/oslib/src/chmboxes.c **** 
 293:lib/chibios/os/oslib/src/chmboxes.c ****   chSysLock();
 294:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBPostAheadTimeoutS(mbp, msg, timeout);
 295:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 296:lib/chibios/os/oslib/src/chmboxes.c **** 
 297:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 298:lib/chibios/os/oslib/src/chmboxes.c **** }
 299:lib/chibios/os/oslib/src/chmboxes.c **** 
 300:lib/chibios/os/oslib/src/chmboxes.c **** /**
 301:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 302:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 303:lib/chibios/os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 304:lib/chibios/os/oslib/src/chmboxes.c ****  *
 305:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 306:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 307:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 308:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 309:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 310:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 311:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 312:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 313:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 314:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 315:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 316:lib/chibios/os/oslib/src/chmboxes.c ****  *
 317:lib/chibios/os/oslib/src/chmboxes.c ****  * @sclass
 318:lib/chibios/os/oslib/src/chmboxes.c ****  */
 319:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostAheadTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 676              		.loc 1 319 79 is_stmt 1 view -0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              		.loc 1 319 79 is_stmt 0 view .LVU207
 681 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 682              		.cfi_def_cfa_offset 24
 683              		.cfi_offset 3, -24
 684              		.cfi_offset 4, -20
 685              		.cfi_offset 5, -16
 686              		.cfi_offset 6, -12
 687              		.cfi_offset 7, -8
 688              		.cfi_offset 14, -4
 689              		.loc 1 319 79 view .LVU208
 690 0002 0446     		mov	r4, r0
 691 0004 0E46     		mov	r6, r1
 320:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 692              		.loc 1 320 3 is_stmt 1 view .LVU209
 321:lib/chibios/os/oslib/src/chmboxes.c **** 
 322:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 693              		.loc 1 322 21 view .LVU210
 323:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 694              		.loc 1 323 3 view .LVU211
 695              		.loc 1 323 3 view .LVU212
 319:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 696              		.loc 1 319 79 is_stmt 0 view .LVU213
 697 0006 1546     		mov	r5, r2
 324:lib/chibios/os/oslib/src/chmboxes.c **** 
 325:lib/chibios/os/oslib/src/chmboxes.c ****   do {
 326:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 327:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 328:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 329:lib/chibios/os/oslib/src/chmboxes.c ****     }
 330:lib/chibios/os/oslib/src/chmboxes.c **** 
 331:lib/chibios/os/oslib/src/chmboxes.c ****     /* Is there a free message slot in queue? if so then post.*/
 332:lib/chibios/os/oslib/src/chmboxes.c ****     if (chMBGetFreeCountI(mbp) > (size_t)0) {
 333:lib/chibios/os/oslib/src/chmboxes.c ****       if (--mbp->rdptr < mbp->buffer) {
 334:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 335:lib/chibios/os/oslib/src/chmboxes.c ****       }
 336:lib/chibios/os/oslib/src/chmboxes.c ****       *mbp->rdptr = msg;
 337:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 338:lib/chibios/os/oslib/src/chmboxes.c **** 
 339:lib/chibios/os/oslib/src/chmboxes.c ****       /* If there is a reader waiting then makes it ready.*/
 340:lib/chibios/os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qr, MSG_OK);
 341:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 342:lib/chibios/os/oslib/src/chmboxes.c **** 
 343:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_OK;
 344:lib/chibios/os/oslib/src/chmboxes.c ****     }
 345:lib/chibios/os/oslib/src/chmboxes.c **** 
 346:lib/chibios/os/oslib/src/chmboxes.c ****     /* No space in the queue, waiting for a slot to become available.*/
 347:lib/chibios/os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qw, timeout);
 698              		.loc 1 347 14 view .LVU214
 699 0008 00F11807 		add	r7, r0, #24
 700              	.LVL41:
 701              	.L22:
 323:lib/chibios/os/oslib/src/chmboxes.c **** 
 702              		.loc 1 323 3 is_stmt 1 discriminator 5 view .LVU215
 325:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 703              		.loc 1 325 3 discriminator 5 view .LVU216
 327:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 704              		.loc 1 327 5 discriminator 5 view .LVU217
 327:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 705              		.loc 1 327 8 is_stmt 0 discriminator 5 view .LVU218
 706 000c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 707 000e FBB9     		cbnz	r3, .L23
 332:lib/chibios/os/oslib/src/chmboxes.c ****       if (--mbp->rdptr < mbp->buffer) {
 708              		.loc 1 332 5 is_stmt 1 view .LVU219
 709              	.LVL42:
 710              	.LBB156:
 711              	.LBI156:
 167:./lib/chibios/os/oslib/include/chmboxes.h **** 
 712              		.loc 7 167 22 view .LVU220
 169:./lib/chibios/os/oslib/include/chmboxes.h **** 
 713              		.loc 7 169 21 view .LVU221
 714              		.loc 7 171 3 view .LVU222
 715              	.LBB157:
 716              	.LBI157:
 136:./lib/chibios/os/oslib/include/chmboxes.h **** 
 717              		.loc 7 136 22 view .LVU223
 718              	.LBB158:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 719              		.loc 7 140 3 view .LVU224
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 720              		.loc 7 140 33 is_stmt 0 view .LVU225
 721 0010 D4E90012 		ldrd	r1, r2, [r4]
 722              	.LVL43:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 723              		.loc 7 140 33 view .LVU226
 724              	.LBE158:
 725              	.LBE157:
 726              	.LBB160:
 727              	.LBI160:
 152:./lib/chibios/os/oslib/include/chmboxes.h **** 
 728              		.loc 7 152 22 is_stmt 1 view .LVU227
 729              	.LBB161:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 730              		.loc 7 154 21 view .LVU228
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 731              		.loc 7 156 3 view .LVU229
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 732              		.loc 7 156 13 is_stmt 0 view .LVU230
 733 0014 2069     		ldr	r0, [r4, #16]
 734              	.LVL44:
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 735              		.loc 7 156 13 view .LVU231
 736              	.LBE161:
 737              	.LBE160:
 738              	.LBB162:
 739              	.LBB159:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 740              		.loc 7 140 28 view .LVU232
 741 0016 531A     		subs	r3, r2, r1
 742              	.LBE159:
 743              	.LBE162:
 744              	.LBE156:
 332:lib/chibios/os/oslib/src/chmboxes.c ****       if (--mbp->rdptr < mbp->buffer) {
 745              		.loc 1 332 8 view .LVU233
 746 0018 B0EBA30F 		cmp	r0, r3, asr #2
 747 001c 11D0     		beq	.L20
 748              	.LVL45:
 749              	.LBB163:
 750              	.LBI163:
 319:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 751              		.loc 1 319 7 is_stmt 1 view .LVU234
 752              	.LBB164:
 333:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 753              		.loc 1 333 7 view .LVU235
 333:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 754              		.loc 1 333 11 is_stmt 0 view .LVU236
 755 001e E368     		ldr	r3, [r4, #12]
 756 0020 043B     		subs	r3, r3, #4
 333:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 757              		.loc 1 333 10 view .LVU237
 758 0022 9942     		cmp	r1, r3
 334:lib/chibios/os/oslib/src/chmboxes.c ****       }
 759              		.loc 1 334 9 is_stmt 1 view .LVU238
 334:lib/chibios/os/oslib/src/chmboxes.c ****       }
 760              		.loc 1 334 31 is_stmt 0 view .LVU239
 761 0024 88BF     		it	hi
 762 0026 131F     		subhi	r3, r2, #4
 337:lib/chibios/os/oslib/src/chmboxes.c **** 
 763              		.loc 1 337 15 view .LVU240
 764 0028 0130     		adds	r0, r0, #1
 333:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 765              		.loc 1 333 10 view .LVU241
 766 002a E360     		str	r3, [r4, #12]
 336:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 767              		.loc 1 336 7 is_stmt 1 view .LVU242
 340:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 768              		.loc 1 340 7 is_stmt 0 view .LVU243
 769 002c 0021     		movs	r1, #0
 336:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 770              		.loc 1 336 19 view .LVU244
 771 002e 1E60     		str	r6, [r3]
 337:lib/chibios/os/oslib/src/chmboxes.c **** 
 772              		.loc 1 337 7 is_stmt 1 view .LVU245
 337:lib/chibios/os/oslib/src/chmboxes.c **** 
 773              		.loc 1 337 15 is_stmt 0 view .LVU246
 774 0030 2061     		str	r0, [r4, #16]
 340:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 775              		.loc 1 340 7 is_stmt 1 view .LVU247
 776 0032 04F12000 		add	r0, r4, #32
 777 0036 FFF7FEFF 		bl	chThdDequeueNextI
 778              	.LVL46:
 341:lib/chibios/os/oslib/src/chmboxes.c **** 
 779              		.loc 1 341 7 view .LVU248
 780 003a FFF7FEFF 		bl	chSchRescheduleS
 781              	.LVL47:
 343:lib/chibios/os/oslib/src/chmboxes.c ****     }
 782              		.loc 1 343 7 view .LVU249
 341:lib/chibios/os/oslib/src/chmboxes.c **** 
 783              		.loc 1 341 7 is_stmt 0 view .LVU250
 784 003e 0020     		movs	r0, #0
 785              	.L18:
 341:lib/chibios/os/oslib/src/chmboxes.c **** 
 786              		.loc 1 341 7 view .LVU251
 787              	.LBE164:
 788              	.LBE163:
 348:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 349:lib/chibios/os/oslib/src/chmboxes.c **** 
 350:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 351:lib/chibios/os/oslib/src/chmboxes.c **** }
 789              		.loc 1 351 1 view .LVU252
 790 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 791              	.LVL48:
 792              	.L20:
 347:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 793              		.loc 1 347 5 is_stmt 1 view .LVU253
 347:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 794              		.loc 1 347 14 is_stmt 0 view .LVU254
 795 0042 2946     		mov	r1, r5
 796 0044 3846     		mov	r0, r7
 797 0046 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 798              	.LVL49:
 348:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 799              		.loc 1 348 19 is_stmt 1 view .LVU255
 800 004a 0028     		cmp	r0, #0
 801 004c DED0     		beq	.L22
 802 004e F7E7     		b	.L18
 803              	.LVL50:
 804              	.L23:
 328:lib/chibios/os/oslib/src/chmboxes.c ****     }
 805              		.loc 1 328 14 is_stmt 0 view .LVU256
 806 0050 6FF00100 		mvn	r0, #1
 807 0054 F4E7     		b	.L18
 808              		.cfi_endproc
 809              	.LFE296:
 811              		.section	.text.chMBPostAheadTimeout,"ax",%progbits
 812              		.align	1
 813              		.global	chMBPostAheadTimeout
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 818              	chMBPostAheadTimeout:
 819              	.LVL51:
 820              	.LFB295:
 290:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 821              		.loc 1 290 78 is_stmt 1 view -0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 291:lib/chibios/os/oslib/src/chmboxes.c **** 
 825              		.loc 1 291 3 view .LVU258
 293:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBPostAheadTimeoutS(mbp, msg, timeout);
 826              		.loc 1 293 3 view .LVU259
 827              	.LBB165:
 828              	.LBI165:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 829              		.loc 4 355 20 view .LVU260
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 830              		.loc 4 357 3 view .LVU261
 831              	.LBB166:
 832              	.LBI166:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 833              		.loc 5 669 27 view .LVU262
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 834              		.loc 5 677 3 view .LVU263
 835              	.LBB167:
 836              	.LBI167:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 837              		.loc 6 491 27 view .LVU264
 838              	.LBB168:
 839              		.loc 6 493 3 view .LVU265
 840              	.LBE168:
 841              	.LBE167:
 842              	.LBE166:
 843              	.LBE165:
 290:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 844              		.loc 1 290 78 is_stmt 0 view .LVU266
 845 0000 08B5     		push	{r3, lr}
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 3, -8
 848              		.cfi_offset 14, -4
 849              	.LBB172:
 850              	.LBB171:
 851              	.LBB170:
 852              	.LBB169:
 853              		.loc 6 493 3 view .LVU267
 854 0002 2023     		movs	r3, #32
 855              		.syntax unified
 856              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 857 0004 83F31188 		MSR basepri, r3
 858              	@ 0 "" 2
 859              	.LVL52:
 860              		.loc 6 493 3 view .LVU268
 861              		.thumb
 862              		.syntax unified
 863              	.LBE169:
 864              	.LBE170:
 865              	.LBE171:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 866              		.loc 4 358 34 is_stmt 1 view .LVU269
 359:./lib/chibios/os/rt/include/chsys.h **** }
 867              		.loc 4 359 20 view .LVU270
 868              	.LBE172:
 294:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 869              		.loc 1 294 3 view .LVU271
 294:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 870              		.loc 1 294 12 is_stmt 0 view .LVU272
 871 0008 FFF7FEFF 		bl	chMBPostAheadTimeoutS
 872              	.LVL53:
 295:lib/chibios/os/oslib/src/chmboxes.c **** 
 873              		.loc 1 295 3 is_stmt 1 view .LVU273
 874              	.LBB173:
 875              	.LBI173:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 876              		.loc 4 367 20 view .LVU274
 877              	.LBB174:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 878              		.loc 4 369 22 view .LVU275
 370:./lib/chibios/os/rt/include/chsys.h **** 
 879              		.loc 4 370 33 view .LVU276
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 880              		.loc 4 376 3 view .LVU277
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 881              		.loc 4 376 3 view .LVU278
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 882              		.loc 4 376 3 view .LVU279
 883              		.loc 4 380 3 view .LVU280
 884              	.LBB175:
 885              	.LBI175:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 886              		.loc 5 693 27 view .LVU281
 887              		.loc 5 696 3 view .LVU282
 888              	.LBB176:
 889              	.LBI176:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 890              		.loc 6 491 27 view .LVU283
 891              	.LBB177:
 892              		.loc 6 493 3 view .LVU284
 893 000c 0023     		movs	r3, #0
 894              		.syntax unified
 895              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 896 000e 83F31188 		MSR basepri, r3
 897              	@ 0 "" 2
 898              	.LVL54:
 899              		.loc 6 493 3 is_stmt 0 view .LVU285
 900              		.thumb
 901              		.syntax unified
 902              	.LBE177:
 903              	.LBE176:
 904              	.LBE175:
 905              	.LBE174:
 906              	.LBE173:
 297:lib/chibios/os/oslib/src/chmboxes.c **** }
 907              		.loc 1 297 3 is_stmt 1 view .LVU286
 298:lib/chibios/os/oslib/src/chmboxes.c **** 
 908              		.loc 1 298 1 is_stmt 0 view .LVU287
 909 0012 08BD     		pop	{r3, pc}
 910              		.cfi_endproc
 911              	.LFE295:
 913              		.section	.text.chMBPostAheadI,"ax",%progbits
 914              		.align	1
 915              		.global	chMBPostAheadI
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 920              	chMBPostAheadI:
 921              	.LVL55:
 922              	.LFB297:
 352:lib/chibios/os/oslib/src/chmboxes.c **** 
 353:lib/chibios/os/oslib/src/chmboxes.c **** /**
 354:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 355:lib/chibios/os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 356:lib/chibios/os/oslib/src/chmboxes.c ****  *          condition if the queue is full.
 357:lib/chibios/os/oslib/src/chmboxes.c ****  *
 358:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 359:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 360:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 361:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 362:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 363:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is full and the message cannot be
 364:lib/chibios/os/oslib/src/chmboxes.c ****  *                      posted.
 365:lib/chibios/os/oslib/src/chmboxes.c ****  *
 366:lib/chibios/os/oslib/src/chmboxes.c ****  * @iclass
 367:lib/chibios/os/oslib/src/chmboxes.c ****  */
 368:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostAheadI(mailbox_t *mbp, msg_t msg) {
 923              		.loc 1 368 49 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 369:lib/chibios/os/oslib/src/chmboxes.c **** 
 370:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 927              		.loc 1 370 21 view .LVU289
 371:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 928              		.loc 1 371 3 view .LVU290
 929              		.loc 1 371 3 view .LVU291
 930              		.loc 1 371 3 view .LVU292
 372:lib/chibios/os/oslib/src/chmboxes.c **** 
 373:lib/chibios/os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 374:lib/chibios/os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 931              		.loc 1 374 3 view .LVU293
 368:lib/chibios/os/oslib/src/chmboxes.c **** 
 932              		.loc 1 368 49 is_stmt 0 view .LVU294
 933 0000 38B5     		push	{r3, r4, r5, lr}
 934              		.cfi_def_cfa_offset 16
 935              		.cfi_offset 3, -16
 936              		.cfi_offset 4, -12
 937              		.cfi_offset 5, -8
 938              		.cfi_offset 14, -4
 939              		.loc 1 374 6 view .LVU295
 940 0002 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 941 0004 B3B9     		cbnz	r3, .L30
 375:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_RESET;
 376:lib/chibios/os/oslib/src/chmboxes.c ****   }
 377:lib/chibios/os/oslib/src/chmboxes.c **** 
 378:lib/chibios/os/oslib/src/chmboxes.c ****   /* Is there a free message slot in queue? if so then post.*/
 379:lib/chibios/os/oslib/src/chmboxes.c ****   if (chMBGetFreeCountI(mbp) > (size_t)0) {
 942              		.loc 1 379 3 is_stmt 1 view .LVU296
 943              	.LVL56:
 944              	.LBB184:
 945              	.LBI184:
 167:./lib/chibios/os/oslib/include/chmboxes.h **** 
 946              		.loc 7 167 22 view .LVU297
 169:./lib/chibios/os/oslib/include/chmboxes.h **** 
 947              		.loc 7 169 21 view .LVU298
 948              		.loc 7 171 3 view .LVU299
 949              	.LBB185:
 950              	.LBI185:
 136:./lib/chibios/os/oslib/include/chmboxes.h **** 
 951              		.loc 7 136 22 view .LVU300
 952              	.LBB186:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 953              		.loc 7 140 3 view .LVU301
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 954              		.loc 7 140 33 is_stmt 0 view .LVU302
 955 0006 D0E90054 		ldrd	r5, r4, [r0]
 956              	.LVL57:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 957              		.loc 7 140 33 view .LVU303
 958              	.LBE186:
 959              	.LBE185:
 960              	.LBB188:
 961              	.LBI188:
 152:./lib/chibios/os/oslib/include/chmboxes.h **** 
 962              		.loc 7 152 22 is_stmt 1 view .LVU304
 963              	.LBB189:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 964              		.loc 7 154 21 view .LVU305
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 965              		.loc 7 156 3 view .LVU306
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 966              		.loc 7 156 13 is_stmt 0 view .LVU307
 967 000a 0269     		ldr	r2, [r0, #16]
 968              	.LVL58:
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 969              		.loc 7 156 13 view .LVU308
 970              	.LBE189:
 971              	.LBE188:
 972              	.LBB190:
 973              	.LBB187:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 974              		.loc 7 140 28 view .LVU309
 975 000c 631B     		subs	r3, r4, r5
 976              	.LBE187:
 977              	.LBE190:
 978              	.LBE184:
 979              		.loc 1 379 6 view .LVU310
 980 000e B2EBA30F 		cmp	r2, r3, asr #2
 981 0012 12D0     		beq	.L31
 380:lib/chibios/os/oslib/src/chmboxes.c ****     if (--mbp->rdptr < mbp->buffer) {
 982              		.loc 1 380 5 is_stmt 1 view .LVU311
 983              		.loc 1 380 9 is_stmt 0 view .LVU312
 984 0014 C368     		ldr	r3, [r0, #12]
 985 0016 043B     		subs	r3, r3, #4
 986              		.loc 1 380 8 view .LVU313
 987 0018 AB42     		cmp	r3, r5
 381:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->rdptr = mbp->top - 1;
 988              		.loc 1 381 7 is_stmt 1 view .LVU314
 989              		.loc 1 381 29 is_stmt 0 view .LVU315
 990 001a 38BF     		it	cc
 991 001c 231F     		subcc	r3, r4, #4
 382:lib/chibios/os/oslib/src/chmboxes.c ****     }
 383:lib/chibios/os/oslib/src/chmboxes.c ****     *mbp->rdptr = msg;
 384:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt++;
 992              		.loc 1 384 13 view .LVU316
 993 001e 0132     		adds	r2, r2, #1
 380:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->rdptr = mbp->top - 1;
 994              		.loc 1 380 8 view .LVU317
 995 0020 C360     		str	r3, [r0, #12]
 383:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt++;
 996              		.loc 1 383 5 is_stmt 1 view .LVU318
 383:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt++;
 997              		.loc 1 383 17 is_stmt 0 view .LVU319
 998 0022 1960     		str	r1, [r3]
 999              		.loc 1 384 5 is_stmt 1 view .LVU320
 385:lib/chibios/os/oslib/src/chmboxes.c **** 
 386:lib/chibios/os/oslib/src/chmboxes.c ****     /* If there is a reader waiting then makes it ready.*/
 387:lib/chibios/os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qr, MSG_OK);
 1000              		.loc 1 387 5 is_stmt 0 view .LVU321
 1001 0024 2030     		adds	r0, r0, #32
 1002              	.LVL59:
 384:lib/chibios/os/oslib/src/chmboxes.c **** 
 1003              		.loc 1 384 13 view .LVU322
 1004 0026 40F8102C 		str	r2, [r0, #-16]
 1005              		.loc 1 387 5 is_stmt 1 view .LVU323
 1006 002a 0021     		movs	r1, #0
 1007              	.LVL60:
 1008              		.loc 1 387 5 is_stmt 0 view .LVU324
 1009 002c FFF7FEFF 		bl	chThdDequeueNextI
 1010              	.LVL61:
 388:lib/chibios/os/oslib/src/chmboxes.c **** 
 389:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_OK;
 1011              		.loc 1 389 5 is_stmt 1 view .LVU325
 1012              		.loc 1 389 12 is_stmt 0 view .LVU326
 1013 0030 0020     		movs	r0, #0
 1014              	.L27:
 390:lib/chibios/os/oslib/src/chmboxes.c ****   }
 391:lib/chibios/os/oslib/src/chmboxes.c **** 
 392:lib/chibios/os/oslib/src/chmboxes.c ****   /* No space, immediate timeout.*/
 393:lib/chibios/os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 394:lib/chibios/os/oslib/src/chmboxes.c **** }
 1015              		.loc 1 394 1 view .LVU327
 1016 0032 38BD     		pop	{r3, r4, r5, pc}
 1017              	.LVL62:
 1018              	.L30:
 375:lib/chibios/os/oslib/src/chmboxes.c ****   }
 1019              		.loc 1 375 12 view .LVU328
 1020 0034 6FF00100 		mvn	r0, #1
 1021              	.LVL63:
 375:lib/chibios/os/oslib/src/chmboxes.c ****   }
 1022              		.loc 1 375 12 view .LVU329
 1023 0038 FBE7     		b	.L27
 1024              	.LVL64:
 1025              	.L31:
 393:lib/chibios/os/oslib/src/chmboxes.c **** }
 1026              		.loc 1 393 10 view .LVU330
 1027 003a 4FF0FF30 		mov	r0, #-1
 1028              	.LVL65:
 393:lib/chibios/os/oslib/src/chmboxes.c **** }
 1029              		.loc 1 393 10 view .LVU331
 1030 003e F8E7     		b	.L27
 1031              		.cfi_endproc
 1032              	.LFE297:
 1034              		.section	.text.chMBFetchTimeoutS,"ax",%progbits
 1035              		.align	1
 1036              		.global	chMBFetchTimeoutS
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1041              	chMBFetchTimeoutS:
 1042              	.LVL66:
 1043              	.LFB299:
 395:lib/chibios/os/oslib/src/chmboxes.c **** 
 396:lib/chibios/os/oslib/src/chmboxes.c **** /**
 397:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 398:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a message is posted in the mailbox
 399:lib/chibios/os/oslib/src/chmboxes.c ****  *          or the specified time runs out.
 400:lib/chibios/os/oslib/src/chmboxes.c ****  *
 401:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 402:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 403:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 404:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 405:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 406:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 407:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 408:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 409:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 410:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 411:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 412:lib/chibios/os/oslib/src/chmboxes.c ****  *
 413:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 414:lib/chibios/os/oslib/src/chmboxes.c ****  */
 415:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBFetchTimeout(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout) {
 416:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 417:lib/chibios/os/oslib/src/chmboxes.c **** 
 418:lib/chibios/os/oslib/src/chmboxes.c ****   chSysLock();
 419:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBFetchTimeoutS(mbp, msgp, timeout);
 420:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 421:lib/chibios/os/oslib/src/chmboxes.c **** 
 422:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 423:lib/chibios/os/oslib/src/chmboxes.c **** }
 424:lib/chibios/os/oslib/src/chmboxes.c **** 
 425:lib/chibios/os/oslib/src/chmboxes.c **** /**
 426:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 427:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a message is posted in the mailbox
 428:lib/chibios/os/oslib/src/chmboxes.c ****  *          or the specified time runs out.
 429:lib/chibios/os/oslib/src/chmboxes.c ****  *
 430:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 431:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 432:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 433:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 434:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 435:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 436:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 437:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 438:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 439:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 440:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 441:lib/chibios/os/oslib/src/chmboxes.c ****  *
 442:lib/chibios/os/oslib/src/chmboxes.c ****  * @sclass
 443:lib/chibios/os/oslib/src/chmboxes.c ****  */
 444:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBFetchTimeoutS(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout) {
 1044              		.loc 1 444 77 is_stmt 1 view -0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 445:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1048              		.loc 1 445 3 view .LVU333
 446:lib/chibios/os/oslib/src/chmboxes.c **** 
 447:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 1049              		.loc 1 447 21 view .LVU334
 448:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (msgp != NULL));
 1050              		.loc 1 448 3 view .LVU335
 1051              		.loc 1 448 3 view .LVU336
 444:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1052              		.loc 1 444 77 is_stmt 0 view .LVU337
 1053 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1054              		.cfi_def_cfa_offset 24
 1055              		.cfi_offset 3, -24
 1056              		.cfi_offset 4, -20
 1057              		.cfi_offset 5, -16
 1058              		.cfi_offset 6, -12
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 444:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1061              		.loc 1 444 77 view .LVU338
 1062 0002 0446     		mov	r4, r0
 1063 0004 0E46     		mov	r6, r1
 1064 0006 1546     		mov	r5, r2
 449:lib/chibios/os/oslib/src/chmboxes.c **** 
 450:lib/chibios/os/oslib/src/chmboxes.c ****   do {
 451:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 452:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 453:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 454:lib/chibios/os/oslib/src/chmboxes.c ****     }
 455:lib/chibios/os/oslib/src/chmboxes.c **** 
 456:lib/chibios/os/oslib/src/chmboxes.c ****     /* Is there a message in queue? if so then fetch.*/
 457:lib/chibios/os/oslib/src/chmboxes.c ****     if (chMBGetUsedCountI(mbp) > (size_t)0) {
 458:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 459:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 460:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->buffer;
 461:lib/chibios/os/oslib/src/chmboxes.c ****       }
 462:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt--;
 463:lib/chibios/os/oslib/src/chmboxes.c **** 
 464:lib/chibios/os/oslib/src/chmboxes.c ****       /* If there is a writer waiting then makes it ready.*/
 465:lib/chibios/os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qw, MSG_OK);
 466:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 467:lib/chibios/os/oslib/src/chmboxes.c **** 
 468:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_OK;
 469:lib/chibios/os/oslib/src/chmboxes.c ****     }
 470:lib/chibios/os/oslib/src/chmboxes.c **** 
 471:lib/chibios/os/oslib/src/chmboxes.c ****     /* No message in the queue, waiting for a message to become available.*/
 472:lib/chibios/os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qr, timeout);
 1065              		.loc 1 472 14 view .LVU339
 1066 0008 00F12007 		add	r7, r0, #32
 1067              	.LVL67:
 1068              	.L36:
 448:lib/chibios/os/oslib/src/chmboxes.c **** 
 1069              		.loc 1 448 3 is_stmt 1 discriminator 7 view .LVU340
 450:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 1070              		.loc 1 450 3 discriminator 7 view .LVU341
 452:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 1071              		.loc 1 452 5 discriminator 7 view .LVU342
 452:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 1072              		.loc 1 452 8 is_stmt 0 discriminator 7 view .LVU343
 1073 000c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1074 000e EBB9     		cbnz	r3, .L37
 457:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1075              		.loc 1 457 5 is_stmt 1 view .LVU344
 1076              	.LVL68:
 1077              	.LBB191:
 1078              	.LBI191:
 152:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1079              		.loc 7 152 22 view .LVU345
 1080              	.LBB192:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1081              		.loc 7 154 21 view .LVU346
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1082              		.loc 7 156 3 view .LVU347
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1083              		.loc 7 156 13 is_stmt 0 view .LVU348
 1084 0010 2369     		ldr	r3, [r4, #16]
 1085              	.LVL69:
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1086              		.loc 7 156 13 view .LVU349
 1087              	.LBE192:
 1088              	.LBE191:
 457:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1089              		.loc 1 457 8 view .LVU350
 1090 0012 A3B1     		cbz	r3, .L34
 458:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1091              		.loc 1 458 7 is_stmt 1 view .LVU351
 458:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1092              		.loc 1 458 19 is_stmt 0 view .LVU352
 1093 0014 E168     		ldr	r1, [r4, #12]
 458:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1094              		.loc 1 458 26 view .LVU353
 1095 0016 0A1D     		adds	r2, r1, #4
 458:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1096              		.loc 1 458 15 view .LVU354
 1097 0018 0968     		ldr	r1, [r1]
 458:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1098              		.loc 1 458 26 view .LVU355
 1099 001a E260     		str	r2, [r4, #12]
 458:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1100              		.loc 1 458 13 view .LVU356
 1101 001c 3160     		str	r1, [r6]
 459:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->buffer;
 1102              		.loc 1 459 7 is_stmt 1 view .LVU357
 459:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->buffer;
 1103              		.loc 1 459 10 is_stmt 0 view .LVU358
 1104 001e 6168     		ldr	r1, [r4, #4]
 1105 0020 8A42     		cmp	r2, r1
 460:lib/chibios/os/oslib/src/chmboxes.c ****       }
 1106              		.loc 1 460 9 is_stmt 1 view .LVU359
 460:lib/chibios/os/oslib/src/chmboxes.c ****       }
 1107              		.loc 1 460 20 is_stmt 0 view .LVU360
 1108 0022 24BF     		itt	cs
 1109 0024 2268     		ldrcs	r2, [r4]
 1110 0026 E260     		strcs	r2, [r4, #12]
 462:lib/chibios/os/oslib/src/chmboxes.c **** 
 1111              		.loc 1 462 7 is_stmt 1 view .LVU361
 462:lib/chibios/os/oslib/src/chmboxes.c **** 
 1112              		.loc 1 462 15 is_stmt 0 view .LVU362
 1113 0028 013B     		subs	r3, r3, #1
 465:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 1114              		.loc 1 465 7 view .LVU363
 1115 002a 04F11800 		add	r0, r4, #24
 462:lib/chibios/os/oslib/src/chmboxes.c **** 
 1116              		.loc 1 462 15 view .LVU364
 1117 002e 2361     		str	r3, [r4, #16]
 465:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 1118              		.loc 1 465 7 is_stmt 1 view .LVU365
 1119 0030 0021     		movs	r1, #0
 1120 0032 FFF7FEFF 		bl	chThdDequeueNextI
 1121              	.LVL70:
 466:lib/chibios/os/oslib/src/chmboxes.c **** 
 1122              		.loc 1 466 7 view .LVU366
 1123 0036 FFF7FEFF 		bl	chSchRescheduleS
 1124              	.LVL71:
 468:lib/chibios/os/oslib/src/chmboxes.c ****     }
 1125              		.loc 1 468 7 view .LVU367
 468:lib/chibios/os/oslib/src/chmboxes.c ****     }
 1126              		.loc 1 468 14 is_stmt 0 view .LVU368
 1127 003a 0020     		movs	r0, #0
 1128              	.L32:
 473:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 474:lib/chibios/os/oslib/src/chmboxes.c **** 
 475:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 476:lib/chibios/os/oslib/src/chmboxes.c **** }
 1129              		.loc 1 476 1 view .LVU369
 1130 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1131              	.LVL72:
 1132              	.L34:
 472:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 1133              		.loc 1 472 5 is_stmt 1 view .LVU370
 472:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 1134              		.loc 1 472 14 is_stmt 0 view .LVU371
 1135 003e 2946     		mov	r1, r5
 1136 0040 3846     		mov	r0, r7
 1137 0042 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 1138              	.LVL73:
 473:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 1139              		.loc 1 473 19 is_stmt 1 view .LVU372
 1140 0046 0028     		cmp	r0, #0
 1141 0048 E0D0     		beq	.L36
 1142 004a F7E7     		b	.L32
 1143              	.LVL74:
 1144              	.L37:
 453:lib/chibios/os/oslib/src/chmboxes.c ****     }
 1145              		.loc 1 453 14 is_stmt 0 view .LVU373
 1146 004c 6FF00100 		mvn	r0, #1
 1147 0050 F4E7     		b	.L32
 1148              		.cfi_endproc
 1149              	.LFE299:
 1151              		.section	.text.chMBFetchTimeout,"ax",%progbits
 1152              		.align	1
 1153              		.global	chMBFetchTimeout
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1158              	chMBFetchTimeout:
 1159              	.LVL75:
 1160              	.LFB298:
 415:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1161              		.loc 1 415 76 is_stmt 1 view -0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 416:lib/chibios/os/oslib/src/chmboxes.c **** 
 1165              		.loc 1 416 3 view .LVU375
 418:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBFetchTimeoutS(mbp, msgp, timeout);
 1166              		.loc 1 418 3 view .LVU376
 1167              	.LBB193:
 1168              	.LBI193:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1169              		.loc 4 355 20 view .LVU377
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1170              		.loc 4 357 3 view .LVU378
 1171              	.LBB194:
 1172              	.LBI194:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1173              		.loc 5 669 27 view .LVU379
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1174              		.loc 5 677 3 view .LVU380
 1175              	.LBB195:
 1176              	.LBI195:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1177              		.loc 6 491 27 view .LVU381
 1178              	.LBB196:
 1179              		.loc 6 493 3 view .LVU382
 1180              	.LBE196:
 1181              	.LBE195:
 1182              	.LBE194:
 1183              	.LBE193:
 415:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1184              		.loc 1 415 76 is_stmt 0 view .LVU383
 1185 0000 08B5     		push	{r3, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 3, -8
 1188              		.cfi_offset 14, -4
 1189              	.LBB200:
 1190              	.LBB199:
 1191              	.LBB198:
 1192              	.LBB197:
 1193              		.loc 6 493 3 view .LVU384
 1194 0002 2023     		movs	r3, #32
 1195              		.syntax unified
 1196              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1197 0004 83F31188 		MSR basepri, r3
 1198              	@ 0 "" 2
 1199              	.LVL76:
 1200              		.loc 6 493 3 view .LVU385
 1201              		.thumb
 1202              		.syntax unified
 1203              	.LBE197:
 1204              	.LBE198:
 1205              	.LBE199:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1206              		.loc 4 358 34 is_stmt 1 view .LVU386
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1207              		.loc 4 359 20 view .LVU387
 1208              	.LBE200:
 419:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 1209              		.loc 1 419 3 view .LVU388
 419:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 1210              		.loc 1 419 12 is_stmt 0 view .LVU389
 1211 0008 FFF7FEFF 		bl	chMBFetchTimeoutS
 1212              	.LVL77:
 420:lib/chibios/os/oslib/src/chmboxes.c **** 
 1213              		.loc 1 420 3 is_stmt 1 view .LVU390
 1214              	.LBB201:
 1215              	.LBI201:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1216              		.loc 4 367 20 view .LVU391
 1217              	.LBB202:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1218              		.loc 4 369 22 view .LVU392
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1219              		.loc 4 370 33 view .LVU393
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1220              		.loc 4 376 3 view .LVU394
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1221              		.loc 4 376 3 view .LVU395
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1222              		.loc 4 376 3 view .LVU396
 1223              		.loc 4 380 3 view .LVU397
 1224              	.LBB203:
 1225              	.LBI203:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1226              		.loc 5 693 27 view .LVU398
 1227              		.loc 5 696 3 view .LVU399
 1228              	.LBB204:
 1229              	.LBI204:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1230              		.loc 6 491 27 view .LVU400
 1231              	.LBB205:
 1232              		.loc 6 493 3 view .LVU401
 1233 000c 0023     		movs	r3, #0
 1234              		.syntax unified
 1235              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1236 000e 83F31188 		MSR basepri, r3
 1237              	@ 0 "" 2
 1238              	.LVL78:
 1239              		.loc 6 493 3 is_stmt 0 view .LVU402
 1240              		.thumb
 1241              		.syntax unified
 1242              	.LBE205:
 1243              	.LBE204:
 1244              	.LBE203:
 1245              	.LBE202:
 1246              	.LBE201:
 422:lib/chibios/os/oslib/src/chmboxes.c **** }
 1247              		.loc 1 422 3 is_stmt 1 view .LVU403
 423:lib/chibios/os/oslib/src/chmboxes.c **** 
 1248              		.loc 1 423 1 is_stmt 0 view .LVU404
 1249 0012 08BD     		pop	{r3, pc}
 1250              		.cfi_endproc
 1251              	.LFE298:
 1253              		.section	.text.chMBFetchI,"ax",%progbits
 1254              		.align	1
 1255              		.global	chMBFetchI
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1260              	chMBFetchI:
 1261              	.LVL79:
 1262              	.LFB300:
 477:lib/chibios/os/oslib/src/chmboxes.c **** 
 478:lib/chibios/os/oslib/src/chmboxes.c **** /**
 479:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 480:lib/chibios/os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 481:lib/chibios/os/oslib/src/chmboxes.c ****  *          condition if the queue is empty.
 482:lib/chibios/os/oslib/src/chmboxes.c ****  *
 483:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 484:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 485:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 486:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 487:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 488:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is empty and a message cannot be
 489:lib/chibios/os/oslib/src/chmboxes.c ****  *                      fetched.
 490:lib/chibios/os/oslib/src/chmboxes.c ****  *
 491:lib/chibios/os/oslib/src/chmboxes.c ****  * @iclass
 492:lib/chibios/os/oslib/src/chmboxes.c ****  */
 493:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBFetchI(mailbox_t *mbp, msg_t *msgp) {
 1263              		.loc 1 493 47 is_stmt 1 view -0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 494:lib/chibios/os/oslib/src/chmboxes.c **** 
 495:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 1267              		.loc 1 495 21 view .LVU406
 496:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (msgp != NULL));
 1268              		.loc 1 496 3 view .LVU407
 1269              		.loc 1 496 3 view .LVU408
 1270              		.loc 1 496 3 view .LVU409
 497:lib/chibios/os/oslib/src/chmboxes.c **** 
 498:lib/chibios/os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 499:lib/chibios/os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 1271              		.loc 1 499 3 view .LVU410
 1272              		.loc 1 499 6 is_stmt 0 view .LVU411
 1273 0000 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 493:lib/chibios/os/oslib/src/chmboxes.c **** 
 1274              		.loc 1 493 47 view .LVU412
 1275 0002 10B5     		push	{r4, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 4, -8
 1278              		.cfi_offset 14, -4
 1279              		.loc 1 499 6 view .LVU413
 1280 0004 9BB9     		cbnz	r3, .L44
 500:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_RESET;
 501:lib/chibios/os/oslib/src/chmboxes.c ****   }
 502:lib/chibios/os/oslib/src/chmboxes.c **** 
 503:lib/chibios/os/oslib/src/chmboxes.c ****   /* Is there a message in queue? if so then fetch.*/
 504:lib/chibios/os/oslib/src/chmboxes.c ****   if (chMBGetUsedCountI(mbp) > (size_t)0) {
 1281              		.loc 1 504 3 is_stmt 1 view .LVU414
 1282              	.LVL80:
 1283              	.LBB206:
 1284              	.LBI206:
 152:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1285              		.loc 7 152 22 view .LVU415
 1286              	.LBB207:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1287              		.loc 7 154 21 view .LVU416
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1288              		.loc 7 156 3 view .LVU417
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1289              		.loc 7 156 13 is_stmt 0 view .LVU418
 1290 0006 0369     		ldr	r3, [r0, #16]
 1291              	.LVL81:
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1292              		.loc 7 156 13 view .LVU419
 1293              	.LBE207:
 1294              	.LBE206:
 1295              		.loc 1 504 6 view .LVU420
 1296 0008 A3B1     		cbz	r3, .L45
 505:lib/chibios/os/oslib/src/chmboxes.c ****     *msgp = *mbp->rdptr++;
 1297              		.loc 1 505 5 is_stmt 1 view .LVU421
 1298              		.loc 1 505 17 is_stmt 0 view .LVU422
 1299 000a C468     		ldr	r4, [r0, #12]
 1300              		.loc 1 505 24 view .LVU423
 1301 000c 221D     		adds	r2, r4, #4
 1302              		.loc 1 505 13 view .LVU424
 1303 000e 2468     		ldr	r4, [r4]
 1304              		.loc 1 505 24 view .LVU425
 1305 0010 C260     		str	r2, [r0, #12]
 1306              		.loc 1 505 11 view .LVU426
 1307 0012 0C60     		str	r4, [r1]
 506:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->rdptr >= mbp->top) {
 1308              		.loc 1 506 5 is_stmt 1 view .LVU427
 1309              		.loc 1 506 8 is_stmt 0 view .LVU428
 1310 0014 4168     		ldr	r1, [r0, #4]
 1311              	.LVL82:
 1312              		.loc 1 506 8 view .LVU429
 1313 0016 8A42     		cmp	r2, r1
 507:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->rdptr = mbp->buffer;
 1314              		.loc 1 507 7 is_stmt 1 view .LVU430
 1315              		.loc 1 507 18 is_stmt 0 view .LVU431
 1316 0018 24BF     		itt	cs
 1317 001a 0268     		ldrcs	r2, [r0]
 1318 001c C260     		strcs	r2, [r0, #12]
 508:lib/chibios/os/oslib/src/chmboxes.c ****     }
 509:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt--;
 1319              		.loc 1 509 5 is_stmt 1 view .LVU432
 1320              		.loc 1 509 13 is_stmt 0 view .LVU433
 1321 001e 013B     		subs	r3, r3, #1
 1322 0020 0361     		str	r3, [r0, #16]
 510:lib/chibios/os/oslib/src/chmboxes.c **** 
 511:lib/chibios/os/oslib/src/chmboxes.c ****     /* If there is a writer waiting then makes it ready.*/
 512:lib/chibios/os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qw, MSG_OK);
 1323              		.loc 1 512 5 is_stmt 1 view .LVU434
 1324 0022 0021     		movs	r1, #0
 1325 0024 1830     		adds	r0, r0, #24
 1326              	.LVL83:
 1327              		.loc 1 512 5 is_stmt 0 view .LVU435
 1328 0026 FFF7FEFF 		bl	chThdDequeueNextI
 1329              	.LVL84:
 513:lib/chibios/os/oslib/src/chmboxes.c **** 
 514:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_OK;
 1330              		.loc 1 514 5 is_stmt 1 view .LVU436
 1331              		.loc 1 514 12 is_stmt 0 view .LVU437
 1332 002a 0020     		movs	r0, #0
 1333              	.L41:
 515:lib/chibios/os/oslib/src/chmboxes.c ****   }
 516:lib/chibios/os/oslib/src/chmboxes.c **** 
 517:lib/chibios/os/oslib/src/chmboxes.c ****   /* No message, immediate timeout.*/
 518:lib/chibios/os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 519:lib/chibios/os/oslib/src/chmboxes.c **** }
 1334              		.loc 1 519 1 view .LVU438
 1335 002c 10BD     		pop	{r4, pc}
 1336              	.LVL85:
 1337              	.L44:
 500:lib/chibios/os/oslib/src/chmboxes.c ****   }
 1338              		.loc 1 500 12 view .LVU439
 1339 002e 6FF00100 		mvn	r0, #1
 1340              	.LVL86:
 500:lib/chibios/os/oslib/src/chmboxes.c ****   }
 1341              		.loc 1 500 12 view .LVU440
 1342 0032 FBE7     		b	.L41
 1343              	.LVL87:
 1344              	.L45:
 518:lib/chibios/os/oslib/src/chmboxes.c **** }
 1345              		.loc 1 518 10 view .LVU441
 1346 0034 4FF0FF30 		mov	r0, #-1
 1347              	.LVL88:
 518:lib/chibios/os/oslib/src/chmboxes.c **** }
 1348              		.loc 1 518 10 view .LVU442
 1349 0038 F8E7     		b	.L41
 1350              		.cfi_endproc
 1351              	.LFE300:
 1353              		.text
 1354              	.Letext0:
 1355              		.file 8 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 1356              		.file 9 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1357              		.file 10 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1358              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1359              		.file 12 "./lib/chibios/os/rt/include/chsystypes.h"
 1360              		.file 13 "./lib/chibios/os/rt/include/chschd.h"
 1361              		.file 14 "./lib/chibios/os/rt/include/chtime.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chmboxes.c
     /tmp/cchl9FgW.s:21     .text.chMBObjectInit:0000000000000000 $t
     /tmp/cchl9FgW.s:27     .text.chMBObjectInit:0000000000000000 chMBObjectInit
     /tmp/cchl9FgW.s:130    .text.chMBResetI:0000000000000000 $t
     /tmp/cchl9FgW.s:136    .text.chMBResetI:0000000000000000 chMBResetI
     /tmp/cchl9FgW.s:192    .text.chMBReset:0000000000000000 $t
     /tmp/cchl9FgW.s:198    .text.chMBReset:0000000000000000 chMBReset
     /tmp/cchl9FgW.s:297    .text.chMBPostTimeoutS:0000000000000000 $t
     /tmp/cchl9FgW.s:303    .text.chMBPostTimeoutS:0000000000000000 chMBPostTimeoutS
     /tmp/cchl9FgW.s:444    .text.chMBPostTimeout:0000000000000000 $t
     /tmp/cchl9FgW.s:450    .text.chMBPostTimeout:0000000000000000 chMBPostTimeout
     /tmp/cchl9FgW.s:546    .text.chMBPostI:0000000000000000 $t
     /tmp/cchl9FgW.s:552    .text.chMBPostI:0000000000000000 chMBPostI
     /tmp/cchl9FgW.s:667    .text.chMBPostAheadTimeoutS:0000000000000000 $t
     /tmp/cchl9FgW.s:673    .text.chMBPostAheadTimeoutS:0000000000000000 chMBPostAheadTimeoutS
     /tmp/cchl9FgW.s:812    .text.chMBPostAheadTimeout:0000000000000000 $t
     /tmp/cchl9FgW.s:818    .text.chMBPostAheadTimeout:0000000000000000 chMBPostAheadTimeout
     /tmp/cchl9FgW.s:914    .text.chMBPostAheadI:0000000000000000 $t
     /tmp/cchl9FgW.s:920    .text.chMBPostAheadI:0000000000000000 chMBPostAheadI
     /tmp/cchl9FgW.s:1035   .text.chMBFetchTimeoutS:0000000000000000 $t
     /tmp/cchl9FgW.s:1041   .text.chMBFetchTimeoutS:0000000000000000 chMBFetchTimeoutS
     /tmp/cchl9FgW.s:1152   .text.chMBFetchTimeout:0000000000000000 $t
     /tmp/cchl9FgW.s:1158   .text.chMBFetchTimeout:0000000000000000 chMBFetchTimeout
     /tmp/cchl9FgW.s:1254   .text.chMBFetchI:0000000000000000 $t
     /tmp/cchl9FgW.s:1260   .text.chMBFetchI:0000000000000000 chMBFetchI

UNDEFINED SYMBOLS
chThdDequeueAllI
chSchRescheduleS
chThdDequeueNextI
chThdEnqueueTimeoutS
