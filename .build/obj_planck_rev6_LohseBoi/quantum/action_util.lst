   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"action_util.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "quantum/action_util.c"
  20              		.section	.text.add_key,"ax",%progbits
  21              		.align	1
  22              		.global	add_key
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	add_key:
  28              	.LVL0:
  29              	.LFB330:
  30              		.file 2 "quantum/action_util.h"
   1:quantum/action_util.h **** /*
   2:quantum/action_util.h **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.h **** 
   4:quantum/action_util.h **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.h **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.h **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.h **** (at your option) any later version.
   8:quantum/action_util.h **** 
   9:quantum/action_util.h **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.h **** GNU General Public License for more details.
  13:quantum/action_util.h **** 
  14:quantum/action_util.h **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.h **** */
  17:quantum/action_util.h **** 
  18:quantum/action_util.h **** #pragma once
  19:quantum/action_util.h **** 
  20:quantum/action_util.h **** #include <stdint.h>
  21:quantum/action_util.h **** #include "report.h"
  22:quantum/action_util.h **** 
  23:quantum/action_util.h **** #ifdef __cplusplus
  24:quantum/action_util.h **** extern "C" {
  25:quantum/action_util.h **** #endif
  26:quantum/action_util.h **** 
  27:quantum/action_util.h **** extern report_keyboard_t *keyboard_report;
  28:quantum/action_util.h **** 
  29:quantum/action_util.h **** void send_keyboard_report(void);
  30:quantum/action_util.h **** 
  31:quantum/action_util.h **** /* key */
  32:quantum/action_util.h **** inline void add_key(uint8_t key) { add_key_to_report(keyboard_report, key); }
  31              		.loc 2 32 34 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              		.loc 2 32 36 view .LVU1
  37 0000 024B     		ldr	r3, .L2
  38              		.loc 2 32 34 is_stmt 0 view .LVU2
  39 0002 0146     		mov	r1, r0
  40              		.loc 2 32 36 view .LVU3
  41 0004 1868     		ldr	r0, [r3]
  42              	.LVL1:
  43              		.loc 2 32 36 view .LVU4
  44 0006 FFF7FEBF 		b	add_key_to_report
  45              	.LVL2:
  46              	.L3:
  47 000a 00BF     		.align	2
  48              	.L2:
  49 000c 00000000 		.word	keyboard_report
  50              		.cfi_endproc
  51              	.LFE330:
  53              		.section	.text.del_key,"ax",%progbits
  54              		.align	1
  55              		.global	del_key
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	del_key:
  61              	.LVL3:
  62              	.LFB331:
  33:quantum/action_util.h **** 
  34:quantum/action_util.h **** inline void del_key(uint8_t key) { del_key_from_report(keyboard_report, key); }
  63              		.loc 2 34 34 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              		.loc 2 34 36 view .LVU6
  69 0000 024B     		ldr	r3, .L5
  70              		.loc 2 34 34 is_stmt 0 view .LVU7
  71 0002 0146     		mov	r1, r0
  72              		.loc 2 34 36 view .LVU8
  73 0004 1868     		ldr	r0, [r3]
  74              	.LVL4:
  75              		.loc 2 34 36 view .LVU9
  76 0006 FFF7FEBF 		b	del_key_from_report
  77              	.LVL5:
  78              	.L6:
  79 000a 00BF     		.align	2
  80              	.L5:
  81 000c 00000000 		.word	keyboard_report
  82              		.cfi_endproc
  83              	.LFE331:
  85              		.section	.text.clear_keys,"ax",%progbits
  86              		.align	1
  87              		.global	clear_keys
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	clear_keys:
  93              	.LFB332:
  35:quantum/action_util.h **** 
  36:quantum/action_util.h **** inline void clear_keys(void) { clear_keys_from_report(keyboard_report); }
  94              		.loc 2 36 30 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99              		.loc 2 36 32 view .LVU11
 100 0000 014B     		ldr	r3, .L8
 101 0002 1868     		ldr	r0, [r3]
 102 0004 FFF7FEBF 		b	clear_keys_from_report
 103              	.LVL6:
 104              	.L9:
 105              		.align	2
 106              	.L8:
 107 0008 00000000 		.word	keyboard_report
 108              		.cfi_endproc
 109              	.LFE332:
 111              		.section	.text.get_oneshot_locked_mods,"ax",%progbits
 112              		.align	1
 113              		.global	get_oneshot_locked_mods
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	get_oneshot_locked_mods:
 119              	.LFB338:
   1:quantum/action_util.c **** /*
   2:quantum/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.c **** 
   4:quantum/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.c **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.c **** (at your option) any later version.
   8:quantum/action_util.c **** 
   9:quantum/action_util.c **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.c **** GNU General Public License for more details.
  13:quantum/action_util.c **** 
  14:quantum/action_util.c **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.c **** */
  17:quantum/action_util.c **** #include "host.h"
  18:quantum/action_util.c **** #include "report.h"
  19:quantum/action_util.c **** #include "debug.h"
  20:quantum/action_util.c **** #include "action_util.h"
  21:quantum/action_util.c **** #include "action_layer.h"
  22:quantum/action_util.c **** #include "timer.h"
  23:quantum/action_util.c **** #include "keycode_config.h"
  24:quantum/action_util.c **** 
  25:quantum/action_util.c **** extern keymap_config_t keymap_config;
  26:quantum/action_util.c **** 
  27:quantum/action_util.c **** static uint8_t real_mods  = 0;
  28:quantum/action_util.c **** static uint8_t weak_mods  = 0;
  29:quantum/action_util.c **** static uint8_t macro_mods = 0;
  30:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
  31:quantum/action_util.c **** static uint8_t weak_override_mods = 0;
  32:quantum/action_util.c **** static uint8_t suppressed_mods    = 0;
  33:quantum/action_util.c **** #endif
  34:quantum/action_util.c **** 
  35:quantum/action_util.c **** // TODO: pointer variable is not needed
  36:quantum/action_util.c **** // report_keyboard_t keyboard_report = {};
  37:quantum/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  38:quantum/action_util.c **** 
  39:quantum/action_util.c **** extern inline void add_key(uint8_t key);
  40:quantum/action_util.c **** extern inline void del_key(uint8_t key);
  41:quantum/action_util.c **** extern inline void clear_keys(void);
  42:quantum/action_util.c **** 
  43:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  44:quantum/action_util.c **** static uint8_t oneshot_mods        = 0;
  45:quantum/action_util.c **** static uint8_t oneshot_locked_mods = 0;
  46:quantum/action_util.c **** uint8_t        get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
 120              		.loc 1 46 46 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              		.loc 1 46 48 view .LVU13
 126              		.loc 1 46 76 is_stmt 0 view .LVU14
 127 0000 014B     		ldr	r3, .L11
 128 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 129 0004 7047     		bx	lr
 130              	.L12:
 131 0006 00BF     		.align	2
 132              	.L11:
 133 0008 00000000 		.word	oneshot_locked_mods
 134              		.cfi_endproc
 135              	.LFE338:
 137              		.section	.text.has_oneshot_mods_timed_out,"ax",%progbits
 138              		.align	1
 139              		.global	has_oneshot_mods_timed_out
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	has_oneshot_mods_timed_out:
 145              	.LFB341:
  47:quantum/action_util.c **** void           set_oneshot_locked_mods(uint8_t mods) {
  48:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
  49:quantum/action_util.c ****         oneshot_locked_mods = mods;
  50:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  51:quantum/action_util.c ****     }
  52:quantum/action_util.c **** }
  53:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
  54:quantum/action_util.c ****     if (oneshot_locked_mods) {
  55:quantum/action_util.c ****         oneshot_locked_mods = 0;
  56:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  57:quantum/action_util.c ****     }
  58:quantum/action_util.c **** }
  59:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  60:quantum/action_util.c **** static uint16_t oneshot_time = 0;
  61:quantum/action_util.c **** bool            has_oneshot_mods_timed_out(void) { return TIMER_DIFF_16(timer_read(), oneshot_time)
  62:quantum/action_util.c **** #    else
  63:quantum/action_util.c **** bool has_oneshot_mods_timed_out(void) { return false; }
 146              		.loc 1 63 39 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              		.loc 1 63 41 view .LVU16
 152              		.loc 1 63 55 is_stmt 0 view .LVU17
 153 0000 0020     		movs	r0, #0
 154 0002 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE341:
 158              		.section	.text.get_oneshot_layer,"ax",%progbits
 159              		.align	1
 160              		.global	get_oneshot_layer
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	get_oneshot_layer:
 166              	.LFB342:
  64:quantum/action_util.c **** #    endif
  65:quantum/action_util.c **** #endif
  66:quantum/action_util.c **** 
  67:quantum/action_util.c **** /* oneshot layer */
  68:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  69:quantum/action_util.c **** /** \brief oneshot_layer_data bits
  70:quantum/action_util.c ****  * LLLL LSSS
  71:quantum/action_util.c ****  * where:
  72:quantum/action_util.c ****  *   L => are layer bits
  73:quantum/action_util.c ****  *   S => oneshot state bits
  74:quantum/action_util.c ****  */
  75:quantum/action_util.c **** static int8_t oneshot_layer_data = 0;
  76:quantum/action_util.c **** 
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
 167              		.loc 1 77 40 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              		.loc 1 77 42 view .LVU19
 173              		.loc 1 77 68 is_stmt 0 view .LVU20
 174 0000 024B     		ldr	r3, .L15
 175 0002 93F90000 		ldrsb	r0, [r3]
 176              		.loc 1 77 74 view .LVU21
 177 0006 C0F3C700 		ubfx	r0, r0, #3, #8
 178 000a 7047     		bx	lr
 179              	.L16:
 180              		.align	2
 181              	.L15:
 182 000c 00000000 		.word	oneshot_layer_data
 183              		.cfi_endproc
 184              	.LFE342:
 186              		.section	.text.get_oneshot_layer_state,"ax",%progbits
 187              		.align	1
 188              		.global	get_oneshot_layer_state
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	get_oneshot_layer_state:
 194              	.LFB343:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 195              		.loc 1 78 46 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              		.loc 1 78 48 view .LVU23
 201              		.loc 1 78 74 is_stmt 0 view .LVU24
 202 0000 024B     		ldr	r3, .L18
 203 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 204              		.loc 1 78 83 view .LVU25
 205 0004 00F00700 		and	r0, r0, #7
 206 0008 7047     		bx	lr
 207              	.L19:
 208 000a 00BF     		.align	2
 209              	.L18:
 210 000c 00000000 		.word	oneshot_layer_data
 211              		.cfi_endproc
 212              	.LFE343:
 214              		.section	.text.is_oneshot_layer_active,"ax",%progbits
 215              		.align	1
 216              		.global	is_oneshot_layer_active
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	is_oneshot_layer_active:
 222              	.LFB347:
  79:quantum/action_util.c **** 
  80:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  81:quantum/action_util.c **** enum {
  82:quantum/action_util.c ****     SHO_OFF,
  83:quantum/action_util.c ****     SHO_ACTIVE,   // Swap hands button was pressed, and we didn't send any swapped keys yet
  84:quantum/action_util.c ****     SHO_PRESSED,  // Swap hands button is currently pressed
  85:quantum/action_util.c ****     SHO_USED,     // Swap hands button is still pressed, and we already sent swapped keys
  86:quantum/action_util.c **** } swap_hands_oneshot = SHO_OFF;
  87:quantum/action_util.c **** #    endif
  88:quantum/action_util.c **** 
  89:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  90:quantum/action_util.c **** static uint16_t oneshot_layer_time = 0;
  91:quantum/action_util.c **** inline bool     has_oneshot_layer_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_layer_ti
  92:quantum/action_util.c **** #        ifdef SWAP_HANDS_ENABLE
  93:quantum/action_util.c **** static uint16_t oneshot_swaphands_time = 0;
  94:quantum/action_util.c **** inline bool     has_oneshot_swaphands_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_swap
  95:quantum/action_util.c **** #        endif
  96:quantum/action_util.c **** #    endif
  97:quantum/action_util.c **** 
  98:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  99:quantum/action_util.c **** 
 100:quantum/action_util.c **** void set_oneshot_swaphands(void) {
 101:quantum/action_util.c ****     swap_hands_oneshot = SHO_PRESSED;
 102:quantum/action_util.c ****     swap_hands         = true;
 103:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 104:quantum/action_util.c ****     oneshot_swaphands_time = timer_read();
 105:quantum/action_util.c ****     if (oneshot_layer_time != 0) {
 106:quantum/action_util.c ****         oneshot_layer_time = oneshot_swaphands_time;
 107:quantum/action_util.c ****     }
 108:quantum/action_util.c **** #        endif
 109:quantum/action_util.c **** }
 110:quantum/action_util.c **** 
 111:quantum/action_util.c **** void release_oneshot_swaphands(void) {
 112:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 113:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 114:quantum/action_util.c ****     }
 115:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_USED) {
 116:quantum/action_util.c ****         clear_oneshot_swaphands();
 117:quantum/action_util.c ****     }
 118:quantum/action_util.c **** }
 119:quantum/action_util.c **** 
 120:quantum/action_util.c **** void use_oneshot_swaphands(void) {
 121:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 122:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 123:quantum/action_util.c ****     }
 124:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_ACTIVE) {
 125:quantum/action_util.c ****         clear_oneshot_swaphands();
 126:quantum/action_util.c ****     }
 127:quantum/action_util.c **** }
 128:quantum/action_util.c **** 
 129:quantum/action_util.c **** void clear_oneshot_swaphands(void) {
 130:quantum/action_util.c ****     swap_hands_oneshot = SHO_OFF;
 131:quantum/action_util.c ****     swap_hands         = false;
 132:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 133:quantum/action_util.c ****     oneshot_swaphands_time = 0;
 134:quantum/action_util.c **** #        endif
 135:quantum/action_util.c **** }
 136:quantum/action_util.c **** 
 137:quantum/action_util.c **** #    endif
 138:quantum/action_util.c **** 
 139:quantum/action_util.c **** /** \brief Set oneshot layer
 140:quantum/action_util.c ****  *
 141:quantum/action_util.c ****  * FIXME: needs doc
 142:quantum/action_util.c ****  */
 143:quantum/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state) {
 144:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 145:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 146:quantum/action_util.c ****         layer_on(layer);
 147:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 148:quantum/action_util.c ****         oneshot_layer_time = timer_read();
 149:quantum/action_util.c **** #    endif
 150:quantum/action_util.c ****         oneshot_layer_changed_kb(get_oneshot_layer());
 151:quantum/action_util.c ****     } else {
 152:quantum/action_util.c ****         layer_on(layer);
 153:quantum/action_util.c ****     }
 154:quantum/action_util.c **** }
 155:quantum/action_util.c **** /** \brief Reset oneshot layer
 156:quantum/action_util.c ****  *
 157:quantum/action_util.c ****  * FIXME: needs doc
 158:quantum/action_util.c ****  */
 159:quantum/action_util.c **** void reset_oneshot_layer(void) {
 160:quantum/action_util.c ****     oneshot_layer_data = 0;
 161:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 162:quantum/action_util.c ****     oneshot_layer_time = 0;
 163:quantum/action_util.c **** #    endif
 164:quantum/action_util.c ****     oneshot_layer_changed_kb(get_oneshot_layer());
 165:quantum/action_util.c **** }
 166:quantum/action_util.c **** /** \brief Clear oneshot layer
 167:quantum/action_util.c ****  *
 168:quantum/action_util.c ****  * FIXME: needs doc
 169:quantum/action_util.c ****  */
 170:quantum/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state) {
 171:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 172:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 173:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 174:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 175:quantum/action_util.c ****         reset_oneshot_layer();
 176:quantum/action_util.c ****     }
 177:quantum/action_util.c **** }
 178:quantum/action_util.c **** /** \brief Is oneshot layer active
 179:quantum/action_util.c ****  *
 180:quantum/action_util.c ****  * FIXME: needs doc
 181:quantum/action_util.c ****  */
 182:quantum/action_util.c **** bool is_oneshot_layer_active(void) { return get_oneshot_layer_state(); }
 223              		.loc 1 182 36 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              		.loc 1 182 38 view .LVU27
 229              	.LBB12:
 230              	.LBI12:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 231              		.loc 1 78 16 view .LVU28
 232              	.LBB13:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 233              		.loc 1 78 48 view .LVU29
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 234              		.loc 1 78 74 is_stmt 0 view .LVU30
 235 0000 034B     		ldr	r3, .L21
 236              	.LBE13:
 237              	.LBE12:
 238              		.loc 1 182 45 view .LVU31
 239 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 240              		.loc 1 182 72 view .LVU32
 241 0004 10F00700 		ands	r0, r0, #7
 242 0008 18BF     		it	ne
 243 000a 0120     		movne	r0, #1
 244 000c 7047     		bx	lr
 245              	.L22:
 246 000e 00BF     		.align	2
 247              	.L21:
 248 0010 00000000 		.word	oneshot_layer_data
 249              		.cfi_endproc
 250              	.LFE347:
 252              		.section	.rodata.oneshot_set.str1.1,"aMS",%progbits,1
 253              	.LC0:
 254 0000 4F6E6573 		.ascii	"Oneshot: active: %d\012\000"
 254      686F743A 
 254      20616374 
 254      6976653A 
 254      2025640A 
 255              		.section	.text.oneshot_set,"ax",%progbits
 256              		.align	1
 257              		.global	oneshot_set
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	oneshot_set:
 263              	.LVL7:
 264              	.LFB348:
 183:quantum/action_util.c **** 
 184:quantum/action_util.c **** /** \brief set oneshot
 185:quantum/action_util.c ****  *
 186:quantum/action_util.c ****  * FIXME: needs doc
 187:quantum/action_util.c ****  */
 188:quantum/action_util.c **** void oneshot_set(bool active) {
 265              		.loc 1 188 31 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 189:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 269              		.loc 1 189 5 view .LVU34
 270              		.loc 1 189 22 is_stmt 0 view .LVU35
 271 0000 0C4A     		ldr	r2, .L30
 272 0002 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 273              		.loc 1 189 8 view .LVU36
 274 0004 C3F38001 		ubfx	r1, r3, #2, #1
 275 0008 8142     		cmp	r1, r0
 188:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 276              		.loc 1 188 31 view .LVU37
 277 000a 10B5     		push	{r4, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
 188:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 281              		.loc 1 188 31 view .LVU38
 282 000c 0446     		mov	r4, r0
 283              		.loc 1 189 8 view .LVU39
 284 000e 0FD0     		beq	.L23
 190:quantum/action_util.c ****         keymap_config.oneshot_disable = active;
 285              		.loc 1 190 9 is_stmt 1 view .LVU40
 286              		.loc 1 190 39 is_stmt 0 view .LVU41
 287 0010 60F38203 		bfi	r3, r0, #2, #1
 288 0014 5370     		strb	r3, [r2, #1]
 191:quantum/action_util.c ****         eeconfig_update_keymap(keymap_config.raw);
 289              		.loc 1 191 9 is_stmt 1 view .LVU42
 290 0016 1088     		ldrh	r0, [r2]
 291              	.LVL8:
 292              		.loc 1 191 9 is_stmt 0 view .LVU43
 293 0018 FFF7FEFF 		bl	eeconfig_update_keymap
 294              	.LVL9:
 192:quantum/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 295              		.loc 1 192 9 is_stmt 1 view .LVU44
 296              		.loc 1 192 9 view .LVU45
 297 001c 064B     		ldr	r3, .L30+4
 298 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 299 0020 DB07     		lsls	r3, r3, #31
 300 0022 05D5     		bpl	.L23
 301              	.LVL10:
 302              	.LBB16:
 303              	.LBI16:
 188:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 304              		.loc 1 188 6 view .LVU46
 305              	.LBB17:
 306              		.loc 1 192 9 view .LVU47
 307 0024 2146     		mov	r1, r4
 308 0026 0548     		ldr	r0, .L30+8
 309              	.LBE17:
 310              	.LBE16:
 193:quantum/action_util.c ****     }
 194:quantum/action_util.c **** }
 311              		.loc 1 194 1 is_stmt 0 view .LVU48
 312 0028 BDE81040 		pop	{r4, lr}
 313              		.cfi_remember_state
 314              		.cfi_restore 14
 315              		.cfi_restore 4
 316              		.cfi_def_cfa_offset 0
 317              	.LVL11:
 318              	.LBB19:
 319              	.LBB18:
 192:quantum/action_util.c ****     }
 320              		.loc 1 192 9 view .LVU49
 321 002c FFF7FEBF 		b	printf_
 322              	.LVL12:
 323              	.L23:
 324              		.cfi_restore_state
 192:quantum/action_util.c ****     }
 325              		.loc 1 192 9 view .LVU50
 326              	.LBE18:
 327              	.LBE19:
 328              		.loc 1 194 1 view .LVU51
 329 0030 10BD     		pop	{r4, pc}
 330              	.L31:
 331 0032 00BF     		.align	2
 332              	.L30:
 333 0034 00000000 		.word	keymap_config
 334 0038 00000000 		.word	debug_config
 335 003c 00000000 		.word	.LC0
 336              		.cfi_endproc
 337              	.LFE348:
 339              		.section	.text.oneshot_toggle,"ax",%progbits
 340              		.align	1
 341              		.global	oneshot_toggle
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	oneshot_toggle:
 347              	.LFB349:
 195:quantum/action_util.c **** 
 196:quantum/action_util.c **** /** \brief toggle oneshot
 197:quantum/action_util.c ****  *
 198:quantum/action_util.c ****  * FIXME: needs doc
 199:quantum/action_util.c ****  */
 200:quantum/action_util.c **** void oneshot_toggle(void) { oneshot_set(!keymap_config.oneshot_disable); }
 348              		.loc 1 200 27 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              		.loc 1 200 29 view .LVU53
 354              		.loc 1 200 55 is_stmt 0 view .LVU54
 355 0000 044B     		ldr	r3, .L33
 356 0002 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 357 0004 C0F38000 		ubfx	r0, r0, #2, #1
 358              		.loc 1 200 1 view .LVU55
 359 0008 80F00100 		eor	r0, r0, #1
 360              		.loc 1 200 29 view .LVU56
 361 000c 00F00100 		and	r0, r0, #1
 362 0010 FFF7FEBF 		b	oneshot_set
 363              	.LVL13:
 364              	.L34:
 365              		.align	2
 366              	.L33:
 367 0014 00000000 		.word	keymap_config
 368              		.cfi_endproc
 369              	.LFE349:
 371              		.section	.text.oneshot_enable,"ax",%progbits
 372              		.align	1
 373              		.global	oneshot_enable
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	oneshot_enable:
 379              	.LFB350:
 201:quantum/action_util.c **** 
 202:quantum/action_util.c **** /** \brief enable oneshot
 203:quantum/action_util.c ****  *
 204:quantum/action_util.c ****  * FIXME: needs doc
 205:quantum/action_util.c ****  */
 206:quantum/action_util.c **** void oneshot_enable(void) { oneshot_set(true); }
 380              		.loc 1 206 27 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              		.loc 1 206 29 view .LVU58
 386 0000 0120     		movs	r0, #1
 387 0002 FFF7FEBF 		b	oneshot_set
 388              	.LVL14:
 389              		.cfi_endproc
 390              	.LFE350:
 392              		.section	.text.oneshot_disable,"ax",%progbits
 393              		.align	1
 394              		.global	oneshot_disable
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 399              	oneshot_disable:
 400              	.LFB351:
 207:quantum/action_util.c **** 
 208:quantum/action_util.c **** /** \brief disable oneshot
 209:quantum/action_util.c ****  *
 210:quantum/action_util.c ****  * FIXME: needs doc
 211:quantum/action_util.c ****  */
 212:quantum/action_util.c **** void oneshot_disable(void) { oneshot_set(false); }
 401              		.loc 1 212 28 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 406              		.loc 1 212 30 view .LVU60
 407 0000 0020     		movs	r0, #0
 408 0002 FFF7FEBF 		b	oneshot_set
 409              	.LVL15:
 410              		.cfi_endproc
 411              	.LFE351:
 413              		.section	.text.is_oneshot_enabled,"ax",%progbits
 414              		.align	1
 415              		.global	is_oneshot_enabled
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	is_oneshot_enabled:
 421              	.LFB352:
 213:quantum/action_util.c **** 
 214:quantum/action_util.c **** bool is_oneshot_enabled(void) { return keymap_config.oneshot_disable; }
 422              		.loc 1 214 31 view -0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              		.loc 1 214 33 view .LVU62
 428              		.loc 1 214 53 is_stmt 0 view .LVU63
 429 0000 024B     		ldr	r3, .L38
 430 0002 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 431              		.loc 1 214 71 view .LVU64
 432 0004 C0F38000 		ubfx	r0, r0, #2, #1
 433 0008 7047     		bx	lr
 434              	.L39:
 435 000a 00BF     		.align	2
 436              	.L38:
 437 000c 00000000 		.word	keymap_config
 438              		.cfi_endproc
 439              	.LFE352:
 441              		.section	.text.get_mods,"ax",%progbits
 442              		.align	1
 443              		.global	get_mods
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	get_mods:
 449              	.LFB354:
 215:quantum/action_util.c **** 
 216:quantum/action_util.c **** #endif
 217:quantum/action_util.c **** 
 218:quantum/action_util.c **** /** \brief Send keyboard report
 219:quantum/action_util.c ****  *
 220:quantum/action_util.c ****  * FIXME: needs doc
 221:quantum/action_util.c ****  */
 222:quantum/action_util.c **** void send_keyboard_report(void) {
 223:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 224:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 225:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 226:quantum/action_util.c **** 
 227:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 228:quantum/action_util.c ****     if (oneshot_mods) {
 229:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 230:quantum/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 231:quantum/action_util.c ****             dprintf("Oneshot: timeout\n");
 232:quantum/action_util.c ****             clear_oneshot_mods();
 233:quantum/action_util.c ****         }
 234:quantum/action_util.c **** #    endif
 235:quantum/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 236:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 237:quantum/action_util.c ****             clear_oneshot_mods();
 238:quantum/action_util.c ****         }
 239:quantum/action_util.c ****     }
 240:quantum/action_util.c **** 
 241:quantum/action_util.c **** #endif
 242:quantum/action_util.c **** 
 243:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 244:quantum/action_util.c ****     // These need to be last to be able to properly control key overrides
 245:quantum/action_util.c ****     keyboard_report->mods &= ~suppressed_mods;
 246:quantum/action_util.c ****     keyboard_report->mods |= weak_override_mods;
 247:quantum/action_util.c **** #endif
 248:quantum/action_util.c **** 
 249:quantum/action_util.c ****     host_keyboard_send(keyboard_report);
 250:quantum/action_util.c **** }
 251:quantum/action_util.c **** 
 252:quantum/action_util.c **** /** \brief Get mods
 253:quantum/action_util.c ****  *
 254:quantum/action_util.c ****  * FIXME: needs doc
 255:quantum/action_util.c ****  */
 256:quantum/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 450              		.loc 1 256 24 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455              		.loc 1 256 26 view .LVU66
 456              		.loc 1 256 44 is_stmt 0 view .LVU67
 457 0000 014B     		ldr	r3, .L41
 458 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 459 0004 7047     		bx	lr
 460              	.L42:
 461 0006 00BF     		.align	2
 462              	.L41:
 463 0008 00000000 		.word	real_mods
 464              		.cfi_endproc
 465              	.LFE354:
 467              		.section	.text.add_mods,"ax",%progbits
 468              		.align	1
 469              		.global	add_mods
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 474              	add_mods:
 475              	.LVL16:
 476              	.LFB355:
 257:quantum/action_util.c **** /** \brief add mods
 258:quantum/action_util.c ****  *
 259:quantum/action_util.c ****  * FIXME: needs doc
 260:quantum/action_util.c ****  */
 261:quantum/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 477              		.loc 1 261 29 is_stmt 1 view -0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482              		.loc 1 261 31 view .LVU69
 483              		.loc 1 261 41 is_stmt 0 view .LVU70
 484 0000 024B     		ldr	r3, .L44
 485 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 486 0004 1043     		orrs	r0, r0, r2
 487              	.LVL17:
 488              		.loc 1 261 41 view .LVU71
 489 0006 1870     		strb	r0, [r3]
 490              		.loc 1 261 50 view .LVU72
 491 0008 7047     		bx	lr
 492              	.L45:
 493 000a 00BF     		.align	2
 494              	.L44:
 495 000c 00000000 		.word	real_mods
 496              		.cfi_endproc
 497              	.LFE355:
 499              		.section	.text.del_mods,"ax",%progbits
 500              		.align	1
 501              		.global	del_mods
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	del_mods:
 507              	.LVL18:
 508              	.LFB356:
 262:quantum/action_util.c **** /** \brief del mods
 263:quantum/action_util.c ****  *
 264:quantum/action_util.c ****  * FIXME: needs doc
 265:quantum/action_util.c ****  */
 266:quantum/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 509              		.loc 1 266 29 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              		.loc 1 266 31 view .LVU74
 515              		.loc 1 266 41 is_stmt 0 view .LVU75
 516 0000 024A     		ldr	r2, .L47
 517 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 518 0004 23EA0003 		bic	r3, r3, r0
 519 0008 1370     		strb	r3, [r2]
 520              		.loc 1 266 51 view .LVU76
 521 000a 7047     		bx	lr
 522              	.L48:
 523              		.align	2
 524              	.L47:
 525 000c 00000000 		.word	real_mods
 526              		.cfi_endproc
 527              	.LFE356:
 529              		.section	.text.set_mods,"ax",%progbits
 530              		.align	1
 531              		.global	set_mods
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 536              	set_mods:
 537              	.LVL19:
 538              	.LFB357:
 267:quantum/action_util.c **** /** \brief set mods
 268:quantum/action_util.c ****  *
 269:quantum/action_util.c ****  * FIXME: needs doc
 270:quantum/action_util.c ****  */
 271:quantum/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 539              		.loc 1 271 29 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544              		.loc 1 271 31 view .LVU78
 545              		.loc 1 271 41 is_stmt 0 view .LVU79
 546 0000 014B     		ldr	r3, .L50
 547 0002 1870     		strb	r0, [r3]
 548              		.loc 1 271 49 view .LVU80
 549 0004 7047     		bx	lr
 550              	.L51:
 551 0006 00BF     		.align	2
 552              	.L50:
 553 0008 00000000 		.word	real_mods
 554              		.cfi_endproc
 555              	.LFE357:
 557              		.section	.text.clear_mods,"ax",%progbits
 558              		.align	1
 559              		.global	clear_mods
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 564              	clear_mods:
 565              	.LFB358:
 272:quantum/action_util.c **** /** \brief clear mods
 273:quantum/action_util.c ****  *
 274:quantum/action_util.c ****  * FIXME: needs doc
 275:quantum/action_util.c ****  */
 276:quantum/action_util.c **** void clear_mods(void) { real_mods = 0; }
 566              		.loc 1 276 23 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571              		.loc 1 276 25 view .LVU82
 572              		.loc 1 276 35 is_stmt 0 view .LVU83
 573 0000 014B     		ldr	r3, .L53
 574 0002 0022     		movs	r2, #0
 575 0004 1A70     		strb	r2, [r3]
 576              		.loc 1 276 40 view .LVU84
 577 0006 7047     		bx	lr
 578              	.L54:
 579              		.align	2
 580              	.L53:
 581 0008 00000000 		.word	real_mods
 582              		.cfi_endproc
 583              	.LFE358:
 585              		.section	.text.get_weak_mods,"ax",%progbits
 586              		.align	1
 587              		.global	get_weak_mods
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 592              	get_weak_mods:
 593              	.LFB359:
 277:quantum/action_util.c **** 
 278:quantum/action_util.c **** /** \brief get weak mods
 279:quantum/action_util.c ****  *
 280:quantum/action_util.c ****  * FIXME: needs doc
 281:quantum/action_util.c ****  */
 282:quantum/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 594              		.loc 1 282 29 is_stmt 1 view -0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599              		.loc 1 282 31 view .LVU86
 600              		.loc 1 282 49 is_stmt 0 view .LVU87
 601 0000 014B     		ldr	r3, .L56
 602 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 603 0004 7047     		bx	lr
 604              	.L57:
 605 0006 00BF     		.align	2
 606              	.L56:
 607 0008 00000000 		.word	weak_mods
 608              		.cfi_endproc
 609              	.LFE359:
 611              		.section	.text.add_weak_mods,"ax",%progbits
 612              		.align	1
 613              		.global	add_weak_mods
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 618              	add_weak_mods:
 619              	.LVL20:
 620              	.LFB360:
 283:quantum/action_util.c **** /** \brief add weak mods
 284:quantum/action_util.c ****  *
 285:quantum/action_util.c ****  * FIXME: needs doc
 286:quantum/action_util.c ****  */
 287:quantum/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 621              		.loc 1 287 34 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626              		.loc 1 287 36 view .LVU89
 627              		.loc 1 287 46 is_stmt 0 view .LVU90
 628 0000 024B     		ldr	r3, .L59
 629 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 630 0004 1043     		orrs	r0, r0, r2
 631              	.LVL21:
 632              		.loc 1 287 46 view .LVU91
 633 0006 1870     		strb	r0, [r3]
 634              		.loc 1 287 55 view .LVU92
 635 0008 7047     		bx	lr
 636              	.L60:
 637 000a 00BF     		.align	2
 638              	.L59:
 639 000c 00000000 		.word	weak_mods
 640              		.cfi_endproc
 641              	.LFE360:
 643              		.section	.text.del_weak_mods,"ax",%progbits
 644              		.align	1
 645              		.global	del_weak_mods
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 650              	del_weak_mods:
 651              	.LVL22:
 652              	.LFB361:
 288:quantum/action_util.c **** /** \brief del weak mods
 289:quantum/action_util.c ****  *
 290:quantum/action_util.c ****  * FIXME: needs doc
 291:quantum/action_util.c ****  */
 292:quantum/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 653              		.loc 1 292 34 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658              		.loc 1 292 36 view .LVU94
 659              		.loc 1 292 46 is_stmt 0 view .LVU95
 660 0000 024A     		ldr	r2, .L62
 661 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 662 0004 23EA0003 		bic	r3, r3, r0
 663 0008 1370     		strb	r3, [r2]
 664              		.loc 1 292 56 view .LVU96
 665 000a 7047     		bx	lr
 666              	.L63:
 667              		.align	2
 668              	.L62:
 669 000c 00000000 		.word	weak_mods
 670              		.cfi_endproc
 671              	.LFE361:
 673              		.section	.text.set_weak_mods,"ax",%progbits
 674              		.align	1
 675              		.global	set_weak_mods
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 680              	set_weak_mods:
 681              	.LVL23:
 682              	.LFB362:
 293:quantum/action_util.c **** /** \brief set weak mods
 294:quantum/action_util.c ****  *
 295:quantum/action_util.c ****  * FIXME: needs doc
 296:quantum/action_util.c ****  */
 297:quantum/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 683              		.loc 1 297 34 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688              		.loc 1 297 36 view .LVU98
 689              		.loc 1 297 46 is_stmt 0 view .LVU99
 690 0000 014B     		ldr	r3, .L65
 691 0002 1870     		strb	r0, [r3]
 692              		.loc 1 297 54 view .LVU100
 693 0004 7047     		bx	lr
 694              	.L66:
 695 0006 00BF     		.align	2
 696              	.L65:
 697 0008 00000000 		.word	weak_mods
 698              		.cfi_endproc
 699              	.LFE362:
 701              		.section	.text.clear_weak_mods,"ax",%progbits
 702              		.align	1
 703              		.global	clear_weak_mods
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 708              	clear_weak_mods:
 709              	.LFB363:
 298:quantum/action_util.c **** /** \brief clear weak mods
 299:quantum/action_util.c ****  *
 300:quantum/action_util.c ****  * FIXME: needs doc
 301:quantum/action_util.c ****  */
 302:quantum/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 710              		.loc 1 302 28 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 715              		.loc 1 302 30 view .LVU102
 716              		.loc 1 302 40 is_stmt 0 view .LVU103
 717 0000 014B     		ldr	r3, .L68
 718 0002 0022     		movs	r2, #0
 719 0004 1A70     		strb	r2, [r3]
 720              		.loc 1 302 45 view .LVU104
 721 0006 7047     		bx	lr
 722              	.L69:
 723              		.align	2
 724              	.L68:
 725 0008 00000000 		.word	weak_mods
 726              		.cfi_endproc
 727              	.LFE363:
 729              		.section	.text.get_macro_mods,"ax",%progbits
 730              		.align	1
 731              		.global	get_macro_mods
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 736              	get_macro_mods:
 737              	.LFB364:
 303:quantum/action_util.c **** 
 304:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 305:quantum/action_util.c **** /** \brief set weak mods used by key overrides. DO not call this manually
 306:quantum/action_util.c ****  */
 307:quantum/action_util.c **** void set_weak_override_mods(uint8_t mods) { weak_override_mods = mods; }
 308:quantum/action_util.c **** /** \brief clear weak mods used by key overrides. DO not call this manually
 309:quantum/action_util.c ****  */
 310:quantum/action_util.c **** void clear_weak_override_mods(void) { weak_override_mods = 0; }
 311:quantum/action_util.c **** 
 312:quantum/action_util.c **** /** \brief set suppressed mods used by key overrides. DO not call this manually
 313:quantum/action_util.c ****  */
 314:quantum/action_util.c **** void set_suppressed_override_mods(uint8_t mods) { suppressed_mods = mods; }
 315:quantum/action_util.c **** /** \brief clear suppressed mods used by key overrides. DO not call this manually
 316:quantum/action_util.c ****  */
 317:quantum/action_util.c **** void clear_suppressed_override_mods(void) { suppressed_mods = 0; }
 318:quantum/action_util.c **** #endif
 319:quantum/action_util.c **** 
 320:quantum/action_util.c **** /* macro modifier */
 321:quantum/action_util.c **** /** \brief get macro mods
 322:quantum/action_util.c ****  *
 323:quantum/action_util.c ****  * FIXME: needs doc
 324:quantum/action_util.c ****  */
 325:quantum/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 738              		.loc 1 325 30 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743              		.loc 1 325 32 view .LVU106
 744              		.loc 1 325 51 is_stmt 0 view .LVU107
 745 0000 014B     		ldr	r3, .L71
 746 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 747 0004 7047     		bx	lr
 748              	.L72:
 749 0006 00BF     		.align	2
 750              	.L71:
 751 0008 00000000 		.word	macro_mods
 752              		.cfi_endproc
 753              	.LFE364:
 755              		.section	.text.add_macro_mods,"ax",%progbits
 756              		.align	1
 757              		.global	add_macro_mods
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 762              	add_macro_mods:
 763              	.LVL24:
 764              	.LFB365:
 326:quantum/action_util.c **** /** \brief add macro mods
 327:quantum/action_util.c ****  *
 328:quantum/action_util.c ****  * FIXME: needs doc
 329:quantum/action_util.c ****  */
 330:quantum/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 765              		.loc 1 330 35 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770              		.loc 1 330 37 view .LVU109
 771              		.loc 1 330 48 is_stmt 0 view .LVU110
 772 0000 024B     		ldr	r3, .L74
 773 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 774 0004 1043     		orrs	r0, r0, r2
 775              	.LVL25:
 776              		.loc 1 330 48 view .LVU111
 777 0006 1870     		strb	r0, [r3]
 778              		.loc 1 330 57 view .LVU112
 779 0008 7047     		bx	lr
 780              	.L75:
 781 000a 00BF     		.align	2
 782              	.L74:
 783 000c 00000000 		.word	macro_mods
 784              		.cfi_endproc
 785              	.LFE365:
 787              		.section	.text.del_macro_mods,"ax",%progbits
 788              		.align	1
 789              		.global	del_macro_mods
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 794              	del_macro_mods:
 795              	.LVL26:
 796              	.LFB366:
 331:quantum/action_util.c **** /** \brief del macro mods
 332:quantum/action_util.c ****  *
 333:quantum/action_util.c ****  * FIXME: needs doc
 334:quantum/action_util.c ****  */
 335:quantum/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 797              		.loc 1 335 35 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              		.loc 1 335 37 view .LVU114
 803              		.loc 1 335 48 is_stmt 0 view .LVU115
 804 0000 024A     		ldr	r2, .L77
 805 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 806 0004 23EA0003 		bic	r3, r3, r0
 807 0008 1370     		strb	r3, [r2]
 808              		.loc 1 335 58 view .LVU116
 809 000a 7047     		bx	lr
 810              	.L78:
 811              		.align	2
 812              	.L77:
 813 000c 00000000 		.word	macro_mods
 814              		.cfi_endproc
 815              	.LFE366:
 817              		.section	.text.set_macro_mods,"ax",%progbits
 818              		.align	1
 819              		.global	set_macro_mods
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 824              	set_macro_mods:
 825              	.LVL27:
 826              	.LFB367:
 336:quantum/action_util.c **** /** \brief set macro mods
 337:quantum/action_util.c ****  *
 338:quantum/action_util.c ****  * FIXME: needs doc
 339:quantum/action_util.c ****  */
 340:quantum/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 827              		.loc 1 340 35 is_stmt 1 view -0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              		@ link register save eliminated.
 832              		.loc 1 340 37 view .LVU118
 833              		.loc 1 340 48 is_stmt 0 view .LVU119
 834 0000 014B     		ldr	r3, .L80
 835 0002 1870     		strb	r0, [r3]
 836              		.loc 1 340 56 view .LVU120
 837 0004 7047     		bx	lr
 838              	.L81:
 839 0006 00BF     		.align	2
 840              	.L80:
 841 0008 00000000 		.word	macro_mods
 842              		.cfi_endproc
 843              	.LFE367:
 845              		.section	.text.clear_macro_mods,"ax",%progbits
 846              		.align	1
 847              		.global	clear_macro_mods
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 852              	clear_macro_mods:
 853              	.LFB368:
 341:quantum/action_util.c **** /** \brief clear macro mods
 342:quantum/action_util.c ****  *
 343:quantum/action_util.c ****  * FIXME: needs doc
 344:quantum/action_util.c ****  */
 345:quantum/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 854              		.loc 1 345 29 is_stmt 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              		.loc 1 345 31 view .LVU122
 860              		.loc 1 345 42 is_stmt 0 view .LVU123
 861 0000 014B     		ldr	r3, .L83
 862 0002 0022     		movs	r2, #0
 863 0004 1A70     		strb	r2, [r3]
 864              		.loc 1 345 47 view .LVU124
 865 0006 7047     		bx	lr
 866              	.L84:
 867              		.align	2
 868              	.L83:
 869 0008 00000000 		.word	macro_mods
 870              		.cfi_endproc
 871              	.LFE368:
 873              		.section	.text.get_oneshot_mods,"ax",%progbits
 874              		.align	1
 875              		.global	get_oneshot_mods
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 880              	get_oneshot_mods:
 881              	.LFB369:
 346:quantum/action_util.c **** 
 347:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 348:quantum/action_util.c **** /** \brief get oneshot mods
 349:quantum/action_util.c ****  *
 350:quantum/action_util.c ****  * FIXME: needs doc
 351:quantum/action_util.c ****  */
 352:quantum/action_util.c **** uint8_t get_oneshot_mods(void) { return oneshot_mods; }
 882              		.loc 1 352 32 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887              		.loc 1 352 34 view .LVU126
 888              		.loc 1 352 55 is_stmt 0 view .LVU127
 889 0000 014B     		ldr	r3, .L86
 890 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 891 0004 7047     		bx	lr
 892              	.L87:
 893 0006 00BF     		.align	2
 894              	.L86:
 895 0008 00000000 		.word	oneshot_mods
 896              		.cfi_endproc
 897              	.LFE369:
 899              		.section	.text.oneshot_locked_mods_changed_user,"ax",%progbits
 900              		.align	1
 901              		.weak	oneshot_locked_mods_changed_user
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 906              	oneshot_locked_mods_changed_user:
 907              	.LVL28:
 908              	.LFB374:
 353:quantum/action_util.c **** 
 354:quantum/action_util.c **** void add_oneshot_mods(uint8_t mods) {
 355:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 356:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 357:quantum/action_util.c ****         oneshot_time = timer_read();
 358:quantum/action_util.c **** #    endif
 359:quantum/action_util.c ****         oneshot_mods |= mods;
 360:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 361:quantum/action_util.c ****     }
 362:quantum/action_util.c **** }
 363:quantum/action_util.c **** 
 364:quantum/action_util.c **** void del_oneshot_mods(uint8_t mods) {
 365:quantum/action_util.c ****     if (oneshot_mods & mods) {
 366:quantum/action_util.c ****         oneshot_mods &= ~mods;
 367:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 368:quantum/action_util.c ****         oneshot_time = oneshot_mods ? timer_read() : 0;
 369:quantum/action_util.c **** #    endif
 370:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 371:quantum/action_util.c ****     }
 372:quantum/action_util.c **** }
 373:quantum/action_util.c **** 
 374:quantum/action_util.c **** /** \brief set oneshot mods
 375:quantum/action_util.c ****  *
 376:quantum/action_util.c ****  * FIXME: needs doc
 377:quantum/action_util.c ****  */
 378:quantum/action_util.c **** void set_oneshot_mods(uint8_t mods) {
 379:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 380:quantum/action_util.c ****         if (oneshot_mods != mods) {
 381:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 382:quantum/action_util.c ****             oneshot_time = timer_read();
 383:quantum/action_util.c **** #    endif
 384:quantum/action_util.c ****             oneshot_mods = mods;
 385:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 386:quantum/action_util.c ****         }
 387:quantum/action_util.c ****     }
 388:quantum/action_util.c **** }
 389:quantum/action_util.c **** 
 390:quantum/action_util.c **** /** \brief clear oneshot mods
 391:quantum/action_util.c ****  *
 392:quantum/action_util.c ****  * FIXME: needs doc
 393:quantum/action_util.c ****  */
 394:quantum/action_util.c **** void clear_oneshot_mods(void) {
 395:quantum/action_util.c ****     if (oneshot_mods) {
 396:quantum/action_util.c ****         oneshot_mods = 0;
 397:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 398:quantum/action_util.c ****         oneshot_time = 0;
 399:quantum/action_util.c **** #    endif
 400:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 401:quantum/action_util.c ****     }
 402:quantum/action_util.c **** }
 403:quantum/action_util.c **** #endif
 404:quantum/action_util.c **** 
 405:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 406:quantum/action_util.c ****  *
 407:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 408:quantum/action_util.c ****  */
 409:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_user(uint8_t mods) {}
 909              		.loc 1 409 75 is_stmt 1 view -0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 914              		.loc 1 409 76 view .LVU129
 915 0000 7047     		bx	lr
 916              		.cfi_endproc
 917              	.LFE374:
 919              		.section	.text.oneshot_locked_mods_changed_kb,"ax",%progbits
 920              		.align	1
 921              		.weak	oneshot_locked_mods_changed_kb
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 926              	oneshot_locked_mods_changed_kb:
 927              	.LVL29:
 928              	.LFB375:
 410:quantum/action_util.c **** 
 411:quantum/action_util.c **** /** \brief Called when the locked one shot modifiers have been changed.
 412:quantum/action_util.c ****  *
 413:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 414:quantum/action_util.c ****  */
 415:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_kb(uint8_t mods) { oneshot_locked_mods_chang
 929              		.loc 1 415 73 view -0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              		.loc 1 415 75 view .LVU131
 934              		.loc 1 415 73 is_stmt 0 view .LVU132
 935 0000 08B5     		push	{r3, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 3, -8
 938              		.cfi_offset 14, -4
 939              		.loc 1 415 75 view .LVU133
 940 0002 FFF7FEFF 		bl	oneshot_locked_mods_changed_user
 941              	.LVL30:
 942              		.loc 1 415 115 view .LVU134
 943 0006 08BD     		pop	{r3, pc}
 944              		.cfi_endproc
 945              	.LFE375:
 947              		.section	.text.set_oneshot_locked_mods,"ax",%progbits
 948              		.align	1
 949              		.global	set_oneshot_locked_mods
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 954              	set_oneshot_locked_mods:
 955              	.LVL31:
 956              	.LFB339:
  47:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
 957              		.loc 1 47 54 is_stmt 1 view -0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 961              		.loc 1 48 5 view .LVU136
  47:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
 962              		.loc 1 47 54 is_stmt 0 view .LVU137
 963 0000 08B5     		push	{r3, lr}
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 3, -8
 966              		.cfi_offset 14, -4
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 967              		.loc 1 48 14 view .LVU138
 968 0002 044A     		ldr	r2, .L92
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 969              		.loc 1 48 8 view .LVU139
 970 0004 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 971 0006 8142     		cmp	r1, r0
 972 0008 02D0     		beq	.L90
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 973              		.loc 1 49 9 is_stmt 1 view .LVU140
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 974              		.loc 1 49 29 is_stmt 0 view .LVU141
 975 000a 1070     		strb	r0, [r2]
  50:quantum/action_util.c ****     }
 976              		.loc 1 50 9 is_stmt 1 view .LVU142
 977 000c FFF7FEFF 		bl	oneshot_locked_mods_changed_kb
 978              	.LVL32:
 979              	.L90:
  52:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
 980              		.loc 1 52 1 is_stmt 0 view .LVU143
 981 0010 08BD     		pop	{r3, pc}
 982              	.L93:
 983 0012 00BF     		.align	2
 984              	.L92:
 985 0014 00000000 		.word	oneshot_locked_mods
 986              		.cfi_endproc
 987              	.LFE339:
 989              		.section	.text.clear_oneshot_locked_mods,"ax",%progbits
 990              		.align	1
 991              		.global	clear_oneshot_locked_mods
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 996              	clear_oneshot_locked_mods:
 997              	.LFB340:
  53:quantum/action_util.c ****     if (oneshot_locked_mods) {
 998              		.loc 1 53 38 is_stmt 1 view -0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 1002              		.loc 1 54 5 view .LVU145
  53:quantum/action_util.c ****     if (oneshot_locked_mods) {
 1003              		.loc 1 53 38 is_stmt 0 view .LVU146
 1004 0000 08B5     		push	{r3, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 3, -8
 1007              		.cfi_offset 14, -4
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 1008              		.loc 1 54 9 view .LVU147
 1009 0002 044B     		ldr	r3, .L99
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 1010              		.loc 1 54 8 view .LVU148
 1011 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1012 0006 1AB1     		cbz	r2, .L94
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 1013              		.loc 1 55 9 is_stmt 1 view .LVU149
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 1014              		.loc 1 55 29 is_stmt 0 view .LVU150
 1015 0008 0020     		movs	r0, #0
 1016 000a 1870     		strb	r0, [r3]
  56:quantum/action_util.c ****     }
 1017              		.loc 1 56 9 is_stmt 1 view .LVU151
 1018 000c FFF7FEFF 		bl	oneshot_locked_mods_changed_kb
 1019              	.LVL33:
 1020              	.L94:
  58:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1021              		.loc 1 58 1 is_stmt 0 view .LVU152
 1022 0010 08BD     		pop	{r3, pc}
 1023              	.L100:
 1024 0012 00BF     		.align	2
 1025              	.L99:
 1026 0014 00000000 		.word	oneshot_locked_mods
 1027              		.cfi_endproc
 1028              	.LFE340:
 1030              		.section	.text.oneshot_mods_changed_user,"ax",%progbits
 1031              		.align	1
 1032              		.weak	oneshot_mods_changed_user
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1037              	oneshot_mods_changed_user:
 1038              	.LFB384:
 1039              		.cfi_startproc
 416:quantum/action_util.c **** 
 417:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 418:quantum/action_util.c ****  *
 419:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 420:quantum/action_util.c ****  */
 421:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_user(uint8_t mods) {}
 1040              		.loc 1 421 28 is_stmt 1 view -0
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044 0000 7047     		bx	lr
 1045              		.cfi_endproc
 1046              	.LFE384:
 1048              		.section	.text.oneshot_mods_changed_kb,"ax",%progbits
 1049              		.align	1
 1050              		.weak	oneshot_mods_changed_kb
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1055              	oneshot_mods_changed_kb:
 1056              	.LVL34:
 1057              	.LFB377:
 422:quantum/action_util.c **** 
 423:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 424:quantum/action_util.c ****  *
 425:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 426:quantum/action_util.c ****  */
 427:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_kb(uint8_t mods) { oneshot_mods_changed_user(mods);
 1058              		.loc 1 427 66 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              		.loc 1 427 68 view .LVU155
 1063              		.loc 1 427 66 is_stmt 0 view .LVU156
 1064 0000 08B5     		push	{r3, lr}
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 3, -8
 1067              		.cfi_offset 14, -4
 1068              		.loc 1 427 68 view .LVU157
 1069 0002 FFF7FEFF 		bl	oneshot_mods_changed_user
 1070              	.LVL35:
 1071              		.loc 1 427 101 view .LVU158
 1072 0006 08BD     		pop	{r3, pc}
 1073              		.cfi_endproc
 1074              	.LFE377:
 1076              		.section	.text.add_oneshot_mods,"ax",%progbits
 1077              		.align	1
 1078              		.global	add_oneshot_mods
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1083              	add_oneshot_mods:
 1084              	.LVL36:
 1085              	.LFB370:
 354:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 1086              		.loc 1 354 37 is_stmt 1 view -0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1090              		.loc 1 355 5 view .LVU160
 354:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 1091              		.loc 1 354 37 is_stmt 0 view .LVU161
 1092 0000 10B5     		push	{r4, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 4, -8
 1095              		.cfi_offset 14, -4
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1096              		.loc 1 355 31 view .LVU162
 1097 0002 0549     		ldr	r1, .L105
 1098 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1099              		.loc 1 355 8 view .LVU163
 1100 0006 30EA0304 		bics	r4, r0, r3
 1101 000a 03D0     		beq	.L103
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 1102              		.loc 1 359 9 is_stmt 1 view .LVU164
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 1103              		.loc 1 359 22 is_stmt 0 view .LVU165
 1104 000c 0343     		orrs	r3, r3, r0
 1105 000e 0B70     		strb	r3, [r1]
 360:quantum/action_util.c ****     }
 1106              		.loc 1 360 9 is_stmt 1 view .LVU166
 1107 0010 FFF7FEFF 		bl	oneshot_mods_changed_kb
 1108              	.LVL37:
 1109              	.L103:
 362:quantum/action_util.c **** 
 1110              		.loc 1 362 1 is_stmt 0 view .LVU167
 1111 0014 10BD     		pop	{r4, pc}
 1112              	.L106:
 1113 0016 00BF     		.align	2
 1114              	.L105:
 1115 0018 00000000 		.word	oneshot_mods
 1116              		.cfi_endproc
 1117              	.LFE370:
 1119              		.section	.text.del_oneshot_mods,"ax",%progbits
 1120              		.align	1
 1121              		.global	del_oneshot_mods
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1126              	del_oneshot_mods:
 1127              	.LVL38:
 1128              	.LFB371:
 364:quantum/action_util.c ****     if (oneshot_mods & mods) {
 1129              		.loc 1 364 37 is_stmt 1 view -0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1133              		.loc 1 365 5 view .LVU169
 364:quantum/action_util.c ****     if (oneshot_mods & mods) {
 1134              		.loc 1 364 37 is_stmt 0 view .LVU170
 1135 0000 08B5     		push	{r3, lr}
 1136              		.cfi_def_cfa_offset 8
 1137              		.cfi_offset 3, -8
 1138              		.cfi_offset 14, -4
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1139              		.loc 1 365 9 view .LVU171
 1140 0002 054A     		ldr	r2, .L112
 1141 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1142              		.loc 1 365 8 view .LVU172
 1143 0006 0342     		tst	r3, r0
 1144 0008 04D0     		beq	.L107
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1145              		.loc 1 366 9 is_stmt 1 view .LVU173
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1146              		.loc 1 366 22 is_stmt 0 view .LVU174
 1147 000a 23EA0000 		bic	r0, r3, r0
 1148              	.LVL39:
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1149              		.loc 1 366 22 view .LVU175
 1150 000e 1070     		strb	r0, [r2]
 370:quantum/action_util.c ****     }
 1151              		.loc 1 370 9 is_stmt 1 view .LVU176
 1152 0010 FFF7FEFF 		bl	oneshot_mods_changed_kb
 1153              	.LVL40:
 1154              	.L107:
 372:quantum/action_util.c **** 
 1155              		.loc 1 372 1 is_stmt 0 view .LVU177
 1156 0014 08BD     		pop	{r3, pc}
 1157              	.L113:
 1158 0016 00BF     		.align	2
 1159              	.L112:
 1160 0018 00000000 		.word	oneshot_mods
 1161              		.cfi_endproc
 1162              	.LFE371:
 1164              		.section	.text.set_oneshot_mods,"ax",%progbits
 1165              		.align	1
 1166              		.global	set_oneshot_mods
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1171              	set_oneshot_mods:
 1172              	.LVL41:
 1173              	.LFB372:
 378:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1174              		.loc 1 378 37 is_stmt 1 view -0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1178              		.loc 1 379 5 view .LVU179
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1179              		.loc 1 379 23 is_stmt 0 view .LVU180
 1180 0000 064A     		ldr	r2, .L116
 1181 0002 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1182              		.loc 1 379 8 view .LVU181
 1183 0004 5207     		lsls	r2, r2, #29
 378:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1184              		.loc 1 378 37 view .LVU182
 1185 0006 08B5     		push	{r3, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 3, -8
 1188              		.cfi_offset 14, -4
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1189              		.loc 1 379 8 view .LVU183
 1190 0008 06D4     		bmi	.L114
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1191              		.loc 1 380 9 is_stmt 1 view .LVU184
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1192              		.loc 1 380 26 is_stmt 0 view .LVU185
 1193 000a 054A     		ldr	r2, .L116+4
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1194              		.loc 1 380 12 view .LVU186
 1195 000c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1196 000e 8142     		cmp	r1, r0
 1197 0010 02D0     		beq	.L114
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1198              		.loc 1 384 13 is_stmt 1 view .LVU187
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1199              		.loc 1 384 26 is_stmt 0 view .LVU188
 1200 0012 1070     		strb	r0, [r2]
 385:quantum/action_util.c ****         }
 1201              		.loc 1 385 13 is_stmt 1 view .LVU189
 1202 0014 FFF7FEFF 		bl	oneshot_mods_changed_kb
 1203              	.LVL42:
 1204              	.L114:
 388:quantum/action_util.c **** 
 1205              		.loc 1 388 1 is_stmt 0 view .LVU190
 1206 0018 08BD     		pop	{r3, pc}
 1207              	.L117:
 1208 001a 00BF     		.align	2
 1209              	.L116:
 1210 001c 00000000 		.word	keymap_config
 1211 0020 00000000 		.word	oneshot_mods
 1212              		.cfi_endproc
 1213              	.LFE372:
 1215              		.section	.text.clear_oneshot_mods,"ax",%progbits
 1216              		.align	1
 1217              		.global	clear_oneshot_mods
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1222              	clear_oneshot_mods:
 1223              	.LFB373:
 394:quantum/action_util.c ****     if (oneshot_mods) {
 1224              		.loc 1 394 31 is_stmt 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1228              		.loc 1 395 5 view .LVU192
 394:quantum/action_util.c ****     if (oneshot_mods) {
 1229              		.loc 1 394 31 is_stmt 0 view .LVU193
 1230 0000 08B5     		push	{r3, lr}
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 3, -8
 1233              		.cfi_offset 14, -4
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1234              		.loc 1 395 9 view .LVU194
 1235 0002 044B     		ldr	r3, .L123
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1236              		.loc 1 395 8 view .LVU195
 1237 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1238 0006 1AB1     		cbz	r2, .L118
 1239              	.LBB22:
 1240              	.LBI22:
 394:quantum/action_util.c ****     if (oneshot_mods) {
 1241              		.loc 1 394 6 is_stmt 1 view .LVU196
 1242              	.LBB23:
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1243              		.loc 1 396 9 view .LVU197
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1244              		.loc 1 396 22 is_stmt 0 view .LVU198
 1245 0008 0020     		movs	r0, #0
 1246 000a 1870     		strb	r0, [r3]
 400:quantum/action_util.c ****     }
 1247              		.loc 1 400 9 is_stmt 1 view .LVU199
 1248 000c FFF7FEFF 		bl	oneshot_mods_changed_kb
 1249              	.LVL43:
 1250              	.L118:
 1251              	.LBE23:
 1252              	.LBE22:
 402:quantum/action_util.c **** #endif
 1253              		.loc 1 402 1 is_stmt 0 view .LVU200
 1254 0010 08BD     		pop	{r3, pc}
 1255              	.L124:
 1256 0012 00BF     		.align	2
 1257              	.L123:
 1258 0014 00000000 		.word	oneshot_mods
 1259              		.cfi_endproc
 1260              	.LFE373:
 1262              		.section	.text.send_keyboard_report,"ax",%progbits
 1263              		.align	1
 1264              		.global	send_keyboard_report
 1265              		.syntax unified
 1266              		.thumb
 1267              		.thumb_func
 1269              	send_keyboard_report:
 1270              	.LFB353:
 222:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 1271              		.loc 1 222 33 is_stmt 1 view -0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1275              		.loc 1 223 5 view .LVU202
 222:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 1276              		.loc 1 222 33 is_stmt 0 view .LVU203
 1277 0000 10B5     		push	{r4, lr}
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 4, -8
 1280              		.cfi_offset 14, -4
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1281              		.loc 1 224 27 view .LVU204
 1282 0002 0D4B     		ldr	r3, .L132
 1283 0004 0D4A     		ldr	r2, .L132+4
 1284 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1285 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1286              		.loc 1 223 20 view .LVU205
 1287 000a 0D4C     		ldr	r4, .L132+8
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1288              		.loc 1 224 27 view .LVU206
 1289 000c 1343     		orrs	r3, r3, r2
 225:quantum/action_util.c **** 
 1290              		.loc 1 225 27 view .LVU207
 1291 000e 0D4A     		ldr	r2, .L132+12
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1292              		.loc 1 223 20 view .LVU208
 1293 0010 2068     		ldr	r0, [r4]
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1294              		.loc 1 224 5 is_stmt 1 view .LVU209
 225:quantum/action_util.c **** 
 1295              		.loc 1 225 5 view .LVU210
 225:quantum/action_util.c **** 
 1296              		.loc 1 225 27 is_stmt 0 view .LVU211
 1297 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1298 0014 1343     		orrs	r3, r3, r2
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1299              		.loc 1 228 9 view .LVU212
 1300 0016 0C4A     		ldr	r2, .L132+16
 225:quantum/action_util.c **** 
 1301              		.loc 1 225 27 view .LVU213
 1302 0018 0370     		strb	r3, [r0]
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1303              		.loc 1 228 5 is_stmt 1 view .LVU214
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1304              		.loc 1 228 9 is_stmt 0 view .LVU215
 1305 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1306              		.loc 1 228 8 view .LVU216
 1307 001c 32B1     		cbz	r2, .L127
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1308              		.loc 1 235 9 is_stmt 1 view .LVU217
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1309              		.loc 1 235 31 is_stmt 0 view .LVU218
 1310 001e 1343     		orrs	r3, r3, r2
 1311 0020 0370     		strb	r3, [r0]
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1312              		.loc 1 236 9 is_stmt 1 view .LVU219
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1313              		.loc 1 236 13 is_stmt 0 view .LVU220
 1314 0022 FFF7FEFF 		bl	has_anykey
 1315              	.LVL44:
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1316              		.loc 1 236 12 view .LVU221
 1317 0026 08B1     		cbz	r0, .L127
 237:quantum/action_util.c ****         }
 1318              		.loc 1 237 13 is_stmt 1 view .LVU222
 1319 0028 FFF7FEFF 		bl	clear_oneshot_mods
 1320              	.LVL45:
 1321              	.L127:
 249:quantum/action_util.c **** }
 1322              		.loc 1 249 5 view .LVU223
 1323 002c 2068     		ldr	r0, [r4]
 250:quantum/action_util.c **** 
 1324              		.loc 1 250 1 is_stmt 0 view .LVU224
 1325 002e BDE81040 		pop	{r4, lr}
 1326              		.cfi_restore 14
 1327              		.cfi_restore 4
 1328              		.cfi_def_cfa_offset 0
 249:quantum/action_util.c **** }
 1329              		.loc 1 249 5 view .LVU225
 1330 0032 FFF7FEBF 		b	host_keyboard_send
 1331              	.LVL46:
 1332              	.L133:
 1333 0036 00BF     		.align	2
 1334              	.L132:
 1335 0038 00000000 		.word	real_mods
 1336 003c 00000000 		.word	weak_mods
 1337 0040 00000000 		.word	keyboard_report
 1338 0044 00000000 		.word	macro_mods
 1339 0048 00000000 		.word	oneshot_mods
 1340              		.cfi_endproc
 1341              	.LFE353:
 1343              		.section	.text.oneshot_layer_changed_user,"ax",%progbits
 1344              		.align	1
 1345              		.weak	oneshot_layer_changed_user
 1346              		.syntax unified
 1347              		.thumb
 1348              		.thumb_func
 1350              	oneshot_layer_changed_user:
 1351              	.LFB386:
 1352              		.cfi_startproc
 428:quantum/action_util.c **** 
 429:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 430:quantum/action_util.c ****  *
 431:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 432:quantum/action_util.c ****  */
 433:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_user(uint8_t layer) {}
 1353              		.loc 1 433 28 is_stmt 1 view -0
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356              		@ link register save eliminated.
 1357 0000 7047     		bx	lr
 1358              		.cfi_endproc
 1359              	.LFE386:
 1361              		.section	.text.oneshot_layer_changed_kb,"ax",%progbits
 1362              		.align	1
 1363              		.weak	oneshot_layer_changed_kb
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1368              	oneshot_layer_changed_kb:
 1369              	.LVL47:
 1370              	.LFB379:
 434:quantum/action_util.c **** 
 435:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 436:quantum/action_util.c ****  *
 437:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 438:quantum/action_util.c ****  */
 439:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_kb(uint8_t layer) { oneshot_layer_changed_user(lay
 1371              		.loc 1 439 68 view -0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              		.loc 1 439 70 view .LVU228
 1376              		.loc 1 439 68 is_stmt 0 view .LVU229
 1377 0000 08B5     		push	{r3, lr}
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 3, -8
 1380              		.cfi_offset 14, -4
 1381              		.loc 1 439 70 view .LVU230
 1382 0002 FFF7FEFF 		bl	oneshot_layer_changed_user
 1383              	.LVL48:
 1384              		.loc 1 439 105 view .LVU231
 1385 0006 08BD     		pop	{r3, pc}
 1386              		.cfi_endproc
 1387              	.LFE379:
 1389              		.section	.text.set_oneshot_layer,"ax",%progbits
 1390              		.align	1
 1391              		.global	set_oneshot_layer
 1392              		.syntax unified
 1393              		.thumb
 1394              		.thumb_func
 1396              	set_oneshot_layer:
 1397              	.LVL49:
 1398              	.LFB344:
 143:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1399              		.loc 1 143 54 is_stmt 1 view -0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 0
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1403              		.loc 1 144 5 view .LVU233
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1404              		.loc 1 144 23 is_stmt 0 view .LVU234
 1405 0000 0A4A     		ldr	r2, .L140
 1406 0002 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1407              		.loc 1 144 8 view .LVU235
 1408 0004 5207     		lsls	r2, r2, #29
 143:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1409              		.loc 1 143 54 view .LVU236
 1410 0006 10B5     		push	{r4, lr}
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 4, -8
 1413              		.cfi_offset 14, -4
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1414              		.loc 1 144 8 view .LVU237
 1415 0008 0CD4     		bmi	.L137
 145:quantum/action_util.c ****         layer_on(layer);
 1416              		.loc 1 145 9 is_stmt 1 view .LVU238
 145:quantum/action_util.c ****         layer_on(layer);
 1417              		.loc 1 145 28 is_stmt 0 view .LVU239
 1418 000a 094C     		ldr	r4, .L140+4
 145:quantum/action_util.c ****         layer_on(layer);
 1419              		.loc 1 145 41 view .LVU240
 1420 000c 41EAC001 		orr	r1, r1, r0, lsl #3
 1421              	.LVL50:
 145:quantum/action_util.c ****         layer_on(layer);
 1422              		.loc 1 145 28 view .LVU241
 1423 0010 2170     		strb	r1, [r4]
 146:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1424              		.loc 1 146 9 is_stmt 1 view .LVU242
 1425 0012 FFF7FEFF 		bl	layer_on
 1426              	.LVL51:
 150:quantum/action_util.c ****     } else {
 1427              		.loc 1 150 9 view .LVU243
 1428              	.LBB24:
 1429              	.LBI24:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1430              		.loc 1 77 16 view .LVU244
 1431              	.LBB25:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1432              		.loc 1 77 42 view .LVU245
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1433              		.loc 1 77 68 is_stmt 0 view .LVU246
 1434 0016 94F90000 		ldrsb	r0, [r4]
 1435              	.LBE25:
 1436              	.LBE24:
 150:quantum/action_util.c ****     } else {
 1437              		.loc 1 150 9 view .LVU247
 1438 001a C0F3C700 		ubfx	r0, r0, #3, #8
 1439 001e FFF7FEFF 		bl	oneshot_layer_changed_kb
 1440              	.LVL52:
 154:quantum/action_util.c **** /** \brief Reset oneshot layer
 1441              		.loc 1 154 1 view .LVU248
 1442 0022 10BD     		pop	{r4, pc}
 1443              	.LVL53:
 1444              	.L137:
 152:quantum/action_util.c ****     }
 1445              		.loc 1 152 9 is_stmt 1 view .LVU249
 154:quantum/action_util.c **** /** \brief Reset oneshot layer
 1446              		.loc 1 154 1 is_stmt 0 view .LVU250
 1447 0024 BDE81040 		pop	{r4, lr}
 1448              		.cfi_restore 14
 1449              		.cfi_restore 4
 1450              		.cfi_def_cfa_offset 0
 152:quantum/action_util.c ****     }
 1451              		.loc 1 152 9 view .LVU251
 1452 0028 FFF7FEBF 		b	layer_on
 1453              	.LVL54:
 1454              	.L141:
 152:quantum/action_util.c ****     }
 1455              		.loc 1 152 9 view .LVU252
 1456              		.align	2
 1457              	.L140:
 1458 002c 00000000 		.word	keymap_config
 1459 0030 00000000 		.word	oneshot_layer_data
 1460              		.cfi_endproc
 1461              	.LFE344:
 1463              		.section	.text.reset_oneshot_layer,"ax",%progbits
 1464              		.align	1
 1465              		.global	reset_oneshot_layer
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1470              	reset_oneshot_layer:
 1471              	.LFB345:
 159:quantum/action_util.c ****     oneshot_layer_data = 0;
 1472              		.loc 1 159 32 is_stmt 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1476              		.loc 1 160 5 view .LVU254
 159:quantum/action_util.c ****     oneshot_layer_data = 0;
 1477              		.loc 1 159 32 is_stmt 0 view .LVU255
 1478 0000 08B5     		push	{r3, lr}
 1479              		.cfi_def_cfa_offset 8
 1480              		.cfi_offset 3, -8
 1481              		.cfi_offset 14, -4
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1482              		.loc 1 160 24 view .LVU256
 1483 0002 034B     		ldr	r3, .L143
 1484 0004 0020     		movs	r0, #0
 1485 0006 1870     		strb	r0, [r3]
 164:quantum/action_util.c **** }
 1486              		.loc 1 164 5 is_stmt 1 view .LVU257
 1487 0008 FFF7FEFF 		bl	oneshot_layer_changed_kb
 1488              	.LVL55:
 165:quantum/action_util.c **** /** \brief Clear oneshot layer
 1489              		.loc 1 165 1 is_stmt 0 view .LVU258
 1490 000c 08BD     		pop	{r3, pc}
 1491              	.L144:
 1492 000e 00BF     		.align	2
 1493              	.L143:
 1494 0010 00000000 		.word	oneshot_layer_data
 1495              		.cfi_endproc
 1496              	.LFE345:
 1498              		.section	.text.clear_oneshot_layer_state,"ax",%progbits
 1499              		.align	1
 1500              		.global	clear_oneshot_layer_state
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1505              	clear_oneshot_layer_state:
 1506              	.LVL56:
 1507              	.LFB346:
 170:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1508              		.loc 1 170 62 is_stmt 1 view -0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 0
 1511              		@ frame_needed = 0, uses_anonymous_args = 0
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1512              		.loc 1 171 5 view .LVU260
 170:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1513              		.loc 1 170 62 is_stmt 0 view .LVU261
 1514 0000 08B5     		push	{r3, lr}
 1515              		.cfi_def_cfa_offset 8
 1516              		.cfi_offset 3, -8
 1517              		.cfi_offset 14, -4
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1518              		.loc 1 171 13 view .LVU262
 1519 0002 0C4A     		ldr	r2, .L149
 1520 0004 92F90030 		ldrsb	r3, [r2]
 1521              	.LVL57:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1522              		.loc 1 172 5 is_stmt 1 view .LVU263
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1523              		.loc 1 172 24 is_stmt 0 view .LVU264
 1524 0008 23EA0000 		bic	r0, r3, r0
 1525              	.LVL58:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1526              		.loc 1 172 24 view .LVU265
 1527 000c 40B2     		sxtb	r0, r0
 1528 000e 1070     		strb	r0, [r2]
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1529              		.loc 1 173 5 is_stmt 1 view .LVU266
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1530              		.loc 1 173 8 is_stmt 0 view .LVU267
 1531 0010 4207     		lsls	r2, r0, #29
 1532 0012 02D1     		bne	.L146
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1533              		.loc 1 173 52 discriminator 1 view .LVU268
 1534 0014 DBB2     		uxtb	r3, r3
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1535              		.loc 1 173 37 discriminator 1 view .LVU269
 1536 0016 8342     		cmp	r3, r0
 1537 0018 03D1     		bne	.L147
 1538              	.LVL59:
 1539              	.L146:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1540              		.loc 1 173 75 discriminator 3 view .LVU270
 1541 001a 074B     		ldr	r3, .L149+4
 1542 001c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1543 001e 5B07     		lsls	r3, r3, #29
 1544 0020 07D5     		bpl	.L145
 1545              	.L147:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1546              		.loc 1 174 9 is_stmt 1 view .LVU271
 1547              	.LBB26:
 1548              	.LBI26:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1549              		.loc 1 77 16 view .LVU272
 1550              	.LBB27:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1551              		.loc 1 77 42 view .LVU273
 1552              	.LBE27:
 1553              	.LBE26:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1554              		.loc 1 174 9 is_stmt 0 view .LVU274
 1555 0022 C0F3C700 		ubfx	r0, r0, #3, #8
 1556 0026 FFF7FEFF 		bl	layer_off
 1557              	.LVL60:
 175:quantum/action_util.c ****     }
 1558              		.loc 1 175 9 is_stmt 1 view .LVU275
 177:quantum/action_util.c **** /** \brief Is oneshot layer active
 1559              		.loc 1 177 1 is_stmt 0 view .LVU276
 1560 002a BDE80840 		pop	{r3, lr}
 1561              		.cfi_remember_state
 1562              		.cfi_restore 14
 1563              		.cfi_restore 3
 1564              		.cfi_def_cfa_offset 0
 175:quantum/action_util.c ****     }
 1565              		.loc 1 175 9 view .LVU277
 1566 002e FFF7FEBF 		b	reset_oneshot_layer
 1567              	.LVL61:
 1568              	.L145:
 1569              		.cfi_restore_state
 177:quantum/action_util.c **** /** \brief Is oneshot layer active
 1570              		.loc 1 177 1 view .LVU278
 1571 0032 08BD     		pop	{r3, pc}
 1572              	.L150:
 1573              		.align	2
 1574              	.L149:
 1575 0034 00000000 		.word	oneshot_layer_data
 1576 0038 00000000 		.word	keymap_config
 1577              		.cfi_endproc
 1578              	.LFE346:
 1580              		.section	.text.has_anymod,"ax",%progbits
 1581              		.align	1
 1582              		.global	has_anymod
 1583              		.syntax unified
 1584              		.thumb
 1585              		.thumb_func
 1587              	has_anymod:
 1588              	.LFB380:
 440:quantum/action_util.c **** 
 441:quantum/action_util.c **** /** \brief inspect keyboard state
 442:quantum/action_util.c ****  *
 443:quantum/action_util.c ****  * FIXME: needs doc
 444:quantum/action_util.c ****  */
 445:quantum/action_util.c **** uint8_t has_anymod(void) { return bitpop(real_mods); }
 1589              		.loc 1 445 26 is_stmt 1 view -0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              		@ link register save eliminated.
 1594              		.loc 1 445 28 view .LVU280
 1595              		.loc 1 445 35 is_stmt 0 view .LVU281
 1596 0000 014B     		ldr	r3, .L152
 1597 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1598 0004 FFF7FEBF 		b	bitpop
 1599              	.LVL62:
 1600              	.L153:
 1601              		.align	2
 1602              	.L152:
 1603 0008 00000000 		.word	real_mods
 1604              		.cfi_endproc
 1605              	.LFE380:
 1607              		.section	.bss.oneshot_layer_data,"aw",%nobits
 1610              	oneshot_layer_data:
 1611 0000 00       		.space	1
 1612              		.section	.bss.oneshot_locked_mods,"aw",%nobits
 1615              	oneshot_locked_mods:
 1616 0000 00       		.space	1
 1617              		.section	.bss.oneshot_mods,"aw",%nobits
 1620              	oneshot_mods:
 1621 0000 00       		.space	1
 1622              		.global	keyboard_report
 1623              		.section	.data.keyboard_report,"aw"
 1624              		.align	2
 1627              	keyboard_report:
 1628 0000 00000000 		.word	__compound_literal.0
 1629              		.section	.bss.__compound_literal.0,"aw",%nobits
 1632              	__compound_literal.0:
 1633 0000 00000000 		.space	32
 1633      00000000 
 1633      00000000 
 1633      00000000 
 1633      00000000 
 1634              		.section	.bss.macro_mods,"aw",%nobits
 1637              	macro_mods:
 1638 0000 00       		.space	1
 1639              		.section	.bss.weak_mods,"aw",%nobits
 1642              	weak_mods:
 1643 0000 00       		.space	1
 1644              		.section	.bss.real_mods,"aw",%nobits
 1647              	real_mods:
 1648 0000 00       		.space	1
 1649              		.text
 1650              	.Letext0:
 1651              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1652              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1653              		.file 5 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 1654              		.file 6 "tmk_core/common/report.h"
 1655              		.file 7 "quantum/logging/debug.h"
 1656              		.file 8 "quantum/keycode_config.h"
 1657              		.file 9 "quantum/bitwise.h"
 1658              		.file 10 "lib/printf/printf.h"
 1659              		.file 11 "tmk_core/common/host.h"
 1660              		.file 12 "quantum/eeconfig.h"
 1661              		.file 13 "quantum/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
     /tmp/ccxsHFTB.s:21     .text.add_key:0000000000000000 $t
     /tmp/ccxsHFTB.s:27     .text.add_key:0000000000000000 add_key
     /tmp/ccxsHFTB.s:49     .text.add_key:000000000000000c $d
     /tmp/ccxsHFTB.s:1627   .data.keyboard_report:0000000000000000 keyboard_report
     /tmp/ccxsHFTB.s:54     .text.del_key:0000000000000000 $t
     /tmp/ccxsHFTB.s:60     .text.del_key:0000000000000000 del_key
     /tmp/ccxsHFTB.s:81     .text.del_key:000000000000000c $d
     /tmp/ccxsHFTB.s:86     .text.clear_keys:0000000000000000 $t
     /tmp/ccxsHFTB.s:92     .text.clear_keys:0000000000000000 clear_keys
     /tmp/ccxsHFTB.s:107    .text.clear_keys:0000000000000008 $d
     /tmp/ccxsHFTB.s:112    .text.get_oneshot_locked_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:118    .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
     /tmp/ccxsHFTB.s:133    .text.get_oneshot_locked_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:1615   .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
     /tmp/ccxsHFTB.s:138    .text.has_oneshot_mods_timed_out:0000000000000000 $t
     /tmp/ccxsHFTB.s:144    .text.has_oneshot_mods_timed_out:0000000000000000 has_oneshot_mods_timed_out
     /tmp/ccxsHFTB.s:159    .text.get_oneshot_layer:0000000000000000 $t
     /tmp/ccxsHFTB.s:165    .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
     /tmp/ccxsHFTB.s:182    .text.get_oneshot_layer:000000000000000c $d
     /tmp/ccxsHFTB.s:1610   .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
     /tmp/ccxsHFTB.s:187    .text.get_oneshot_layer_state:0000000000000000 $t
     /tmp/ccxsHFTB.s:193    .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
     /tmp/ccxsHFTB.s:210    .text.get_oneshot_layer_state:000000000000000c $d
     /tmp/ccxsHFTB.s:215    .text.is_oneshot_layer_active:0000000000000000 $t
     /tmp/ccxsHFTB.s:221    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
     /tmp/ccxsHFTB.s:248    .text.is_oneshot_layer_active:0000000000000010 $d
     /tmp/ccxsHFTB.s:256    .text.oneshot_set:0000000000000000 $t
     /tmp/ccxsHFTB.s:262    .text.oneshot_set:0000000000000000 oneshot_set
     /tmp/ccxsHFTB.s:333    .text.oneshot_set:0000000000000034 $d
     /tmp/ccxsHFTB.s:340    .text.oneshot_toggle:0000000000000000 $t
     /tmp/ccxsHFTB.s:346    .text.oneshot_toggle:0000000000000000 oneshot_toggle
     /tmp/ccxsHFTB.s:367    .text.oneshot_toggle:0000000000000014 $d
     /tmp/ccxsHFTB.s:372    .text.oneshot_enable:0000000000000000 $t
     /tmp/ccxsHFTB.s:378    .text.oneshot_enable:0000000000000000 oneshot_enable
     /tmp/ccxsHFTB.s:393    .text.oneshot_disable:0000000000000000 $t
     /tmp/ccxsHFTB.s:399    .text.oneshot_disable:0000000000000000 oneshot_disable
     /tmp/ccxsHFTB.s:414    .text.is_oneshot_enabled:0000000000000000 $t
     /tmp/ccxsHFTB.s:420    .text.is_oneshot_enabled:0000000000000000 is_oneshot_enabled
     /tmp/ccxsHFTB.s:437    .text.is_oneshot_enabled:000000000000000c $d
     /tmp/ccxsHFTB.s:442    .text.get_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:448    .text.get_mods:0000000000000000 get_mods
     /tmp/ccxsHFTB.s:463    .text.get_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:1647   .bss.real_mods:0000000000000000 real_mods
     /tmp/ccxsHFTB.s:468    .text.add_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:474    .text.add_mods:0000000000000000 add_mods
     /tmp/ccxsHFTB.s:495    .text.add_mods:000000000000000c $d
     /tmp/ccxsHFTB.s:500    .text.del_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:506    .text.del_mods:0000000000000000 del_mods
     /tmp/ccxsHFTB.s:525    .text.del_mods:000000000000000c $d
     /tmp/ccxsHFTB.s:530    .text.set_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:536    .text.set_mods:0000000000000000 set_mods
     /tmp/ccxsHFTB.s:553    .text.set_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:558    .text.clear_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:564    .text.clear_mods:0000000000000000 clear_mods
     /tmp/ccxsHFTB.s:581    .text.clear_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:586    .text.get_weak_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:592    .text.get_weak_mods:0000000000000000 get_weak_mods
     /tmp/ccxsHFTB.s:607    .text.get_weak_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:1642   .bss.weak_mods:0000000000000000 weak_mods
     /tmp/ccxsHFTB.s:612    .text.add_weak_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:618    .text.add_weak_mods:0000000000000000 add_weak_mods
     /tmp/ccxsHFTB.s:639    .text.add_weak_mods:000000000000000c $d
     /tmp/ccxsHFTB.s:644    .text.del_weak_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:650    .text.del_weak_mods:0000000000000000 del_weak_mods
     /tmp/ccxsHFTB.s:669    .text.del_weak_mods:000000000000000c $d
     /tmp/ccxsHFTB.s:674    .text.set_weak_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:680    .text.set_weak_mods:0000000000000000 set_weak_mods
     /tmp/ccxsHFTB.s:697    .text.set_weak_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:702    .text.clear_weak_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:708    .text.clear_weak_mods:0000000000000000 clear_weak_mods
     /tmp/ccxsHFTB.s:725    .text.clear_weak_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:730    .text.get_macro_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:736    .text.get_macro_mods:0000000000000000 get_macro_mods
     /tmp/ccxsHFTB.s:751    .text.get_macro_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:1637   .bss.macro_mods:0000000000000000 macro_mods
     /tmp/ccxsHFTB.s:756    .text.add_macro_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:762    .text.add_macro_mods:0000000000000000 add_macro_mods
     /tmp/ccxsHFTB.s:783    .text.add_macro_mods:000000000000000c $d
     /tmp/ccxsHFTB.s:788    .text.del_macro_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:794    .text.del_macro_mods:0000000000000000 del_macro_mods
     /tmp/ccxsHFTB.s:813    .text.del_macro_mods:000000000000000c $d
     /tmp/ccxsHFTB.s:818    .text.set_macro_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:824    .text.set_macro_mods:0000000000000000 set_macro_mods
     /tmp/ccxsHFTB.s:841    .text.set_macro_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:846    .text.clear_macro_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:852    .text.clear_macro_mods:0000000000000000 clear_macro_mods
     /tmp/ccxsHFTB.s:869    .text.clear_macro_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:874    .text.get_oneshot_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:880    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
     /tmp/ccxsHFTB.s:895    .text.get_oneshot_mods:0000000000000008 $d
     /tmp/ccxsHFTB.s:1620   .bss.oneshot_mods:0000000000000000 oneshot_mods
     /tmp/ccxsHFTB.s:900    .text.oneshot_locked_mods_changed_user:0000000000000000 $t
     /tmp/ccxsHFTB.s:906    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user
     /tmp/ccxsHFTB.s:920    .text.oneshot_locked_mods_changed_kb:0000000000000000 $t
     /tmp/ccxsHFTB.s:926    .text.oneshot_locked_mods_changed_kb:0000000000000000 oneshot_locked_mods_changed_kb
     /tmp/ccxsHFTB.s:948    .text.set_oneshot_locked_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:954    .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
     /tmp/ccxsHFTB.s:985    .text.set_oneshot_locked_mods:0000000000000014 $d
     /tmp/ccxsHFTB.s:990    .text.clear_oneshot_locked_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:996    .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
     /tmp/ccxsHFTB.s:1026   .text.clear_oneshot_locked_mods:0000000000000014 $d
     /tmp/ccxsHFTB.s:1031   .text.oneshot_mods_changed_user:0000000000000000 $t
     /tmp/ccxsHFTB.s:1037   .text.oneshot_mods_changed_user:0000000000000000 oneshot_mods_changed_user
     /tmp/ccxsHFTB.s:1049   .text.oneshot_mods_changed_kb:0000000000000000 $t
     /tmp/ccxsHFTB.s:1055   .text.oneshot_mods_changed_kb:0000000000000000 oneshot_mods_changed_kb
     /tmp/ccxsHFTB.s:1077   .text.add_oneshot_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:1083   .text.add_oneshot_mods:0000000000000000 add_oneshot_mods
     /tmp/ccxsHFTB.s:1115   .text.add_oneshot_mods:0000000000000018 $d
     /tmp/ccxsHFTB.s:1120   .text.del_oneshot_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:1126   .text.del_oneshot_mods:0000000000000000 del_oneshot_mods
     /tmp/ccxsHFTB.s:1160   .text.del_oneshot_mods:0000000000000018 $d
     /tmp/ccxsHFTB.s:1165   .text.set_oneshot_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:1171   .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
     /tmp/ccxsHFTB.s:1210   .text.set_oneshot_mods:000000000000001c $d
     /tmp/ccxsHFTB.s:1216   .text.clear_oneshot_mods:0000000000000000 $t
     /tmp/ccxsHFTB.s:1222   .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
     /tmp/ccxsHFTB.s:1258   .text.clear_oneshot_mods:0000000000000014 $d
     /tmp/ccxsHFTB.s:1263   .text.send_keyboard_report:0000000000000000 $t
     /tmp/ccxsHFTB.s:1269   .text.send_keyboard_report:0000000000000000 send_keyboard_report
     /tmp/ccxsHFTB.s:1335   .text.send_keyboard_report:0000000000000038 $d
     /tmp/ccxsHFTB.s:1344   .text.oneshot_layer_changed_user:0000000000000000 $t
     /tmp/ccxsHFTB.s:1350   .text.oneshot_layer_changed_user:0000000000000000 oneshot_layer_changed_user
     /tmp/ccxsHFTB.s:1362   .text.oneshot_layer_changed_kb:0000000000000000 $t
     /tmp/ccxsHFTB.s:1368   .text.oneshot_layer_changed_kb:0000000000000000 oneshot_layer_changed_kb
     /tmp/ccxsHFTB.s:1390   .text.set_oneshot_layer:0000000000000000 $t
     /tmp/ccxsHFTB.s:1396   .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
     /tmp/ccxsHFTB.s:1458   .text.set_oneshot_layer:000000000000002c $d
     /tmp/ccxsHFTB.s:1464   .text.reset_oneshot_layer:0000000000000000 $t
     /tmp/ccxsHFTB.s:1470   .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
     /tmp/ccxsHFTB.s:1494   .text.reset_oneshot_layer:0000000000000010 $d
     /tmp/ccxsHFTB.s:1499   .text.clear_oneshot_layer_state:0000000000000000 $t
     /tmp/ccxsHFTB.s:1505   .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
     /tmp/ccxsHFTB.s:1575   .text.clear_oneshot_layer_state:0000000000000034 $d
     /tmp/ccxsHFTB.s:1581   .text.has_anymod:0000000000000000 $t
     /tmp/ccxsHFTB.s:1587   .text.has_anymod:0000000000000000 has_anymod
     /tmp/ccxsHFTB.s:1603   .text.has_anymod:0000000000000008 $d
     /tmp/ccxsHFTB.s:1611   .bss.oneshot_layer_data:0000000000000000 $d
     /tmp/ccxsHFTB.s:1616   .bss.oneshot_locked_mods:0000000000000000 $d
     /tmp/ccxsHFTB.s:1621   .bss.oneshot_mods:0000000000000000 $d
     /tmp/ccxsHFTB.s:1624   .data.keyboard_report:0000000000000000 $d
     /tmp/ccxsHFTB.s:1632   .bss.__compound_literal.0:0000000000000000 __compound_literal.0
     /tmp/ccxsHFTB.s:1633   .bss.__compound_literal.0:0000000000000000 $d
     /tmp/ccxsHFTB.s:1638   .bss.macro_mods:0000000000000000 $d
     /tmp/ccxsHFTB.s:1643   .bss.weak_mods:0000000000000000 $d
     /tmp/ccxsHFTB.s:1648   .bss.real_mods:0000000000000000 $d

UNDEFINED SYMBOLS
add_key_to_report
del_key_from_report
clear_keys_from_report
eeconfig_update_keymap
printf_
keymap_config
debug_config
has_anykey
host_keyboard_send
layer_on
layer_off
bitpop
