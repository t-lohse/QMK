   1               		.file	"i2c_slave.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.i2c_slave_init,"ax",@progbits
  11               	.global	i2c_slave_init
  13               	i2c_slave_init:
  14               	.LVL0:
  15               	.LFB0:
  16               		.file 1 "platforms/avr/drivers/i2c_slave.c"
   1:platforms/avr/drivers/i2c_slave.c **** /*  Copyright (C) 2019 Elia Ritterbusch
   2:platforms/avr/drivers/i2c_slave.c ****  +
   3:platforms/avr/drivers/i2c_slave.c ****  *  This program is free software: you can redistribute it and/or modify
   4:platforms/avr/drivers/i2c_slave.c ****  *  it under the terms of the GNU General Public License as published by
   5:platforms/avr/drivers/i2c_slave.c ****  *  the Free Software Foundation, either version 3 of the License, or
   6:platforms/avr/drivers/i2c_slave.c ****  *  (at your option) any later version.
   7:platforms/avr/drivers/i2c_slave.c ****  *
   8:platforms/avr/drivers/i2c_slave.c ****  *  This program is distributed in the hope that it will be useful,
   9:platforms/avr/drivers/i2c_slave.c ****  *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:platforms/avr/drivers/i2c_slave.c ****  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:platforms/avr/drivers/i2c_slave.c ****  *  GNU General Public License for more details.
  12:platforms/avr/drivers/i2c_slave.c ****  *
  13:platforms/avr/drivers/i2c_slave.c ****  *  You should have received a copy of the GNU General Public License
  14:platforms/avr/drivers/i2c_slave.c ****  *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
  15:platforms/avr/drivers/i2c_slave.c ****  */
  16:platforms/avr/drivers/i2c_slave.c **** /* Library made by: g4lvanix
  17:platforms/avr/drivers/i2c_slave.c ****  * GitHub repository: https://github.com/g4lvanix/I2C-slave-lib
  18:platforms/avr/drivers/i2c_slave.c ****  */
  19:platforms/avr/drivers/i2c_slave.c **** 
  20:platforms/avr/drivers/i2c_slave.c **** #include <stddef.h>
  21:platforms/avr/drivers/i2c_slave.c **** #include <avr/io.h>
  22:platforms/avr/drivers/i2c_slave.c **** #include <util/twi.h>
  23:platforms/avr/drivers/i2c_slave.c **** #include <avr/interrupt.h>
  24:platforms/avr/drivers/i2c_slave.c **** #include <stdbool.h>
  25:platforms/avr/drivers/i2c_slave.c **** 
  26:platforms/avr/drivers/i2c_slave.c **** #include "i2c_slave.h"
  27:platforms/avr/drivers/i2c_slave.c **** 
  28:platforms/avr/drivers/i2c_slave.c **** #if defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
  29:platforms/avr/drivers/i2c_slave.c **** #    include "transactions.h"
  30:platforms/avr/drivers/i2c_slave.c **** 
  31:platforms/avr/drivers/i2c_slave.c **** static volatile bool is_callback_executor = false;
  32:platforms/avr/drivers/i2c_slave.c **** #endif  // defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
  33:platforms/avr/drivers/i2c_slave.c **** 
  34:platforms/avr/drivers/i2c_slave.c **** volatile uint8_t i2c_slave_reg[I2C_SLAVE_REG_COUNT];
  35:platforms/avr/drivers/i2c_slave.c **** 
  36:platforms/avr/drivers/i2c_slave.c **** static volatile uint8_t buffer_address;
  37:platforms/avr/drivers/i2c_slave.c **** static volatile bool    slave_has_register_set = false;
  38:platforms/avr/drivers/i2c_slave.c **** 
  39:platforms/avr/drivers/i2c_slave.c **** void i2c_slave_init(uint8_t address) {
  17               		.loc 1 39 38 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  40:platforms/avr/drivers/i2c_slave.c ****     // load address into TWI address register
  41:platforms/avr/drivers/i2c_slave.c ****     TWAR = address;
  23               		.loc 1 41 5 view .LVU1
  24               		.loc 1 41 10 is_stmt 0 view .LVU2
  25 0000 8093 BA00 		sts 186,r24
  42:platforms/avr/drivers/i2c_slave.c ****     // set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
  43:platforms/avr/drivers/i2c_slave.c ****     TWCR = (1 << TWIE) | (1 << TWEA) | (1 << TWINT) | (1 << TWEN);
  26               		.loc 1 43 5 is_stmt 1 view .LVU3
  27               		.loc 1 43 10 is_stmt 0 view .LVU4
  28 0004 85EC      		ldi r24,lo8(-59)
  29               	.LVL1:
  30               		.loc 1 43 10 view .LVU5
  31 0006 8093 BC00 		sts 188,r24
  32               	.LVL2:
  33               	/* epilogue start */
  44:platforms/avr/drivers/i2c_slave.c **** }
  34               		.loc 1 44 1 view .LVU6
  35 000a 0895      		ret
  36               		.cfi_endproc
  37               	.LFE0:
  39               		.section	.text.i2c_slave_stop,"ax",@progbits
  40               	.global	i2c_slave_stop
  42               	i2c_slave_stop:
  43               	.LFB1:
  45:platforms/avr/drivers/i2c_slave.c **** 
  46:platforms/avr/drivers/i2c_slave.c **** void i2c_slave_stop(void) {
  44               		.loc 1 46 27 is_stmt 1 view -0
  45               		.cfi_startproc
  46               	/* prologue: function */
  47               	/* frame size = 0 */
  48               	/* stack size = 0 */
  49               	.L__stack_usage = 0
  47:platforms/avr/drivers/i2c_slave.c ****     // clear acknowledge and enable bits
  48:platforms/avr/drivers/i2c_slave.c ****     TWCR &= ~((1 << TWEA) | (1 << TWEN));
  50               		.loc 1 48 5 view .LVU8
  51               		.loc 1 48 10 is_stmt 0 view .LVU9
  52 0000 ECEB      		ldi r30,lo8(-68)
  53 0002 F0E0      		ldi r31,0
  54 0004 8081      		ld r24,Z
  55 0006 8B7B      		andi r24,lo8(-69)
  56 0008 8083      		st Z,r24
  57               	/* epilogue start */
  49:platforms/avr/drivers/i2c_slave.c **** }
  58               		.loc 1 49 1 view .LVU10
  59 000a 0895      		ret
  60               		.cfi_endproc
  61               	.LFE1:
  63               		.section	.text.__vector_36,"ax",@progbits
  64               	.global	__vector_36
  66               	__vector_36:
  67               	.LFB2:
  50:platforms/avr/drivers/i2c_slave.c **** 
  51:platforms/avr/drivers/i2c_slave.c **** ISR(TWI_vect) {
  68               		.loc 1 51 15 is_stmt 1 view -0
  69               		.cfi_startproc
  70 0000 0F92 0FB6 		__gcc_isr 1
  70      0F92 1F92 
  70      1124 2F93 
  71 000c 3F93      		push r19
  72               	.LCFI0:
  73               		.cfi_def_cfa_offset 3
  74               		.cfi_offset 19, -2
  75 000e 8F93      		push r24
  76               	.LCFI1:
  77               		.cfi_def_cfa_offset 4
  78               		.cfi_offset 24, -3
  79 0010 9F93      		push r25
  80               	.LCFI2:
  81               		.cfi_def_cfa_offset 5
  82               		.cfi_offset 25, -4
  83 0012 EF93      		push r30
  84               	.LCFI3:
  85               		.cfi_def_cfa_offset 6
  86               		.cfi_offset 30, -5
  87 0014 FF93      		push r31
  88               	.LCFI4:
  89               		.cfi_def_cfa_offset 7
  90               		.cfi_offset 31, -6
  91               	/* prologue: Signal */
  92               	/* frame size = 0 */
  93               	/* stack size = 5...9 */
  94               	.L__stack_usage = 5 + __gcc_isr.n_pushed
  52:platforms/avr/drivers/i2c_slave.c ****     uint8_t ack = 1;
  95               		.loc 1 52 5 view .LVU12
  96               	.LVL3:
  53:platforms/avr/drivers/i2c_slave.c **** 
  54:platforms/avr/drivers/i2c_slave.c ****     switch (TW_STATUS) {
  97               		.loc 1 54 5 view .LVU13
  98               		.loc 1 54 13 is_stmt 0 view .LVU14
  99 0016 8091 B900 		lds r24,185
 100 001a 982F      		mov r25,r24
 101 001c 987F      		andi r25,lo8(-8)
 102               		.loc 1 54 5 view .LVU15
 103 001e 9038      		cpi r25,lo8(-128)
 104 0020 01F0      		breq .L4
 105 0022 00F4      		brsh .L5
 106 0024 9923      		tst r25
 107 0026 01F4      		brne .+2
 108 0028 00C0      		rjmp .L6
 109 002a 9036      		cpi r25,lo8(96)
 110 002c 01F0      		breq .L7
 111               	.L13:
  52:platforms/avr/drivers/i2c_slave.c ****     uint8_t ack = 1;
 112               		.loc 1 52 13 view .LVU16
 113 002e 81E0      		ldi r24,lo8(1)
 114 0030 00C0      		rjmp .L8
 115               	.L5:
 116               		.loc 1 54 5 view .LVU17
 117 0032 887E      		andi r24,lo8(-24)
 118 0034 883A      		cpi r24,lo8(-88)
 119 0036 01F4      		brne .L13
  55:platforms/avr/drivers/i2c_slave.c ****         case TW_SR_SLA_ACK:
  56:platforms/avr/drivers/i2c_slave.c ****             // The device is now a slave receiver
  57:platforms/avr/drivers/i2c_slave.c ****             slave_has_register_set = false;
  58:platforms/avr/drivers/i2c_slave.c **** #if defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
  59:platforms/avr/drivers/i2c_slave.c ****             is_callback_executor = false;
  60:platforms/avr/drivers/i2c_slave.c **** #endif  // defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
  61:platforms/avr/drivers/i2c_slave.c ****             break;
  62:platforms/avr/drivers/i2c_slave.c **** 
  63:platforms/avr/drivers/i2c_slave.c ****         case TW_SR_DATA_ACK:
  64:platforms/avr/drivers/i2c_slave.c ****             // This device is a slave receiver and has received data
  65:platforms/avr/drivers/i2c_slave.c ****             // First byte is the location then the bytes will be writen in buffer with auto-increme
  66:platforms/avr/drivers/i2c_slave.c ****             if (!slave_has_register_set) {
  67:platforms/avr/drivers/i2c_slave.c ****                 buffer_address = TWDR;
  68:platforms/avr/drivers/i2c_slave.c **** 
  69:platforms/avr/drivers/i2c_slave.c ****                 if (buffer_address >= I2C_SLAVE_REG_COUNT) {  // address out of bounds dont ack
  70:platforms/avr/drivers/i2c_slave.c ****                     ack            = 0;
  71:platforms/avr/drivers/i2c_slave.c ****                     buffer_address = 0;
  72:platforms/avr/drivers/i2c_slave.c ****                 }
  73:platforms/avr/drivers/i2c_slave.c ****                 slave_has_register_set = true;  // address has been received now fill in buffer
  74:platforms/avr/drivers/i2c_slave.c **** 
  75:platforms/avr/drivers/i2c_slave.c **** #if defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
  76:platforms/avr/drivers/i2c_slave.c ****                 // Work out if we're attempting to execute a callback
  77:platforms/avr/drivers/i2c_slave.c ****                 is_callback_executor = buffer_address == split_transaction_table[I2C_EXECUTE_CALLBA
  78:platforms/avr/drivers/i2c_slave.c **** #endif  // defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
  79:platforms/avr/drivers/i2c_slave.c ****             } else {
  80:platforms/avr/drivers/i2c_slave.c ****                 i2c_slave_reg[buffer_address] = TWDR;
  81:platforms/avr/drivers/i2c_slave.c ****                 buffer_address++;
  82:platforms/avr/drivers/i2c_slave.c **** 
  83:platforms/avr/drivers/i2c_slave.c **** #if defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
  84:platforms/avr/drivers/i2c_slave.c ****                 // If we're intending to execute a transaction callback, do so, as we've just recei
  85:platforms/avr/drivers/i2c_slave.c ****                 if (is_callback_executor) {
  86:platforms/avr/drivers/i2c_slave.c ****                     split_transaction_desc_t *trans = &split_transaction_table[split_shmem->transac
  87:platforms/avr/drivers/i2c_slave.c ****                     if (trans->slave_callback) {
  88:platforms/avr/drivers/i2c_slave.c ****                         trans->slave_callback(trans->initiator2target_buffer_size, split_trans_init
  89:platforms/avr/drivers/i2c_slave.c ****                     }
  90:platforms/avr/drivers/i2c_slave.c ****                 }
  91:platforms/avr/drivers/i2c_slave.c **** #endif  // defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
  92:platforms/avr/drivers/i2c_slave.c ****             }
  93:platforms/avr/drivers/i2c_slave.c ****             break;
  94:platforms/avr/drivers/i2c_slave.c **** 
  95:platforms/avr/drivers/i2c_slave.c ****         case TW_ST_SLA_ACK:
  96:platforms/avr/drivers/i2c_slave.c ****         case TW_ST_DATA_ACK:
  97:platforms/avr/drivers/i2c_slave.c ****             // This device is a slave transmitter and master has requested data
  98:platforms/avr/drivers/i2c_slave.c ****             TWDR = i2c_slave_reg[buffer_address];
 120               		.loc 1 98 13 is_stmt 1 view .LVU18
 121               		.loc 1 98 33 is_stmt 0 view .LVU19
 122 0038 E091 0000 		lds r30,buffer_address
 123 003c F0E0      		ldi r31,0
 124 003e E050      		subi r30,lo8(-(i2c_slave_reg))
 125 0040 F040      		sbci r31,hi8(-(i2c_slave_reg))
 126 0042 8081      		ld r24,Z
 127               		.loc 1 98 18 view .LVU20
 128 0044 8093 BB00 		sts 187,r24
 129 0048 00C0      		rjmp .L14
 130               	.L7:
  57:platforms/avr/drivers/i2c_slave.c **** #if defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
 131               		.loc 1 57 13 is_stmt 1 view .LVU21
  57:platforms/avr/drivers/i2c_slave.c **** #if defined(USE_I2C) && defined(SPLIT_COMMON_TRANSACTIONS)
 132               		.loc 1 57 36 is_stmt 0 view .LVU22
 133 004a 1092 0000 		sts slave_has_register_set,__zero_reg__
  61:platforms/avr/drivers/i2c_slave.c **** 
 134               		.loc 1 61 13 is_stmt 1 view .LVU23
 135 004e 00C0      		rjmp .L13
 136               	.L4:
  66:platforms/avr/drivers/i2c_slave.c ****                 buffer_address = TWDR;
 137               		.loc 1 66 13 view .LVU24
  66:platforms/avr/drivers/i2c_slave.c ****                 buffer_address = TWDR;
 138               		.loc 1 66 17 is_stmt 0 view .LVU25
 139 0050 8091 0000 		lds r24,slave_has_register_set
  66:platforms/avr/drivers/i2c_slave.c ****                 buffer_address = TWDR;
 140               		.loc 1 66 16 view .LVU26
 141 0054 8111      		cpse r24,__zero_reg__
 142 0056 00C0      		rjmp .L10
  67:platforms/avr/drivers/i2c_slave.c **** 
 143               		.loc 1 67 17 is_stmt 1 view .LVU27
  67:platforms/avr/drivers/i2c_slave.c **** 
 144               		.loc 1 67 34 is_stmt 0 view .LVU28
 145 0058 8091 BB00 		lds r24,187
  67:platforms/avr/drivers/i2c_slave.c **** 
 146               		.loc 1 67 32 view .LVU29
 147 005c 8093 0000 		sts buffer_address,r24
  69:platforms/avr/drivers/i2c_slave.c ****                     ack            = 0;
 148               		.loc 1 69 17 is_stmt 1 view .LVU30
  69:platforms/avr/drivers/i2c_slave.c ****                     ack            = 0;
 149               		.loc 1 69 36 is_stmt 0 view .LVU31
 150 0060 8091 0000 		lds r24,buffer_address
  69:platforms/avr/drivers/i2c_slave.c ****                     ack            = 0;
 151               		.loc 1 69 20 view .LVU32
 152 0064 8E31      		cpi r24,lo8(30)
 153 0066 00F0      		brlo .L12
  70:platforms/avr/drivers/i2c_slave.c ****                     buffer_address = 0;
 154               		.loc 1 70 21 is_stmt 1 view .LVU33
 155               	.LVL4:
  71:platforms/avr/drivers/i2c_slave.c ****                 }
 156               		.loc 1 71 21 view .LVU34
  71:platforms/avr/drivers/i2c_slave.c ****                 }
 157               		.loc 1 71 36 is_stmt 0 view .LVU35
 158 0068 1092 0000 		sts buffer_address,__zero_reg__
  70:platforms/avr/drivers/i2c_slave.c ****                     buffer_address = 0;
 159               		.loc 1 70 36 view .LVU36
 160 006c 80E0      		ldi r24,0
 161               	.LVL5:
 162               	.L11:
  73:platforms/avr/drivers/i2c_slave.c **** 
 163               		.loc 1 73 17 is_stmt 1 view .LVU37
  73:platforms/avr/drivers/i2c_slave.c **** 
 164               		.loc 1 73 40 is_stmt 0 view .LVU38
 165 006e 91E0      		ldi r25,lo8(1)
 166 0070 9093 0000 		sts slave_has_register_set,r25
 167               	.LVL6:
 168               	.L8:
  99:platforms/avr/drivers/i2c_slave.c ****             buffer_address++;
 100:platforms/avr/drivers/i2c_slave.c ****             break;
 101:platforms/avr/drivers/i2c_slave.c **** 
 102:platforms/avr/drivers/i2c_slave.c ****         case TW_BUS_ERROR:
 103:platforms/avr/drivers/i2c_slave.c ****             // We got an error, reset i2c
 104:platforms/avr/drivers/i2c_slave.c ****             TWCR = 0;
 105:platforms/avr/drivers/i2c_slave.c ****         default:
 106:platforms/avr/drivers/i2c_slave.c ****             break;
 107:platforms/avr/drivers/i2c_slave.c ****     }
 108:platforms/avr/drivers/i2c_slave.c **** 
 109:platforms/avr/drivers/i2c_slave.c ****     // Reset i2c state machine to be ready for next interrupt
 110:platforms/avr/drivers/i2c_slave.c ****     TWCR |= (1 << TWIE) | (1 << TWINT) | (ack << TWEA) | (1 << TWEN);
 169               		.loc 1 110 5 is_stmt 1 view .LVU39
 170               		.loc 1 110 10 is_stmt 0 view .LVU40
 171 0074 2091 BC00 		lds r18,188
 172               		.loc 1 110 47 view .LVU41
 173 0078 30E4      		ldi r19,lo8(64)
 174 007a 839F      		mul r24,r19
 175 007c C001      		movw r24,r0
 176 007e 1124      		clr __zero_reg__
 177               	.LVL7:
 178               		.loc 1 110 10 view .LVU42
 179 0080 822B      		or r24,r18
 180 0082 8568      		ori r24,lo8(-123)
 181 0084 8093 BC00 		sts 188,r24
 182               	/* epilogue start */
 111:platforms/avr/drivers/i2c_slave.c **** }
 183               		.loc 1 111 1 view .LVU43
 184 0088 FF91      		pop r31
 185 008a EF91      		pop r30
 186 008c 9F91      		pop r25
 187 008e 8F91      		pop r24
 188 0090 3F91      		pop r19
 189 0092 2F91 1F90 		__gcc_isr 2
 189      0F90 0FBE 
 189      0F90 
 190 009c 1895      		reti
 191               	.LVL8:
 192               	.L12:
  52:platforms/avr/drivers/i2c_slave.c **** 
 193               		.loc 1 52 13 view .LVU44
 194 009e 81E0      		ldi r24,lo8(1)
 195 00a0 00C0      		rjmp .L11
 196               	.L10:
  80:platforms/avr/drivers/i2c_slave.c ****                 buffer_address++;
 197               		.loc 1 80 17 is_stmt 1 view .LVU45
  80:platforms/avr/drivers/i2c_slave.c ****                 buffer_address++;
 198               		.loc 1 80 30 is_stmt 0 view .LVU46
 199 00a2 E091 0000 		lds r30,buffer_address
 200 00a6 F0E0      		ldi r31,0
  80:platforms/avr/drivers/i2c_slave.c ****                 buffer_address++;
 201               		.loc 1 80 49 view .LVU47
 202 00a8 8091 BB00 		lds r24,187
  80:platforms/avr/drivers/i2c_slave.c ****                 buffer_address++;
 203               		.loc 1 80 47 view .LVU48
 204 00ac E050      		subi r30,lo8(-(i2c_slave_reg))
 205 00ae F040      		sbci r31,hi8(-(i2c_slave_reg))
 206 00b0 8083      		st Z,r24
  81:platforms/avr/drivers/i2c_slave.c **** 
 207               		.loc 1 81 17 is_stmt 1 view .LVU49
 208               	.L14:
  99:platforms/avr/drivers/i2c_slave.c ****             break;
 209               		.loc 1 99 13 view .LVU50
  99:platforms/avr/drivers/i2c_slave.c ****             break;
 210               		.loc 1 99 27 is_stmt 0 view .LVU51
 211 00b2 8091 0000 		lds r24,buffer_address
 212 00b6 8F5F      		subi r24,lo8(-(1))
 213 00b8 8093 0000 		sts buffer_address,r24
 100:platforms/avr/drivers/i2c_slave.c **** 
 214               		.loc 1 100 13 is_stmt 1 view .LVU52
 215 00bc 00C0      		rjmp .L13
 216               	.L6:
 104:platforms/avr/drivers/i2c_slave.c ****         default:
 217               		.loc 1 104 13 view .LVU53
 104:platforms/avr/drivers/i2c_slave.c ****         default:
 218               		.loc 1 104 18 is_stmt 0 view .LVU54
 219 00be 1092 BC00 		sts 188,__zero_reg__
 220 00c2 00C0      		rjmp .L13
 221               		__gcc_isr 0,r18
 222               		.cfi_endproc
 223               	.LFE2:
 225               		.section	.bss.slave_has_register_set,"aw",@nobits
 228               	slave_has_register_set:
 229 0000 00        		.zero	1
 230               		.section	.bss.buffer_address,"aw",@nobits
 233               	buffer_address:
 234 0000 00        		.zero	1
 235               		.comm	i2c_slave_reg,30,1
 236               		.text
 237               	.Letext0:
 238               		.file 2 "/usr/avr/include/stdint.h"
 239               		.file 3 "platforms/avr/drivers/i2c_slave.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c_slave.c
     /tmp/ccsneXkd.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccsneXkd.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccsneXkd.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccsneXkd.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccsneXkd.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccsneXkd.s:13     .text.i2c_slave_init:0000000000000000 i2c_slave_init
     /tmp/ccsneXkd.s:42     .text.i2c_slave_stop:0000000000000000 i2c_slave_stop
     /tmp/ccsneXkd.s:66     .text.__vector_36:0000000000000000 __vector_36
                            *ABS*:0000000000000004 __gcc_isr.n_pushed.001
     /tmp/ccsneXkd.s:233    .bss.buffer_address:0000000000000000 buffer_address
                            *COM*:000000000000001e i2c_slave_reg
     /tmp/ccsneXkd.s:228    .bss.slave_has_register_set:0000000000000000 slave_has_register_set

UNDEFINED SYMBOLS
__do_clear_bss
