   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_for_keycode,"ax",@progbits
  11               	.global	action_for_keycode
  13               	action_for_keycode:
  14               	.LVL0:
  15               	.LFB31:
  16               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #include "action.h"
  23:quantum/keymap_common.c **** #include "action_macro.h"
  24:quantum/keymap_common.c **** #include "debug.h"
  25:quantum/keymap_common.c **** #include "quantum.h"
  26:quantum/keymap_common.c **** 
  27:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  28:quantum/keymap_common.c **** #    include "backlight.h"
  29:quantum/keymap_common.c **** #endif
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  32:quantum/keymap_common.c **** #    include "process_midi.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  36:quantum/keymap_common.c **** 
  37:quantum/keymap_common.c **** #include <inttypes.h>
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** /* converts key to action */
  40:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  41:quantum/keymap_common.c ****     // 16bit keycodes - important
  42:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  43:quantum/keymap_common.c ****     return action_for_keycode(keycode);
  44:quantum/keymap_common.c **** };
  45:quantum/keymap_common.c **** 
  46:quantum/keymap_common.c **** action_t action_for_keycode(uint16_t keycode) {
  17               		.loc 1 46 47 view -0
  18               		.cfi_startproc
  19               		.loc 1 46 47 is_stmt 0 view .LVU1
  20 0000 CF93      		push r28
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 28, -2
  24 0002 DF93      		push r29
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 29, -3
  28               	/* prologue: function */
  29               	/* frame size = 0 */
  30               	/* stack size = 2 */
  31               	.L__stack_usage = 2
  47:quantum/keymap_common.c ****     // keycode remapping
  48:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  32               		.loc 1 48 5 is_stmt 1 view .LVU2
  33               		.loc 1 48 15 is_stmt 0 view .LVU3
  34 0004 0E94 0000 		call keycode_config
  35               	.LVL1:
  36               		.loc 1 48 15 view .LVU4
  37 0008 EC01      		movw r28,r24
  38               	.LVL2:
  49:quantum/keymap_common.c **** 
  50:quantum/keymap_common.c ****     action_t action = {};
  39               		.loc 1 50 5 is_stmt 1 view .LVU5
  51:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  40               		.loc 1 51 5 view .LVU6
  52:quantum/keymap_common.c **** 
  53:quantum/keymap_common.c ****     (void)action_layer;
  41               		.loc 1 53 5 view .LVU7
  54:quantum/keymap_common.c ****     (void)when;
  42               		.loc 1 54 5 view .LVU8
  55:quantum/keymap_common.c ****     (void)mod;
  43               		.loc 1 55 5 view .LVU9
  56:quantum/keymap_common.c **** 
  57:quantum/keymap_common.c ****     switch (keycode) {
  44               		.loc 1 57 5 view .LVU10
  45 000a 8115      		cp r24,__zero_reg__
  46 000c 23E5      		ldi r18,83
  47 000e 9207      		cpc r25,r18
  48 0010 00F0      		brlo .+2
  49 0012 00C0      		rjmp .L2
  50 0014 8115      		cp r24,__zero_reg__
  51 0016 32E5      		ldi r19,82
  52 0018 9307      		cpc r25,r19
  53 001a 00F0      		brlo .+2
  54 001c 00C0      		rjmp .L3
  55 001e 883E      		cpi r24,-24
  56 0020 9105      		cpc r25,__zero_reg__
  57 0022 00F4      		brsh .L4
  58 0024 803E      		cpi r24,-32
  59 0026 9105      		cpc r25,__zero_reg__
  60 0028 00F4      		brsh .L5
  61 002a 883A      		cpi r24,-88
  62 002c 9105      		cpc r25,__zero_reg__
  63 002e 00F4      		brsh .L6
  64 0030 853A      		cpi r24,-91
  65 0032 9105      		cpc r25,__zero_reg__
  66 0034 00F0      		brlo .+2
  67 0036 00C0      		rjmp .L7
  68 0038 8130      		cpi r24,1
  69 003a 9105      		cpc r25,__zero_reg__
  70 003c 01F0      		breq .L5
  71 003e 0497      		sbiw r24,4
  72               	.LVL3:
  73               		.loc 1 57 5 is_stmt 0 view .LVU11
  74 0040 813A      		cpi r24,-95
  75 0042 9105      		cpc r25,__zero_reg__
  76 0044 00F4      		brsh .L25
  77               	.LVL4:
  78               	.L5:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  59:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  60:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  61:quantum/keymap_common.c ****             break;
  62:quantum/keymap_common.c **** #ifdef EXTRAKEY_ENABLE
  63:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  65:quantum/keymap_common.c ****             break;
  66:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  67:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c **** #endif
  70:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
  71:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  72:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  73:quantum/keymap_common.c ****             break;
  74:quantum/keymap_common.c **** #endif
  75:quantum/keymap_common.c ****         case KC_TRNS:
  76:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  77:quantum/keymap_common.c ****             break;
  78:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  79:quantum/keymap_common.c ****             // Has a modifier
  80:quantum/keymap_common.c ****             // Split it up
  81:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  82:quantum/keymap_common.c ****             break;
  83:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
  84:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  85:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  86:quantum/keymap_common.c ****             break;
  87:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  88:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  89:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  90:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  91:quantum/keymap_common.c ****             break;
  92:quantum/keymap_common.c **** #endif
  93:quantum/keymap_common.c **** #ifndef NO_ACTION_MACRO
  94:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  95:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  96:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  97:quantum/keymap_common.c ****             else
  98:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  99:quantum/keymap_common.c ****             break;
 100:quantum/keymap_common.c **** #endif
 101:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 102:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
 103:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 104:quantum/keymap_common.c ****             break;
 105:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 106:quantum/keymap_common.c ****             // Layer set "GOTO"
 107:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 109:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 110:quantum/keymap_common.c ****             break;
 111:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 112:quantum/keymap_common.c ****             // Momentary action_layer
 113:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 114:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 115:quantum/keymap_common.c ****             break;
 116:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 117:quantum/keymap_common.c ****             // Set default action_layer
 118:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 119:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 120:quantum/keymap_common.c ****             break;
 121:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 122:quantum/keymap_common.c ****             // Set toggle
 123:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 124:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 125:quantum/keymap_common.c ****             break;
 126:quantum/keymap_common.c **** #endif
 127:quantum/keymap_common.c **** #ifndef NO_ACTION_ONESHOT
 128:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 129:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 130:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 131:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 132:quantum/keymap_common.c ****             break;
 133:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 134:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 135:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c **** #endif
 139:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 140:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 141:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 142:quantum/keymap_common.c ****             break;
 143:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 144:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 147:quantum/keymap_common.c ****             break;
 148:quantum/keymap_common.c **** #endif
 149:quantum/keymap_common.c **** #ifndef NO_ACTION_TAPPING
 150:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 151:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 153:quantum/keymap_common.c ****             break;
 154:quantum/keymap_common.c **** #endif
 155:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 156:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 157:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 158:quantum/keymap_common.c ****             break;
 159:quantum/keymap_common.c **** #endif
 160:quantum/keymap_common.c **** 
 161:quantum/keymap_common.c ****         default:
 162:quantum/keymap_common.c ****             action.code = ACTION_NO;
 163:quantum/keymap_common.c ****             break;
 164:quantum/keymap_common.c ****     }
 165:quantum/keymap_common.c ****     return action;
  79               		.loc 1 165 5 is_stmt 1 view .LVU12
 166:quantum/keymap_common.c **** }
  80               		.loc 1 166 1 is_stmt 0 view .LVU13
  81 0046 CE01      		movw r24,r28
  82               	/* epilogue start */
  83 0048 DF91      		pop r29
  84 004a CF91      		pop r28
  85 004c 0895      		ret
  86               	.LVL5:
  87               	.L6:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  88               		.loc 1 57 5 view .LVU14
  89 004e 885A      		subi r24,-88
  90 0050 9109      		sbc r25,__zero_reg__
  91               	.LVL6:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  92               		.loc 1 57 5 view .LVU15
  93 0052 4797      		sbiw r24,23
  94 0054 00F4      		brsh .+2
  95 0056 00C0      		rjmp .L29
  96               	.L25:
 162:quantum/keymap_common.c ****             break;
  97               		.loc 1 162 25 view .LVU16
  98 0058 D0E0      		ldi r29,0
  99 005a C0E0      		ldi r28,0
 100               	.LVL7:
 162:quantum/keymap_common.c ****             break;
 101               		.loc 1 162 25 view .LVU17
 102 005c 00C0      		rjmp .L5
 103               	.LVL8:
 104               	.L4:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 105               		.loc 1 57 5 view .LVU18
 106 005e C115      		cp r28,__zero_reg__
 107 0060 81E5      		ldi r24,81
 108 0062 D807      		cpc r29,r24
 109               	.LVL9:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 110               		.loc 1 57 5 view .LVU19
 111 0064 00F4      		brsh .L9
 112 0066 C115      		cp r28,__zero_reg__
 113 0068 20E5      		ldi r18,80
 114 006a D207      		cpc r29,r18
 115 006c 00F0      		brlo .+2
 116 006e 00C0      		rjmp .L10
 117 0070 C115      		cp r28,__zero_reg__
 118 0072 30E2      		ldi r19,32
 119 0074 D307      		cpc r29,r19
 120 0076 00F4      		brsh .L11
 121 0078 CF3F      		cpi r28,-1
 122 007a D105      		cpc r29,__zero_reg__
 123 007c 01F0      		breq .L25
 124 007e 00F0      		brlo .L25
 125 0080 00C0      		rjmp .L5
 126               	.L11:
 127 0082 CE01      		movw r24,r28
 128 0084 9054      		subi r25,64
 129 0086 8115      		cp r24,__zero_reg__
 130 0088 9041      		sbci r25,16
 131 008a 00F4      		brsh .L25
 103:quantum/keymap_common.c ****             break;
 132               		.loc 1 103 13 is_stmt 1 view .LVU20
 103:quantum/keymap_common.c ****             break;
 133               		.loc 1 103 27 is_stmt 0 view .LVU21
 134 008c DF70      		andi r29,15
 135               	.LVL10:
 103:quantum/keymap_common.c ****             break;
 136               		.loc 1 103 27 view .LVU22
 137 008e D06A      		ori r29,160
 138               	.LVL11:
 104:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 139               		.loc 1 104 13 is_stmt 1 view .LVU23
 140 0090 00C0      		rjmp .L5
 141               	.LVL12:
 142               	.L9:
 111:quantum/keymap_common.c ****             // Momentary action_layer
 143               		.loc 1 111 48 view .LVU24
 113:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 144               		.loc 1 113 13 view .LVU25
 114:quantum/keymap_common.c ****             break;
 145               		.loc 1 114 13 view .LVU26
 114:quantum/keymap_common.c ****             break;
 146               		.loc 1 114 28 is_stmt 0 view .LVU27
 147 0092 DC2F      		mov r29,r28
 148 0094 CC27      		clr r28
 149               	.LVL13:
 114:quantum/keymap_common.c ****             break;
 150               		.loc 1 114 28 view .LVU28
 151 0096 C16F      		ori r28,241
 152 0098 D06A      		ori r29,160
 153               	.LVL14:
 115:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 154               		.loc 1 115 13 is_stmt 1 view .LVU29
 155 009a 00C0      		rjmp .L5
 156               	.LVL15:
 157               	.L2:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 158               		.loc 1 57 5 is_stmt 0 view .LVU30
 159 009c 8115      		cp r24,__zero_reg__
 160 009e 37E5      		ldi r19,87
 161 00a0 9307      		cpc r25,r19
 162 00a2 00F4      		brsh .L13
 163 00a4 C115      		cp r28,__zero_reg__
 164 00a6 86E5      		ldi r24,86
 165 00a8 D807      		cpc r29,r24
 166               	.LVL16:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 167               		.loc 1 57 5 view .LVU31
 168 00aa 00F0      		brlo .+2
 169 00ac 00C0      		rjmp .L14
 170 00ae C115      		cp r28,__zero_reg__
 171 00b0 25E5      		ldi r18,85
 172 00b2 D207      		cpc r29,r18
 173 00b4 00F4      		brsh .L15
 174 00b6 C115      		cp r28,__zero_reg__
 175 00b8 34E5      		ldi r19,84
 176 00ba D307      		cpc r29,r19
 177 00bc 00F0      		brlo .+2
 178 00be 00C0      		rjmp .L16
 121:quantum/keymap_common.c ****             // Set toggle
 179               		.loc 1 121 54 is_stmt 1 view .LVU32
 123:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 180               		.loc 1 123 13 view .LVU33
 181               	.LVL17:
 124:quantum/keymap_common.c ****             break;
 182               		.loc 1 124 13 view .LVU34
 124:quantum/keymap_common.c ****             break;
 183               		.loc 1 124 28 is_stmt 0 view .LVU35
 184 00c0 9E01      		movw r18,r28
 185 00c2 2370      		andi r18,3
 186 00c4 3327      		clr r19
 187 00c6 81E0      		ldi r24,lo8(1)
 188 00c8 90E0      		ldi r25,0
 189 00ca 00C0      		rjmp 2f
 190               		1:
 191 00cc 880F      		lsl r24
 192 00ce 991F      		rol r25
 193               		2:
 194 00d0 2A95      		dec r18
 195 00d2 02F4      		brpl 1b
 196 00d4 C695      		lsr r28
 197 00d6 C695      		lsr r28
 198               	.LVL18:
 124:quantum/keymap_common.c ****             break;
 199               		.loc 1 124 28 view .LVU36
 200 00d8 20E2      		ldi r18,lo8(32)
 201 00da C29F      		mul r28,r18
 202 00dc E001      		movw r28,r0
 203 00de 1124      		clr __zero_reg__
 204 00e0 C82B      		or r28,r24
 205 00e2 D92B      		or r29,r25
 206 00e4 DA68      		ori r29,138
 207               	.LVL19:
 125:quantum/keymap_common.c **** #endif
 208               		.loc 1 125 13 is_stmt 1 view .LVU37
 209 00e6 00C0      		rjmp .L5
 210               	.LVL20:
 211               	.L15:
 133:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 212               		.loc 1 133 54 view .LVU38
 135:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 213               		.loc 1 135 13 view .LVU39
 135:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 214               		.loc 1 135 27 is_stmt 0 view .LVU40
 215 00e8 8C2F      		mov r24,r28
 216 00ea 0E94 0000 		call mod_config
 217               	.LVL21:
 136:quantum/keymap_common.c ****             break;
 218               		.loc 1 136 13 is_stmt 1 view .LVU41
 136:quantum/keymap_common.c ****             break;
 219               		.loc 1 136 27 is_stmt 0 view .LVU42
 220 00ee C82F      		mov r28,r24
 221               	.LVL22:
 136:quantum/keymap_common.c ****             break;
 222               		.loc 1 136 27 view .LVU43
 223 00f0 D0E0      		ldi r29,0
 224 00f2 DC2F      		mov r29,r28
 225 00f4 CC27      		clr r28
 226 00f6 CC27      		clr r28
 227 00f8 DF71      		andi r29,31
 228               	.LVL23:
 229               	.L33:
 152:quantum/keymap_common.c ****             break;
 230               		.loc 1 152 27 view .LVU44
 231 00fa D062      		ori r29,32
 232               	.LVL24:
 153:quantum/keymap_common.c **** #endif
 233               		.loc 1 153 13 is_stmt 1 view .LVU45
 234 00fc 00C0      		rjmp .L5
 235               	.LVL25:
 236               	.L13:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 237               		.loc 1 57 5 is_stmt 0 view .LVU46
 238 00fe 8115      		cp r24,__zero_reg__
 239 0100 3AE5      		ldi r19,90
 240 0102 9307      		cpc r25,r19
 241 0104 00F4      		brsh .L17
 242 0106 C115      		cp r28,__zero_reg__
 243 0108 89E5      		ldi r24,89
 244 010a D807      		cpc r29,r24
 245               	.LVL26:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 246               		.loc 1 57 5 view .LVU47
 247 010c 00F0      		brlo .+2
 248 010e 00C0      		rjmp .L18
 249 0110 CE01      		movw r24,r28
 250 0112 9855      		subi r25,88
 251 0114 8F3F      		cpi r24,-1
 252 0116 9105      		cpc r25,__zero_reg__
 253 0118 01F0      		breq .+4
 254 011a 00F0      		brlo .+2
 255 011c 00C0      		rjmp .L25
 141:quantum/keymap_common.c ****             break;
 256               		.loc 1 141 13 is_stmt 1 view .LVU48
 141:quantum/keymap_common.c ****             break;
 257               		.loc 1 141 27 is_stmt 0 view .LVU49
 258 011e DC2F      		mov r29,r28
 259 0120 CC27      		clr r28
 260               	.LVL27:
 141:quantum/keymap_common.c ****             break;
 261               		.loc 1 141 27 view .LVU50
 262 0122 C06F      		ori r28,240
 263 0124 D06A      		ori r29,160
 264               	.LVL28:
 142:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 265               		.loc 1 142 13 is_stmt 1 view .LVU51
 266 0126 00C0      		rjmp .L5
 267               	.LVL29:
 268               	.L17:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 269               		.loc 1 57 5 is_stmt 0 view .LVU52
 270 0128 9056      		subi r25,96
 271               	.LVL30:
  57:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 272               		.loc 1 57 5 view .LVU53
 273 012a 8115      		cp r24,__zero_reg__
 274 012c 9042      		sbci r25,32
 275 012e 00F0      		brlo .+2
 276 0130 00C0      		rjmp .L25
 151:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 277               		.loc 1 151 13 is_stmt 1 view .LVU54
 151:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 278               		.loc 1 151 27 is_stmt 0 view .LVU55
 279 0132 8D2F      		mov r24,r29
 280 0134 8F71      		andi r24,lo8(31)
 281 0136 0E94 0000 		call mod_config
 282               	.LVL31:
 152:quantum/keymap_common.c ****             break;
 283               		.loc 1 152 13 is_stmt 1 view .LVU56
 152:quantum/keymap_common.c ****             break;
 284               		.loc 1 152 27 is_stmt 0 view .LVU57
 285 013a 90E0      		ldi r25,0
 286 013c 982F      		mov r25,r24
 287 013e 8827      		clr r24
 288               	.LVL32:
 152:quantum/keymap_common.c ****             break;
 289               		.loc 1 152 27 view .LVU58
 290 0140 8827      		clr r24
 291 0142 9F71      		andi r25,31
 292 0144 8C2B      		or r24,r28
 293 0146 EC01      		movw r28,r24
 294               	.LVL33:
 152:quantum/keymap_common.c ****             break;
 295               		.loc 1 152 27 view .LVU59
 296 0148 00C0      		rjmp .L33
 297               	.LVL34:
 298               	.L7:
  64:quantum/keymap_common.c ****             break;
 299               		.loc 1 64 13 is_stmt 1 view .LVU60
  64:quantum/keymap_common.c ****             break;
 300               		.loc 1 64 27 is_stmt 0 view .LVU61
 301 014a A497      		sbiw r28,36
 302 014c D064      		ori r29,64
 303               	.LVL35:
  65:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
 304               		.loc 1 65 13 is_stmt 1 view .LVU62
 305 014e 00C0      		rjmp .L5
 306               	.LVL36:
 307               	.L29:
  67:quantum/keymap_common.c ****             break;
 308               		.loc 1 67 13 view .LVU63
 309               	.LBB6:
 310               	.LBI6:
 311               		.file 2 "tmk_core/common/report.h"
   1:tmk_core/common/report.h **** /*
   2:tmk_core/common/report.h **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/report.h **** 
   4:tmk_core/common/report.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/report.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/report.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/report.h **** (at your option) any later version.
   8:tmk_core/common/report.h **** 
   9:tmk_core/common/report.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/report.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/report.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/report.h **** GNU General Public License for more details.
  13:tmk_core/common/report.h **** 
  14:tmk_core/common/report.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/report.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/report.h **** */
  17:tmk_core/common/report.h **** 
  18:tmk_core/common/report.h **** #pragma once
  19:tmk_core/common/report.h **** 
  20:tmk_core/common/report.h **** #include <stdint.h>
  21:tmk_core/common/report.h **** #include <stdbool.h>
  22:tmk_core/common/report.h **** #include "keycode.h"
  23:tmk_core/common/report.h **** 
  24:tmk_core/common/report.h **** // clang-format off
  25:tmk_core/common/report.h **** 
  26:tmk_core/common/report.h **** /* HID report IDs */
  27:tmk_core/common/report.h **** enum hid_report_ids {
  28:tmk_core/common/report.h ****     REPORT_ID_KEYBOARD = 1,
  29:tmk_core/common/report.h ****     REPORT_ID_MOUSE,
  30:tmk_core/common/report.h ****     REPORT_ID_SYSTEM,
  31:tmk_core/common/report.h ****     REPORT_ID_CONSUMER,
  32:tmk_core/common/report.h ****     REPORT_ID_NKRO,
  33:tmk_core/common/report.h ****     REPORT_ID_JOYSTICK,
  34:tmk_core/common/report.h ****     REPORT_ID_DIGITIZER
  35:tmk_core/common/report.h **** };
  36:tmk_core/common/report.h **** 
  37:tmk_core/common/report.h **** /* Mouse buttons */
  38:tmk_core/common/report.h **** #define MOUSE_BTN_MASK(n) (1 << (n))
  39:tmk_core/common/report.h **** enum mouse_buttons {
  40:tmk_core/common/report.h ****     MOUSE_BTN1 = MOUSE_BTN_MASK(0),
  41:tmk_core/common/report.h ****     MOUSE_BTN2 = MOUSE_BTN_MASK(1),
  42:tmk_core/common/report.h ****     MOUSE_BTN3 = MOUSE_BTN_MASK(2),
  43:tmk_core/common/report.h ****     MOUSE_BTN4 = MOUSE_BTN_MASK(3),
  44:tmk_core/common/report.h ****     MOUSE_BTN5 = MOUSE_BTN_MASK(4),
  45:tmk_core/common/report.h ****     MOUSE_BTN6 = MOUSE_BTN_MASK(5),
  46:tmk_core/common/report.h ****     MOUSE_BTN7 = MOUSE_BTN_MASK(6),
  47:tmk_core/common/report.h ****     MOUSE_BTN8 = MOUSE_BTN_MASK(7)
  48:tmk_core/common/report.h **** };
  49:tmk_core/common/report.h **** 
  50:tmk_core/common/report.h **** /* Consumer Page (0x0C)
  51:tmk_core/common/report.h ****  *
  52:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=75
  53:tmk_core/common/report.h ****  */
  54:tmk_core/common/report.h **** enum consumer_usages {
  55:tmk_core/common/report.h ****     // 15.5 Display Controls
  56:tmk_core/common/report.h ****     SNAPSHOT               = 0x065,
  57:tmk_core/common/report.h ****     BRIGHTNESS_UP          = 0x06F, // https://www.usb.org/sites/default/files/hutrr41_0.pdf
  58:tmk_core/common/report.h ****     BRIGHTNESS_DOWN        = 0x070,
  59:tmk_core/common/report.h ****     // 15.7 Transport Controls
  60:tmk_core/common/report.h ****     TRANSPORT_RECORD       = 0x0B2,
  61:tmk_core/common/report.h ****     TRANSPORT_FAST_FORWARD = 0x0B3,
  62:tmk_core/common/report.h ****     TRANSPORT_REWIND       = 0x0B4,
  63:tmk_core/common/report.h ****     TRANSPORT_NEXT_TRACK   = 0x0B5,
  64:tmk_core/common/report.h ****     TRANSPORT_PREV_TRACK   = 0x0B6,
  65:tmk_core/common/report.h ****     TRANSPORT_STOP         = 0x0B7,
  66:tmk_core/common/report.h ****     TRANSPORT_EJECT        = 0x0B8,
  67:tmk_core/common/report.h ****     TRANSPORT_RANDOM_PLAY  = 0x0B9,
  68:tmk_core/common/report.h ****     TRANSPORT_STOP_EJECT   = 0x0CC,
  69:tmk_core/common/report.h ****     TRANSPORT_PLAY_PAUSE   = 0x0CD,
  70:tmk_core/common/report.h ****     // 15.9.1 Audio Controls - Volume
  71:tmk_core/common/report.h ****     AUDIO_MUTE             = 0x0E2,
  72:tmk_core/common/report.h ****     AUDIO_VOL_UP           = 0x0E9,
  73:tmk_core/common/report.h ****     AUDIO_VOL_DOWN         = 0x0EA,
  74:tmk_core/common/report.h ****     // 15.15 Application Launch Buttons
  75:tmk_core/common/report.h ****     AL_CC_CONFIG           = 0x183,
  76:tmk_core/common/report.h ****     AL_EMAIL               = 0x18A,
  77:tmk_core/common/report.h ****     AL_CALCULATOR          = 0x192,
  78:tmk_core/common/report.h ****     AL_LOCAL_BROWSER       = 0x194,
  79:tmk_core/common/report.h ****     AL_LOCK                = 0x19E,
  80:tmk_core/common/report.h ****     AL_CONTROL_PANEL       = 0x19F,
  81:tmk_core/common/report.h ****     AL_ASSISTANT           = 0x1CB,
  82:tmk_core/common/report.h ****     AL_KEYBOARD_LAYOUT     = 0x1AE,
  83:tmk_core/common/report.h ****     // 15.16 Generic GUI Application Controls
  84:tmk_core/common/report.h ****     AC_NEW                 = 0x201,
  85:tmk_core/common/report.h ****     AC_OPEN                = 0x202,
  86:tmk_core/common/report.h ****     AC_CLOSE               = 0x203,
  87:tmk_core/common/report.h ****     AC_EXIT                = 0x204,
  88:tmk_core/common/report.h ****     AC_MAXIMIZE            = 0x205,
  89:tmk_core/common/report.h ****     AC_MINIMIZE            = 0x206,
  90:tmk_core/common/report.h ****     AC_SAVE                = 0x207,
  91:tmk_core/common/report.h ****     AC_PRINT               = 0x208,
  92:tmk_core/common/report.h ****     AC_PROPERTIES          = 0x209,
  93:tmk_core/common/report.h ****     AC_UNDO                = 0x21A,
  94:tmk_core/common/report.h ****     AC_COPY                = 0x21B,
  95:tmk_core/common/report.h ****     AC_CUT                 = 0x21C,
  96:tmk_core/common/report.h ****     AC_PASTE               = 0x21D,
  97:tmk_core/common/report.h ****     AC_SELECT_ALL          = 0x21E,
  98:tmk_core/common/report.h ****     AC_FIND                = 0x21F,
  99:tmk_core/common/report.h ****     AC_SEARCH              = 0x221,
 100:tmk_core/common/report.h ****     AC_HOME                = 0x223,
 101:tmk_core/common/report.h ****     AC_BACK                = 0x224,
 102:tmk_core/common/report.h ****     AC_FORWARD             = 0x225,
 103:tmk_core/common/report.h ****     AC_STOP                = 0x226,
 104:tmk_core/common/report.h ****     AC_REFRESH             = 0x227,
 105:tmk_core/common/report.h ****     AC_BOOKMARKS           = 0x22A
 106:tmk_core/common/report.h **** };
 107:tmk_core/common/report.h **** 
 108:tmk_core/common/report.h **** /* Generic Desktop Page (0x01)
 109:tmk_core/common/report.h ****  *
 110:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=26
 111:tmk_core/common/report.h ****  */
 112:tmk_core/common/report.h **** enum desktop_usages {
 113:tmk_core/common/report.h ****     // 4.5.1 System Controls - Power Controls
 114:tmk_core/common/report.h ****     SYSTEM_POWER_DOWN             = 0x81,
 115:tmk_core/common/report.h ****     SYSTEM_SLEEP                  = 0x82,
 116:tmk_core/common/report.h ****     SYSTEM_WAKE_UP                = 0x83,
 117:tmk_core/common/report.h ****     SYSTEM_RESTART                = 0x8F,
 118:tmk_core/common/report.h ****     // 4.10 System Display Controls
 119:tmk_core/common/report.h ****     SYSTEM_DISPLAY_TOGGLE_INT_EXT = 0xB5
 120:tmk_core/common/report.h **** };
 121:tmk_core/common/report.h **** 
 122:tmk_core/common/report.h **** // clang-format on
 123:tmk_core/common/report.h **** 
 124:tmk_core/common/report.h **** #define NKRO_SHARED_EP
 125:tmk_core/common/report.h **** /* key report size(NKRO or boot mode) */
 126:tmk_core/common/report.h **** #if defined(NKRO_ENABLE)
 127:tmk_core/common/report.h **** #    if defined(PROTOCOL_LUFA) || defined(PROTOCOL_CHIBIOS)
 128:tmk_core/common/report.h **** #        include "protocol/usb_descriptor.h"
 129:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (SHARED_EPSIZE - 2)
 130:tmk_core/common/report.h **** #    elif defined(PROTOCOL_ARM_ATSAM)
 131:tmk_core/common/report.h **** #        include "protocol/arm_atsam/usb/udi_device_epsize.h"
 132:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (NKRO_EPSIZE - 1)
 133:tmk_core/common/report.h **** #        undef NKRO_SHARED_EP
 134:tmk_core/common/report.h **** #        undef MOUSE_SHARED_EP
 135:tmk_core/common/report.h **** #    else
 136:tmk_core/common/report.h **** #        error "NKRO not supported with this protocol"
 137:tmk_core/common/report.h **** #    endif
 138:tmk_core/common/report.h **** #endif
 139:tmk_core/common/report.h **** 
 140:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 141:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 9
 142:tmk_core/common/report.h **** #else
 143:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 8
 144:tmk_core/common/report.h **** #endif
 145:tmk_core/common/report.h **** 
 146:tmk_core/common/report.h **** #define KEYBOARD_REPORT_KEYS 6
 147:tmk_core/common/report.h **** 
 148:tmk_core/common/report.h **** #ifdef __cplusplus
 149:tmk_core/common/report.h **** extern "C" {
 150:tmk_core/common/report.h **** #endif
 151:tmk_core/common/report.h **** 
 152:tmk_core/common/report.h **** /*
 153:tmk_core/common/report.h ****  * keyboard report is 8-byte array retains state of 8 modifiers and 6 keys.
 154:tmk_core/common/report.h ****  *
 155:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7
 156:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 157:tmk_core/common/report.h ****  * desc |mods    |reserved|keys[0] |keys[1] |keys[2] |keys[3] |keys[4] |keys[5]
 158:tmk_core/common/report.h ****  *
 159:tmk_core/common/report.h ****  * It is exended to 16 bytes to retain 120keys+8mods when NKRO mode.
 160:tmk_core/common/report.h ****  *
 161:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7        ... |15
 162:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------     +--------
 163:tmk_core/common/report.h ****  * desc |mods    |bits[0] |bits[1] |bits[2] |bits[3] |bits[4] |bits[5] |bits[6]  ... |bit[14]
 164:tmk_core/common/report.h ****  *
 165:tmk_core/common/report.h ****  * mods retains state of 8 modifiers.
 166:tmk_core/common/report.h ****  *
 167:tmk_core/common/report.h ****  *  bit |0       |1       |2       |3       |4       |5       |6       |7
 168:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 169:tmk_core/common/report.h ****  * desc |Lcontrol|Lshift  |Lalt    |Lgui    |Rcontrol|Rshift  |Ralt    |Rgui
 170:tmk_core/common/report.h ****  *
 171:tmk_core/common/report.h ****  */
 172:tmk_core/common/report.h **** typedef union {
 173:tmk_core/common/report.h ****     uint8_t raw[KEYBOARD_REPORT_SIZE];
 174:tmk_core/common/report.h ****     struct {
 175:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 176:tmk_core/common/report.h ****         uint8_t report_id;
 177:tmk_core/common/report.h **** #endif
 178:tmk_core/common/report.h ****         uint8_t mods;
 179:tmk_core/common/report.h ****         uint8_t reserved;
 180:tmk_core/common/report.h ****         uint8_t keys[KEYBOARD_REPORT_KEYS];
 181:tmk_core/common/report.h ****     };
 182:tmk_core/common/report.h **** #ifdef NKRO_ENABLE
 183:tmk_core/common/report.h ****     struct nkro_report {
 184:tmk_core/common/report.h **** #    ifdef NKRO_SHARED_EP
 185:tmk_core/common/report.h ****         uint8_t report_id;
 186:tmk_core/common/report.h **** #    endif
 187:tmk_core/common/report.h ****         uint8_t mods;
 188:tmk_core/common/report.h ****         uint8_t bits[KEYBOARD_REPORT_BITS];
 189:tmk_core/common/report.h ****     } nkro;
 190:tmk_core/common/report.h **** #endif
 191:tmk_core/common/report.h **** } __attribute__((packed)) report_keyboard_t;
 192:tmk_core/common/report.h **** 
 193:tmk_core/common/report.h **** typedef struct {
 194:tmk_core/common/report.h ****     uint8_t  report_id;
 195:tmk_core/common/report.h ****     uint16_t usage;
 196:tmk_core/common/report.h **** } __attribute__((packed)) report_extra_t;
 197:tmk_core/common/report.h **** 
 198:tmk_core/common/report.h **** typedef struct {
 199:tmk_core/common/report.h **** #ifdef MOUSE_SHARED_EP
 200:tmk_core/common/report.h ****     uint8_t report_id;
 201:tmk_core/common/report.h **** #endif
 202:tmk_core/common/report.h ****     uint8_t buttons;
 203:tmk_core/common/report.h ****     int8_t  x;
 204:tmk_core/common/report.h ****     int8_t  y;
 205:tmk_core/common/report.h ****     int8_t  v;
 206:tmk_core/common/report.h ****     int8_t  h;
 207:tmk_core/common/report.h **** } __attribute__((packed)) report_mouse_t;
 208:tmk_core/common/report.h **** 
 209:tmk_core/common/report.h **** typedef struct {
 210:tmk_core/common/report.h **** #ifdef DIGITIZER_SHARED_EP
 211:tmk_core/common/report.h ****     uint8_t report_id;
 212:tmk_core/common/report.h **** #endif
 213:tmk_core/common/report.h ****     uint8_t  tip : 1;
 214:tmk_core/common/report.h ****     uint8_t  inrange : 1;
 215:tmk_core/common/report.h ****     uint8_t  pad2 : 6;
 216:tmk_core/common/report.h ****     uint16_t x;
 217:tmk_core/common/report.h ****     uint16_t y;
 218:tmk_core/common/report.h **** } __attribute__((packed)) report_digitizer_t;
 219:tmk_core/common/report.h **** 
 220:tmk_core/common/report.h **** typedef struct {
 221:tmk_core/common/report.h **** #if JOYSTICK_AXES_COUNT > 0
 222:tmk_core/common/report.h **** #    if JOYSTICK_AXES_RESOLUTION > 8
 223:tmk_core/common/report.h ****     int16_t axes[JOYSTICK_AXES_COUNT];
 224:tmk_core/common/report.h **** #    else
 225:tmk_core/common/report.h ****     int8_t axes[JOYSTICK_AXES_COUNT];
 226:tmk_core/common/report.h **** #    endif
 227:tmk_core/common/report.h **** #endif
 228:tmk_core/common/report.h **** 
 229:tmk_core/common/report.h **** #if JOYSTICK_BUTTON_COUNT > 0
 230:tmk_core/common/report.h ****     uint8_t buttons[(JOYSTICK_BUTTON_COUNT - 1) / 8 + 1];
 231:tmk_core/common/report.h **** #endif
 232:tmk_core/common/report.h **** } __attribute__((packed)) joystick_report_t;
 233:tmk_core/common/report.h **** 
 234:tmk_core/common/report.h **** /* keycode to system usage */
 235:tmk_core/common/report.h **** static inline uint16_t KEYCODE2SYSTEM(uint8_t key) {
 236:tmk_core/common/report.h ****     switch (key) {
 237:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 238:tmk_core/common/report.h ****             return SYSTEM_POWER_DOWN;
 239:tmk_core/common/report.h ****         case KC_SYSTEM_SLEEP:
 240:tmk_core/common/report.h ****             return SYSTEM_SLEEP;
 241:tmk_core/common/report.h ****         case KC_SYSTEM_WAKE:
 242:tmk_core/common/report.h ****             return SYSTEM_WAKE_UP;
 243:tmk_core/common/report.h ****         default:
 244:tmk_core/common/report.h ****             return 0;
 245:tmk_core/common/report.h ****     }
 246:tmk_core/common/report.h **** }
 247:tmk_core/common/report.h **** 
 248:tmk_core/common/report.h **** /* keycode to consumer usage */
 249:tmk_core/common/report.h **** static inline uint16_t KEYCODE2CONSUMER(uint8_t key) {
 312               		.loc 2 249 24 view .LVU64
 250:tmk_core/common/report.h ****     switch (key) {
 313               		.loc 2 250 5 view .LVU65
 314               		.loc 2 250 5 is_stmt 0 view .LVU66
 315               	.LBE6:
  67:quantum/keymap_common.c ****             break;
 316               		.loc 1 67 27 view .LVU67
 317 0150 C85A      		subi r28,lo8(-(88))
 318               	.LVL37:
  67:quantum/keymap_common.c ****             break;
 319               		.loc 1 67 27 view .LVU68
 320 0152 D0E0      		ldi r29,0
 321 0154 CC0F      		lsl r28
 322 0156 DD1F      		rol r29
 323 0158 C050      		subi r28,lo8(-(CSWTCH.2))
 324 015a D040      		sbci r29,hi8(-(CSWTCH.2))
 325 015c 0990      		ld __tmp_reg__,Y+
 326 015e D881      		ld r29,Y
 327 0160 C02D      		mov r28,__tmp_reg__
 328 0162 D464      		ori r29,68
 329               	.LVL38:
  68:quantum/keymap_common.c **** #endif
 330               		.loc 1 68 13 is_stmt 1 view .LVU69
 331 0164 00C0      		rjmp .L5
 332               	.LVL39:
 333               	.L10:
 105:quantum/keymap_common.c ****             // Layer set "GOTO"
 334               		.loc 1 105 34 view .LVU70
 107:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 335               		.loc 1 107 13 view .LVU71
 108:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 336               		.loc 1 108 13 view .LVU72
 109:quantum/keymap_common.c ****             break;
 337               		.loc 1 109 13 view .LVU73
 107:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 338               		.loc 1 107 37 is_stmt 0 view .LVU74
 339 0166 9E01      		movw r18,r28
 340 0168 64E0      		ldi r22,4
 341               		1:
 342 016a 3695      		lsr r19
 343 016c 2795      		ror r18
 344 016e 6A95      		dec r22
 345 0170 01F4      		brne 1b
 107:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 346               		.loc 1 107 26 view .LVU75
 347 0172 2370      		andi r18,lo8(3)
 109:quantum/keymap_common.c ****             break;
 348               		.loc 1 109 28 view .LVU76
 349 0174 8C2F      		mov r24,r28
 350 0176 8695      		lsr r24
 351 0178 8695      		lsr r24
 352 017a 8370      		andi r24,lo8(3)
 353 017c 30E2      		ldi r19,lo8(32)
 354 017e 839F      		mul r24,r19
 355 0180 C001      		movw r24,r0
 356 0182 1124      		clr __zero_reg__
 357 0184 922B      		or r25,r18
 358 0186 C370      		andi r28,lo8(3)
 359               	.LVL40:
 109:quantum/keymap_common.c ****             break;
 360               		.loc 1 109 28 view .LVU77
 361 0188 21E0      		ldi r18,lo8(1)
 362 018a 30E0      		ldi r19,0
 363 018c 00C0      		rjmp 2f
 364               		1:
 365 018e 220F      		lsl r18
 366 0190 331F      		rol r19
 367               		2:
 368 0192 CA95      		dec r28
 369 0194 02F4      		brpl 1b
 370 0196 822B      		or r24,r18
 371 0198 932B      		or r25,r19
 372 019a EC01      		movw r28,r24
 373               	.L34:
 119:quantum/keymap_common.c ****             break;
 374               		.loc 1 119 28 view .LVU78
 375 019c DC68      		ori r29,140
 376               	.LVL41:
 120:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 377               		.loc 1 120 13 is_stmt 1 view .LVU79
 378 019e 00C0      		rjmp .L5
 379               	.LVL42:
 380               	.L3:
 116:quantum/keymap_common.c ****             // Set default action_layer
 381               		.loc 1 116 48 view .LVU80
 118:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 382               		.loc 1 118 13 view .LVU81
 119:quantum/keymap_common.c ****             break;
 383               		.loc 1 119 13 view .LVU82
 119:quantum/keymap_common.c ****             break;
 384               		.loc 1 119 28 is_stmt 0 view .LVU83
 385 01a0 9C01      		movw r18,r24
 386 01a2 2370      		andi r18,3
 387 01a4 3327      		clr r19
 388 01a6 81E0      		ldi r24,lo8(1)
 389 01a8 90E0      		ldi r25,0
 390               	.LVL43:
 119:quantum/keymap_common.c ****             break;
 391               		.loc 1 119 28 view .LVU84
 392 01aa 00C0      		rjmp 2f
 393               		1:
 394 01ac 880F      		lsl r24
 395 01ae 991F      		rol r25
 396               		2:
 397 01b0 2A95      		dec r18
 398 01b2 02F4      		brpl 1b
 399 01b4 C695      		lsr r28
 400 01b6 C695      		lsr r28
 401               	.LVL44:
 119:quantum/keymap_common.c ****             break;
 402               		.loc 1 119 28 view .LVU85
 403 01b8 20E2      		ldi r18,lo8(32)
 404 01ba C29F      		mul r28,r18
 405 01bc E001      		movw r28,r0
 406 01be 1124      		clr __zero_reg__
 407 01c0 C82B      		or r28,r24
 408 01c2 D92B      		or r29,r25
 409 01c4 00C0      		rjmp .L34
 410               	.LVL45:
 411               	.L16:
 128:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 412               		.loc 1 128 58 is_stmt 1 view .LVU86
 130:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 413               		.loc 1 130 13 view .LVU87
 131:quantum/keymap_common.c ****             break;
 414               		.loc 1 131 13 view .LVU88
 131:quantum/keymap_common.c ****             break;
 415               		.loc 1 131 28 is_stmt 0 view .LVU89
 416 01c6 DC2F      		mov r29,r28
 417 01c8 CC27      		clr r28
 418               	.LVL46:
 131:quantum/keymap_common.c ****             break;
 419               		.loc 1 131 28 view .LVU90
 420 01ca C46F      		ori r28,244
 421 01cc D06A      		ori r29,160
 422               	.LVL47:
 132:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 423               		.loc 1 132 13 is_stmt 1 view .LVU91
 424 01ce 00C0      		rjmp .L5
 425               	.LVL48:
 426               	.L18:
 144:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 427               		.loc 1 144 13 view .LVU92
 144:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 428               		.loc 1 144 28 is_stmt 0 view .LVU93
 429 01d0 8C2F      		mov r24,r28
 430 01d2 8F70      		andi r24,lo8(15)
 431 01d4 0E94 0000 		call mod_config
 432               	.LVL49:
 145:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 433               		.loc 1 145 13 is_stmt 1 view .LVU94
 146:quantum/keymap_common.c ****             break;
 434               		.loc 1 146 13 view .LVU95
 145:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 435               		.loc 1 145 37 is_stmt 0 view .LVU96
 436 01d8 34E0      		ldi r19,4
 437               		1:
 438 01da D695      		lsr r29
 439 01dc C795      		ror r28
 440 01de 3A95      		dec r19
 441 01e0 01F4      		brne 1b
 442               	.LVL50:
 145:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 443               		.loc 1 145 26 view .LVU97
 444 01e2 CF70      		andi r28,lo8(15)
 146:quantum/keymap_common.c ****             break;
 445               		.loc 1 146 28 view .LVU98
 446 01e4 9C2F      		mov r25,r28
 447 01e6 EC01      		movw r28,r24
 448 01e8 D069      		ori r29,144
 449               	.LVL51:
 147:quantum/keymap_common.c **** #endif
 450               		.loc 1 147 13 is_stmt 1 view .LVU99
 451 01ea 00C0      		rjmp .L5
 452               	.LVL52:
 453               	.L14:
 157:quantum/keymap_common.c ****             break;
 454               		.loc 1 157 13 view .LVU100
 157:quantum/keymap_common.c ****             break;
 455               		.loc 1 157 27 is_stmt 0 view .LVU101
 456 01ec DD27      		clr r29
 457               	.LVL53:
 157:quantum/keymap_common.c ****             break;
 458               		.loc 1 157 27 view .LVU102
 459 01ee D066      		ori r29,96
 460               	.LVL54:
 158:quantum/keymap_common.c **** #endif
 461               		.loc 1 158 13 is_stmt 1 view .LVU103
 462 01f0 00C0      		rjmp .L5
 463               		.cfi_endproc
 464               	.LFE31:
 466               		.section	.text.action_get_macro,"ax",@progbits
 467               		.weak	action_get_macro
 469               	action_get_macro:
 470               	.LVL55:
 471               	.LFB32:
 167:quantum/keymap_common.c **** 
 168:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 169:quantum/keymap_common.c **** 
 170:quantum/keymap_common.c **** };
 171:quantum/keymap_common.c **** 
 172:quantum/keymap_common.c **** /* Macro */
 173:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 472               		.loc 1 173 101 view -0
 473               		.cfi_startproc
 474               	/* prologue: function */
 475               	/* frame size = 0 */
 476               	/* stack size = 0 */
 477               	.L__stack_usage = 0
 478               		.loc 1 173 103 view .LVU105
 479               		.loc 1 173 122 is_stmt 0 view .LVU106
 480 0000 90E0      		ldi r25,0
 481 0002 80E0      		ldi r24,0
 482               	.LVL56:
 483               	/* epilogue start */
 484               		.loc 1 173 122 view .LVU107
 485 0004 0895      		ret
 486               		.cfi_endproc
 487               	.LFE32:
 489               		.section	.text.action_function,"ax",@progbits
 490               		.weak	action_function
 492               	action_function:
 493               	.LVL57:
 494               	.LFB33:
 174:quantum/keymap_common.c **** 
 175:quantum/keymap_common.c **** /* Function */
 176:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
 495               		.loc 1 176 90 is_stmt 1 view -0
 496               		.cfi_startproc
 497               	/* prologue: function */
 498               	/* frame size = 0 */
 499               	/* stack size = 0 */
 500               	.L__stack_usage = 0
 501               		.loc 1 176 91 view .LVU109
 502               	/* epilogue start */
 503 0000 0895      		ret
 504               		.cfi_endproc
 505               	.LFE33:
 507               		.section	.text.keymap_key_to_keycode,"ax",@progbits
 508               		.weak	keymap_key_to_keycode
 510               	keymap_key_to_keycode:
 511               	.LVL58:
 512               	.LFB34:
 177:quantum/keymap_common.c **** 
 178:quantum/keymap_common.c **** // translates key to keycode
 179:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
 513               		.loc 1 179 83 view -0
 514               		.cfi_startproc
 515               	/* prologue: function */
 516               	/* frame size = 0 */
 517               	/* stack size = 0 */
 518               	.L__stack_usage = 0
 519               		.loc 1 179 83 is_stmt 0 view .LVU111
 520 0000 972F      		mov r25,r23
 180:quantum/keymap_common.c ****     // Read entire word (16bits)
 181:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
 521               		.loc 1 181 5 is_stmt 1 view .LVU112
 522               	.LBB7:
 523               		.loc 1 181 12 view .LVU113
 524 0002 70E0      		ldi r23,0
 525               		.loc 1 181 12 is_stmt 0 view .LVU114
 526 0004 26E0      		ldi r18,lo8(6)
 527 0006 929F      		mul r25,r18
 528 0008 600D      		add r22,r0
 529 000a 711D      		adc r23,r1
 530 000c 1124      		clr __zero_reg__
 531               	.LVL59:
 532               		.loc 1 181 12 view .LVU115
 533 000e FB01      		movw r30,r22
 534 0010 9CE3      		ldi r25,lo8(60)
 535 0012 899F      		mul r24,r25
 536 0014 E00D      		add r30,r0
 537 0016 F11D      		adc r31,r1
 538 0018 1124      		clr __zero_reg__
 539 001a EE0F      		lsl r30
 540 001c FF1F      		rol r31
 541               	.LVL60:
 542               		.loc 1 181 12 view .LVU116
 543 001e E050      		subi r30,lo8(-(keymaps))
 544 0020 F040      		sbci r31,hi8(-(keymaps))
 545               	.LVL61:
 546               		.loc 1 181 12 is_stmt 1 view .LVU117
 547               		.loc 1 181 12 view .LVU118
 548               	/* #APP */
 549               	 ;  181 "quantum/keymap_common.c" 1
 550 0022 8591      		lpm r24, Z+
 551 0024 9491      		lpm r25, Z
 552               		
 553               	 ;  0 "" 2
 554               	.LVL62:
 555               		.loc 1 181 12 view .LVU119
 556               	/* #NOAPP */
 557               	/* epilogue start */
 558               	.LBE7:
 182:quantum/keymap_common.c **** }
 559               		.loc 1 182 1 is_stmt 0 view .LVU120
 560 0026 0895      		ret
 561               		.cfi_endproc
 562               	.LFE34:
 564               		.section	.text.action_for_key,"ax",@progbits
 565               	.global	action_for_key
 567               	action_for_key:
 568               	.LVL63:
 569               	.LFB30:
  40:quantum/keymap_common.c ****     // 16bit keycodes - important
 570               		.loc 1 40 54 is_stmt 1 view -0
 571               		.cfi_startproc
 572               	/* prologue: function */
 573               	/* frame size = 0 */
 574               	/* stack size = 0 */
 575               	.L__stack_usage = 0
  42:quantum/keymap_common.c ****     return action_for_keycode(keycode);
 576               		.loc 1 42 5 view .LVU122
  42:quantum/keymap_common.c ****     return action_for_keycode(keycode);
 577               		.loc 1 42 24 is_stmt 0 view .LVU123
 578 0000 0E94 0000 		call keymap_key_to_keycode
 579               	.LVL64:
  43:quantum/keymap_common.c **** };
 580               		.loc 1 43 5 is_stmt 1 view .LVU124
  43:quantum/keymap_common.c **** };
 581               		.loc 1 43 12 is_stmt 0 view .LVU125
 582 0004 0C94 0000 		jmp action_for_keycode
 583               	.LVL65:
  43:quantum/keymap_common.c **** };
 584               		.loc 1 43 12 view .LVU126
 585               		.cfi_endproc
 586               	.LFE30:
 588               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 589               		.weak	keymap_function_id_to_action
 591               	keymap_function_id_to_action:
 592               	.LVL66:
 593               	.LFB35:
 183:quantum/keymap_common.c **** 
 184:quantum/keymap_common.c **** // translates function id to action
 185:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 594               		.loc 1 185 83 is_stmt 1 view -0
 595               		.cfi_startproc
 596               	/* prologue: function */
 597               	/* frame size = 0 */
 598               	/* stack size = 0 */
 599               	.L__stack_usage = 0
 186:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 187:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 188:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 189:quantum/keymap_common.c **** // is comparing against the wrong array
 190:quantum/keymap_common.c **** #pragma GCC diagnostic push
 191:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 192:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 600               		.loc 1 192 5 view .LVU128
 601               	.LBB8:
 602               		.loc 1 192 12 view .LVU129
 603 0000 FC01      		movw r30,r24
 604 0002 EE0F      		lsl r30
 605 0004 FF1F      		rol r31
 606               	.LVL67:
 607               		.loc 1 192 12 is_stmt 0 view .LVU130
 608 0006 E050      		subi r30,lo8(-(fn_actions))
 609 0008 F040      		sbci r31,hi8(-(fn_actions))
 610               	.LVL68:
 611               		.loc 1 192 12 is_stmt 1 view .LVU131
 612               		.loc 1 192 12 view .LVU132
 613               	/* #APP */
 614               	 ;  192 "quantum/keymap_common.c" 1
 615 000a 8591      		lpm r24, Z+
 616 000c 9491      		lpm r25, Z
 617               		
 618               	 ;  0 "" 2
 619               	.LVL69:
 620               		.loc 1 192 12 view .LVU133
 621               	/* #NOAPP */
 622               	/* epilogue start */
 623               	.LBE8:
 193:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 194:quantum/keymap_common.c **** }
 624               		.loc 1 194 1 is_stmt 0 view .LVU134
 625 000e 0895      		ret
 626               		.cfi_endproc
 627               	.LFE35:
 629               		.section	.rodata.CSWTCH.2,"a"
 632               	CSWTCH.2:
 633 0000 E200      		.word	226
 634 0002 E900      		.word	233
 635 0004 EA00      		.word	234
 636 0006 B500      		.word	181
 637 0008 B600      		.word	182
 638 000a B700      		.word	183
 639 000c CD00      		.word	205
 640 000e 8301      		.word	387
 641 0010 CC00      		.word	204
 642 0012 8A01      		.word	394
 643 0014 9201      		.word	402
 644 0016 9401      		.word	404
 645 0018 2102      		.word	545
 646 001a 2302      		.word	547
 647 001c 2402      		.word	548
 648 001e 2502      		.word	549
 649 0020 2602      		.word	550
 650 0022 2702      		.word	551
 651 0024 2A02      		.word	554
 652 0026 B300      		.word	179
 653 0028 B400      		.word	180
 654 002a 6F00      		.word	111
 655 002c 7000      		.word	112
 656               		.weak	fn_actions
 657               		.section	.progmem.data.fn_actions,"a"
 660               	fn_actions:
 661               		.text
 662               	.Letext0:
 663               		.file 3 "/usr/avr/include/stdint.h"
 664               		.file 4 "quantum/keyboard.h"
 665               		.file 5 "quantum/keycode.h"
 666               		.file 6 "quantum/action_code.h"
 667               		.file 7 "quantum/action_macro.h"
 668               		.file 8 "quantum/action.h"
 669               		.file 9 "quantum/quantum_keycodes.h"
 670               		.file 10 "quantum/keymap.h"
 671               		.file 11 "quantum/keycode_config.h"
 672               		.file 12 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
     /tmp/ccvQoKxX.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccvQoKxX.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccvQoKxX.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccvQoKxX.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccvQoKxX.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccvQoKxX.s:13     .text.action_for_keycode:0000000000000000 action_for_keycode
     /tmp/ccvQoKxX.s:632    .rodata.CSWTCH.2:0000000000000000 CSWTCH.2
     /tmp/ccvQoKxX.s:469    .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccvQoKxX.s:492    .text.action_function:0000000000000000 action_function
     /tmp/ccvQoKxX.s:510    .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/ccvQoKxX.s:567    .text.action_for_key:0000000000000000 action_for_key
     /tmp/ccvQoKxX.s:591    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
     /tmp/ccvQoKxX.s:660    .progmem.data.fn_actions:0000000000000000 fn_actions

UNDEFINED SYMBOLS
keycode_config
mod_config
keymaps
__do_copy_data
