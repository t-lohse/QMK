   1               		.file	"action_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.add_key,"ax",@progbits
  11               	.global	add_key
  13               	add_key:
  14               	.LVL0:
  15               	.LFB3:
  16               		.file 1 "quantum/action_util.h"
   1:quantum/action_util.h **** /*
   2:quantum/action_util.h **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.h **** 
   4:quantum/action_util.h **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.h **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.h **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.h **** (at your option) any later version.
   8:quantum/action_util.h **** 
   9:quantum/action_util.h **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.h **** GNU General Public License for more details.
  13:quantum/action_util.h **** 
  14:quantum/action_util.h **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.h **** */
  17:quantum/action_util.h **** 
  18:quantum/action_util.h **** #pragma once
  19:quantum/action_util.h **** 
  20:quantum/action_util.h **** #include <stdint.h>
  21:quantum/action_util.h **** #include "report.h"
  22:quantum/action_util.h **** 
  23:quantum/action_util.h **** #ifdef __cplusplus
  24:quantum/action_util.h **** extern "C" {
  25:quantum/action_util.h **** #endif
  26:quantum/action_util.h **** 
  27:quantum/action_util.h **** extern report_keyboard_t *keyboard_report;
  28:quantum/action_util.h **** 
  29:quantum/action_util.h **** void send_keyboard_report(void);
  30:quantum/action_util.h **** 
  31:quantum/action_util.h **** /* key */
  32:quantum/action_util.h **** inline void add_key(uint8_t key) { add_key_to_report(keyboard_report, key); }
  17               		.loc 1 32 34 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 32 34 is_stmt 0 view .LVU1
  24 0000 682F      		mov r22,r24
  25               		.loc 1 32 36 is_stmt 1 view .LVU2
  26 0002 8091 0000 		lds r24,keyboard_report
  27 0006 9091 0000 		lds r25,keyboard_report+1
  28               	.LVL1:
  29               		.loc 1 32 36 is_stmt 0 view .LVU3
  30 000a 0C94 0000 		jmp add_key_to_report
  31               	.LVL2:
  32               		.loc 1 32 36 view .LVU4
  33               		.cfi_endproc
  34               	.LFE3:
  36               		.section	.text.del_key,"ax",@progbits
  37               	.global	del_key
  39               	del_key:
  40               	.LVL3:
  41               	.LFB4:
  33:quantum/action_util.h **** 
  34:quantum/action_util.h **** inline void del_key(uint8_t key) { del_key_from_report(keyboard_report, key); }
  42               		.loc 1 34 34 is_stmt 1 view -0
  43               		.cfi_startproc
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 0 */
  47               	.L__stack_usage = 0
  48               		.loc 1 34 34 is_stmt 0 view .LVU6
  49 0000 682F      		mov r22,r24
  50               		.loc 1 34 36 is_stmt 1 view .LVU7
  51 0002 8091 0000 		lds r24,keyboard_report
  52 0006 9091 0000 		lds r25,keyboard_report+1
  53               	.LVL4:
  54               		.loc 1 34 36 is_stmt 0 view .LVU8
  55 000a 0C94 0000 		jmp del_key_from_report
  56               	.LVL5:
  57               		.loc 1 34 36 view .LVU9
  58               		.cfi_endproc
  59               	.LFE4:
  61               		.section	.text.clear_keys,"ax",@progbits
  62               	.global	clear_keys
  64               	clear_keys:
  65               	.LFB5:
  35:quantum/action_util.h **** 
  36:quantum/action_util.h **** inline void clear_keys(void) { clear_keys_from_report(keyboard_report); }
  66               		.loc 1 36 30 is_stmt 1 view -0
  67               		.cfi_startproc
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
  72               		.loc 1 36 32 view .LVU11
  73 0000 8091 0000 		lds r24,keyboard_report
  74 0004 9091 0000 		lds r25,keyboard_report+1
  75 0008 0C94 0000 		jmp clear_keys_from_report
  76               	.LVL6:
  77               		.cfi_endproc
  78               	.LFE5:
  80               		.section	.text.get_oneshot_locked_mods,"ax",@progbits
  81               	.global	get_oneshot_locked_mods
  83               	get_oneshot_locked_mods:
  84               	.LFB11:
  85               		.file 2 "quantum/action_util.c"
   1:quantum/action_util.c **** /*
   2:quantum/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.c **** 
   4:quantum/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.c **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.c **** (at your option) any later version.
   8:quantum/action_util.c **** 
   9:quantum/action_util.c **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.c **** GNU General Public License for more details.
  13:quantum/action_util.c **** 
  14:quantum/action_util.c **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.c **** */
  17:quantum/action_util.c **** #include "host.h"
  18:quantum/action_util.c **** #include "report.h"
  19:quantum/action_util.c **** #include "debug.h"
  20:quantum/action_util.c **** #include "action_util.h"
  21:quantum/action_util.c **** #include "action_layer.h"
  22:quantum/action_util.c **** #include "timer.h"
  23:quantum/action_util.c **** #include "keycode_config.h"
  24:quantum/action_util.c **** 
  25:quantum/action_util.c **** extern keymap_config_t keymap_config;
  26:quantum/action_util.c **** 
  27:quantum/action_util.c **** static uint8_t real_mods  = 0;
  28:quantum/action_util.c **** static uint8_t weak_mods  = 0;
  29:quantum/action_util.c **** static uint8_t macro_mods = 0;
  30:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
  31:quantum/action_util.c **** static uint8_t weak_override_mods = 0;
  32:quantum/action_util.c **** static uint8_t suppressed_mods    = 0;
  33:quantum/action_util.c **** #endif
  34:quantum/action_util.c **** 
  35:quantum/action_util.c **** // TODO: pointer variable is not needed
  36:quantum/action_util.c **** // report_keyboard_t keyboard_report = {};
  37:quantum/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  38:quantum/action_util.c **** 
  39:quantum/action_util.c **** extern inline void add_key(uint8_t key);
  40:quantum/action_util.c **** extern inline void del_key(uint8_t key);
  41:quantum/action_util.c **** extern inline void clear_keys(void);
  42:quantum/action_util.c **** 
  43:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  44:quantum/action_util.c **** static uint8_t oneshot_mods        = 0;
  45:quantum/action_util.c **** static uint8_t oneshot_locked_mods = 0;
  46:quantum/action_util.c **** uint8_t        get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
  86               		.loc 2 46 46 view -0
  87               		.cfi_startproc
  88               	/* prologue: function */
  89               	/* frame size = 0 */
  90               	/* stack size = 0 */
  91               	.L__stack_usage = 0
  92               		.loc 2 46 48 view .LVU13
  93               		.loc 2 46 76 is_stmt 0 view .LVU14
  94 0000 8091 0000 		lds r24,oneshot_locked_mods
  95               	/* epilogue start */
  96 0004 0895      		ret
  97               		.cfi_endproc
  98               	.LFE11:
 100               		.section	.text.has_oneshot_mods_timed_out,"ax",@progbits
 101               	.global	has_oneshot_mods_timed_out
 103               	has_oneshot_mods_timed_out:
 104               	.LFB14:
  47:quantum/action_util.c **** void           set_oneshot_locked_mods(uint8_t mods) {
  48:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
  49:quantum/action_util.c ****         oneshot_locked_mods = mods;
  50:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  51:quantum/action_util.c ****     }
  52:quantum/action_util.c **** }
  53:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
  54:quantum/action_util.c ****     if (oneshot_locked_mods) {
  55:quantum/action_util.c ****         oneshot_locked_mods = 0;
  56:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  57:quantum/action_util.c ****     }
  58:quantum/action_util.c **** }
  59:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  60:quantum/action_util.c **** static uint16_t oneshot_time = 0;
  61:quantum/action_util.c **** bool            has_oneshot_mods_timed_out(void) { return TIMER_DIFF_16(timer_read(), oneshot_time)
  62:quantum/action_util.c **** #    else
  63:quantum/action_util.c **** bool has_oneshot_mods_timed_out(void) { return false; }
 105               		.loc 2 63 39 is_stmt 1 view -0
 106               		.cfi_startproc
 107               	/* prologue: function */
 108               	/* frame size = 0 */
 109               	/* stack size = 0 */
 110               	.L__stack_usage = 0
 111               		.loc 2 63 41 view .LVU16
 112               		.loc 2 63 55 is_stmt 0 view .LVU17
 113 0000 80E0      		ldi r24,0
 114               	/* epilogue start */
 115 0002 0895      		ret
 116               		.cfi_endproc
 117               	.LFE14:
 119               		.section	.text.get_oneshot_layer,"ax",@progbits
 120               	.global	get_oneshot_layer
 122               	get_oneshot_layer:
 123               	.LFB15:
  64:quantum/action_util.c **** #    endif
  65:quantum/action_util.c **** #endif
  66:quantum/action_util.c **** 
  67:quantum/action_util.c **** /* oneshot layer */
  68:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  69:quantum/action_util.c **** /** \brief oneshot_layer_data bits
  70:quantum/action_util.c ****  * LLLL LSSS
  71:quantum/action_util.c ****  * where:
  72:quantum/action_util.c ****  *   L => are layer bits
  73:quantum/action_util.c ****  *   S => oneshot state bits
  74:quantum/action_util.c ****  */
  75:quantum/action_util.c **** static int8_t oneshot_layer_data = 0;
  76:quantum/action_util.c **** 
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
 124               		.loc 2 77 40 is_stmt 1 view -0
 125               		.cfi_startproc
 126               	/* prologue: function */
 127               	/* frame size = 0 */
 128               	/* stack size = 0 */
 129               	.L__stack_usage = 0
 130               		.loc 2 77 42 view .LVU19
 131               		.loc 2 77 68 is_stmt 0 view .LVU20
 132 0000 8091 0000 		lds r24,oneshot_layer_data
 133               		.loc 2 77 74 view .LVU21
 134 0004 8595      		asr r24
 135 0006 8595      		asr r24
 136 0008 8595      		asr r24
 137               	/* epilogue start */
 138 000a 0895      		ret
 139               		.cfi_endproc
 140               	.LFE15:
 142               		.section	.text.get_oneshot_layer_state,"ax",@progbits
 143               	.global	get_oneshot_layer_state
 145               	get_oneshot_layer_state:
 146               	.LFB16:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 147               		.loc 2 78 46 is_stmt 1 view -0
 148               		.cfi_startproc
 149               	/* prologue: function */
 150               	/* frame size = 0 */
 151               	/* stack size = 0 */
 152               	.L__stack_usage = 0
 153               		.loc 2 78 48 view .LVU23
 154               		.loc 2 78 74 is_stmt 0 view .LVU24
 155 0000 8091 0000 		lds r24,oneshot_layer_data
 156               		.loc 2 78 83 view .LVU25
 157 0004 8770      		andi r24,lo8(7)
 158               	/* epilogue start */
 159 0006 0895      		ret
 160               		.cfi_endproc
 161               	.LFE16:
 163               		.section	.text.set_oneshot_swaphands,"ax",@progbits
 164               	.global	set_oneshot_swaphands
 166               	set_oneshot_swaphands:
 167               	.LFB17:
  79:quantum/action_util.c **** 
  80:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  81:quantum/action_util.c **** enum {
  82:quantum/action_util.c ****     SHO_OFF,
  83:quantum/action_util.c ****     SHO_ACTIVE,   // Swap hands button was pressed, and we didn't send any swapped keys yet
  84:quantum/action_util.c ****     SHO_PRESSED,  // Swap hands button is currently pressed
  85:quantum/action_util.c ****     SHO_USED,     // Swap hands button is still pressed, and we already sent swapped keys
  86:quantum/action_util.c **** } swap_hands_oneshot = SHO_OFF;
  87:quantum/action_util.c **** #    endif
  88:quantum/action_util.c **** 
  89:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  90:quantum/action_util.c **** static uint16_t oneshot_layer_time = 0;
  91:quantum/action_util.c **** inline bool     has_oneshot_layer_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_layer_ti
  92:quantum/action_util.c **** #        ifdef SWAP_HANDS_ENABLE
  93:quantum/action_util.c **** static uint16_t oneshot_swaphands_time = 0;
  94:quantum/action_util.c **** inline bool     has_oneshot_swaphands_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_swap
  95:quantum/action_util.c **** #        endif
  96:quantum/action_util.c **** #    endif
  97:quantum/action_util.c **** 
  98:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  99:quantum/action_util.c **** 
 100:quantum/action_util.c **** void set_oneshot_swaphands(void) {
 168               		.loc 2 100 34 is_stmt 1 view -0
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 101:quantum/action_util.c ****     swap_hands_oneshot = SHO_PRESSED;
 174               		.loc 2 101 5 view .LVU27
 175               		.loc 2 101 24 is_stmt 0 view .LVU28
 176 0000 82E0      		ldi r24,lo8(2)
 177 0002 8093 0000 		sts swap_hands_oneshot,r24
 102:quantum/action_util.c ****     swap_hands         = true;
 178               		.loc 2 102 5 is_stmt 1 view .LVU29
 179               		.loc 2 102 24 is_stmt 0 view .LVU30
 180 0006 81E0      		ldi r24,lo8(1)
 181 0008 8093 0000 		sts swap_hands,r24
 182               	/* epilogue start */
 103:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 104:quantum/action_util.c ****     oneshot_swaphands_time = timer_read();
 105:quantum/action_util.c ****     if (oneshot_layer_time != 0) {
 106:quantum/action_util.c ****         oneshot_layer_time = oneshot_swaphands_time;
 107:quantum/action_util.c ****     }
 108:quantum/action_util.c **** #        endif
 109:quantum/action_util.c **** }
 183               		.loc 2 109 1 view .LVU31
 184 000c 0895      		ret
 185               		.cfi_endproc
 186               	.LFE17:
 188               		.section	.text.clear_oneshot_swaphands,"ax",@progbits
 189               	.global	clear_oneshot_swaphands
 191               	clear_oneshot_swaphands:
 192               	.LFB20:
 110:quantum/action_util.c **** 
 111:quantum/action_util.c **** void release_oneshot_swaphands(void) {
 112:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 113:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 114:quantum/action_util.c ****     }
 115:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_USED) {
 116:quantum/action_util.c ****         clear_oneshot_swaphands();
 117:quantum/action_util.c ****     }
 118:quantum/action_util.c **** }
 119:quantum/action_util.c **** 
 120:quantum/action_util.c **** void use_oneshot_swaphands(void) {
 121:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 122:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 123:quantum/action_util.c ****     }
 124:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_ACTIVE) {
 125:quantum/action_util.c ****         clear_oneshot_swaphands();
 126:quantum/action_util.c ****     }
 127:quantum/action_util.c **** }
 128:quantum/action_util.c **** 
 129:quantum/action_util.c **** void clear_oneshot_swaphands(void) {
 193               		.loc 2 129 36 is_stmt 1 view -0
 194               		.cfi_startproc
 195               	/* prologue: function */
 196               	/* frame size = 0 */
 197               	/* stack size = 0 */
 198               	.L__stack_usage = 0
 130:quantum/action_util.c ****     swap_hands_oneshot = SHO_OFF;
 199               		.loc 2 130 5 view .LVU33
 200               		.loc 2 130 24 is_stmt 0 view .LVU34
 201 0000 1092 0000 		sts swap_hands_oneshot,__zero_reg__
 131:quantum/action_util.c ****     swap_hands         = false;
 202               		.loc 2 131 5 is_stmt 1 view .LVU35
 203               		.loc 2 131 24 is_stmt 0 view .LVU36
 204 0004 1092 0000 		sts swap_hands,__zero_reg__
 205               	/* epilogue start */
 132:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 133:quantum/action_util.c ****     oneshot_swaphands_time = 0;
 134:quantum/action_util.c **** #        endif
 135:quantum/action_util.c **** }
 206               		.loc 2 135 1 view .LVU37
 207 0008 0895      		ret
 208               		.cfi_endproc
 209               	.LFE20:
 211               		.section	.text.release_oneshot_swaphands,"ax",@progbits
 212               	.global	release_oneshot_swaphands
 214               	release_oneshot_swaphands:
 215               	.LFB18:
 111:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 216               		.loc 2 111 38 is_stmt 1 view -0
 217               		.cfi_startproc
 218               	/* prologue: function */
 219               	/* frame size = 0 */
 220               	/* stack size = 0 */
 221               	.L__stack_usage = 0
 112:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 222               		.loc 2 112 5 view .LVU39
 112:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 223               		.loc 2 112 28 is_stmt 0 view .LVU40
 224 0000 8091 0000 		lds r24,swap_hands_oneshot
 112:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 225               		.loc 2 112 8 view .LVU41
 226 0004 8230      		cpi r24,lo8(2)
 227 0006 01F4      		brne .L11
 113:quantum/action_util.c ****     }
 228               		.loc 2 113 9 is_stmt 1 view .LVU42
 113:quantum/action_util.c ****     }
 229               		.loc 2 113 28 is_stmt 0 view .LVU43
 230 0008 81E0      		ldi r24,lo8(1)
 231 000a 8093 0000 		sts swap_hands_oneshot,r24
 115:quantum/action_util.c ****         clear_oneshot_swaphands();
 232               		.loc 2 115 5 is_stmt 1 view .LVU44
 233 000e 0895      		ret
 234               	.L11:
 115:quantum/action_util.c ****         clear_oneshot_swaphands();
 235               		.loc 2 115 5 view .LVU45
 115:quantum/action_util.c ****         clear_oneshot_swaphands();
 236               		.loc 2 115 8 is_stmt 0 view .LVU46
 237 0010 8330      		cpi r24,lo8(3)
 238 0012 01F4      		brne .L10
 116:quantum/action_util.c ****     }
 239               		.loc 2 116 9 is_stmt 1 view .LVU47
 240 0014 0C94 0000 		jmp clear_oneshot_swaphands
 241               	.LVL7:
 242               	.L10:
 243               	/* epilogue start */
 118:quantum/action_util.c **** 
 244               		.loc 2 118 1 is_stmt 0 view .LVU48
 245 0018 0895      		ret
 246               		.cfi_endproc
 247               	.LFE18:
 249               		.section	.text.use_oneshot_swaphands,"ax",@progbits
 250               	.global	use_oneshot_swaphands
 252               	use_oneshot_swaphands:
 253               	.LFB19:
 120:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 254               		.loc 2 120 34 is_stmt 1 view -0
 255               		.cfi_startproc
 256               	/* prologue: function */
 257               	/* frame size = 0 */
 258               	/* stack size = 0 */
 259               	.L__stack_usage = 0
 121:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 260               		.loc 2 121 5 view .LVU50
 121:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 261               		.loc 2 121 28 is_stmt 0 view .LVU51
 262 0000 8091 0000 		lds r24,swap_hands_oneshot
 121:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 263               		.loc 2 121 8 view .LVU52
 264 0004 8230      		cpi r24,lo8(2)
 265 0006 01F4      		brne .L14
 122:quantum/action_util.c ****     }
 266               		.loc 2 122 9 is_stmt 1 view .LVU53
 122:quantum/action_util.c ****     }
 267               		.loc 2 122 28 is_stmt 0 view .LVU54
 268 0008 83E0      		ldi r24,lo8(3)
 269 000a 8093 0000 		sts swap_hands_oneshot,r24
 124:quantum/action_util.c ****         clear_oneshot_swaphands();
 270               		.loc 2 124 5 is_stmt 1 view .LVU55
 271 000e 0895      		ret
 272               	.L14:
 124:quantum/action_util.c ****         clear_oneshot_swaphands();
 273               		.loc 2 124 5 view .LVU56
 124:quantum/action_util.c ****         clear_oneshot_swaphands();
 274               		.loc 2 124 8 is_stmt 0 view .LVU57
 275 0010 8130      		cpi r24,lo8(1)
 276 0012 01F4      		brne .L13
 125:quantum/action_util.c ****     }
 277               		.loc 2 125 9 is_stmt 1 view .LVU58
 278 0014 0C94 0000 		jmp clear_oneshot_swaphands
 279               	.LVL8:
 280               	.L13:
 281               	/* epilogue start */
 127:quantum/action_util.c **** 
 282               		.loc 2 127 1 is_stmt 0 view .LVU59
 283 0018 0895      		ret
 284               		.cfi_endproc
 285               	.LFE19:
 287               		.section	.text.is_oneshot_layer_active,"ax",@progbits
 288               	.global	is_oneshot_layer_active
 290               	is_oneshot_layer_active:
 291               	.LFB24:
 136:quantum/action_util.c **** 
 137:quantum/action_util.c **** #    endif
 138:quantum/action_util.c **** 
 139:quantum/action_util.c **** /** \brief Set oneshot layer
 140:quantum/action_util.c ****  *
 141:quantum/action_util.c ****  * FIXME: needs doc
 142:quantum/action_util.c ****  */
 143:quantum/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state) {
 144:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 145:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 146:quantum/action_util.c ****         layer_on(layer);
 147:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 148:quantum/action_util.c ****         oneshot_layer_time = timer_read();
 149:quantum/action_util.c **** #    endif
 150:quantum/action_util.c ****         oneshot_layer_changed_kb(get_oneshot_layer());
 151:quantum/action_util.c ****     } else {
 152:quantum/action_util.c ****         layer_on(layer);
 153:quantum/action_util.c ****     }
 154:quantum/action_util.c **** }
 155:quantum/action_util.c **** /** \brief Reset oneshot layer
 156:quantum/action_util.c ****  *
 157:quantum/action_util.c ****  * FIXME: needs doc
 158:quantum/action_util.c ****  */
 159:quantum/action_util.c **** void reset_oneshot_layer(void) {
 160:quantum/action_util.c ****     oneshot_layer_data = 0;
 161:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 162:quantum/action_util.c ****     oneshot_layer_time = 0;
 163:quantum/action_util.c **** #    endif
 164:quantum/action_util.c ****     oneshot_layer_changed_kb(get_oneshot_layer());
 165:quantum/action_util.c **** }
 166:quantum/action_util.c **** /** \brief Clear oneshot layer
 167:quantum/action_util.c ****  *
 168:quantum/action_util.c ****  * FIXME: needs doc
 169:quantum/action_util.c ****  */
 170:quantum/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state) {
 171:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 172:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 173:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 174:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 175:quantum/action_util.c ****         reset_oneshot_layer();
 176:quantum/action_util.c ****     }
 177:quantum/action_util.c **** }
 178:quantum/action_util.c **** /** \brief Is oneshot layer active
 179:quantum/action_util.c ****  *
 180:quantum/action_util.c ****  * FIXME: needs doc
 181:quantum/action_util.c ****  */
 182:quantum/action_util.c **** bool is_oneshot_layer_active(void) { return get_oneshot_layer_state(); }
 292               		.loc 2 182 36 is_stmt 1 view -0
 293               		.cfi_startproc
 294               	/* prologue: function */
 295               	/* frame size = 0 */
 296               	/* stack size = 0 */
 297               	.L__stack_usage = 0
 298               		.loc 2 182 38 view .LVU61
 299               	.LBB12:
 300               	.LBI12:
  78:quantum/action_util.c **** 
 301               		.loc 2 78 16 view .LVU62
 302               	.LBB13:
  78:quantum/action_util.c **** 
 303               		.loc 2 78 48 view .LVU63
  78:quantum/action_util.c **** 
 304               		.loc 2 78 74 is_stmt 0 view .LVU64
 305 0000 9091 0000 		lds r25,oneshot_layer_data
 306 0004 9770      		andi r25,lo8(7)
 307               	.LBE13:
 308               	.LBE12:
 309               		.loc 2 182 45 view .LVU65
 310 0006 81E0      		ldi r24,lo8(1)
 311 0008 01F4      		brne .L17
 312 000a 80E0      		ldi r24,0
 313               	.L17:
 314               	/* epilogue start */
 315               		.loc 2 182 72 view .LVU66
 316 000c 0895      		ret
 317               		.cfi_endproc
 318               	.LFE24:
 320               		.section	.text.oneshot_set,"ax",@progbits
 321               	.global	oneshot_set
 323               	oneshot_set:
 324               	.LVL9:
 325               	.LFB25:
 183:quantum/action_util.c **** 
 184:quantum/action_util.c **** /** \brief set oneshot
 185:quantum/action_util.c ****  *
 186:quantum/action_util.c ****  * FIXME: needs doc
 187:quantum/action_util.c ****  */
 188:quantum/action_util.c **** void oneshot_set(bool active) {
 326               		.loc 2 188 31 is_stmt 1 view -0
 327               		.cfi_startproc
 328               	/* prologue: function */
 329               	/* frame size = 0 */
 330               	/* stack size = 0 */
 331               	.L__stack_usage = 0
 189:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 332               		.loc 2 189 5 view .LVU68
 333               		.loc 2 189 22 is_stmt 0 view .LVU69
 334 0000 9091 0000 		lds r25,keymap_config+1
 335 0004 92FB      		bst r25,2
 336 0006 2227      		clr r18
 337 0008 20F9      		bld r18,0
 338               		.loc 2 189 8 view .LVU70
 339 000a 2817      		cp r18,r24
 340 000c 01F0      		breq .L18
 190:quantum/action_util.c ****         keymap_config.oneshot_disable = active;
 341               		.loc 2 190 9 is_stmt 1 view .LVU71
 342               		.loc 2 190 39 is_stmt 0 view .LVU72
 343 000e 80FB      		bst r24,0
 344 0010 92F9      		bld r25,2
 345 0012 9093 0000 		sts keymap_config+1,r25
 191:quantum/action_util.c ****         eeconfig_update_keymap(keymap_config.raw);
 346               		.loc 2 191 9 is_stmt 1 view .LVU73
 347 0016 8091 0000 		lds r24,keymap_config
 348 001a 9091 0000 		lds r25,keymap_config+1
 349               	.LVL10:
 350               		.loc 2 191 9 is_stmt 0 view .LVU74
 351 001e 0C94 0000 		jmp eeconfig_update_keymap
 352               	.LVL11:
 353               	.L18:
 354               	/* epilogue start */
 192:quantum/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 193:quantum/action_util.c ****     }
 194:quantum/action_util.c **** }
 355               		.loc 2 194 1 view .LVU75
 356 0022 0895      		ret
 357               		.cfi_endproc
 358               	.LFE25:
 360               		.section	.text.oneshot_toggle,"ax",@progbits
 361               	.global	oneshot_toggle
 363               	oneshot_toggle:
 364               	.LFB26:
 195:quantum/action_util.c **** 
 196:quantum/action_util.c **** /** \brief toggle oneshot
 197:quantum/action_util.c ****  *
 198:quantum/action_util.c ****  * FIXME: needs doc
 199:quantum/action_util.c ****  */
 200:quantum/action_util.c **** void oneshot_toggle(void) { oneshot_set(!keymap_config.oneshot_disable); }
 365               		.loc 2 200 27 is_stmt 1 view -0
 366               		.cfi_startproc
 367               	/* prologue: function */
 368               	/* frame size = 0 */
 369               	/* stack size = 0 */
 370               	.L__stack_usage = 0
 371               		.loc 2 200 29 view .LVU77
 372               		.loc 2 200 55 is_stmt 0 view .LVU78
 373 0000 8091 0000 		lds r24,keymap_config+1
 374 0004 82FB      		bst r24,2
 375 0006 8827      		clr r24
 376 0008 80F9      		bld r24,0
 377               		.loc 2 200 29 view .LVU79
 378 000a 91E0      		ldi r25,lo8(1)
 379 000c 8927      		eor r24,r25
 380 000e 0C94 0000 		jmp oneshot_set
 381               	.LVL12:
 382               		.cfi_endproc
 383               	.LFE26:
 385               		.section	.text.oneshot_enable,"ax",@progbits
 386               	.global	oneshot_enable
 388               	oneshot_enable:
 389               	.LFB27:
 201:quantum/action_util.c **** 
 202:quantum/action_util.c **** /** \brief enable oneshot
 203:quantum/action_util.c ****  *
 204:quantum/action_util.c ****  * FIXME: needs doc
 205:quantum/action_util.c ****  */
 206:quantum/action_util.c **** void oneshot_enable(void) { oneshot_set(true); }
 390               		.loc 2 206 27 is_stmt 1 view -0
 391               		.cfi_startproc
 392               	/* prologue: function */
 393               	/* frame size = 0 */
 394               	/* stack size = 0 */
 395               	.L__stack_usage = 0
 396               		.loc 2 206 29 view .LVU81
 397 0000 81E0      		ldi r24,lo8(1)
 398 0002 0C94 0000 		jmp oneshot_set
 399               	.LVL13:
 400               		.cfi_endproc
 401               	.LFE27:
 403               		.section	.text.oneshot_disable,"ax",@progbits
 404               	.global	oneshot_disable
 406               	oneshot_disable:
 407               	.LFB28:
 207:quantum/action_util.c **** 
 208:quantum/action_util.c **** /** \brief disable oneshot
 209:quantum/action_util.c ****  *
 210:quantum/action_util.c ****  * FIXME: needs doc
 211:quantum/action_util.c ****  */
 212:quantum/action_util.c **** void oneshot_disable(void) { oneshot_set(false); }
 408               		.loc 2 212 28 view -0
 409               		.cfi_startproc
 410               	/* prologue: function */
 411               	/* frame size = 0 */
 412               	/* stack size = 0 */
 413               	.L__stack_usage = 0
 414               		.loc 2 212 30 view .LVU83
 415 0000 80E0      		ldi r24,0
 416 0002 0C94 0000 		jmp oneshot_set
 417               	.LVL14:
 418               		.cfi_endproc
 419               	.LFE28:
 421               		.section	.text.is_oneshot_enabled,"ax",@progbits
 422               	.global	is_oneshot_enabled
 424               	is_oneshot_enabled:
 425               	.LFB29:
 213:quantum/action_util.c **** 
 214:quantum/action_util.c **** bool is_oneshot_enabled(void) { return keymap_config.oneshot_disable; }
 426               		.loc 2 214 31 view -0
 427               		.cfi_startproc
 428               	/* prologue: function */
 429               	/* frame size = 0 */
 430               	/* stack size = 0 */
 431               	.L__stack_usage = 0
 432               		.loc 2 214 33 view .LVU85
 433               		.loc 2 214 53 is_stmt 0 view .LVU86
 434 0000 8091 0000 		lds r24,keymap_config+1
 435               		.loc 2 214 71 view .LVU87
 436 0004 82FB      		bst r24,2
 437 0006 8827      		clr r24
 438 0008 80F9      		bld r24,0
 439               	/* epilogue start */
 440 000a 0895      		ret
 441               		.cfi_endproc
 442               	.LFE29:
 444               		.section	.text.get_mods,"ax",@progbits
 445               	.global	get_mods
 447               	get_mods:
 448               	.LFB31:
 215:quantum/action_util.c **** 
 216:quantum/action_util.c **** #endif
 217:quantum/action_util.c **** 
 218:quantum/action_util.c **** /** \brief Send keyboard report
 219:quantum/action_util.c ****  *
 220:quantum/action_util.c ****  * FIXME: needs doc
 221:quantum/action_util.c ****  */
 222:quantum/action_util.c **** void send_keyboard_report(void) {
 223:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 224:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 225:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 226:quantum/action_util.c **** 
 227:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 228:quantum/action_util.c ****     if (oneshot_mods) {
 229:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 230:quantum/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 231:quantum/action_util.c ****             dprintf("Oneshot: timeout\n");
 232:quantum/action_util.c ****             clear_oneshot_mods();
 233:quantum/action_util.c ****         }
 234:quantum/action_util.c **** #    endif
 235:quantum/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 236:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 237:quantum/action_util.c ****             clear_oneshot_mods();
 238:quantum/action_util.c ****         }
 239:quantum/action_util.c ****     }
 240:quantum/action_util.c **** 
 241:quantum/action_util.c **** #endif
 242:quantum/action_util.c **** 
 243:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 244:quantum/action_util.c ****     // These need to be last to be able to properly control key overrides
 245:quantum/action_util.c ****     keyboard_report->mods &= ~suppressed_mods;
 246:quantum/action_util.c ****     keyboard_report->mods |= weak_override_mods;
 247:quantum/action_util.c **** #endif
 248:quantum/action_util.c **** 
 249:quantum/action_util.c ****     host_keyboard_send(keyboard_report);
 250:quantum/action_util.c **** }
 251:quantum/action_util.c **** 
 252:quantum/action_util.c **** /** \brief Get mods
 253:quantum/action_util.c ****  *
 254:quantum/action_util.c ****  * FIXME: needs doc
 255:quantum/action_util.c ****  */
 256:quantum/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 449               		.loc 2 256 24 is_stmt 1 view -0
 450               		.cfi_startproc
 451               	/* prologue: function */
 452               	/* frame size = 0 */
 453               	/* stack size = 0 */
 454               	.L__stack_usage = 0
 455               		.loc 2 256 26 view .LVU89
 456               		.loc 2 256 44 is_stmt 0 view .LVU90
 457 0000 8091 0000 		lds r24,real_mods
 458               	/* epilogue start */
 459 0004 0895      		ret
 460               		.cfi_endproc
 461               	.LFE31:
 463               		.section	.text.add_mods,"ax",@progbits
 464               	.global	add_mods
 466               	add_mods:
 467               	.LVL15:
 468               	.LFB32:
 257:quantum/action_util.c **** /** \brief add mods
 258:quantum/action_util.c ****  *
 259:quantum/action_util.c ****  * FIXME: needs doc
 260:quantum/action_util.c ****  */
 261:quantum/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 469               		.loc 2 261 29 is_stmt 1 view -0
 470               		.cfi_startproc
 471               	/* prologue: function */
 472               	/* frame size = 0 */
 473               	/* stack size = 0 */
 474               	.L__stack_usage = 0
 475               		.loc 2 261 31 view .LVU92
 476               		.loc 2 261 41 is_stmt 0 view .LVU93
 477 0000 9091 0000 		lds r25,real_mods
 478 0004 982B      		or r25,r24
 479 0006 9093 0000 		sts real_mods,r25
 480               	/* epilogue start */
 481               		.loc 2 261 50 view .LVU94
 482 000a 0895      		ret
 483               		.cfi_endproc
 484               	.LFE32:
 486               		.section	.text.del_mods,"ax",@progbits
 487               	.global	del_mods
 489               	del_mods:
 490               	.LVL16:
 491               	.LFB33:
 262:quantum/action_util.c **** /** \brief del mods
 263:quantum/action_util.c ****  *
 264:quantum/action_util.c ****  * FIXME: needs doc
 265:quantum/action_util.c ****  */
 266:quantum/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 492               		.loc 2 266 29 is_stmt 1 view -0
 493               		.cfi_startproc
 494               	/* prologue: function */
 495               	/* frame size = 0 */
 496               	/* stack size = 0 */
 497               	.L__stack_usage = 0
 498               		.loc 2 266 31 view .LVU96
 499               		.loc 2 266 41 is_stmt 0 view .LVU97
 500 0000 982F      		mov r25,r24
 501 0002 9095      		com r25
 502 0004 8091 0000 		lds r24,real_mods
 503               	.LVL17:
 504               		.loc 2 266 41 view .LVU98
 505 0008 8923      		and r24,r25
 506 000a 8093 0000 		sts real_mods,r24
 507               	/* epilogue start */
 508               		.loc 2 266 51 view .LVU99
 509 000e 0895      		ret
 510               		.cfi_endproc
 511               	.LFE33:
 513               		.section	.text.set_mods,"ax",@progbits
 514               	.global	set_mods
 516               	set_mods:
 517               	.LVL18:
 518               	.LFB34:
 267:quantum/action_util.c **** /** \brief set mods
 268:quantum/action_util.c ****  *
 269:quantum/action_util.c ****  * FIXME: needs doc
 270:quantum/action_util.c ****  */
 271:quantum/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 519               		.loc 2 271 29 is_stmt 1 view -0
 520               		.cfi_startproc
 521               	/* prologue: function */
 522               	/* frame size = 0 */
 523               	/* stack size = 0 */
 524               	.L__stack_usage = 0
 525               		.loc 2 271 31 view .LVU101
 526               		.loc 2 271 41 is_stmt 0 view .LVU102
 527 0000 8093 0000 		sts real_mods,r24
 528               	/* epilogue start */
 529               		.loc 2 271 49 view .LVU103
 530 0004 0895      		ret
 531               		.cfi_endproc
 532               	.LFE34:
 534               		.section	.text.clear_mods,"ax",@progbits
 535               	.global	clear_mods
 537               	clear_mods:
 538               	.LFB35:
 272:quantum/action_util.c **** /** \brief clear mods
 273:quantum/action_util.c ****  *
 274:quantum/action_util.c ****  * FIXME: needs doc
 275:quantum/action_util.c ****  */
 276:quantum/action_util.c **** void clear_mods(void) { real_mods = 0; }
 539               		.loc 2 276 23 is_stmt 1 view -0
 540               		.cfi_startproc
 541               	/* prologue: function */
 542               	/* frame size = 0 */
 543               	/* stack size = 0 */
 544               	.L__stack_usage = 0
 545               		.loc 2 276 25 view .LVU105
 546               		.loc 2 276 35 is_stmt 0 view .LVU106
 547 0000 1092 0000 		sts real_mods,__zero_reg__
 548               	/* epilogue start */
 549               		.loc 2 276 40 view .LVU107
 550 0004 0895      		ret
 551               		.cfi_endproc
 552               	.LFE35:
 554               		.section	.text.get_weak_mods,"ax",@progbits
 555               	.global	get_weak_mods
 557               	get_weak_mods:
 558               	.LFB36:
 277:quantum/action_util.c **** 
 278:quantum/action_util.c **** /** \brief get weak mods
 279:quantum/action_util.c ****  *
 280:quantum/action_util.c ****  * FIXME: needs doc
 281:quantum/action_util.c ****  */
 282:quantum/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 559               		.loc 2 282 29 is_stmt 1 view -0
 560               		.cfi_startproc
 561               	/* prologue: function */
 562               	/* frame size = 0 */
 563               	/* stack size = 0 */
 564               	.L__stack_usage = 0
 565               		.loc 2 282 31 view .LVU109
 566               		.loc 2 282 49 is_stmt 0 view .LVU110
 567 0000 8091 0000 		lds r24,weak_mods
 568               	/* epilogue start */
 569 0004 0895      		ret
 570               		.cfi_endproc
 571               	.LFE36:
 573               		.section	.text.add_weak_mods,"ax",@progbits
 574               	.global	add_weak_mods
 576               	add_weak_mods:
 577               	.LVL19:
 578               	.LFB37:
 283:quantum/action_util.c **** /** \brief add weak mods
 284:quantum/action_util.c ****  *
 285:quantum/action_util.c ****  * FIXME: needs doc
 286:quantum/action_util.c ****  */
 287:quantum/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 579               		.loc 2 287 34 is_stmt 1 view -0
 580               		.cfi_startproc
 581               	/* prologue: function */
 582               	/* frame size = 0 */
 583               	/* stack size = 0 */
 584               	.L__stack_usage = 0
 585               		.loc 2 287 36 view .LVU112
 586               		.loc 2 287 46 is_stmt 0 view .LVU113
 587 0000 9091 0000 		lds r25,weak_mods
 588 0004 982B      		or r25,r24
 589 0006 9093 0000 		sts weak_mods,r25
 590               	/* epilogue start */
 591               		.loc 2 287 55 view .LVU114
 592 000a 0895      		ret
 593               		.cfi_endproc
 594               	.LFE37:
 596               		.section	.text.del_weak_mods,"ax",@progbits
 597               	.global	del_weak_mods
 599               	del_weak_mods:
 600               	.LVL20:
 601               	.LFB38:
 288:quantum/action_util.c **** /** \brief del weak mods
 289:quantum/action_util.c ****  *
 290:quantum/action_util.c ****  * FIXME: needs doc
 291:quantum/action_util.c ****  */
 292:quantum/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 602               		.loc 2 292 34 is_stmt 1 view -0
 603               		.cfi_startproc
 604               	/* prologue: function */
 605               	/* frame size = 0 */
 606               	/* stack size = 0 */
 607               	.L__stack_usage = 0
 608               		.loc 2 292 36 view .LVU116
 609               		.loc 2 292 46 is_stmt 0 view .LVU117
 610 0000 982F      		mov r25,r24
 611 0002 9095      		com r25
 612 0004 8091 0000 		lds r24,weak_mods
 613               	.LVL21:
 614               		.loc 2 292 46 view .LVU118
 615 0008 8923      		and r24,r25
 616 000a 8093 0000 		sts weak_mods,r24
 617               	/* epilogue start */
 618               		.loc 2 292 56 view .LVU119
 619 000e 0895      		ret
 620               		.cfi_endproc
 621               	.LFE38:
 623               		.section	.text.set_weak_mods,"ax",@progbits
 624               	.global	set_weak_mods
 626               	set_weak_mods:
 627               	.LVL22:
 628               	.LFB39:
 293:quantum/action_util.c **** /** \brief set weak mods
 294:quantum/action_util.c ****  *
 295:quantum/action_util.c ****  * FIXME: needs doc
 296:quantum/action_util.c ****  */
 297:quantum/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 629               		.loc 2 297 34 is_stmt 1 view -0
 630               		.cfi_startproc
 631               	/* prologue: function */
 632               	/* frame size = 0 */
 633               	/* stack size = 0 */
 634               	.L__stack_usage = 0
 635               		.loc 2 297 36 view .LVU121
 636               		.loc 2 297 46 is_stmt 0 view .LVU122
 637 0000 8093 0000 		sts weak_mods,r24
 638               	/* epilogue start */
 639               		.loc 2 297 54 view .LVU123
 640 0004 0895      		ret
 641               		.cfi_endproc
 642               	.LFE39:
 644               		.section	.text.clear_weak_mods,"ax",@progbits
 645               	.global	clear_weak_mods
 647               	clear_weak_mods:
 648               	.LFB40:
 298:quantum/action_util.c **** /** \brief clear weak mods
 299:quantum/action_util.c ****  *
 300:quantum/action_util.c ****  * FIXME: needs doc
 301:quantum/action_util.c ****  */
 302:quantum/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 649               		.loc 2 302 28 is_stmt 1 view -0
 650               		.cfi_startproc
 651               	/* prologue: function */
 652               	/* frame size = 0 */
 653               	/* stack size = 0 */
 654               	.L__stack_usage = 0
 655               		.loc 2 302 30 view .LVU125
 656               		.loc 2 302 40 is_stmt 0 view .LVU126
 657 0000 1092 0000 		sts weak_mods,__zero_reg__
 658               	/* epilogue start */
 659               		.loc 2 302 45 view .LVU127
 660 0004 0895      		ret
 661               		.cfi_endproc
 662               	.LFE40:
 664               		.section	.text.get_macro_mods,"ax",@progbits
 665               	.global	get_macro_mods
 667               	get_macro_mods:
 668               	.LFB41:
 303:quantum/action_util.c **** 
 304:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 305:quantum/action_util.c **** /** \brief set weak mods used by key overrides. DO not call this manually
 306:quantum/action_util.c ****  */
 307:quantum/action_util.c **** void set_weak_override_mods(uint8_t mods) { weak_override_mods = mods; }
 308:quantum/action_util.c **** /** \brief clear weak mods used by key overrides. DO not call this manually
 309:quantum/action_util.c ****  */
 310:quantum/action_util.c **** void clear_weak_override_mods(void) { weak_override_mods = 0; }
 311:quantum/action_util.c **** 
 312:quantum/action_util.c **** /** \brief set suppressed mods used by key overrides. DO not call this manually
 313:quantum/action_util.c ****  */
 314:quantum/action_util.c **** void set_suppressed_override_mods(uint8_t mods) { suppressed_mods = mods; }
 315:quantum/action_util.c **** /** \brief clear suppressed mods used by key overrides. DO not call this manually
 316:quantum/action_util.c ****  */
 317:quantum/action_util.c **** void clear_suppressed_override_mods(void) { suppressed_mods = 0; }
 318:quantum/action_util.c **** #endif
 319:quantum/action_util.c **** 
 320:quantum/action_util.c **** /* macro modifier */
 321:quantum/action_util.c **** /** \brief get macro mods
 322:quantum/action_util.c ****  *
 323:quantum/action_util.c ****  * FIXME: needs doc
 324:quantum/action_util.c ****  */
 325:quantum/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 669               		.loc 2 325 30 is_stmt 1 view -0
 670               		.cfi_startproc
 671               	/* prologue: function */
 672               	/* frame size = 0 */
 673               	/* stack size = 0 */
 674               	.L__stack_usage = 0
 675               		.loc 2 325 32 view .LVU129
 676               		.loc 2 325 51 is_stmt 0 view .LVU130
 677 0000 8091 0000 		lds r24,macro_mods
 678               	/* epilogue start */
 679 0004 0895      		ret
 680               		.cfi_endproc
 681               	.LFE41:
 683               		.section	.text.add_macro_mods,"ax",@progbits
 684               	.global	add_macro_mods
 686               	add_macro_mods:
 687               	.LVL23:
 688               	.LFB42:
 326:quantum/action_util.c **** /** \brief add macro mods
 327:quantum/action_util.c ****  *
 328:quantum/action_util.c ****  * FIXME: needs doc
 329:quantum/action_util.c ****  */
 330:quantum/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 689               		.loc 2 330 35 is_stmt 1 view -0
 690               		.cfi_startproc
 691               	/* prologue: function */
 692               	/* frame size = 0 */
 693               	/* stack size = 0 */
 694               	.L__stack_usage = 0
 695               		.loc 2 330 37 view .LVU132
 696               		.loc 2 330 48 is_stmt 0 view .LVU133
 697 0000 9091 0000 		lds r25,macro_mods
 698 0004 982B      		or r25,r24
 699 0006 9093 0000 		sts macro_mods,r25
 700               	/* epilogue start */
 701               		.loc 2 330 57 view .LVU134
 702 000a 0895      		ret
 703               		.cfi_endproc
 704               	.LFE42:
 706               		.section	.text.del_macro_mods,"ax",@progbits
 707               	.global	del_macro_mods
 709               	del_macro_mods:
 710               	.LVL24:
 711               	.LFB43:
 331:quantum/action_util.c **** /** \brief del macro mods
 332:quantum/action_util.c ****  *
 333:quantum/action_util.c ****  * FIXME: needs doc
 334:quantum/action_util.c ****  */
 335:quantum/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 712               		.loc 2 335 35 is_stmt 1 view -0
 713               		.cfi_startproc
 714               	/* prologue: function */
 715               	/* frame size = 0 */
 716               	/* stack size = 0 */
 717               	.L__stack_usage = 0
 718               		.loc 2 335 37 view .LVU136
 719               		.loc 2 335 48 is_stmt 0 view .LVU137
 720 0000 982F      		mov r25,r24
 721 0002 9095      		com r25
 722 0004 8091 0000 		lds r24,macro_mods
 723               	.LVL25:
 724               		.loc 2 335 48 view .LVU138
 725 0008 8923      		and r24,r25
 726 000a 8093 0000 		sts macro_mods,r24
 727               	/* epilogue start */
 728               		.loc 2 335 58 view .LVU139
 729 000e 0895      		ret
 730               		.cfi_endproc
 731               	.LFE43:
 733               		.section	.text.set_macro_mods,"ax",@progbits
 734               	.global	set_macro_mods
 736               	set_macro_mods:
 737               	.LVL26:
 738               	.LFB44:
 336:quantum/action_util.c **** /** \brief set macro mods
 337:quantum/action_util.c ****  *
 338:quantum/action_util.c ****  * FIXME: needs doc
 339:quantum/action_util.c ****  */
 340:quantum/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 739               		.loc 2 340 35 is_stmt 1 view -0
 740               		.cfi_startproc
 741               	/* prologue: function */
 742               	/* frame size = 0 */
 743               	/* stack size = 0 */
 744               	.L__stack_usage = 0
 745               		.loc 2 340 37 view .LVU141
 746               		.loc 2 340 48 is_stmt 0 view .LVU142
 747 0000 8093 0000 		sts macro_mods,r24
 748               	/* epilogue start */
 749               		.loc 2 340 56 view .LVU143
 750 0004 0895      		ret
 751               		.cfi_endproc
 752               	.LFE44:
 754               		.section	.text.clear_macro_mods,"ax",@progbits
 755               	.global	clear_macro_mods
 757               	clear_macro_mods:
 758               	.LFB45:
 341:quantum/action_util.c **** /** \brief clear macro mods
 342:quantum/action_util.c ****  *
 343:quantum/action_util.c ****  * FIXME: needs doc
 344:quantum/action_util.c ****  */
 345:quantum/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 759               		.loc 2 345 29 is_stmt 1 view -0
 760               		.cfi_startproc
 761               	/* prologue: function */
 762               	/* frame size = 0 */
 763               	/* stack size = 0 */
 764               	.L__stack_usage = 0
 765               		.loc 2 345 31 view .LVU145
 766               		.loc 2 345 42 is_stmt 0 view .LVU146
 767 0000 1092 0000 		sts macro_mods,__zero_reg__
 768               	/* epilogue start */
 769               		.loc 2 345 47 view .LVU147
 770 0004 0895      		ret
 771               		.cfi_endproc
 772               	.LFE45:
 774               		.section	.text.get_oneshot_mods,"ax",@progbits
 775               	.global	get_oneshot_mods
 777               	get_oneshot_mods:
 778               	.LFB46:
 346:quantum/action_util.c **** 
 347:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 348:quantum/action_util.c **** /** \brief get oneshot mods
 349:quantum/action_util.c ****  *
 350:quantum/action_util.c ****  * FIXME: needs doc
 351:quantum/action_util.c ****  */
 352:quantum/action_util.c **** uint8_t get_oneshot_mods(void) { return oneshot_mods; }
 779               		.loc 2 352 32 is_stmt 1 view -0
 780               		.cfi_startproc
 781               	/* prologue: function */
 782               	/* frame size = 0 */
 783               	/* stack size = 0 */
 784               	.L__stack_usage = 0
 785               		.loc 2 352 34 view .LVU149
 786               		.loc 2 352 55 is_stmt 0 view .LVU150
 787 0000 8091 0000 		lds r24,oneshot_mods
 788               	/* epilogue start */
 789 0004 0895      		ret
 790               		.cfi_endproc
 791               	.LFE46:
 793               		.section	.text.oneshot_locked_mods_changed_user,"ax",@progbits
 794               		.weak	oneshot_locked_mods_changed_user
 796               	oneshot_locked_mods_changed_user:
 797               	.LVL27:
 798               	.LFB51:
 353:quantum/action_util.c **** 
 354:quantum/action_util.c **** void add_oneshot_mods(uint8_t mods) {
 355:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 356:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 357:quantum/action_util.c ****         oneshot_time = timer_read();
 358:quantum/action_util.c **** #    endif
 359:quantum/action_util.c ****         oneshot_mods |= mods;
 360:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 361:quantum/action_util.c ****     }
 362:quantum/action_util.c **** }
 363:quantum/action_util.c **** 
 364:quantum/action_util.c **** void del_oneshot_mods(uint8_t mods) {
 365:quantum/action_util.c ****     if (oneshot_mods & mods) {
 366:quantum/action_util.c ****         oneshot_mods &= ~mods;
 367:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 368:quantum/action_util.c ****         oneshot_time = oneshot_mods ? timer_read() : 0;
 369:quantum/action_util.c **** #    endif
 370:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 371:quantum/action_util.c ****     }
 372:quantum/action_util.c **** }
 373:quantum/action_util.c **** 
 374:quantum/action_util.c **** /** \brief set oneshot mods
 375:quantum/action_util.c ****  *
 376:quantum/action_util.c ****  * FIXME: needs doc
 377:quantum/action_util.c ****  */
 378:quantum/action_util.c **** void set_oneshot_mods(uint8_t mods) {
 379:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 380:quantum/action_util.c ****         if (oneshot_mods != mods) {
 381:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 382:quantum/action_util.c ****             oneshot_time = timer_read();
 383:quantum/action_util.c **** #    endif
 384:quantum/action_util.c ****             oneshot_mods = mods;
 385:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 386:quantum/action_util.c ****         }
 387:quantum/action_util.c ****     }
 388:quantum/action_util.c **** }
 389:quantum/action_util.c **** 
 390:quantum/action_util.c **** /** \brief clear oneshot mods
 391:quantum/action_util.c ****  *
 392:quantum/action_util.c ****  * FIXME: needs doc
 393:quantum/action_util.c ****  */
 394:quantum/action_util.c **** void clear_oneshot_mods(void) {
 395:quantum/action_util.c ****     if (oneshot_mods) {
 396:quantum/action_util.c ****         oneshot_mods = 0;
 397:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 398:quantum/action_util.c ****         oneshot_time = 0;
 399:quantum/action_util.c **** #    endif
 400:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 401:quantum/action_util.c ****     }
 402:quantum/action_util.c **** }
 403:quantum/action_util.c **** #endif
 404:quantum/action_util.c **** 
 405:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 406:quantum/action_util.c ****  *
 407:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 408:quantum/action_util.c ****  */
 409:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_user(uint8_t mods) {}
 799               		.loc 2 409 75 is_stmt 1 view -0
 800               		.cfi_startproc
 801               	/* prologue: function */
 802               	/* frame size = 0 */
 803               	/* stack size = 0 */
 804               	.L__stack_usage = 0
 805               		.loc 2 409 76 view .LVU152
 806               	/* epilogue start */
 807 0000 0895      		ret
 808               		.cfi_endproc
 809               	.LFE51:
 811               		.set	oneshot_locked_mods_changed_user.localalias,oneshot_locked_mods_changed_user
 812               		.section	.text.oneshot_locked_mods_changed_kb,"ax",@progbits
 813               		.weak	oneshot_locked_mods_changed_kb
 815               	oneshot_locked_mods_changed_kb:
 816               	.LVL28:
 817               	.LFB52:
 410:quantum/action_util.c **** 
 411:quantum/action_util.c **** /** \brief Called when the locked one shot modifiers have been changed.
 412:quantum/action_util.c ****  *
 413:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 414:quantum/action_util.c ****  */
 415:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_kb(uint8_t mods) { oneshot_locked_mods_chang
 818               		.loc 2 415 73 view -0
 819               		.cfi_startproc
 820               	/* prologue: function */
 821               	/* frame size = 0 */
 822               	/* stack size = 0 */
 823               	.L__stack_usage = 0
 824               		.loc 2 415 75 view .LVU154
 825 0000 0C94 0000 		jmp oneshot_locked_mods_changed_user
 826               	.LVL29:
 827               		.loc 2 415 75 is_stmt 0 view .LVU155
 828               		.cfi_endproc
 829               	.LFE52:
 831               		.section	.text.set_oneshot_locked_mods,"ax",@progbits
 832               	.global	set_oneshot_locked_mods
 834               	set_oneshot_locked_mods:
 835               	.LVL30:
 836               	.LFB12:
  47:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
 837               		.loc 2 47 54 is_stmt 1 view -0
 838               		.cfi_startproc
 839               	/* prologue: function */
 840               	/* frame size = 0 */
 841               	/* stack size = 0 */
 842               	.L__stack_usage = 0
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 843               		.loc 2 48 5 view .LVU157
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 844               		.loc 2 48 8 is_stmt 0 view .LVU158
 845 0000 9091 0000 		lds r25,oneshot_locked_mods
 846 0004 9817      		cp r25,r24
 847 0006 01F0      		breq .L42
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 848               		.loc 2 49 9 is_stmt 1 view .LVU159
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 849               		.loc 2 49 29 is_stmt 0 view .LVU160
 850 0008 8093 0000 		sts oneshot_locked_mods,r24
  50:quantum/action_util.c ****     }
 851               		.loc 2 50 9 is_stmt 1 view .LVU161
 852 000c 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 853               	.LVL31:
 854               	.L42:
 855               	/* epilogue start */
  52:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
 856               		.loc 2 52 1 is_stmt 0 view .LVU162
 857 0010 0895      		ret
 858               		.cfi_endproc
 859               	.LFE12:
 861               		.section	.text.clear_oneshot_locked_mods,"ax",@progbits
 862               	.global	clear_oneshot_locked_mods
 864               	clear_oneshot_locked_mods:
 865               	.LFB13:
  53:quantum/action_util.c ****     if (oneshot_locked_mods) {
 866               		.loc 2 53 38 is_stmt 1 view -0
 867               		.cfi_startproc
 868               	/* prologue: function */
 869               	/* frame size = 0 */
 870               	/* stack size = 0 */
 871               	.L__stack_usage = 0
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 872               		.loc 2 54 5 view .LVU164
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 873               		.loc 2 54 8 is_stmt 0 view .LVU165
 874 0000 8091 0000 		lds r24,oneshot_locked_mods
 875 0004 8823      		tst r24
 876 0006 01F0      		breq .L44
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 877               		.loc 2 55 9 is_stmt 1 view .LVU166
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 878               		.loc 2 55 29 is_stmt 0 view .LVU167
 879 0008 1092 0000 		sts oneshot_locked_mods,__zero_reg__
  56:quantum/action_util.c ****     }
 880               		.loc 2 56 9 is_stmt 1 view .LVU168
 881 000c 80E0      		ldi r24,0
 882 000e 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 883               	.LVL32:
 884               	.L44:
 885               	/* epilogue start */
  58:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 886               		.loc 2 58 1 is_stmt 0 view .LVU169
 887 0012 0895      		ret
 888               		.cfi_endproc
 889               	.LFE13:
 891               		.section	.text.oneshot_mods_changed_user,"ax",@progbits
 892               		.weak	oneshot_mods_changed_user
 894               	oneshot_mods_changed_user:
 895               	.LFB59:
 896               		.cfi_startproc
 897               	/* prologue: function */
 898               	/* frame size = 0 */
 899               	/* stack size = 0 */
 900               	.L__stack_usage = 0
 901               	/* epilogue start */
 902 0000 0895      		ret
 903               		.cfi_endproc
 904               	.LFE59:
 906               		.section	.text.oneshot_mods_changed_kb,"ax",@progbits
 907               		.weak	oneshot_mods_changed_kb
 909               	oneshot_mods_changed_kb:
 910               	.LVL33:
 911               	.LFB54:
 416:quantum/action_util.c **** 
 417:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 418:quantum/action_util.c ****  *
 419:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 420:quantum/action_util.c ****  */
 421:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_user(uint8_t mods) {}
 422:quantum/action_util.c **** 
 423:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 424:quantum/action_util.c ****  *
 425:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 426:quantum/action_util.c ****  */
 427:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_kb(uint8_t mods) { oneshot_mods_changed_user(mods);
 912               		.loc 2 427 66 is_stmt 1 view -0
 913               		.cfi_startproc
 914               	/* prologue: function */
 915               	/* frame size = 0 */
 916               	/* stack size = 0 */
 917               	.L__stack_usage = 0
 918               		.loc 2 427 68 view .LVU171
 919 0000 0C94 0000 		jmp oneshot_mods_changed_user
 920               	.LVL34:
 921               		.loc 2 427 68 is_stmt 0 view .LVU172
 922               		.cfi_endproc
 923               	.LFE54:
 925               		.section	.text.add_oneshot_mods,"ax",@progbits
 926               	.global	add_oneshot_mods
 928               	add_oneshot_mods:
 929               	.LVL35:
 930               	.LFB47:
 354:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 931               		.loc 2 354 37 is_stmt 1 view -0
 932               		.cfi_startproc
 933               	/* prologue: function */
 934               	/* frame size = 0 */
 935               	/* stack size = 0 */
 936               	.L__stack_usage = 0
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 937               		.loc 2 355 5 view .LVU174
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 938               		.loc 2 355 31 is_stmt 0 view .LVU175
 939 0000 9091 0000 		lds r25,oneshot_mods
 940 0004 292F      		mov r18,r25
 941 0006 2823      		and r18,r24
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 942               		.loc 2 355 8 view .LVU176
 943 0008 2817      		cp r18,r24
 944 000a 01F0      		breq .L48
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 945               		.loc 2 359 9 is_stmt 1 view .LVU177
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 946               		.loc 2 359 22 is_stmt 0 view .LVU178
 947 000c 982B      		or r25,r24
 948 000e 9093 0000 		sts oneshot_mods,r25
 360:quantum/action_util.c ****     }
 949               		.loc 2 360 9 is_stmt 1 view .LVU179
 950 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 951               	.LVL36:
 952               	.L48:
 953               	/* epilogue start */
 362:quantum/action_util.c **** 
 954               		.loc 2 362 1 is_stmt 0 view .LVU180
 955 0016 0895      		ret
 956               		.cfi_endproc
 957               	.LFE47:
 959               		.section	.text.del_oneshot_mods,"ax",@progbits
 960               	.global	del_oneshot_mods
 962               	del_oneshot_mods:
 963               	.LVL37:
 964               	.LFB48:
 364:quantum/action_util.c ****     if (oneshot_mods & mods) {
 965               		.loc 2 364 37 is_stmt 1 view -0
 966               		.cfi_startproc
 967               	/* prologue: function */
 968               	/* frame size = 0 */
 969               	/* stack size = 0 */
 970               	.L__stack_usage = 0
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 971               		.loc 2 365 5 view .LVU182
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 972               		.loc 2 365 9 is_stmt 0 view .LVU183
 973 0000 9091 0000 		lds r25,oneshot_mods
 974 0004 292F      		mov r18,r25
 975 0006 2823      		and r18,r24
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 976               		.loc 2 365 8 view .LVU184
 977 0008 01F0      		breq .L50
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 978               		.loc 2 366 9 is_stmt 1 view .LVU185
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 979               		.loc 2 366 22 is_stmt 0 view .LVU186
 980 000a 8095      		com r24
 981               	.LVL38:
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 982               		.loc 2 366 22 view .LVU187
 983 000c 8923      		and r24,r25
 984               	.LVL39:
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 985               		.loc 2 366 22 view .LVU188
 986 000e 8093 0000 		sts oneshot_mods,r24
 370:quantum/action_util.c ****     }
 987               		.loc 2 370 9 is_stmt 1 view .LVU189
 988 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 989               	.LVL40:
 990               	.L50:
 991               	/* epilogue start */
 372:quantum/action_util.c **** 
 992               		.loc 2 372 1 is_stmt 0 view .LVU190
 993 0016 0895      		ret
 994               		.cfi_endproc
 995               	.LFE48:
 997               		.section	.text.set_oneshot_mods,"ax",@progbits
 998               	.global	set_oneshot_mods
 1000               	set_oneshot_mods:
 1001               	.LVL41:
 1002               	.LFB49:
 378:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1003               		.loc 2 378 37 is_stmt 1 view -0
 1004               		.cfi_startproc
 1005               	/* prologue: function */
 1006               	/* frame size = 0 */
 1007               	/* stack size = 0 */
 1008               	.L__stack_usage = 0
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1009               		.loc 2 379 5 view .LVU192
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1010               		.loc 2 379 23 is_stmt 0 view .LVU193
 1011 0000 9091 0000 		lds r25,keymap_config+1
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1012               		.loc 2 379 8 view .LVU194
 1013 0004 92FD      		sbrc r25,2
 1014 0006 00C0      		rjmp .L52
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1015               		.loc 2 380 9 is_stmt 1 view .LVU195
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1016               		.loc 2 380 12 is_stmt 0 view .LVU196
 1017 0008 9091 0000 		lds r25,oneshot_mods
 1018 000c 9817      		cp r25,r24
 1019 000e 01F0      		breq .L52
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1020               		.loc 2 384 13 is_stmt 1 view .LVU197
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1021               		.loc 2 384 26 is_stmt 0 view .LVU198
 1022 0010 8093 0000 		sts oneshot_mods,r24
 385:quantum/action_util.c ****         }
 1023               		.loc 2 385 13 is_stmt 1 view .LVU199
 1024 0014 0C94 0000 		jmp oneshot_mods_changed_kb
 1025               	.LVL42:
 1026               	.L52:
 1027               	/* epilogue start */
 388:quantum/action_util.c **** 
 1028               		.loc 2 388 1 is_stmt 0 view .LVU200
 1029 0018 0895      		ret
 1030               		.cfi_endproc
 1031               	.LFE49:
 1033               		.section	.text.clear_oneshot_mods,"ax",@progbits
 1034               	.global	clear_oneshot_mods
 1036               	clear_oneshot_mods:
 1037               	.LFB50:
 394:quantum/action_util.c ****     if (oneshot_mods) {
 1038               		.loc 2 394 31 is_stmt 1 view -0
 1039               		.cfi_startproc
 1040               	/* prologue: function */
 1041               	/* frame size = 0 */
 1042               	/* stack size = 0 */
 1043               	.L__stack_usage = 0
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1044               		.loc 2 395 5 view .LVU202
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1045               		.loc 2 395 8 is_stmt 0 view .LVU203
 1046 0000 8091 0000 		lds r24,oneshot_mods
 1047 0004 8823      		tst r24
 1048 0006 01F0      		breq .L54
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1049               		.loc 2 396 9 is_stmt 1 view .LVU204
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1050               		.loc 2 396 22 is_stmt 0 view .LVU205
 1051 0008 1092 0000 		sts oneshot_mods,__zero_reg__
 400:quantum/action_util.c ****     }
 1052               		.loc 2 400 9 is_stmt 1 view .LVU206
 1053 000c 80E0      		ldi r24,0
 1054 000e 0C94 0000 		jmp oneshot_mods_changed_kb
 1055               	.LVL43:
 1056               	.L54:
 1057               	/* epilogue start */
 402:quantum/action_util.c **** #endif
 1058               		.loc 2 402 1 is_stmt 0 view .LVU207
 1059 0012 0895      		ret
 1060               		.cfi_endproc
 1061               	.LFE50:
 1063               		.section	.text.send_keyboard_report,"ax",@progbits
 1064               	.global	send_keyboard_report
 1066               	send_keyboard_report:
 1067               	.LFB30:
 222:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 1068               		.loc 2 222 33 is_stmt 1 view -0
 1069               		.cfi_startproc
 1070               	/* prologue: function */
 1071               	/* frame size = 0 */
 1072               	/* stack size = 0 */
 1073               	.L__stack_usage = 0
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1074               		.loc 2 223 5 view .LVU209
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1075               		.loc 2 223 20 is_stmt 0 view .LVU210
 1076 0000 E091 0000 		lds r30,keyboard_report
 1077 0004 F091 0000 		lds r31,keyboard_report+1
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1078               		.loc 2 223 27 view .LVU211
 1079 0008 8091 0000 		lds r24,real_mods
 1080 000c 8083      		st Z,r24
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1081               		.loc 2 224 5 is_stmt 1 view .LVU212
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1082               		.loc 2 224 27 is_stmt 0 view .LVU213
 1083 000e E091 0000 		lds r30,keyboard_report
 1084 0012 F091 0000 		lds r31,keyboard_report+1
 1085 0016 8081      		ld r24,Z
 1086 0018 9091 0000 		lds r25,weak_mods
 1087 001c 892B      		or r24,r25
 1088 001e 8083      		st Z,r24
 225:quantum/action_util.c **** 
 1089               		.loc 2 225 5 is_stmt 1 view .LVU214
 225:quantum/action_util.c **** 
 1090               		.loc 2 225 27 is_stmt 0 view .LVU215
 1091 0020 E091 0000 		lds r30,keyboard_report
 1092 0024 F091 0000 		lds r31,keyboard_report+1
 1093 0028 8081      		ld r24,Z
 1094 002a 9091 0000 		lds r25,macro_mods
 1095 002e 892B      		or r24,r25
 1096 0030 8083      		st Z,r24
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1097               		.loc 2 228 5 is_stmt 1 view .LVU216
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1098               		.loc 2 228 9 is_stmt 0 view .LVU217
 1099 0032 9091 0000 		lds r25,oneshot_mods
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1100               		.loc 2 228 8 view .LVU218
 1101 0036 9923      		tst r25
 1102 0038 01F0      		breq .L58
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1103               		.loc 2 235 9 is_stmt 1 view .LVU219
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1104               		.loc 2 235 31 is_stmt 0 view .LVU220
 1105 003a E091 0000 		lds r30,keyboard_report
 1106 003e F091 0000 		lds r31,keyboard_report+1
 1107 0042 8081      		ld r24,Z
 1108 0044 892B      		or r24,r25
 1109 0046 8083      		st Z,r24
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1110               		.loc 2 236 9 is_stmt 1 view .LVU221
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1111               		.loc 2 236 13 is_stmt 0 view .LVU222
 1112 0048 8091 0000 		lds r24,keyboard_report
 1113 004c 9091 0000 		lds r25,keyboard_report+1
 1114 0050 0E94 0000 		call has_anykey
 1115               	.LVL44:
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1116               		.loc 2 236 12 view .LVU223
 1117 0054 8111      		cpse r24,__zero_reg__
 237:quantum/action_util.c ****         }
 1118               		.loc 2 237 13 is_stmt 1 view .LVU224
 1119 0056 0E94 0000 		call clear_oneshot_mods
 1120               	.LVL45:
 1121               	.L58:
 249:quantum/action_util.c **** }
 1122               		.loc 2 249 5 view .LVU225
 1123 005a 8091 0000 		lds r24,keyboard_report
 1124 005e 9091 0000 		lds r25,keyboard_report+1
 1125 0062 0C94 0000 		jmp host_keyboard_send
 1126               	.LVL46:
 1127               		.cfi_endproc
 1128               	.LFE30:
 1130               		.section	.text.oneshot_layer_changed_user,"ax",@progbits
 1131               		.weak	oneshot_layer_changed_user
 1133               	oneshot_layer_changed_user:
 1134               	.LFB61:
 1135               		.cfi_startproc
 1136               	/* prologue: function */
 1137               	/* frame size = 0 */
 1138               	/* stack size = 0 */
 1139               	.L__stack_usage = 0
 1140               	/* epilogue start */
 1141 0000 0895      		ret
 1142               		.cfi_endproc
 1143               	.LFE61:
 1145               		.section	.text.oneshot_layer_changed_kb,"ax",@progbits
 1146               		.weak	oneshot_layer_changed_kb
 1148               	oneshot_layer_changed_kb:
 1149               	.LVL47:
 1150               	.LFB56:
 428:quantum/action_util.c **** 
 429:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 430:quantum/action_util.c ****  *
 431:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 432:quantum/action_util.c ****  */
 433:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_user(uint8_t layer) {}
 434:quantum/action_util.c **** 
 435:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 436:quantum/action_util.c ****  *
 437:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 438:quantum/action_util.c ****  */
 439:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_kb(uint8_t layer) { oneshot_layer_changed_user(lay
 1151               		.loc 2 439 68 view -0
 1152               		.cfi_startproc
 1153               	/* prologue: function */
 1154               	/* frame size = 0 */
 1155               	/* stack size = 0 */
 1156               	.L__stack_usage = 0
 1157               		.loc 2 439 70 view .LVU227
 1158 0000 0C94 0000 		jmp oneshot_layer_changed_user
 1159               	.LVL48:
 1160               		.loc 2 439 70 is_stmt 0 view .LVU228
 1161               		.cfi_endproc
 1162               	.LFE56:
 1164               		.section	.text.set_oneshot_layer,"ax",@progbits
 1165               	.global	set_oneshot_layer
 1167               	set_oneshot_layer:
 1168               	.LVL49:
 1169               	.LFB21:
 143:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1170               		.loc 2 143 54 is_stmt 1 view -0
 1171               		.cfi_startproc
 1172               	/* prologue: function */
 1173               	/* frame size = 0 */
 1174               	/* stack size = 0 */
 1175               	.L__stack_usage = 0
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1176               		.loc 2 144 5 view .LVU230
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1177               		.loc 2 144 23 is_stmt 0 view .LVU231
 1178 0000 9091 0000 		lds r25,keymap_config+1
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1179               		.loc 2 144 8 view .LVU232
 1180 0004 92FD      		sbrc r25,2
 1181 0006 00C0      		rjmp .L66
 145:quantum/action_util.c ****         layer_on(layer);
 1182               		.loc 2 145 9 is_stmt 1 view .LVU233
 145:quantum/action_util.c ****         layer_on(layer);
 1183               		.loc 2 145 36 is_stmt 0 view .LVU234
 1184 0008 98E0      		ldi r25,lo8(8)
 1185 000a 899F      		mul r24,r25
 1186 000c 9001      		movw r18,r0
 1187 000e 1124      		clr __zero_reg__
 145:quantum/action_util.c ****         layer_on(layer);
 1188               		.loc 2 145 41 view .LVU235
 1189 0010 622B      		or r22,r18
 1190               	.LVL50:
 145:quantum/action_util.c ****         layer_on(layer);
 1191               		.loc 2 145 28 view .LVU236
 1192 0012 6093 0000 		sts oneshot_layer_data,r22
 146:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1193               		.loc 2 146 9 is_stmt 1 view .LVU237
 1194 0016 0E94 0000 		call layer_on
 1195               	.LVL51:
 150:quantum/action_util.c ****     } else {
 1196               		.loc 2 150 9 view .LVU238
 1197               	.LBB14:
 1198               	.LBI14:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1199               		.loc 2 77 16 view .LVU239
 1200               	.LBB15:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1201               		.loc 2 77 42 view .LVU240
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1202               		.loc 2 77 68 is_stmt 0 view .LVU241
 1203 001a 8091 0000 		lds r24,oneshot_layer_data
 1204               	.LBE15:
 1205               	.LBE14:
 150:quantum/action_util.c ****     } else {
 1206               		.loc 2 150 9 view .LVU242
 1207 001e 8595      		asr r24
 1208 0020 8595      		asr r24
 1209 0022 8595      		asr r24
 1210 0024 0C94 0000 		jmp oneshot_layer_changed_kb
 1211               	.LVL52:
 1212               	.L66:
 152:quantum/action_util.c ****     }
 1213               		.loc 2 152 9 is_stmt 1 view .LVU243
 1214 0028 0C94 0000 		jmp layer_on
 1215               	.LVL53:
 152:quantum/action_util.c ****     }
 1216               		.loc 2 152 9 is_stmt 0 view .LVU244
 1217               		.cfi_endproc
 1218               	.LFE21:
 1220               		.section	.text.reset_oneshot_layer,"ax",@progbits
 1221               	.global	reset_oneshot_layer
 1223               	reset_oneshot_layer:
 1224               	.LFB22:
 159:quantum/action_util.c ****     oneshot_layer_data = 0;
 1225               		.loc 2 159 32 is_stmt 1 view -0
 1226               		.cfi_startproc
 1227               	/* prologue: function */
 1228               	/* frame size = 0 */
 1229               	/* stack size = 0 */
 1230               	.L__stack_usage = 0
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1231               		.loc 2 160 5 view .LVU246
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1232               		.loc 2 160 24 is_stmt 0 view .LVU247
 1233 0000 1092 0000 		sts oneshot_layer_data,__zero_reg__
 164:quantum/action_util.c **** }
 1234               		.loc 2 164 5 is_stmt 1 view .LVU248
 1235 0004 80E0      		ldi r24,0
 1236 0006 0C94 0000 		jmp oneshot_layer_changed_kb
 1237               	.LVL54:
 1238               		.cfi_endproc
 1239               	.LFE22:
 1241               		.section	.text.clear_oneshot_layer_state,"ax",@progbits
 1242               	.global	clear_oneshot_layer_state
 1244               	clear_oneshot_layer_state:
 1245               	.LVL55:
 1246               	.LFB23:
 170:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1247               		.loc 2 170 62 view -0
 1248               		.cfi_startproc
 1249               	/* prologue: function */
 1250               	/* frame size = 0 */
 1251               	/* stack size = 0 */
 1252               	.L__stack_usage = 0
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1253               		.loc 2 171 5 view .LVU250
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1254               		.loc 2 171 13 is_stmt 0 view .LVU251
 1255 0000 9091 0000 		lds r25,oneshot_layer_data
 1256               	.LVL56:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1257               		.loc 2 172 5 is_stmt 1 view .LVU252
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1258               		.loc 2 172 24 is_stmt 0 view .LVU253
 1259 0004 8095      		com r24
 1260               	.LVL57:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1261               		.loc 2 172 24 view .LVU254
 1262 0006 8923      		and r24,r25
 1263               	.LVL58:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1264               		.loc 2 172 24 view .LVU255
 1265 0008 8093 0000 		sts oneshot_layer_data,r24
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1266               		.loc 2 173 5 is_stmt 1 view .LVU256
 1267               	.LBB16:
 1268               	.LBI16:
  78:quantum/action_util.c **** 
 1269               		.loc 2 78 16 view .LVU257
 1270               	.LBB17:
  78:quantum/action_util.c **** 
 1271               		.loc 2 78 48 view .LVU258
  78:quantum/action_util.c **** 
 1272               		.loc 2 78 74 is_stmt 0 view .LVU259
 1273 000c 282F      		mov r18,r24
 1274 000e 2770      		andi r18,lo8(7)
 1275               	.LBE17:
 1276               	.LBE16:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1277               		.loc 2 173 8 view .LVU260
 1278 0010 01F4      		brne .L69
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1279               		.loc 2 173 52 discriminator 1 view .LVU261
 1280 0012 282F      		mov r18,r24
 1281 0014 082E      		mov __tmp_reg__,r24
 1282 0016 000C      		lsl r0
 1283 0018 330B      		sbc r19,r19
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1284               		.loc 2 173 37 discriminator 1 view .LVU262
 1285 001a 9217      		cp r25,r18
 1286 001c 1306      		cpc __zero_reg__,r19
 1287 001e 01F4      		brne .L70
 1288               	.L69:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1289               		.loc 2 173 75 discriminator 3 view .LVU263
 1290 0020 9091 0000 		lds r25,keymap_config+1
 1291               	.LVL59:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1292               		.loc 2 173 75 discriminator 3 view .LVU264
 1293 0024 92FF      		sbrs r25,2
 1294 0026 00C0      		rjmp .L68
 1295               	.L70:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1296               		.loc 2 174 9 is_stmt 1 view .LVU265
 1297               	.LBB18:
 1298               	.LBI18:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1299               		.loc 2 77 16 view .LVU266
 1300               	.LBB19:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1301               		.loc 2 77 42 view .LVU267
 1302               	.LBE19:
 1303               	.LBE18:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1304               		.loc 2 174 9 is_stmt 0 view .LVU268
 1305 0028 8595      		asr r24
 1306 002a 8595      		asr r24
 1307 002c 8595      		asr r24
 1308 002e 0E94 0000 		call layer_off
 1309               	.LVL60:
 175:quantum/action_util.c ****     }
 1310               		.loc 2 175 9 is_stmt 1 view .LVU269
 1311 0032 0C94 0000 		jmp reset_oneshot_layer
 1312               	.LVL61:
 1313               	.L68:
 1314               	/* epilogue start */
 177:quantum/action_util.c **** /** \brief Is oneshot layer active
 1315               		.loc 2 177 1 is_stmt 0 view .LVU270
 1316 0036 0895      		ret
 1317               		.cfi_endproc
 1318               	.LFE23:
 1320               		.section	.text.has_anymod,"ax",@progbits
 1321               	.global	has_anymod
 1323               	has_anymod:
 1324               	.LFB57:
 440:quantum/action_util.c **** 
 441:quantum/action_util.c **** /** \brief inspect keyboard state
 442:quantum/action_util.c ****  *
 443:quantum/action_util.c ****  * FIXME: needs doc
 444:quantum/action_util.c ****  */
 445:quantum/action_util.c **** uint8_t has_anymod(void) { return bitpop(real_mods); }
 1325               		.loc 2 445 26 is_stmt 1 view -0
 1326               		.cfi_startproc
 1327               	/* prologue: function */
 1328               	/* frame size = 0 */
 1329               	/* stack size = 0 */
 1330               	.L__stack_usage = 0
 1331               		.loc 2 445 28 view .LVU272
 1332               		.loc 2 445 35 is_stmt 0 view .LVU273
 1333 0000 8091 0000 		lds r24,real_mods
 1334 0004 0C94 0000 		jmp bitpop
 1335               	.LVL62:
 1336               		.cfi_endproc
 1337               	.LFE57:
 1339               	.global	swap_hands_oneshot
 1340               		.section	.bss.swap_hands_oneshot,"aw",@nobits
 1343               	swap_hands_oneshot:
 1344 0000 00        		.zero	1
 1345               		.section	.bss.oneshot_layer_data,"aw",@nobits
 1348               	oneshot_layer_data:
 1349 0000 00        		.zero	1
 1350               		.section	.bss.oneshot_locked_mods,"aw",@nobits
 1353               	oneshot_locked_mods:
 1354 0000 00        		.zero	1
 1355               		.section	.bss.oneshot_mods,"aw",@nobits
 1358               	oneshot_mods:
 1359 0000 00        		.zero	1
 1360               	.global	keyboard_report
 1361               		.section	.data.keyboard_report,"aw"
 1364               	keyboard_report:
 1365 0000 0000      		.word	__compound_literal.0
 1366               		.section	.bss.__compound_literal.0,"aw",@nobits
 1369               	__compound_literal.0:
 1370 0000 0000 0000 		.zero	8
 1370      0000 0000 
 1371               		.section	.bss.macro_mods,"aw",@nobits
 1374               	macro_mods:
 1375 0000 00        		.zero	1
 1376               		.section	.bss.weak_mods,"aw",@nobits
 1379               	weak_mods:
 1380 0000 00        		.zero	1
 1381               		.section	.bss.real_mods,"aw",@nobits
 1384               	real_mods:
 1385 0000 00        		.zero	1
 1386               		.text
 1387               	.Letext0:
 1388               		.file 3 "/usr/avr/include/stdint.h"
 1389               		.file 4 "tmk_core/common/report.h"
 1390               		.file 5 "quantum/action.h"
 1391               		.file 6 "quantum/keycode_config.h"
 1392               		.file 7 "quantum/bitwise.h"
 1393               		.file 8 "tmk_core/common/host.h"
 1394               		.file 9 "quantum/eeconfig.h"
 1395               		.file 10 "quantum/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
     /tmp/ccCw6Jv8.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccCw6Jv8.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccCw6Jv8.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccCw6Jv8.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccCw6Jv8.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccCw6Jv8.s:13     .text.add_key:0000000000000000 add_key
     /tmp/ccCw6Jv8.s:1364   .data.keyboard_report:0000000000000000 keyboard_report
     /tmp/ccCw6Jv8.s:39     .text.del_key:0000000000000000 del_key
     /tmp/ccCw6Jv8.s:64     .text.clear_keys:0000000000000000 clear_keys
     /tmp/ccCw6Jv8.s:83     .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
     /tmp/ccCw6Jv8.s:1353   .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
     /tmp/ccCw6Jv8.s:103    .text.has_oneshot_mods_timed_out:0000000000000000 has_oneshot_mods_timed_out
     /tmp/ccCw6Jv8.s:122    .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
     /tmp/ccCw6Jv8.s:1348   .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
     /tmp/ccCw6Jv8.s:145    .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
     /tmp/ccCw6Jv8.s:166    .text.set_oneshot_swaphands:0000000000000000 set_oneshot_swaphands
     /tmp/ccCw6Jv8.s:1343   .bss.swap_hands_oneshot:0000000000000000 swap_hands_oneshot
     /tmp/ccCw6Jv8.s:191    .text.clear_oneshot_swaphands:0000000000000000 clear_oneshot_swaphands
     /tmp/ccCw6Jv8.s:214    .text.release_oneshot_swaphands:0000000000000000 release_oneshot_swaphands
     /tmp/ccCw6Jv8.s:252    .text.use_oneshot_swaphands:0000000000000000 use_oneshot_swaphands
     /tmp/ccCw6Jv8.s:290    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
     /tmp/ccCw6Jv8.s:323    .text.oneshot_set:0000000000000000 oneshot_set
     /tmp/ccCw6Jv8.s:363    .text.oneshot_toggle:0000000000000000 oneshot_toggle
     /tmp/ccCw6Jv8.s:388    .text.oneshot_enable:0000000000000000 oneshot_enable
     /tmp/ccCw6Jv8.s:406    .text.oneshot_disable:0000000000000000 oneshot_disable
     /tmp/ccCw6Jv8.s:424    .text.is_oneshot_enabled:0000000000000000 is_oneshot_enabled
     /tmp/ccCw6Jv8.s:447    .text.get_mods:0000000000000000 get_mods
     /tmp/ccCw6Jv8.s:1384   .bss.real_mods:0000000000000000 real_mods
     /tmp/ccCw6Jv8.s:466    .text.add_mods:0000000000000000 add_mods
     /tmp/ccCw6Jv8.s:489    .text.del_mods:0000000000000000 del_mods
     /tmp/ccCw6Jv8.s:516    .text.set_mods:0000000000000000 set_mods
     /tmp/ccCw6Jv8.s:537    .text.clear_mods:0000000000000000 clear_mods
     /tmp/ccCw6Jv8.s:557    .text.get_weak_mods:0000000000000000 get_weak_mods
     /tmp/ccCw6Jv8.s:1379   .bss.weak_mods:0000000000000000 weak_mods
     /tmp/ccCw6Jv8.s:576    .text.add_weak_mods:0000000000000000 add_weak_mods
     /tmp/ccCw6Jv8.s:599    .text.del_weak_mods:0000000000000000 del_weak_mods
     /tmp/ccCw6Jv8.s:626    .text.set_weak_mods:0000000000000000 set_weak_mods
     /tmp/ccCw6Jv8.s:647    .text.clear_weak_mods:0000000000000000 clear_weak_mods
     /tmp/ccCw6Jv8.s:667    .text.get_macro_mods:0000000000000000 get_macro_mods
     /tmp/ccCw6Jv8.s:1374   .bss.macro_mods:0000000000000000 macro_mods
     /tmp/ccCw6Jv8.s:686    .text.add_macro_mods:0000000000000000 add_macro_mods
     /tmp/ccCw6Jv8.s:709    .text.del_macro_mods:0000000000000000 del_macro_mods
     /tmp/ccCw6Jv8.s:736    .text.set_macro_mods:0000000000000000 set_macro_mods
     /tmp/ccCw6Jv8.s:757    .text.clear_macro_mods:0000000000000000 clear_macro_mods
     /tmp/ccCw6Jv8.s:777    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
     /tmp/ccCw6Jv8.s:1358   .bss.oneshot_mods:0000000000000000 oneshot_mods
     /tmp/ccCw6Jv8.s:796    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user
     /tmp/ccCw6Jv8.s:796    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user.localalias
     /tmp/ccCw6Jv8.s:815    .text.oneshot_locked_mods_changed_kb:0000000000000000 oneshot_locked_mods_changed_kb
     /tmp/ccCw6Jv8.s:834    .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
     /tmp/ccCw6Jv8.s:864    .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
     /tmp/ccCw6Jv8.s:894    .text.oneshot_mods_changed_user:0000000000000000 oneshot_mods_changed_user
     /tmp/ccCw6Jv8.s:909    .text.oneshot_mods_changed_kb:0000000000000000 oneshot_mods_changed_kb
     /tmp/ccCw6Jv8.s:928    .text.add_oneshot_mods:0000000000000000 add_oneshot_mods
     /tmp/ccCw6Jv8.s:962    .text.del_oneshot_mods:0000000000000000 del_oneshot_mods
     /tmp/ccCw6Jv8.s:1000   .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
     /tmp/ccCw6Jv8.s:1036   .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
     /tmp/ccCw6Jv8.s:1066   .text.send_keyboard_report:0000000000000000 send_keyboard_report
     /tmp/ccCw6Jv8.s:1133   .text.oneshot_layer_changed_user:0000000000000000 oneshot_layer_changed_user
     /tmp/ccCw6Jv8.s:1148   .text.oneshot_layer_changed_kb:0000000000000000 oneshot_layer_changed_kb
     /tmp/ccCw6Jv8.s:1167   .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
     /tmp/ccCw6Jv8.s:1223   .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
     /tmp/ccCw6Jv8.s:1244   .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
     /tmp/ccCw6Jv8.s:1323   .text.has_anymod:0000000000000000 has_anymod
     /tmp/ccCw6Jv8.s:1369   .bss.__compound_literal.0:0000000000000000 __compound_literal.0

UNDEFINED SYMBOLS
add_key_to_report
del_key_from_report
clear_keys_from_report
swap_hands
keymap_config
eeconfig_update_keymap
has_anykey
host_keyboard_send
layer_on
layer_off
bitpop
__do_copy_data
__do_clear_bss
