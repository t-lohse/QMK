   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"usb_main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "tmk_core/protocol/chibios/usb_main.c"
  20              		.section	.text.kbd_in_cb,"ax",%progbits
  21              		.align	1
  22              		.global	kbd_in_cb
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	kbd_in_cb:
  28              	.LVL0:
  29              	.LFB299:
   1:tmk_core/protocol/chibios/usb_main.c **** /*
   2:tmk_core/protocol/chibios/usb_main.c ****  * (c) 2015 flabberast <s3+flabbergast@sdfeu.org>
   3:tmk_core/protocol/chibios/usb_main.c ****  *
   4:tmk_core/protocol/chibios/usb_main.c ****  * Based on the following work:
   5:tmk_core/protocol/chibios/usb_main.c ****  *  - Guillaume Duc's raw hid example (MIT License)
   6:tmk_core/protocol/chibios/usb_main.c ****  *    https://github.com/guiduc/usb-hid-chibios-example
   7:tmk_core/protocol/chibios/usb_main.c ****  *  - PJRC Teensy examples (MIT License)
   8:tmk_core/protocol/chibios/usb_main.c ****  *    https://www.pjrc.com/teensy/usb_keyboard.html
   9:tmk_core/protocol/chibios/usb_main.c ****  *  - hasu's TMK keyboard code (GPL v2 and some code Modified BSD)
  10:tmk_core/protocol/chibios/usb_main.c ****  *    https://github.com/tmk/tmk_keyboard/
  11:tmk_core/protocol/chibios/usb_main.c ****  *  - ChibiOS demo code (Apache 2.0 License)
  12:tmk_core/protocol/chibios/usb_main.c ****  *    http://www.chibios.org
  13:tmk_core/protocol/chibios/usb_main.c ****  *
  14:tmk_core/protocol/chibios/usb_main.c ****  * Since some GPL'd code is used, this work is licensed under
  15:tmk_core/protocol/chibios/usb_main.c ****  * GPL v2 or later.
  16:tmk_core/protocol/chibios/usb_main.c ****  */
  17:tmk_core/protocol/chibios/usb_main.c **** 
  18:tmk_core/protocol/chibios/usb_main.c **** /*
  19:tmk_core/protocol/chibios/usb_main.c ****  * Implementation notes:
  20:tmk_core/protocol/chibios/usb_main.c ****  *
  21:tmk_core/protocol/chibios/usb_main.c ****  * USBEndpointConfig - Configured using explicit order instead of struct member name.
  22:tmk_core/protocol/chibios/usb_main.c ****  *   This is due to ChibiOS hal LLD differences, which is dependent on hardware,
  23:tmk_core/protocol/chibios/usb_main.c ****  *   "USBv1" devices have `ep_buffers` and "OTGv1" have `in_multiplier`.
  24:tmk_core/protocol/chibios/usb_main.c ****  *   Given `USBv1/hal_usb_lld.h` marks the field as "not currently used" this code file
  25:tmk_core/protocol/chibios/usb_main.c ****  *   makes the assumption this is safe to avoid littering with preprocessor directives.
  26:tmk_core/protocol/chibios/usb_main.c ****  */
  27:tmk_core/protocol/chibios/usb_main.c **** 
  28:tmk_core/protocol/chibios/usb_main.c **** #include <ch.h>
  29:tmk_core/protocol/chibios/usb_main.c **** #include <hal.h>
  30:tmk_core/protocol/chibios/usb_main.c **** #include <string.h>
  31:tmk_core/protocol/chibios/usb_main.c **** 
  32:tmk_core/protocol/chibios/usb_main.c **** #include "usb_main.h"
  33:tmk_core/protocol/chibios/usb_main.c **** 
  34:tmk_core/protocol/chibios/usb_main.c **** #include "host.h"
  35:tmk_core/protocol/chibios/usb_main.c **** #include "debug.h"
  36:tmk_core/protocol/chibios/usb_main.c **** #include "suspend.h"
  37:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
  38:tmk_core/protocol/chibios/usb_main.c **** #    include "sleep_led.h"
  39:tmk_core/protocol/chibios/usb_main.c **** #    include "led.h"
  40:tmk_core/protocol/chibios/usb_main.c **** #endif
  41:tmk_core/protocol/chibios/usb_main.c **** #include "wait.h"
  42:tmk_core/protocol/chibios/usb_main.c **** #include "usb_descriptor.h"
  43:tmk_core/protocol/chibios/usb_main.c **** #include "usb_driver.h"
  44:tmk_core/protocol/chibios/usb_main.c **** 
  45:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
  46:tmk_core/protocol/chibios/usb_main.c **** #    include "keycode_config.h"
  47:tmk_core/protocol/chibios/usb_main.c **** 
  48:tmk_core/protocol/chibios/usb_main.c **** extern keymap_config_t keymap_config;
  49:tmk_core/protocol/chibios/usb_main.c **** #endif
  50:tmk_core/protocol/chibios/usb_main.c **** 
  51:tmk_core/protocol/chibios/usb_main.c **** #ifdef JOYSTICK_ENABLE
  52:tmk_core/protocol/chibios/usb_main.c **** #    include "joystick.h"
  53:tmk_core/protocol/chibios/usb_main.c **** #endif
  54:tmk_core/protocol/chibios/usb_main.c **** 
  55:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
  56:tmk_core/protocol/chibios/usb_main.c ****  *       Global interface variables and declarations
  57:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
  58:tmk_core/protocol/chibios/usb_main.c ****  */
  59:tmk_core/protocol/chibios/usb_main.c **** 
  60:tmk_core/protocol/chibios/usb_main.c **** #ifndef usb_lld_connect_bus
  61:tmk_core/protocol/chibios/usb_main.c **** #    define usb_lld_connect_bus(usbp)
  62:tmk_core/protocol/chibios/usb_main.c **** #endif
  63:tmk_core/protocol/chibios/usb_main.c **** 
  64:tmk_core/protocol/chibios/usb_main.c **** #ifndef usb_lld_disconnect_bus
  65:tmk_core/protocol/chibios/usb_main.c **** #    define usb_lld_disconnect_bus(usbp)
  66:tmk_core/protocol/chibios/usb_main.c **** #endif
  67:tmk_core/protocol/chibios/usb_main.c **** 
  68:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_idle __attribute__((aligned(2)))     = 0;
  69:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_protocol __attribute__((aligned(2))) = 1;
  70:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_led_state                            = 0;
  71:tmk_core/protocol/chibios/usb_main.c **** volatile uint16_t      keyboard_idle_count                           = 0;
  72:tmk_core/protocol/chibios/usb_main.c **** static virtual_timer_t keyboard_idle_timer;
  73:tmk_core/protocol/chibios/usb_main.c **** static void            keyboard_idle_timer_cb(void *arg);
  74:tmk_core/protocol/chibios/usb_main.c **** 
  75:tmk_core/protocol/chibios/usb_main.c **** report_keyboard_t keyboard_report_sent = {{0}};
  76:tmk_core/protocol/chibios/usb_main.c **** #ifdef MOUSE_ENABLE
  77:tmk_core/protocol/chibios/usb_main.c **** report_mouse_t mouse_report_blank = {0};
  78:tmk_core/protocol/chibios/usb_main.c **** #endif /* MOUSE_ENABLE */
  79:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
  80:tmk_core/protocol/chibios/usb_main.c **** uint8_t extra_report_blank[3] = {0};
  81:tmk_core/protocol/chibios/usb_main.c **** #endif /* EXTRAKEY_ENABLE */
  82:tmk_core/protocol/chibios/usb_main.c **** 
  83:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
  84:tmk_core/protocol/chibios/usb_main.c ****  *            Descriptors and USB driver objects
  85:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
  86:tmk_core/protocol/chibios/usb_main.c ****  */
  87:tmk_core/protocol/chibios/usb_main.c **** 
  88:tmk_core/protocol/chibios/usb_main.c **** /* HID specific constants */
  89:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_REPORT 0x01
  90:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_IDLE 0x02
  91:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_PROTOCOL 0x03
  92:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_REPORT 0x09
  93:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_IDLE 0x0A
  94:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_PROTOCOL 0x0B
  95:tmk_core/protocol/chibios/usb_main.c **** 
  96:tmk_core/protocol/chibios/usb_main.c **** /*
  97:tmk_core/protocol/chibios/usb_main.c ****  * Handles the GET_DESCRIPTOR callback
  98:tmk_core/protocol/chibios/usb_main.c ****  *
  99:tmk_core/protocol/chibios/usb_main.c ****  * Returns the proper descriptor
 100:tmk_core/protocol/chibios/usb_main.c ****  */
 101:tmk_core/protocol/chibios/usb_main.c **** static const USBDescriptor *usb_get_descriptor_cb(USBDriver *usbp, uint8_t dtype, uint8_t dindex, u
 102:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 103:tmk_core/protocol/chibios/usb_main.c ****     static USBDescriptor desc;
 104:tmk_core/protocol/chibios/usb_main.c ****     uint16_t             wValue = ((uint16_t)dtype << 8) | dindex;
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_string              = NULL;
 106:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 107:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 108:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
 109:tmk_core/protocol/chibios/usb_main.c ****     else
 110:tmk_core/protocol/chibios/usb_main.c ****         return &desc;
 111:tmk_core/protocol/chibios/usb_main.c **** }
 112:tmk_core/protocol/chibios/usb_main.c **** 
 113:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 114:tmk_core/protocol/chibios/usb_main.c **** /* keyboard endpoint state structure */
 115:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState kbd_ep_state;
 116:tmk_core/protocol/chibios/usb_main.c **** /* keyboard endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file *
 117:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig kbd_ep_config = {
 118:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 119:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 120:tmk_core/protocol/chibios/usb_main.c ****     kbd_in_cb,             /* IN notification callback */
 121:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 122:tmk_core/protocol/chibios/usb_main.c ****     KEYBOARD_EPSIZE,       /* IN maximum packet size */
 123:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 124:tmk_core/protocol/chibios/usb_main.c ****     &kbd_ep_state,         /* IN Endpoint state */
 125:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 126:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 127:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 128:tmk_core/protocol/chibios/usb_main.c **** };
 129:tmk_core/protocol/chibios/usb_main.c **** #endif
 130:tmk_core/protocol/chibios/usb_main.c **** 
 131:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 132:tmk_core/protocol/chibios/usb_main.c **** /* mouse endpoint state structure */
 133:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState mouse_ep_state;
 134:tmk_core/protocol/chibios/usb_main.c **** 
 135:tmk_core/protocol/chibios/usb_main.c **** /* mouse endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file */
 136:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig mouse_ep_config = {
 137:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 138:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 139:tmk_core/protocol/chibios/usb_main.c ****     mouse_in_cb,           /* IN notification callback */
 140:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 141:tmk_core/protocol/chibios/usb_main.c ****     MOUSE_EPSIZE,          /* IN maximum packet size */
 142:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 143:tmk_core/protocol/chibios/usb_main.c ****     &mouse_ep_state,       /* IN Endpoint state */
 144:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 145:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 146:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 147:tmk_core/protocol/chibios/usb_main.c **** };
 148:tmk_core/protocol/chibios/usb_main.c **** #endif
 149:tmk_core/protocol/chibios/usb_main.c **** 
 150:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 151:tmk_core/protocol/chibios/usb_main.c **** /* shared endpoint state structure */
 152:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState shared_ep_state;
 153:tmk_core/protocol/chibios/usb_main.c **** 
 154:tmk_core/protocol/chibios/usb_main.c **** /* shared endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file */
 155:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig shared_ep_config = {
 156:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 157:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 158:tmk_core/protocol/chibios/usb_main.c ****     shared_in_cb,          /* IN notification callback */
 159:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 160:tmk_core/protocol/chibios/usb_main.c ****     SHARED_EPSIZE,         /* IN maximum packet size */
 161:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 162:tmk_core/protocol/chibios/usb_main.c ****     &shared_ep_state,      /* IN Endpoint state */
 163:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 164:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 165:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 166:tmk_core/protocol/chibios/usb_main.c **** };
 167:tmk_core/protocol/chibios/usb_main.c **** #endif
 168:tmk_core/protocol/chibios/usb_main.c **** 
 169:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 170:tmk_core/protocol/chibios/usb_main.c **** typedef struct {
 171:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_in;
 172:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_out;
 173:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  in_ep_state;
 174:tmk_core/protocol/chibios/usb_main.c ****     USBOutEndpointState out_ep_state;
 175:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  int_ep_state;
 176:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   inout_ep_config;
 177:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   int_ep_config;
 178:tmk_core/protocol/chibios/usb_main.c ****     const QMKUSBConfig  config;
 179:tmk_core/protocol/chibios/usb_main.c ****     QMKUSBDriver        driver;
 180:tmk_core/protocol/chibios/usb_main.c **** } usb_driver_config_t;
 181:tmk_core/protocol/chibios/usb_main.c **** #else
 182:tmk_core/protocol/chibios/usb_main.c **** typedef struct {
 183:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_in;
 184:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_out;
 185:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  in_ep_state;
 186:tmk_core/protocol/chibios/usb_main.c ****     USBOutEndpointState out_ep_state;
 187:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  int_ep_state;
 188:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   in_ep_config;
 189:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   out_ep_config;
 190:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   int_ep_config;
 191:tmk_core/protocol/chibios/usb_main.c ****     const QMKUSBConfig  config;
 192:tmk_core/protocol/chibios/usb_main.c ****     QMKUSBDriver        driver;
 193:tmk_core/protocol/chibios/usb_main.c **** } usb_driver_config_t;
 194:tmk_core/protocol/chibios/usb_main.c **** #endif
 195:tmk_core/protocol/chibios/usb_main.c **** 
 196:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 197:tmk_core/protocol/chibios/usb_main.c **** /* Reusable initialization structure - see USBEndpointConfig comment at top of file */
 198:tmk_core/protocol/chibios/usb_main.c **** #    define QMK_USB_DRIVER_CONFIG(stream, notification, fixedsize)                                 
 199:tmk_core/protocol/chibios/usb_main.c ****         {                                                                                          
 200:tmk_core/protocol/chibios/usb_main.c ****             .queue_capacity_in = stream##_IN_CAPACITY, .queue_capacity_out = stream##_OUT_CAPACITY,
 201:tmk_core/protocol/chibios/usb_main.c ****             .inout_ep_config =                                                                     
 202:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 203:tmk_core/protocol/chibios/usb_main.c ****                     stream##_IN_MODE,      /* Interrupt EP */                                      
 204:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* SETUP packet notification callback */                
 205:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbDataTransmitted, /* IN notification callback */                          
 206:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbDataReceived,    /* OUT notification callback */                         
 207:tmk_core/protocol/chibios/usb_main.c ****                     stream##_EPSIZE,       /* IN maximum packet size */                            
 208:tmk_core/protocol/chibios/usb_main.c ****                     stream##_EPSIZE,       /* OUT maximum packet size */                           
 209:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* IN Endpoint state */                                 
 210:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* OUT endpoint state */                                
 211:tmk_core/protocol/chibios/usb_main.c ****                     2,                     /* IN multiplier */                                     
 212:tmk_core/protocol/chibios/usb_main.c ****                     NULL                   /* SETUP buffer (not a SETUP endpoint) */               
 213:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 214:tmk_core/protocol/chibios/usb_main.c ****             .int_ep_config =                                                                       
 215:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 216:tmk_core/protocol/chibios/usb_main.c ****                     USB_EP_MODE_TYPE_INTR,      /* Interrupt EP */                                 
 217:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* SETUP packet notification callback */           
 218:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbInterruptTransmitted, /* IN notification callback */                     
 219:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* OUT notification callback */                    
 220:tmk_core/protocol/chibios/usb_main.c ****                     CDC_NOTIFICATION_EPSIZE,    /* IN maximum packet size */                       
 221:tmk_core/protocol/chibios/usb_main.c ****                     0,                          /* OUT maximum packet size */                      
 222:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* IN Endpoint state */                            
 223:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* OUT endpoint state */                           
 224:tmk_core/protocol/chibios/usb_main.c ****                     2,                          /* IN multiplier */                                
 225:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* SETUP buffer (not a SETUP endpoint) */          
 226:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 227:tmk_core/protocol/chibios/usb_main.c ****             .config = {                                                                            
 228:tmk_core/protocol/chibios/usb_main.c ****                 .usbp        = &USB_DRIVER,                                                        
 229:tmk_core/protocol/chibios/usb_main.c ****                 .bulk_in     = stream##_IN_EPNUM,                                                  
 230:tmk_core/protocol/chibios/usb_main.c ****                 .bulk_out    = stream##_OUT_EPNUM,                                                 
 231:tmk_core/protocol/chibios/usb_main.c ****                 .int_in      = notification,                                                       
 232:tmk_core/protocol/chibios/usb_main.c ****                 .in_buffers  = stream##_IN_CAPACITY,                                               
 233:tmk_core/protocol/chibios/usb_main.c ****                 .out_buffers = stream##_OUT_CAPACITY,                                              
 234:tmk_core/protocol/chibios/usb_main.c ****                 .in_size     = stream##_EPSIZE,                                                    
 235:tmk_core/protocol/chibios/usb_main.c ****                 .out_size    = stream##_EPSIZE,                                                    
 236:tmk_core/protocol/chibios/usb_main.c ****                 .fixed_size  = fixedsize,                                                          
 237:tmk_core/protocol/chibios/usb_main.c ****                 .ib          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_IN_CAPA
 238:tmk_core/protocol/chibios/usb_main.c ****                 .ob          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_OUT_CAP
 239:tmk_core/protocol/chibios/usb_main.c ****             }                                                                                      
 240:tmk_core/protocol/chibios/usb_main.c ****         }
 241:tmk_core/protocol/chibios/usb_main.c **** #else
 242:tmk_core/protocol/chibios/usb_main.c **** /* Reusable initialization structure - see USBEndpointConfig comment at top of file */
 243:tmk_core/protocol/chibios/usb_main.c **** #    define QMK_USB_DRIVER_CONFIG(stream, notification, fixedsize)                                 
 244:tmk_core/protocol/chibios/usb_main.c ****         {                                                                                          
 245:tmk_core/protocol/chibios/usb_main.c ****             .queue_capacity_in = stream##_IN_CAPACITY, .queue_capacity_out = stream##_OUT_CAPACITY,
 246:tmk_core/protocol/chibios/usb_main.c ****             .in_ep_config =                                                                        
 247:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 248:tmk_core/protocol/chibios/usb_main.c ****                     stream##_IN_MODE,      /* Interrupt EP */                                      
 249:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* SETUP packet notification callback */                
 250:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbDataTransmitted, /* IN notification callback */                          
 251:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* OUT notification callback */                         
 252:tmk_core/protocol/chibios/usb_main.c ****                     stream##_EPSIZE,       /* IN maximum packet size */                            
 253:tmk_core/protocol/chibios/usb_main.c ****                     0,                     /* OUT maximum packet size */                           
 254:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* IN Endpoint state */                                 
 255:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* OUT endpoint state */                                
 256:tmk_core/protocol/chibios/usb_main.c ****                     2,                     /* IN multiplier */                                     
 257:tmk_core/protocol/chibios/usb_main.c ****                     NULL                   /* SETUP buffer (not a SETUP endpoint) */               
 258:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 259:tmk_core/protocol/chibios/usb_main.c ****             .out_ep_config =                                                                       
 260:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 261:tmk_core/protocol/chibios/usb_main.c ****                     stream##_OUT_MODE,  /* Interrupt EP */                                         
 262:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* SETUP packet notification callback */                   
 263:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* IN notification callback */                             
 264:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbDataReceived, /* OUT notification callback */                            
 265:tmk_core/protocol/chibios/usb_main.c ****                     0,                  /* IN maximum packet size */                               
 266:tmk_core/protocol/chibios/usb_main.c ****                     stream##_EPSIZE,    /* OUT maximum packet size */                              
 267:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* IN Endpoint state */                                    
 268:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* OUT endpoint state */                                   
 269:tmk_core/protocol/chibios/usb_main.c ****                     2,                  /* IN multiplier */                                        
 270:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* SETUP buffer (not a SETUP endpoint) */                  
 271:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 272:tmk_core/protocol/chibios/usb_main.c ****             .int_ep_config =                                                                       
 273:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 274:tmk_core/protocol/chibios/usb_main.c ****                     USB_EP_MODE_TYPE_INTR,      /* Interrupt EP */                                 
 275:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* SETUP packet notification callback */           
 276:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbInterruptTransmitted, /* IN notification callback */                     
 277:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* OUT notification callback */                    
 278:tmk_core/protocol/chibios/usb_main.c ****                     CDC_NOTIFICATION_EPSIZE,    /* IN maximum packet size */                       
 279:tmk_core/protocol/chibios/usb_main.c ****                     0,                          /* OUT maximum packet size */                      
 280:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* IN Endpoint state */                            
 281:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* OUT endpoint state */                           
 282:tmk_core/protocol/chibios/usb_main.c ****                     2,                          /* IN multiplier */                                
 283:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* SETUP buffer (not a SETUP endpoint) */          
 284:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 285:tmk_core/protocol/chibios/usb_main.c ****             .config = {                                                                            
 286:tmk_core/protocol/chibios/usb_main.c ****                 .usbp        = &USB_DRIVER,                                                        
 287:tmk_core/protocol/chibios/usb_main.c ****                 .bulk_in     = stream##_IN_EPNUM,                                                  
 288:tmk_core/protocol/chibios/usb_main.c ****                 .bulk_out    = stream##_OUT_EPNUM,                                                 
 289:tmk_core/protocol/chibios/usb_main.c ****                 .int_in      = notification,                                                       
 290:tmk_core/protocol/chibios/usb_main.c ****                 .in_buffers  = stream##_IN_CAPACITY,                                               
 291:tmk_core/protocol/chibios/usb_main.c ****                 .out_buffers = stream##_OUT_CAPACITY,                                              
 292:tmk_core/protocol/chibios/usb_main.c ****                 .in_size     = stream##_EPSIZE,                                                    
 293:tmk_core/protocol/chibios/usb_main.c ****                 .out_size    = stream##_EPSIZE,                                                    
 294:tmk_core/protocol/chibios/usb_main.c ****                 .fixed_size  = fixedsize,                                                          
 295:tmk_core/protocol/chibios/usb_main.c ****                 .ib          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_IN_CAPA
 296:tmk_core/protocol/chibios/usb_main.c ****                 .ob          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_OUT_CAP
 297:tmk_core/protocol/chibios/usb_main.c ****             }                                                                                      
 298:tmk_core/protocol/chibios/usb_main.c ****         }
 299:tmk_core/protocol/chibios/usb_main.c **** #endif
 300:tmk_core/protocol/chibios/usb_main.c **** 
 301:tmk_core/protocol/chibios/usb_main.c **** typedef struct {
 302:tmk_core/protocol/chibios/usb_main.c ****     union {
 303:tmk_core/protocol/chibios/usb_main.c ****         struct {
 304:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 305:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t console_driver;
 306:tmk_core/protocol/chibios/usb_main.c **** #endif
 307:tmk_core/protocol/chibios/usb_main.c **** #ifdef RAW_ENABLE
 308:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t raw_driver;
 309:tmk_core/protocol/chibios/usb_main.c **** #endif
 310:tmk_core/protocol/chibios/usb_main.c **** #ifdef MIDI_ENABLE
 311:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t midi_driver;
 312:tmk_core/protocol/chibios/usb_main.c **** #endif
 313:tmk_core/protocol/chibios/usb_main.c **** #ifdef VIRTSER_ENABLE
 314:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t serial_driver;
 315:tmk_core/protocol/chibios/usb_main.c **** #endif
 316:tmk_core/protocol/chibios/usb_main.c **** #ifdef JOYSTICK_ENABLE
 317:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t joystick_driver;
 318:tmk_core/protocol/chibios/usb_main.c **** #endif
 319:tmk_core/protocol/chibios/usb_main.c **** #if defined(DIGITIZER_ENABLE) && !defined(DIGITIZER_SHARED_EP)
 320:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t digitizer_driver;
 321:tmk_core/protocol/chibios/usb_main.c **** #endif
 322:tmk_core/protocol/chibios/usb_main.c ****         };
 323:tmk_core/protocol/chibios/usb_main.c ****         usb_driver_config_t array[0];
 324:tmk_core/protocol/chibios/usb_main.c ****     };
 325:tmk_core/protocol/chibios/usb_main.c **** } usb_driver_configs_t;
 326:tmk_core/protocol/chibios/usb_main.c **** 
 327:tmk_core/protocol/chibios/usb_main.c **** static usb_driver_configs_t drivers = {
 328:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 329:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_IN_CAPACITY 4
 330:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_OUT_CAPACITY 4
 331:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_IN_MODE USB_EP_MODE_TYPE_INTR
 332:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_OUT_MODE USB_EP_MODE_TYPE_INTR
 333:tmk_core/protocol/chibios/usb_main.c ****     .console_driver = QMK_USB_DRIVER_CONFIG(CONSOLE, 0, true),
 334:tmk_core/protocol/chibios/usb_main.c **** #endif
 335:tmk_core/protocol/chibios/usb_main.c **** #ifdef RAW_ENABLE
 336:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_IN_CAPACITY 4
 337:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_OUT_CAPACITY 4
 338:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_IN_MODE USB_EP_MODE_TYPE_INTR
 339:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_OUT_MODE USB_EP_MODE_TYPE_INTR
 340:tmk_core/protocol/chibios/usb_main.c ****     .raw_driver = QMK_USB_DRIVER_CONFIG(RAW, 0, false),
 341:tmk_core/protocol/chibios/usb_main.c **** #endif
 342:tmk_core/protocol/chibios/usb_main.c **** 
 343:tmk_core/protocol/chibios/usb_main.c **** #ifdef MIDI_ENABLE
 344:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_IN_CAPACITY 4
 345:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_OUT_CAPACITY 4
 346:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_IN_MODE USB_EP_MODE_TYPE_BULK
 347:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_OUT_MODE USB_EP_MODE_TYPE_BULK
 348:tmk_core/protocol/chibios/usb_main.c ****     .midi_driver = QMK_USB_DRIVER_CONFIG(MIDI_STREAM, 0, false),
 349:tmk_core/protocol/chibios/usb_main.c **** #endif
 350:tmk_core/protocol/chibios/usb_main.c **** 
 351:tmk_core/protocol/chibios/usb_main.c **** #ifdef VIRTSER_ENABLE
 352:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_IN_CAPACITY 4
 353:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_OUT_CAPACITY 4
 354:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_IN_MODE USB_EP_MODE_TYPE_BULK
 355:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_OUT_MODE USB_EP_MODE_TYPE_BULK
 356:tmk_core/protocol/chibios/usb_main.c ****     .serial_driver = QMK_USB_DRIVER_CONFIG(CDC, CDC_NOTIFICATION_EPNUM, false),
 357:tmk_core/protocol/chibios/usb_main.c **** #endif
 358:tmk_core/protocol/chibios/usb_main.c **** 
 359:tmk_core/protocol/chibios/usb_main.c **** #ifdef JOYSTICK_ENABLE
 360:tmk_core/protocol/chibios/usb_main.c **** #    define JOYSTICK_IN_CAPACITY 4
 361:tmk_core/protocol/chibios/usb_main.c **** #    define JOYSTICK_OUT_CAPACITY 4
 362:tmk_core/protocol/chibios/usb_main.c **** #    define JOYSTICK_IN_MODE USB_EP_MODE_TYPE_BULK
 363:tmk_core/protocol/chibios/usb_main.c **** #    define JOYSTICK_OUT_MODE USB_EP_MODE_TYPE_BULK
 364:tmk_core/protocol/chibios/usb_main.c ****     .joystick_driver = QMK_USB_DRIVER_CONFIG(JOYSTICK, 0, false),
 365:tmk_core/protocol/chibios/usb_main.c **** #endif
 366:tmk_core/protocol/chibios/usb_main.c **** 
 367:tmk_core/protocol/chibios/usb_main.c **** #if defined(DIGITIZER_ENABLE) && !defined(DIGITIZER_SHARED_EP)
 368:tmk_core/protocol/chibios/usb_main.c **** #    define DIGITIZER_IN_CAPACITY 4
 369:tmk_core/protocol/chibios/usb_main.c **** #    define DIGITIZER_OUT_CAPACITY 4
 370:tmk_core/protocol/chibios/usb_main.c **** #    define DIGITIZER_IN_MODE USB_EP_MODE_TYPE_BULK
 371:tmk_core/protocol/chibios/usb_main.c **** #    define DIGITIZER_OUT_MODE USB_EP_MODE_TYPE_BULK
 372:tmk_core/protocol/chibios/usb_main.c ****     .digitizer_driver = QMK_USB_DRIVER_CONFIG(DIGITIZER, 0, false),
 373:tmk_core/protocol/chibios/usb_main.c **** #endif
 374:tmk_core/protocol/chibios/usb_main.c **** };
 375:tmk_core/protocol/chibios/usb_main.c **** 
 376:tmk_core/protocol/chibios/usb_main.c **** #define NUM_USB_DRIVERS (sizeof(drivers) / sizeof(usb_driver_config_t))
 377:tmk_core/protocol/chibios/usb_main.c **** 
 378:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 379:tmk_core/protocol/chibios/usb_main.c ****  *                  USB driver functions
 380:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 381:tmk_core/protocol/chibios/usb_main.c ****  */
 382:tmk_core/protocol/chibios/usb_main.c **** 
 383:tmk_core/protocol/chibios/usb_main.c **** #define USB_EVENT_QUEUE_SIZE 16
 384:tmk_core/protocol/chibios/usb_main.c **** usbevent_t event_queue[USB_EVENT_QUEUE_SIZE];
 385:tmk_core/protocol/chibios/usb_main.c **** uint8_t    event_queue_head;
 386:tmk_core/protocol/chibios/usb_main.c **** uint8_t    event_queue_tail;
 387:tmk_core/protocol/chibios/usb_main.c **** 
 388:tmk_core/protocol/chibios/usb_main.c **** void usb_event_queue_init(void) {
 389:tmk_core/protocol/chibios/usb_main.c ****     // Initialise the event queue
 390:tmk_core/protocol/chibios/usb_main.c ****     memset(&event_queue, 0, sizeof(event_queue));
 391:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head = 0;
 392:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = 0;
 393:tmk_core/protocol/chibios/usb_main.c **** }
 394:tmk_core/protocol/chibios/usb_main.c **** 
 395:tmk_core/protocol/chibios/usb_main.c **** static inline bool usb_event_queue_enqueue(usbevent_t event) {
 396:tmk_core/protocol/chibios/usb_main.c ****     uint8_t next = (event_queue_head + 1) % USB_EVENT_QUEUE_SIZE;
 397:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 398:tmk_core/protocol/chibios/usb_main.c ****         return false;
 399:tmk_core/protocol/chibios/usb_main.c ****     }
 400:tmk_core/protocol/chibios/usb_main.c ****     event_queue[event_queue_head] = event;
 401:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head              = next;
 402:tmk_core/protocol/chibios/usb_main.c ****     return true;
 403:tmk_core/protocol/chibios/usb_main.c **** }
 404:tmk_core/protocol/chibios/usb_main.c **** 
 405:tmk_core/protocol/chibios/usb_main.c **** static inline bool usb_event_queue_dequeue(usbevent_t *event) {
 406:tmk_core/protocol/chibios/usb_main.c ****     if (event_queue_head == event_queue_tail) {
 407:tmk_core/protocol/chibios/usb_main.c ****         return false;
 408:tmk_core/protocol/chibios/usb_main.c ****     }
 409:tmk_core/protocol/chibios/usb_main.c ****     *event           = event_queue[event_queue_tail];
 410:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = (event_queue_tail + 1) % USB_EVENT_QUEUE_SIZE;
 411:tmk_core/protocol/chibios/usb_main.c ****     return true;
 412:tmk_core/protocol/chibios/usb_main.c **** }
 413:tmk_core/protocol/chibios/usb_main.c **** 
 414:tmk_core/protocol/chibios/usb_main.c **** static inline void usb_event_suspend_handler(void) {
 415:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 416:tmk_core/protocol/chibios/usb_main.c ****     sleep_led_enable();
 417:tmk_core/protocol/chibios/usb_main.c **** #endif /* SLEEP_LED_ENABLE */
 418:tmk_core/protocol/chibios/usb_main.c **** }
 419:tmk_core/protocol/chibios/usb_main.c **** 
 420:tmk_core/protocol/chibios/usb_main.c **** static inline void usb_event_wakeup_handler(void) {
 421:tmk_core/protocol/chibios/usb_main.c ****     suspend_wakeup_init();
 422:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 423:tmk_core/protocol/chibios/usb_main.c ****     sleep_led_disable();
 424:tmk_core/protocol/chibios/usb_main.c ****     // NOTE: converters may not accept this
 425:tmk_core/protocol/chibios/usb_main.c ****     led_set(host_keyboard_leds());
 426:tmk_core/protocol/chibios/usb_main.c **** #endif /* SLEEP_LED_ENABLE */
 427:tmk_core/protocol/chibios/usb_main.c **** }
 428:tmk_core/protocol/chibios/usb_main.c **** 
 429:tmk_core/protocol/chibios/usb_main.c **** bool last_suspend_state = false;
 430:tmk_core/protocol/chibios/usb_main.c **** 
 431:tmk_core/protocol/chibios/usb_main.c **** void usb_event_queue_task(void) {
 432:tmk_core/protocol/chibios/usb_main.c ****     usbevent_t event;
 433:tmk_core/protocol/chibios/usb_main.c ****     while (usb_event_queue_dequeue(&event)) {
 434:tmk_core/protocol/chibios/usb_main.c ****         switch (event) {
 435:tmk_core/protocol/chibios/usb_main.c ****             case USB_EVENT_SUSPEND:
 436:tmk_core/protocol/chibios/usb_main.c ****                 last_suspend_state = true;
 437:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_suspend_handler();
 438:tmk_core/protocol/chibios/usb_main.c ****                 break;
 439:tmk_core/protocol/chibios/usb_main.c ****             case USB_EVENT_WAKEUP:
 440:tmk_core/protocol/chibios/usb_main.c ****                 last_suspend_state = false;
 441:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_wakeup_handler();
 442:tmk_core/protocol/chibios/usb_main.c ****                 break;
 443:tmk_core/protocol/chibios/usb_main.c ****             default:
 444:tmk_core/protocol/chibios/usb_main.c ****                 // Nothing to do, we don't handle it.
 445:tmk_core/protocol/chibios/usb_main.c ****                 break;
 446:tmk_core/protocol/chibios/usb_main.c ****         }
 447:tmk_core/protocol/chibios/usb_main.c ****     }
 448:tmk_core/protocol/chibios/usb_main.c **** }
 449:tmk_core/protocol/chibios/usb_main.c **** 
 450:tmk_core/protocol/chibios/usb_main.c **** /* Handles the USB driver global events
 451:tmk_core/protocol/chibios/usb_main.c ****  * TODO: maybe disable some things when connection is lost? */
 452:tmk_core/protocol/chibios/usb_main.c **** static void usb_event_cb(USBDriver *usbp, usbevent_t event) {
 453:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 454:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 455:tmk_core/protocol/chibios/usb_main.c ****             return;
 456:tmk_core/protocol/chibios/usb_main.c **** 
 457:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_CONFIGURED:
 458:tmk_core/protocol/chibios/usb_main.c ****             osalSysLockFromISR();
 459:tmk_core/protocol/chibios/usb_main.c ****             /* Enable the endpoints specified into the configuration. */
 460:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 461:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, KEYBOARD_IN_EPNUM, &kbd_ep_config);
 462:tmk_core/protocol/chibios/usb_main.c **** #endif
 463:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 464:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, MOUSE_IN_EPNUM, &mouse_ep_config);
 465:tmk_core/protocol/chibios/usb_main.c **** #endif
 466:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 467:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, SHARED_IN_EPNUM, &shared_ep_config);
 468:tmk_core/protocol/chibios/usb_main.c **** #endif
 469:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 470:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 471:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_in, &drivers.array[i].inout_ep_
 472:tmk_core/protocol/chibios/usb_main.c **** #else
 473:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_in, &drivers.array[i].in_ep_con
 474:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 475:tmk_core/protocol/chibios/usb_main.c **** #endif
 476:tmk_core/protocol/chibios/usb_main.c ****                 if (drivers.array[i].config.int_in) {
 477:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 478:tmk_core/protocol/chibios/usb_main.c ****                 }
 479:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbConfigureHookI(&drivers.array[i].driver);
 480:tmk_core/protocol/chibios/usb_main.c ****             }
 481:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlockFromISR();
 482:tmk_core/protocol/chibios/usb_main.c ****             if (last_suspend_state) {
 483:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 484:tmk_core/protocol/chibios/usb_main.c ****             }
 485:tmk_core/protocol/chibios/usb_main.c ****             return;
 486:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_SUSPEND:
 487:tmk_core/protocol/chibios/usb_main.c ****             usb_event_queue_enqueue(USB_EVENT_SUSPEND);
 488:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 489:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_UNCONFIGURED:
 490:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 491:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_RESET:
 492:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 493:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 494:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 495:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbSuspendHookI(&drivers.array[i].driver);
 496:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 497:tmk_core/protocol/chibios/usb_main.c ****             }
 498:tmk_core/protocol/chibios/usb_main.c ****             return;
 499:tmk_core/protocol/chibios/usb_main.c **** 
 500:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_WAKEUP:
 501:tmk_core/protocol/chibios/usb_main.c ****             // TODO: from ISR! print("[W]");
 502:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 503:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 504:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 505:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbWakeupHookI(&drivers.array[i].driver);
 506:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 507:tmk_core/protocol/chibios/usb_main.c ****             }
 508:tmk_core/protocol/chibios/usb_main.c ****             usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 509:tmk_core/protocol/chibios/usb_main.c ****             return;
 510:tmk_core/protocol/chibios/usb_main.c **** 
 511:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_STALLED:
 512:tmk_core/protocol/chibios/usb_main.c ****             return;
 513:tmk_core/protocol/chibios/usb_main.c ****     }
 514:tmk_core/protocol/chibios/usb_main.c **** }
 515:tmk_core/protocol/chibios/usb_main.c **** 
 516:tmk_core/protocol/chibios/usb_main.c **** /* Function used locally in os/hal/src/usb.c for getting descriptors
 517:tmk_core/protocol/chibios/usb_main.c ****  * need it here for HID descriptor */
 518:tmk_core/protocol/chibios/usb_main.c **** static uint16_t get_hword(uint8_t *p) {
 519:tmk_core/protocol/chibios/usb_main.c ****     uint16_t hw;
 520:tmk_core/protocol/chibios/usb_main.c **** 
 521:tmk_core/protocol/chibios/usb_main.c ****     hw = (uint16_t)*p++;
 522:tmk_core/protocol/chibios/usb_main.c ****     hw |= (uint16_t)*p << 8U;
 523:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 524:tmk_core/protocol/chibios/usb_main.c **** }
 525:tmk_core/protocol/chibios/usb_main.c **** 
 526:tmk_core/protocol/chibios/usb_main.c **** /*
 527:tmk_core/protocol/chibios/usb_main.c ****  * Appendix G: HID Request Support Requirements
 528:tmk_core/protocol/chibios/usb_main.c ****  *
 529:tmk_core/protocol/chibios/usb_main.c ****  * The following table enumerates the requests that need to be supported by various types of HID cl
 530:tmk_core/protocol/chibios/usb_main.c ****  * Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 531:tmk_core/protocol/chibios/usb_main.c ****  * ------------------------------------------------------------------------------------------
 532:tmk_core/protocol/chibios/usb_main.c ****  * Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 533:tmk_core/protocol/chibios/usb_main.c ****  * Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 534:tmk_core/protocol/chibios/usb_main.c ****  * Boot Keyboard   Required    Optional    Required    Required    Required    Required
 535:tmk_core/protocol/chibios/usb_main.c ****  * Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 536:tmk_core/protocol/chibios/usb_main.c ****  * Other Device    Required    Optional    Optional    Optional    Optional    Optional
 537:tmk_core/protocol/chibios/usb_main.c ****  */
 538:tmk_core/protocol/chibios/usb_main.c **** 
 539:tmk_core/protocol/chibios/usb_main.c **** static uint8_t set_report_buf[2] __attribute__((aligned(4)));
 540:tmk_core/protocol/chibios/usb_main.c **** static void    set_led_transfer_cb(USBDriver *usbp) {
 541:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 542:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 543:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 544:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_state = set_report_buf[1];
 545:tmk_core/protocol/chibios/usb_main.c ****         }
 546:tmk_core/protocol/chibios/usb_main.c ****     } else {
 547:tmk_core/protocol/chibios/usb_main.c ****         keyboard_led_state = set_report_buf[0];
 548:tmk_core/protocol/chibios/usb_main.c ****     }
 549:tmk_core/protocol/chibios/usb_main.c **** }
 550:tmk_core/protocol/chibios/usb_main.c **** 
 551:tmk_core/protocol/chibios/usb_main.c **** /* Callback for SETUP request on the endpoint 0 (control) */
 552:tmk_core/protocol/chibios/usb_main.c **** static bool usb_request_hook_cb(USBDriver *usbp) {
 553:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 554:tmk_core/protocol/chibios/usb_main.c **** 
 555:tmk_core/protocol/chibios/usb_main.c ****     /* usbp->setup fields:
 556:tmk_core/protocol/chibios/usb_main.c ****      *  0:   bmRequestType (bitmask)
 557:tmk_core/protocol/chibios/usb_main.c ****      *  1:   bRequest
 558:tmk_core/protocol/chibios/usb_main.c ****      *  2,3: (LSB,MSB) wValue
 559:tmk_core/protocol/chibios/usb_main.c ****      *  4,5: (LSB,MSB) wIndex
 560:tmk_core/protocol/chibios/usb_main.c ****      *  6,7: (LSB,MSB) wLength (number of bytes to transfer if there is a data phase) */
 561:tmk_core/protocol/chibios/usb_main.c **** 
 562:tmk_core/protocol/chibios/usb_main.c ****     /* Handle HID class specific requests */
 563:tmk_core/protocol/chibios/usb_main.c ****     if (((usbp->setup[0] & USB_RTYPE_TYPE_MASK) == USB_RTYPE_TYPE_CLASS) && ((usbp->setup[0] & USB_
 564:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 565:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_DEV2HOST:
 566:tmk_core/protocol/chibios/usb_main.c ****                 switch (usbp->setup[1]) { /* bRequest */
 567:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_REPORT:
 568:tmk_core/protocol/chibios/usb_main.c ****                         switch (usbp->setup[4]) { /* LSB(wIndex) (check MSB==0?) */
 569:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 570:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, (uint8_t *)&keyboard_report_sent, sizeof(key
 571:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 572:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 573:tmk_core/protocol/chibios/usb_main.c **** 
 574:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 575:tmk_core/protocol/chibios/usb_main.c ****                             case MOUSE_INTERFACE:
 576:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, (uint8_t *)&mouse_report_blank, sizeof(mouse
 577:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 578:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 579:tmk_core/protocol/chibios/usb_main.c **** #endif
 580:tmk_core/protocol/chibios/usb_main.c **** 
 581:tmk_core/protocol/chibios/usb_main.c ****                             default:
 582:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, NULL, 0, NULL);
 583:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 584:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 585:tmk_core/protocol/chibios/usb_main.c ****                         }
 586:tmk_core/protocol/chibios/usb_main.c ****                         break;
 587:tmk_core/protocol/chibios/usb_main.c **** 
 588:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_PROTOCOL:
 589:tmk_core/protocol/chibios/usb_main.c ****                         if ((usbp->setup[4] == KEYBOARD_INTERFACE) && (usbp->setup[5] == 0)) { /* w
 590:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 591:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 592:tmk_core/protocol/chibios/usb_main.c ****                         }
 593:tmk_core/protocol/chibios/usb_main.c ****                         break;
 594:tmk_core/protocol/chibios/usb_main.c **** 
 595:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_IDLE:
 596:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, &keyboard_idle, 1, NULL);
 597:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 598:tmk_core/protocol/chibios/usb_main.c ****                         break;
 599:tmk_core/protocol/chibios/usb_main.c ****                 }
 600:tmk_core/protocol/chibios/usb_main.c ****                 break;
 601:tmk_core/protocol/chibios/usb_main.c **** 
 602:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_HOST2DEV:
 603:tmk_core/protocol/chibios/usb_main.c ****                 switch (usbp->setup[1]) { /* bRequest */
 604:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_REPORT:
 605:tmk_core/protocol/chibios/usb_main.c ****                         switch (usbp->setup[4]) { /* LSB(wIndex) (check MSB==0?) */
 606:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 607:tmk_core/protocol/chibios/usb_main.c **** #if defined(SHARED_EP_ENABLE) && !defined(KEYBOARD_SHARED_EP)
 608:tmk_core/protocol/chibios/usb_main.c ****                             case SHARED_INTERFACE:
 609:tmk_core/protocol/chibios/usb_main.c **** #endif
 610:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, set_report_buf, sizeof(set_report_buf), set_
 611:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 612:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 613:tmk_core/protocol/chibios/usb_main.c ****                         }
 614:tmk_core/protocol/chibios/usb_main.c ****                         break;
 615:tmk_core/protocol/chibios/usb_main.c **** 
 616:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_PROTOCOL:
 617:tmk_core/protocol/chibios/usb_main.c ****                         if ((usbp->setup[4] == KEYBOARD_INTERFACE) && (usbp->setup[5] == 0)) { /* w
 618:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 619:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 620:tmk_core/protocol/chibios/usb_main.c ****                             keymap_config.nkro = !!keyboard_protocol;
 621:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 622:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 623:tmk_core/protocol/chibios/usb_main.c ****                             if (keyboard_idle) {
 624:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 625:tmk_core/protocol/chibios/usb_main.c ****                                 /* arm the idle timer if boot protocol & idle */
 626:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysLockFromISR();
 627:tmk_core/protocol/chibios/usb_main.c ****                                 chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboa
 628:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 629:tmk_core/protocol/chibios/usb_main.c ****                             }
 630:tmk_core/protocol/chibios/usb_main.c ****                         }
 631:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, NULL, 0, NULL);
 632:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 633:tmk_core/protocol/chibios/usb_main.c ****                         break;
 634:tmk_core/protocol/chibios/usb_main.c **** 
 635:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_IDLE:
 636:tmk_core/protocol/chibios/usb_main.c ****                         keyboard_idle = usbp->setup[3]; /* MSB(wValue) */
 637:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 638:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 639:tmk_core/protocol/chibios/usb_main.c ****                         if (!keymap_config.nkro && keyboard_idle) {
 640:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 641:tmk_core/protocol/chibios/usb_main.c ****                         if (keyboard_idle) {
 642:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 643:tmk_core/protocol/chibios/usb_main.c ****                             osalSysLockFromISR();
 644:tmk_core/protocol/chibios/usb_main.c ****                             chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboard_i
 645:tmk_core/protocol/chibios/usb_main.c ****                             osalSysUnlockFromISR();
 646:tmk_core/protocol/chibios/usb_main.c ****                         }
 647:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, NULL, 0, NULL);
 648:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 649:tmk_core/protocol/chibios/usb_main.c ****                         break;
 650:tmk_core/protocol/chibios/usb_main.c ****                 }
 651:tmk_core/protocol/chibios/usb_main.c ****                 break;
 652:tmk_core/protocol/chibios/usb_main.c ****         }
 653:tmk_core/protocol/chibios/usb_main.c ****     }
 654:tmk_core/protocol/chibios/usb_main.c **** 
 655:tmk_core/protocol/chibios/usb_main.c ****     /* Handle the Get_Descriptor Request for HID class (not handled by the default hook) */
 656:tmk_core/protocol/chibios/usb_main.c ****     if ((usbp->setup[0] == 0x81) && (usbp->setup[1] == USB_REQ_GET_DESCRIPTOR)) {
 657:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 658:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 659:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 660:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 661:tmk_core/protocol/chibios/usb_main.c ****     }
 662:tmk_core/protocol/chibios/usb_main.c **** 
 663:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 664:tmk_core/protocol/chibios/usb_main.c ****         if (drivers.array[i].config.int_in) {
 665:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 666:tmk_core/protocol/chibios/usb_main.c ****             return qmkusbRequestsHook(usbp);
 667:tmk_core/protocol/chibios/usb_main.c ****         }
 668:tmk_core/protocol/chibios/usb_main.c ****     }
 669:tmk_core/protocol/chibios/usb_main.c **** 
 670:tmk_core/protocol/chibios/usb_main.c ****     return FALSE;
 671:tmk_core/protocol/chibios/usb_main.c **** }
 672:tmk_core/protocol/chibios/usb_main.c **** 
 673:tmk_core/protocol/chibios/usb_main.c **** /* Start-of-frame callback */
 674:tmk_core/protocol/chibios/usb_main.c **** static void usb_sof_cb(USBDriver *usbp) {
 675:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
 676:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
 677:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 678:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 679:tmk_core/protocol/chibios/usb_main.c ****     }
 680:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlockFromISR();
 681:tmk_core/protocol/chibios/usb_main.c **** }
 682:tmk_core/protocol/chibios/usb_main.c **** 
 683:tmk_core/protocol/chibios/usb_main.c **** /* USB driver configuration */
 684:tmk_core/protocol/chibios/usb_main.c **** static const USBConfig usbcfg = {
 685:tmk_core/protocol/chibios/usb_main.c ****     usb_event_cb,          /* USB events callback */
 686:tmk_core/protocol/chibios/usb_main.c ****     usb_get_descriptor_cb, /* Device GET_DESCRIPTOR request callback */
 687:tmk_core/protocol/chibios/usb_main.c ****     usb_request_hook_cb,   /* Requests hook callback */
 688:tmk_core/protocol/chibios/usb_main.c ****     usb_sof_cb             /* Start Of Frame callback */
 689:tmk_core/protocol/chibios/usb_main.c **** };
 690:tmk_core/protocol/chibios/usb_main.c **** 
 691:tmk_core/protocol/chibios/usb_main.c **** /*
 692:tmk_core/protocol/chibios/usb_main.c ****  * Initialize the USB driver
 693:tmk_core/protocol/chibios/usb_main.c ****  */
 694:tmk_core/protocol/chibios/usb_main.c **** void init_usb_driver(USBDriver *usbp) {
 695:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 696:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 697:tmk_core/protocol/chibios/usb_main.c ****         QMKUSBDriver *driver                       = &drivers.array[i].driver;
 698:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].inout_ep_config.in_state  = &drivers.array[i].in_ep_state;
 699:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].inout_ep_config.out_state = &drivers.array[i].out_ep_state;
 700:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state    = &drivers.array[i].int_ep_state;
 701:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 702:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 703:tmk_core/protocol/chibios/usb_main.c **** #else
 704:tmk_core/protocol/chibios/usb_main.c ****         QMKUSBDriver *driver                     = &drivers.array[i].driver;
 705:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].in_ep_config.in_state   = &drivers.array[i].in_ep_state;
 706:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 707:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 708:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 709:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 710:tmk_core/protocol/chibios/usb_main.c **** #endif
 711:tmk_core/protocol/chibios/usb_main.c ****     }
 712:tmk_core/protocol/chibios/usb_main.c **** 
 713:tmk_core/protocol/chibios/usb_main.c ****     /*
 714:tmk_core/protocol/chibios/usb_main.c ****      * Activates the USB driver and then the USB bus pull-up on D+.
 715:tmk_core/protocol/chibios/usb_main.c ****      * Note, a delay is inserted in order to not have to disconnect the cable
 716:tmk_core/protocol/chibios/usb_main.c ****      * after a reset.
 717:tmk_core/protocol/chibios/usb_main.c ****      */
 718:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 719:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 720:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 721:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 722:tmk_core/protocol/chibios/usb_main.c **** 
 723:tmk_core/protocol/chibios/usb_main.c ****     chVTObjectInit(&keyboard_idle_timer);
 724:tmk_core/protocol/chibios/usb_main.c **** }
 725:tmk_core/protocol/chibios/usb_main.c **** 
 726:tmk_core/protocol/chibios/usb_main.c **** __attribute__((weak)) void restart_usb_driver(USBDriver *usbp) {
 727:tmk_core/protocol/chibios/usb_main.c ****     usbStop(usbp);
 728:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 729:tmk_core/protocol/chibios/usb_main.c **** 
 730:tmk_core/protocol/chibios/usb_main.c **** #if USB_SUSPEND_WAKEUP_DELAY > 0
 731:tmk_core/protocol/chibios/usb_main.c ****     // Some hubs, kvm switches, and monitors do
 732:tmk_core/protocol/chibios/usb_main.c ****     // weird things, with USB device state bouncing
 733:tmk_core/protocol/chibios/usb_main.c ****     // around wildly on wakeup, yielding race
 734:tmk_core/protocol/chibios/usb_main.c ****     // conditions that can corrupt the keyboard state.
 735:tmk_core/protocol/chibios/usb_main.c ****     //
 736:tmk_core/protocol/chibios/usb_main.c ****     // Pause for a while to let things settle...
 737:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(USB_SUSPEND_WAKEUP_DELAY);
 738:tmk_core/protocol/chibios/usb_main.c **** #endif
 739:tmk_core/protocol/chibios/usb_main.c **** 
 740:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 741:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 742:tmk_core/protocol/chibios/usb_main.c **** }
 743:tmk_core/protocol/chibios/usb_main.c **** 
 744:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 745:tmk_core/protocol/chibios/usb_main.c ****  *                  Keyboard functions
 746:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 747:tmk_core/protocol/chibios/usb_main.c ****  */
 748:tmk_core/protocol/chibios/usb_main.c **** /* keyboard IN callback hander (a kbd report has made it IN) */
 749:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 750:tmk_core/protocol/chibios/usb_main.c **** void kbd_in_cb(USBDriver *usbp, usbep_t ep) {
  30              		.loc 1 750 45 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 751:tmk_core/protocol/chibios/usb_main.c ****     /* STUB */
 752:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
  35              		.loc 1 752 5 view .LVU1
 753:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
  36              		.loc 1 753 5 view .LVU2
 754:tmk_core/protocol/chibios/usb_main.c **** }
  37              		.loc 1 754 1 is_stmt 0 view .LVU3
  38 0000 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE299:
  42              		.section	.text.usb_sof_cb,"ax",%progbits
  43              		.align	1
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	usb_sof_cb:
  49              	.LVL1:
  50              	.LFB296:
 674:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
  51              		.loc 1 674 41 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 675:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
  55              		.loc 1 675 5 view .LVU5
 676:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
  56              		.loc 1 676 5 view .LVU6
  57              	.LBB278:
  58              	.LBI278:
  59              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
  60              		.loc 2 595 20 view .LVU7
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
  61              		.loc 2 597 3 view .LVU8
  62              	.LBB279:
  63              	.LBI279:
  64              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 381:./lib/chibios/os/rt/include/chsys.h **** }
 382:./lib/chibios/os/rt/include/chsys.h **** 
 383:./lib/chibios/os/rt/include/chsys.h **** /**
 384:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 385:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 386:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 387:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 388:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 389:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 390:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 391:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 392:./lib/chibios/os/rt/include/chsys.h ****  *
 393:./lib/chibios/os/rt/include/chsys.h ****  * @special
 394:./lib/chibios/os/rt/include/chsys.h ****  */
 395:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
  65              		.loc 3 395 20 view .LVU9
 396:./lib/chibios/os/rt/include/chsys.h **** 
 397:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
  66              		.loc 3 397 3 view .LVU10
  67              	.LBB280:
  68              	.LBI280:
  69              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 697:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 698:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 699:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 700:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 701:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 702:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 703:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 704:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 705:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 706:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_lock() in this port.
 707:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock_from_isr(void) {
  70              		.loc 4 708 27 view .LVU11
 709:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_lock();
  71              		.loc 4 710 3 view .LVU12
  72              	.LBB281:
  73              	.LBI281:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  74              		.loc 4 669 27 view .LVU13
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
  75              		.loc 4 677 3 view .LVU14
  76              	.LBB282:
  77              	.LBI282:
  78              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
  79              		.loc 5 491 27 view .LVU15
  80              	.LBB283:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
  81              		.loc 5 493 3 view .LVU16
  82              	.LBE283:
  83              	.LBE282:
  84              	.LBE281:
  85              	.LBE280:
  86              	.LBE279:
  87              	.LBE278:
 674:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
  88              		.loc 1 674 41 is_stmt 0 view .LVU17
  89 0000 08B5     		push	{r3, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 3, -8
  92              		.cfi_offset 14, -4
  93              	.LBB289:
  94              	.LBB288:
  95              	.LBB287:
  96              	.LBB286:
  97              	.LBB285:
  98              	.LBB284:
  99              		.loc 5 493 3 view .LVU18
 100 0002 2023     		movs	r3, #32
 101              		.syntax unified
 102              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 103 0004 83F31188 		MSR basepri, r3
 104              	@ 0 "" 2
 105              	.LVL2:
 106              		.loc 5 493 3 view .LVU19
 107              		.thumb
 108              		.syntax unified
 109              	.LBE284:
 110              	.LBE285:
 111              	.LBE286:
 112              	.LBE287:
 398:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 113              		.loc 3 398 34 is_stmt 1 view .LVU20
 399:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 114              		.loc 3 399 29 view .LVU21
 115              	.LBE288:
 116              	.LBE289:
 677:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 117              		.loc 1 677 5 view .LVU22
 118              	.LBB290:
 677:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 119              		.loc 1 677 10 view .LVU23
 677:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 120              		.loc 1 677 23 view .LVU24
 678:tmk_core/protocol/chibios/usb_main.c ****     }
 121              		.loc 1 678 9 view .LVU25
 122 0008 0348     		ldr	r0, .L3
 123              	.LVL3:
 678:tmk_core/protocol/chibios/usb_main.c ****     }
 124              		.loc 1 678 9 is_stmt 0 view .LVU26
 125 000a FFF7FEFF 		bl	qmkusbSOFHookI
 126              	.LVL4:
 677:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 127              		.loc 1 677 43 is_stmt 1 view .LVU27
 677:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 128              		.loc 1 677 23 view .LVU28
 129              	.LBE290:
 680:tmk_core/protocol/chibios/usb_main.c **** }
 130              		.loc 1 680 5 view .LVU29
 131              	.LBB291:
 132              	.LBI291:
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 133              		.loc 2 606 20 view .LVU30
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 134              		.loc 2 608 3 view .LVU31
 135              	.LBB292:
 136              	.LBI292:
 400:./lib/chibios/os/rt/include/chsys.h **** }
 401:./lib/chibios/os/rt/include/chsys.h **** 
 402:./lib/chibios/os/rt/include/chsys.h **** /**
 403:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 404:./lib/chibios/os/rt/include/chsys.h ****  *
 405:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 406:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 407:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 408:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 409:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 410:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 411:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 412:./lib/chibios/os/rt/include/chsys.h ****  *
 413:./lib/chibios/os/rt/include/chsys.h ****  * @special
 414:./lib/chibios/os/rt/include/chsys.h ****  */
 415:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 137              		.loc 3 415 20 view .LVU32
 416:./lib/chibios/os/rt/include/chsys.h **** 
 417:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 138              		.loc 3 417 31 view .LVU33
 418:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 139              		.loc 3 418 33 view .LVU34
 419:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 140              		.loc 3 419 3 view .LVU35
 141              	.LBB293:
 142              	.LBI293:
 711:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 712:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 713:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 714:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 715:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 716:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 717:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_unlock() in this port.
 718:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock_from_isr(void) {
 143              		.loc 4 719 27 view .LVU36
 720:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 721:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_unlock();
 144              		.loc 4 721 3 view .LVU37
 145              	.LBB294:
 146              	.LBI294:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 147              		.loc 4 693 27 view .LVU38
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 148              		.loc 4 696 3 view .LVU39
 149              	.LBB295:
 150              	.LBI295:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 151              		.loc 5 491 27 view .LVU40
 152              	.LBB296:
 153              		.loc 5 493 3 view .LVU41
 154 000e 0023     		movs	r3, #0
 155              		.syntax unified
 156              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 157 0010 83F31188 		MSR basepri, r3
 158              	@ 0 "" 2
 159              	.LVL5:
 160              		.loc 5 493 3 is_stmt 0 view .LVU42
 161              		.thumb
 162              		.syntax unified
 163              	.LBE296:
 164              	.LBE295:
 165              	.LBE294:
 166              	.LBE293:
 167              	.LBE292:
 168              	.LBE291:
 681:tmk_core/protocol/chibios/usb_main.c **** 
 169              		.loc 1 681 1 view .LVU43
 170 0014 08BD     		pop	{r3, pc}
 171              	.L4:
 172 0016 00BF     		.align	2
 173              	.L3:
 174 0018 D4000000 		.word	drivers+212
 175              		.cfi_endproc
 176              	.LFE296:
 178              		.section	.text.usb_get_descriptor_cb,"ax",%progbits
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	usb_get_descriptor_cb:
 185              	.LVL6:
 186              	.LFB285:
 101:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 187              		.loc 1 101 116 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 102:tmk_core/protocol/chibios/usb_main.c ****     static USBDescriptor desc;
 191              		.loc 1 102 5 view .LVU45
 103:tmk_core/protocol/chibios/usb_main.c ****     uint16_t             wValue = ((uint16_t)dtype << 8) | dindex;
 192              		.loc 1 103 5 view .LVU46
 104:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_string              = NULL;
 193              		.loc 1 104 5 view .LVU47
 101:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 194              		.loc 1 101 116 is_stmt 0 view .LVU48
 195 0000 38B5     		push	{r3, r4, r5, lr}
 196              		.cfi_def_cfa_offset 16
 197              		.cfi_offset 3, -16
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 5, -8
 200              		.cfi_offset 14, -4
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 201              		.loc 1 105 33 view .LVU49
 202 0002 094C     		ldr	r4, .L8
 101:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 203              		.loc 1 101 116 view .LVU50
 204 0004 1046     		mov	r0, r2
 205              	.LVL7:
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 206              		.loc 1 105 33 view .LVU51
 207 0006 2246     		mov	r2, r4
 208              	.LVL8:
 101:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 209              		.loc 1 101 116 view .LVU52
 210 0008 0D46     		mov	r5, r1
 211              	.LVL9:
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 212              		.loc 1 105 5 is_stmt 1 view .LVU53
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 213              		.loc 1 105 33 is_stmt 0 view .LVU54
 214 000a 0021     		movs	r1, #0
 215              	.LVL10:
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 216              		.loc 1 105 33 view .LVU55
 217 000c 42F8041F 		str	r1, [r2, #4]!
 106:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 218              		.loc 1 106 5 is_stmt 1 view .LVU56
 106:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 219              		.loc 1 106 35 is_stmt 0 view .LVU57
 220 0010 40EA0520 		orr	r0, r0, r5, lsl #8
 221              	.LVL11:
 106:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 222              		.loc 1 106 35 view .LVU58
 223 0014 1946     		mov	r1, r3
 224 0016 FFF7FEFF 		bl	get_usb_descriptor
 225              	.LVL12:
 106:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 226              		.loc 1 106 35 view .LVU59
 227 001a 2060     		str	r0, [r4]
 107:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
 228              		.loc 1 107 5 is_stmt 1 view .LVU60
 107:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
 229              		.loc 1 107 13 is_stmt 0 view .LVU61
 230 001c 6068     		ldr	r0, [r4, #4]
 110:tmk_core/protocol/chibios/usb_main.c **** }
 231              		.loc 1 110 16 view .LVU62
 232 001e 0028     		cmp	r0, #0
 111:tmk_core/protocol/chibios/usb_main.c **** 
 233              		.loc 1 111 1 view .LVU63
 234 0020 18BF     		it	ne
 235 0022 2046     		movne	r0, r4
 236 0024 38BD     		pop	{r3, r4, r5, pc}
 237              	.L9:
 111:tmk_core/protocol/chibios/usb_main.c **** 
 238              		.loc 1 111 1 view .LVU64
 239 0026 00BF     		.align	2
 240              	.L8:
 241 0028 00000000 		.word	desc.2
 242              		.cfi_endproc
 243              	.LFE285:
 245              		.section	.text.set_led_transfer_cb,"ax",%progbits
 246              		.align	1
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	set_led_transfer_cb:
 252              	.LVL13:
 253              	.LFB294:
 540:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 254              		.loc 1 540 53 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 541:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 259              		.loc 1 541 5 view .LVU66
 541:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 260              		.loc 1 541 8 is_stmt 0 view .LVU67
 261 0000 90F87A10 		ldrb	r1, [r0, #122]	@ zero_extendqisi2
 262              	.LBB301:
 542:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 263              		.loc 1 542 17 view .LVU68
 264 0004 074A     		ldr	r2, .L13
 265              	.LBE301:
 541:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 266              		.loc 1 541 8 view .LVU69
 267 0006 0229     		cmp	r1, #2
 268              	.LBB302:
 542:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 269              		.loc 1 542 17 view .LVU70
 270 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 271              	.LBE302:
 541:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 272              		.loc 1 541 8 view .LVU71
 273 000a 07D1     		bne	.L11
 274              	.LBB303:
 542:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 275              		.loc 1 542 9 is_stmt 1 view .LVU72
 276              	.LVL14:
 543:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_state = set_report_buf[1];
 277              		.loc 1 543 9 view .LVU73
 543:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_state = set_report_buf[1];
 278              		.loc 1 543 12 is_stmt 0 view .LVU74
 279 000c 03F0FB03 		and	r3, r3, #251
 280 0010 012B     		cmp	r3, #1
 281 0012 05D1     		bne	.L10
 282              	.LBE303:
 283              	.LBB304:
 284              	.LBI304:
 540:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 285              		.loc 1 540 16 is_stmt 1 view .LVU75
 286              	.LVL15:
 287              	.LBB305:
 288              	.LBB306:
 544:tmk_core/protocol/chibios/usb_main.c ****         }
 289              		.loc 1 544 13 view .LVU76
 544:tmk_core/protocol/chibios/usb_main.c ****         }
 290              		.loc 1 544 32 is_stmt 0 view .LVU77
 291 0014 044B     		ldr	r3, .L13+4
 292 0016 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 544:tmk_core/protocol/chibios/usb_main.c ****         }
 293              		.loc 1 544 32 view .LVU78
 294 0018 1A70     		strb	r2, [r3]
 295              	.LBE306:
 549:tmk_core/protocol/chibios/usb_main.c **** 
 296              		.loc 1 549 1 view .LVU79
 297 001a 7047     		bx	lr
 298              	.LVL16:
 299              	.L11:
 549:tmk_core/protocol/chibios/usb_main.c **** 
 300              		.loc 1 549 1 view .LVU80
 301              	.LBE305:
 302              	.LBE304:
 547:tmk_core/protocol/chibios/usb_main.c ****     }
 303              		.loc 1 547 9 is_stmt 1 view .LVU81
 547:tmk_core/protocol/chibios/usb_main.c ****     }
 304              		.loc 1 547 28 is_stmt 0 view .LVU82
 305 001c 024A     		ldr	r2, .L13+4
 306 001e 1370     		strb	r3, [r2]
 307              	.L10:
 549:tmk_core/protocol/chibios/usb_main.c **** 
 308              		.loc 1 549 1 view .LVU83
 309 0020 7047     		bx	lr
 310              	.L14:
 311 0022 00BF     		.align	2
 312              	.L13:
 313 0024 00000000 		.word	set_report_buf
 314 0028 00000000 		.word	keyboard_led_state
 315              		.cfi_endproc
 316              	.LFE294:
 318              		.section	.text.send_extra,"ax",%progbits
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	send_extra:
 325              	.LVL17:
 326              	.LFB306:
 755:tmk_core/protocol/chibios/usb_main.c **** #endif
 756:tmk_core/protocol/chibios/usb_main.c **** 
 757:tmk_core/protocol/chibios/usb_main.c **** /* start-of-frame handler
 758:tmk_core/protocol/chibios/usb_main.c ****  * TODO: i guess it would be better to re-implement using timers,
 759:tmk_core/protocol/chibios/usb_main.c ****  *  so that this is not going to have to be checked every 1ms */
 760:tmk_core/protocol/chibios/usb_main.c **** void kbd_sof_cb(USBDriver *usbp) { (void)usbp; }
 761:tmk_core/protocol/chibios/usb_main.c **** 
 762:tmk_core/protocol/chibios/usb_main.c **** /* Idle requests timer code
 763:tmk_core/protocol/chibios/usb_main.c ****  * callback (called from ISR, unlocked state) */
 764:tmk_core/protocol/chibios/usb_main.c **** static void keyboard_idle_timer_cb(void *arg) {
 765:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 766:tmk_core/protocol/chibios/usb_main.c **** 
 767:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
 768:tmk_core/protocol/chibios/usb_main.c **** 
 769:tmk_core/protocol/chibios/usb_main.c ****     /* check that the states of things are as they're supposed to */
 770:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(usbp) != USB_ACTIVE) {
 771:tmk_core/protocol/chibios/usb_main.c ****         /* do not rearm the timer, should be enabled on IDLE request */
 772:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlockFromISR();
 773:tmk_core/protocol/chibios/usb_main.c ****         return;
 774:tmk_core/protocol/chibios/usb_main.c ****     }
 775:tmk_core/protocol/chibios/usb_main.c **** 
 776:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 777:tmk_core/protocol/chibios/usb_main.c ****     if (!keymap_config.nkro && keyboard_idle && keyboard_protocol) {
 778:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 779:tmk_core/protocol/chibios/usb_main.c ****     if (keyboard_idle && keyboard_protocol) {
 780:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 781:tmk_core/protocol/chibios/usb_main.c ****         /* TODO: are we sure we want the KBD_ENDPOINT? */
 782:tmk_core/protocol/chibios/usb_main.c ****         if (!usbGetTransmitStatusI(usbp, KEYBOARD_IN_EPNUM)) {
 783:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 784:tmk_core/protocol/chibios/usb_main.c ****         }
 785:tmk_core/protocol/chibios/usb_main.c ****         /* rearm the timer */
 786:tmk_core/protocol/chibios/usb_main.c ****         chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboard_idle_timer_cb, (void 
 787:tmk_core/protocol/chibios/usb_main.c ****     }
 788:tmk_core/protocol/chibios/usb_main.c **** 
 789:tmk_core/protocol/chibios/usb_main.c ****     /* do not rearm the timer if the condition above fails
 790:tmk_core/protocol/chibios/usb_main.c ****      * it should be enabled again on either IDLE or SET_PROTOCOL requests */
 791:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlockFromISR();
 792:tmk_core/protocol/chibios/usb_main.c **** }
 793:tmk_core/protocol/chibios/usb_main.c **** 
 794:tmk_core/protocol/chibios/usb_main.c **** /* LED status */
 795:tmk_core/protocol/chibios/usb_main.c **** uint8_t keyboard_leds(void) { return keyboard_led_state; }
 796:tmk_core/protocol/chibios/usb_main.c **** 
 797:tmk_core/protocol/chibios/usb_main.c **** /* prepare and start sending a report IN
 798:tmk_core/protocol/chibios/usb_main.c ****  * not callable from ISR or locked state */
 799:tmk_core/protocol/chibios/usb_main.c **** void send_keyboard(report_keyboard_t *report) {
 800:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 801:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 802:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 803:tmk_core/protocol/chibios/usb_main.c ****     }
 804:tmk_core/protocol/chibios/usb_main.c **** 
 805:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 806:tmk_core/protocol/chibios/usb_main.c ****     if (keymap_config.nkro && keyboard_protocol) { /* NKRO protocol */
 807:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 808:tmk_core/protocol/chibios/usb_main.c ****         /* can rewrite this using the synchronous API, then would wait
 809:tmk_core/protocol/chibios/usb_main.c ****          * until *after* the packet has been transmitted. I think
 810:tmk_core/protocol/chibios/usb_main.c ****          * this is more efficient */
 811:tmk_core/protocol/chibios/usb_main.c ****         /* busy wait, should be short and not very common */
 812:tmk_core/protocol/chibios/usb_main.c ****         if (usbGetTransmitStatusI(&USB_DRIVER, SHARED_IN_EPNUM)) {
 813:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 814:tmk_core/protocol/chibios/usb_main.c ****              * every iteration - otherwise the system will remain locked,
 815:tmk_core/protocol/chibios/usb_main.c ****              * no interrupts served, so USB not going through as well.
 816:tmk_core/protocol/chibios/usb_main.c ****              * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 817:tmk_core/protocol/chibios/usb_main.c ****             osalThreadSuspendS(&(&USB_DRIVER)->epc[SHARED_IN_EPNUM]->in_state->thread);
 818:tmk_core/protocol/chibios/usb_main.c **** 
 819:tmk_core/protocol/chibios/usb_main.c ****             /* after osalThreadSuspendS returns USB status might have changed */
 820:tmk_core/protocol/chibios/usb_main.c ****             if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 821:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 822:tmk_core/protocol/chibios/usb_main.c ****             }
 823:tmk_core/protocol/chibios/usb_main.c ****         }
 824:tmk_core/protocol/chibios/usb_main.c ****         usbStartTransmitI(&USB_DRIVER, SHARED_IN_EPNUM, (uint8_t *)report, sizeof(struct nkro_repor
 825:tmk_core/protocol/chibios/usb_main.c ****     } else
 826:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 827:tmk_core/protocol/chibios/usb_main.c ****     {  /* regular protocol */
 828:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 829:tmk_core/protocol/chibios/usb_main.c ****         /* busy wait, should be short and not very common */
 830:tmk_core/protocol/chibios/usb_main.c ****         if (usbGetTransmitStatusI(&USB_DRIVER, KEYBOARD_IN_EPNUM)) {
 831:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 832:tmk_core/protocol/chibios/usb_main.c ****              * every iteration - otherwise the system will remain locked,
 833:tmk_core/protocol/chibios/usb_main.c ****              * no interrupts served, so USB not going through as well.
 834:tmk_core/protocol/chibios/usb_main.c ****              * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 835:tmk_core/protocol/chibios/usb_main.c ****             osalThreadSuspendS(&(&USB_DRIVER)->epc[KEYBOARD_IN_EPNUM]->in_state->thread);
 836:tmk_core/protocol/chibios/usb_main.c **** 
 837:tmk_core/protocol/chibios/usb_main.c ****             /* after osalThreadSuspendS returns USB status might have changed */
 838:tmk_core/protocol/chibios/usb_main.c ****             if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 839:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 840:tmk_core/protocol/chibios/usb_main.c ****             }
 841:tmk_core/protocol/chibios/usb_main.c ****         }
 842:tmk_core/protocol/chibios/usb_main.c ****         uint8_t *data, size;
 843:tmk_core/protocol/chibios/usb_main.c ****         if (keyboard_protocol) {
 844:tmk_core/protocol/chibios/usb_main.c ****             data = (uint8_t *)report;
 845:tmk_core/protocol/chibios/usb_main.c ****             size = KEYBOARD_REPORT_SIZE;
 846:tmk_core/protocol/chibios/usb_main.c ****         } else { /* boot protocol */
 847:tmk_core/protocol/chibios/usb_main.c ****             data = &report->mods;
 848:tmk_core/protocol/chibios/usb_main.c ****             size = 8;
 849:tmk_core/protocol/chibios/usb_main.c ****         }
 850:tmk_core/protocol/chibios/usb_main.c ****         usbStartTransmitI(&USB_DRIVER, KEYBOARD_IN_EPNUM, data, size);
 851:tmk_core/protocol/chibios/usb_main.c ****     }
 852:tmk_core/protocol/chibios/usb_main.c ****     keyboard_report_sent = *report;
 853:tmk_core/protocol/chibios/usb_main.c **** 
 854:tmk_core/protocol/chibios/usb_main.c **** unlock:
 855:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 856:tmk_core/protocol/chibios/usb_main.c **** }
 857:tmk_core/protocol/chibios/usb_main.c **** 
 858:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 859:tmk_core/protocol/chibios/usb_main.c ****  *                     Mouse functions
 860:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 861:tmk_core/protocol/chibios/usb_main.c ****  */
 862:tmk_core/protocol/chibios/usb_main.c **** 
 863:tmk_core/protocol/chibios/usb_main.c **** #ifdef MOUSE_ENABLE
 864:tmk_core/protocol/chibios/usb_main.c **** 
 865:tmk_core/protocol/chibios/usb_main.c **** #    ifndef MOUSE_SHARED_EP
 866:tmk_core/protocol/chibios/usb_main.c **** /* mouse IN callback hander (a mouse report has made it IN) */
 867:tmk_core/protocol/chibios/usb_main.c **** void mouse_in_cb(USBDriver *usbp, usbep_t ep) {
 868:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 869:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
 870:tmk_core/protocol/chibios/usb_main.c **** }
 871:tmk_core/protocol/chibios/usb_main.c **** #    endif
 872:tmk_core/protocol/chibios/usb_main.c **** 
 873:tmk_core/protocol/chibios/usb_main.c **** void send_mouse(report_mouse_t *report) {
 874:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 875:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 876:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 877:tmk_core/protocol/chibios/usb_main.c ****         return;
 878:tmk_core/protocol/chibios/usb_main.c ****     }
 879:tmk_core/protocol/chibios/usb_main.c **** 
 880:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetTransmitStatusI(&USB_DRIVER, MOUSE_IN_EPNUM)) {
 881:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 882:tmk_core/protocol/chibios/usb_main.c ****          * every iteration - otherwise the system will remain locked,
 883:tmk_core/protocol/chibios/usb_main.c ****          * no interrupts served, so USB not going through as well.
 884:tmk_core/protocol/chibios/usb_main.c ****          * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 885:tmk_core/protocol/chibios/usb_main.c ****         if (osalThreadSuspendTimeoutS(&(&USB_DRIVER)->epc[MOUSE_IN_EPNUM]->in_state->thread, TIME_M
 886:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 887:tmk_core/protocol/chibios/usb_main.c ****             return;
 888:tmk_core/protocol/chibios/usb_main.c ****         }
 889:tmk_core/protocol/chibios/usb_main.c ****     }
 890:tmk_core/protocol/chibios/usb_main.c ****     usbStartTransmitI(&USB_DRIVER, MOUSE_IN_EPNUM, (uint8_t *)report, sizeof(report_mouse_t));
 891:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 892:tmk_core/protocol/chibios/usb_main.c **** }
 893:tmk_core/protocol/chibios/usb_main.c **** 
 894:tmk_core/protocol/chibios/usb_main.c **** #else  /* MOUSE_ENABLE */
 895:tmk_core/protocol/chibios/usb_main.c **** void send_mouse(report_mouse_t *report) { (void)report; }
 896:tmk_core/protocol/chibios/usb_main.c **** #endif /* MOUSE_ENABLE */
 897:tmk_core/protocol/chibios/usb_main.c **** 
 898:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 899:tmk_core/protocol/chibios/usb_main.c ****  *                   Shared EP functions
 900:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 901:tmk_core/protocol/chibios/usb_main.c ****  */
 902:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 903:tmk_core/protocol/chibios/usb_main.c **** /* shared IN callback hander */
 904:tmk_core/protocol/chibios/usb_main.c **** void shared_in_cb(USBDriver *usbp, usbep_t ep) {
 905:tmk_core/protocol/chibios/usb_main.c ****     /* STUB */
 906:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 907:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
 908:tmk_core/protocol/chibios/usb_main.c **** }
 909:tmk_core/protocol/chibios/usb_main.c **** #endif
 910:tmk_core/protocol/chibios/usb_main.c **** 
 911:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 912:tmk_core/protocol/chibios/usb_main.c ****  *                   Extrakey functions
 913:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 914:tmk_core/protocol/chibios/usb_main.c ****  */
 915:tmk_core/protocol/chibios/usb_main.c **** 
 916:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 917:tmk_core/protocol/chibios/usb_main.c **** static void send_extra(uint8_t report_id, uint16_t data) {
 327              		.loc 1 917 58 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 918:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 331              		.loc 1 918 5 view .LVU85
 332              	.LBB338:
 333              	.LBI338:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 334              		.loc 2 573 20 view .LVU86
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 335              		.loc 2 575 3 view .LVU87
 336              	.LBB339:
 337              	.LBI339:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 338              		.loc 3 355 20 view .LVU88
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 339              		.loc 3 357 3 view .LVU89
 340              	.LBB340:
 341              	.LBI340:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342              		.loc 4 669 27 view .LVU90
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 343              		.loc 4 677 3 view .LVU91
 344              	.LBB341:
 345              	.LBI341:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 346              		.loc 5 491 27 view .LVU92
 347              	.LBB342:
 348              		.loc 5 493 3 view .LVU93
 349              	.LBE342:
 350              	.LBE341:
 351              	.LBE340:
 352              	.LBE339:
 353              	.LBE338:
 917:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 354              		.loc 1 917 58 is_stmt 0 view .LVU94
 355 0000 08B5     		push	{r3, lr}
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 3, -8
 358              		.cfi_offset 14, -4
 359              	.LBB351:
 360              	.LBB349:
 361              	.LBB347:
 362              	.LBB345:
 363              	.LBB343:
 364              		.loc 5 493 3 view .LVU95
 365 0002 2022     		movs	r2, #32
 366              	.LBE343:
 367              	.LBE345:
 368              	.LBE347:
 369              	.LBE349:
 370              	.LBE351:
 917:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 371              		.loc 1 917 58 view .LVU96
 372 0004 0346     		mov	r3, r0
 373              	.LBB352:
 374              	.LBB350:
 375              	.LBB348:
 376              	.LBB346:
 377              	.LBB344:
 378              		.loc 5 493 3 view .LVU97
 379              		.syntax unified
 380              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 381 0006 82F31188 		MSR basepri, r2
 382              	@ 0 "" 2
 383              	.LVL18:
 384              		.loc 5 493 3 view .LVU98
 385              		.thumb
 386              		.syntax unified
 387              	.LBE344:
 388              	.LBE346:
 389              	.LBE348:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 390              		.loc 3 358 34 is_stmt 1 view .LVU99
 359:./lib/chibios/os/rt/include/chsys.h **** }
 391              		.loc 3 359 20 view .LVU100
 392              	.LBE350:
 393              	.LBE352:
 919:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 394              		.loc 1 919 5 view .LVU101
 395              		.loc 1 919 9 is_stmt 0 view .LVU102
 396 000a 0848     		ldr	r0, .L19
 397              	.LVL19:
 398              		.loc 1 919 8 view .LVU103
 399 000c 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 400 000e 042A     		cmp	r2, #4
 401 0010 03D0     		beq	.L16
 402              	.LVL20:
 403              	.L18:
 404              	.LBB353:
 405              	.LBB354:
 920:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 921:tmk_core/protocol/chibios/usb_main.c ****         return;
 922:tmk_core/protocol/chibios/usb_main.c ****     }
 923:tmk_core/protocol/chibios/usb_main.c **** 
 924:tmk_core/protocol/chibios/usb_main.c ****     static report_extra_t report;
 925:tmk_core/protocol/chibios/usb_main.c ****     report = (report_extra_t){.report_id = report_id, .usage = data};
 926:tmk_core/protocol/chibios/usb_main.c **** 
 927:tmk_core/protocol/chibios/usb_main.c ****     usbStartTransmitI(&USB_DRIVER, SHARED_IN_EPNUM, (uint8_t *)&report, sizeof(report_extra_t));
 928:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 406              		.loc 1 928 5 is_stmt 1 view .LVU104
 407              	.LBB355:
 408              	.LBI355:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 409              		.loc 2 584 20 view .LVU105
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 410              		.loc 2 586 3 view .LVU106
 411              	.LBB356:
 412              	.LBI356:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 413              		.loc 3 367 20 view .LVU107
 414              	.LBB357:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 415              		.loc 3 369 22 view .LVU108
 370:./lib/chibios/os/rt/include/chsys.h **** 
 416              		.loc 3 370 33 view .LVU109
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 417              		.loc 3 376 3 view .LVU110
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 418              		.loc 3 376 3 view .LVU111
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 419              		.loc 3 376 3 view .LVU112
 380:./lib/chibios/os/rt/include/chsys.h **** }
 420              		.loc 3 380 3 view .LVU113
 421              	.LBB358:
 422              	.LBI358:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 423              		.loc 4 693 27 view .LVU114
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 424              		.loc 4 696 3 view .LVU115
 425              	.LBB359:
 426              	.LBI359:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 427              		.loc 5 491 27 view .LVU116
 428              	.LBB360:
 429              		.loc 5 493 3 view .LVU117
 430 0012 0023     		movs	r3, #0
 431              		.syntax unified
 432              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 433 0014 83F31188 		MSR basepri, r3
 434              	@ 0 "" 2
 435              	.LVL21:
 436              		.loc 5 493 3 is_stmt 0 view .LVU118
 437              		.thumb
 438              		.syntax unified
 439              	.LBE360:
 440              	.LBE359:
 441              	.LBE358:
 442              	.LBE357:
 443              	.LBE356:
 444              	.LBE355:
 445              	.LBE354:
 446              	.LBE353:
 929:tmk_core/protocol/chibios/usb_main.c **** }
 447              		.loc 1 929 1 view .LVU119
 448 0018 08BD     		pop	{r3, pc}
 449              	.LVL22:
 450              	.L16:
 451              	.LBB362:
 452              	.LBI353:
 917:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 453              		.loc 1 917 13 is_stmt 1 view .LVU120
 454              	.LBB361:
 924:tmk_core/protocol/chibios/usb_main.c ****     report = (report_extra_t){.report_id = report_id, .usage = data};
 455              		.loc 1 924 5 view .LVU121
 925:tmk_core/protocol/chibios/usb_main.c **** 
 456              		.loc 1 925 5 view .LVU122
 925:tmk_core/protocol/chibios/usb_main.c **** 
 457              		.loc 1 925 12 is_stmt 0 view .LVU123
 458 001a 054A     		ldr	r2, .L19+4
 459 001c 1370     		strb	r3, [r2]
 460 001e A2F80110 		strh	r1, [r2, #1]	@ unaligned
 927:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 461              		.loc 1 927 5 is_stmt 1 view .LVU124
 462 0022 0323     		movs	r3, #3
 463              	.LVL23:
 927:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 464              		.loc 1 927 5 is_stmt 0 view .LVU125
 465 0024 0221     		movs	r1, #2
 466              	.LVL24:
 927:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 467              		.loc 1 927 5 view .LVU126
 468 0026 FFF7FEFF 		bl	usbStartTransmitI
 469              	.LVL25:
 927:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 470              		.loc 1 927 5 view .LVU127
 471 002a F2E7     		b	.L18
 472              	.L20:
 473              		.align	2
 474              	.L19:
 475 002c 00000000 		.word	USBD1
 476 0030 00000000 		.word	report.1
 477              	.LBE361:
 478              	.LBE362:
 479              		.cfi_endproc
 480              	.LFE306:
 482              		.section	.text.chVTSetI.constprop.0,"ax",%progbits
 483              		.align	1
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	chVTSetI.constprop.0:
 489              	.LVL26:
 490              	.LFB321:
 491              		.file 6 "./lib/chibios/os/rt/include/chvt.h"
   1:./lib/chibios/os/rt/include/chvt.h **** /*
   2:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chvt.h **** 
   4:./lib/chibios/os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chvt.h **** 
   6:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chvt.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chvt.h **** 
  11:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chvt.h **** 
  16:./lib/chibios/os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chvt.h **** */
  19:./lib/chibios/os/rt/include/chvt.h **** 
  20:./lib/chibios/os/rt/include/chvt.h **** /**
  21:./lib/chibios/os/rt/include/chvt.h ****  * @file    rt/include/chvt.h
  22:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:./lib/chibios/os/rt/include/chvt.h ****  *
  24:./lib/chibios/os/rt/include/chvt.h ****  * @addtogroup time
  25:./lib/chibios/os/rt/include/chvt.h ****  * @{
  26:./lib/chibios/os/rt/include/chvt.h ****  */
  27:./lib/chibios/os/rt/include/chvt.h **** 
  28:./lib/chibios/os/rt/include/chvt.h **** #ifndef CHVT_H
  29:./lib/chibios/os/rt/include/chvt.h **** #define CHVT_H
  30:./lib/chibios/os/rt/include/chvt.h **** 
  31:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chvt.h **** 
  35:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chvt.h **** 
  39:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chvt.h **** 
  43:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  44:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  45:./lib/chibios/os/rt/include/chvt.h ****        "be zero or greater than one"
  46:./lib/chibios/os/rt/include/chvt.h **** #endif
  47:./lib/chibios/os/rt/include/chvt.h **** 
  48:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  49:./lib/chibios/os/rt/include/chvt.h **** #error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  50:./lib/chibios/os/rt/include/chvt.h **** #endif
  51:./lib/chibios/os/rt/include/chvt.h **** 
  52:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  53:./lib/chibios/os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  54:./lib/chibios/os/rt/include/chvt.h **** #endif
  55:./lib/chibios/os/rt/include/chvt.h **** 
  56:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  57:./lib/chibios/os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  58:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  59:./lib/chibios/os/rt/include/chvt.h **** 
  60:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  61:./lib/chibios/os/rt/include/chvt.h **** /* Module macros.                                                            */
  62:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  63:./lib/chibios/os/rt/include/chvt.h **** 
  64:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  65:./lib/chibios/os/rt/include/chvt.h **** /* External declarations.                                                    */
  66:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  67:./lib/chibios/os/rt/include/chvt.h **** 
  68:./lib/chibios/os/rt/include/chvt.h **** /*
  69:./lib/chibios/os/rt/include/chvt.h ****  * Virtual Timers APIs.
  70:./lib/chibios/os/rt/include/chvt.h ****  */
  71:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  72:./lib/chibios/os/rt/include/chvt.h **** extern "C" {
  73:./lib/chibios/os/rt/include/chvt.h **** #endif
  74:./lib/chibios/os/rt/include/chvt.h ****   void _vt_init(void);
  75:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
  76:./lib/chibios/os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
  77:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
  78:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoTickI(void);
  79:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  80:./lib/chibios/os/rt/include/chvt.h **** }
  81:./lib/chibios/os/rt/include/chvt.h **** #endif
  82:./lib/chibios/os/rt/include/chvt.h **** 
  83:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  84:./lib/chibios/os/rt/include/chvt.h **** /* Module inline functions.                                                  */
  85:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chvt.h **** 
  87:./lib/chibios/os/rt/include/chvt.h **** /**
  88:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
  89:./lib/chibios/os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
  90:./lib/chibios/os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
  91:./lib/chibios/os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
  92:./lib/chibios/os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
  93:./lib/chibios/os/rt/include/chvt.h ****  *
  94:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
  95:./lib/chibios/os/rt/include/chvt.h ****  *
  96:./lib/chibios/os/rt/include/chvt.h ****  * @init
  97:./lib/chibios/os/rt/include/chvt.h ****  */
  98:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
  99:./lib/chibios/os/rt/include/chvt.h **** 
 100:./lib/chibios/os/rt/include/chvt.h ****   vtp->func = NULL;
 101:./lib/chibios/os/rt/include/chvt.h **** }
 102:./lib/chibios/os/rt/include/chvt.h **** 
 103:./lib/chibios/os/rt/include/chvt.h **** /**
 104:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 105:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 106:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 107:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 108:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 109:./lib/chibios/os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 110:./lib/chibios/os/rt/include/chvt.h ****  *          @p systime_t size.
 111:./lib/chibios/os/rt/include/chvt.h ****  *
 112:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 113:./lib/chibios/os/rt/include/chvt.h ****  *
 114:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 115:./lib/chibios/os/rt/include/chvt.h ****  */
 116:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 117:./lib/chibios/os/rt/include/chvt.h **** 
 118:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 119:./lib/chibios/os/rt/include/chvt.h ****   return ch.vtlist.systime;
 120:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 121:./lib/chibios/os/rt/include/chvt.h ****   return port_timer_get_time();
 122:./lib/chibios/os/rt/include/chvt.h **** #endif /* CH_CFG_ST_TIMEDELTA > 0 */
 123:./lib/chibios/os/rt/include/chvt.h **** }
 124:./lib/chibios/os/rt/include/chvt.h **** 
 125:./lib/chibios/os/rt/include/chvt.h **** /**
 126:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 127:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 128:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 129:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 130:./lib/chibios/os/rt/include/chvt.h ****  *
 131:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 132:./lib/chibios/os/rt/include/chvt.h ****  *
 133:./lib/chibios/os/rt/include/chvt.h ****  * @api
 134:./lib/chibios/os/rt/include/chvt.h ****  */
 135:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTime(void) {
 136:./lib/chibios/os/rt/include/chvt.h ****   systime_t systime;
 137:./lib/chibios/os/rt/include/chvt.h **** 
 138:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 139:./lib/chibios/os/rt/include/chvt.h ****   systime = chVTGetSystemTimeX();
 140:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 141:./lib/chibios/os/rt/include/chvt.h **** 
 142:./lib/chibios/os/rt/include/chvt.h ****   return systime;
 143:./lib/chibios/os/rt/include/chvt.h **** }
 144:./lib/chibios/os/rt/include/chvt.h **** 
 145:./lib/chibios/os/rt/include/chvt.h **** /**
 146:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns the elapsed time since the specified start time.
 147:./lib/chibios/os/rt/include/chvt.h ****  *
 148:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     start time
 149:./lib/chibios/os/rt/include/chvt.h ****  * @return              The elapsed time.
 150:./lib/chibios/os/rt/include/chvt.h ****  *
 151:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 152:./lib/chibios/os/rt/include/chvt.h ****  */
 153:./lib/chibios/os/rt/include/chvt.h **** static inline sysinterval_t chVTTimeElapsedSinceX(systime_t start) {
 154:./lib/chibios/os/rt/include/chvt.h **** 
 155:./lib/chibios/os/rt/include/chvt.h ****   return chTimeDiffX(start, chVTGetSystemTimeX());
 156:./lib/chibios/os/rt/include/chvt.h **** }
 157:./lib/chibios/os/rt/include/chvt.h **** 
 158:./lib/chibios/os/rt/include/chvt.h **** /**
 159:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the current system time is within the specified time
 160:./lib/chibios/os/rt/include/chvt.h ****  *          window.
 161:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always false because the
 162:./lib/chibios/os/rt/include/chvt.h ****  *          time window has zero size.
 163:./lib/chibios/os/rt/include/chvt.h ****  *
 164:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 165:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 166:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 167:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 168:./lib/chibios/os/rt/include/chvt.h ****  *
 169:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 170:./lib/chibios/os/rt/include/chvt.h ****  */
 171:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsSystemTimeWithinX(systime_t start, systime_t end) {
 172:./lib/chibios/os/rt/include/chvt.h **** 
 173:./lib/chibios/os/rt/include/chvt.h ****   return chTimeIsInRangeX(chVTGetSystemTimeX(), start, end);
 174:./lib/chibios/os/rt/include/chvt.h **** }
 175:./lib/chibios/os/rt/include/chvt.h **** 
 176:./lib/chibios/os/rt/include/chvt.h **** /**
 177:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the current system time is within the specified time
 178:./lib/chibios/os/rt/include/chvt.h ****  *          window.
 179:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always false because the
 180:./lib/chibios/os/rt/include/chvt.h ****  *          time window has zero size.
 181:./lib/chibios/os/rt/include/chvt.h ****  *
 182:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 183:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 184:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 185:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 186:./lib/chibios/os/rt/include/chvt.h ****  *
 187:./lib/chibios/os/rt/include/chvt.h ****  * @api
 188:./lib/chibios/os/rt/include/chvt.h ****  */
 189:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsSystemTimeWithin(systime_t start, systime_t end) {
 190:./lib/chibios/os/rt/include/chvt.h **** 
 191:./lib/chibios/os/rt/include/chvt.h ****   return chTimeIsInRangeX(chVTGetSystemTime(), start, end);
 192:./lib/chibios/os/rt/include/chvt.h **** }
 193:./lib/chibios/os/rt/include/chvt.h **** 
 194:./lib/chibios/os/rt/include/chvt.h **** /**
 195:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns the time interval until the next timer event.
 196:./lib/chibios/os/rt/include/chvt.h ****  * @note    The return value is not perfectly accurate and can report values
 197:./lib/chibios/os/rt/include/chvt.h ****  *          in excess of @p CH_CFG_ST_TIMEDELTA ticks.
 198:./lib/chibios/os/rt/include/chvt.h ****  * @note    The interval returned by this function is only meaningful if
 199:./lib/chibios/os/rt/include/chvt.h ****  *          more timers are not added to the list until the returned time.
 200:./lib/chibios/os/rt/include/chvt.h ****  *
 201:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] timep    pointer to a variable that will contain the time
 202:./lib/chibios/os/rt/include/chvt.h ****  *                      interval until the next timer elapses. This pointer
 203:./lib/chibios/os/rt/include/chvt.h ****  *                      can be @p NULL if the information is not required.
 204:./lib/chibios/os/rt/include/chvt.h ****  * @return              The time, in ticks, until next time event.
 205:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        if the timers list is empty.
 206:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         if the timers list contains at least one timer.
 207:./lib/chibios/os/rt/include/chvt.h ****  *
 208:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 209:./lib/chibios/os/rt/include/chvt.h ****  */
 210:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTGetTimersStateI(sysinterval_t *timep) {
 211:./lib/chibios/os/rt/include/chvt.h ****   virtual_timers_list_t *vtlp = &ch.vtlist;
 212:./lib/chibios/os/rt/include/chvt.h ****   delta_list_t *dlp = &vtlp->dlist;
 213:./lib/chibios/os/rt/include/chvt.h **** 
 214:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 215:./lib/chibios/os/rt/include/chvt.h **** 
 216:./lib/chibios/os/rt/include/chvt.h ****   if (dlp == dlp->next) {
 217:./lib/chibios/os/rt/include/chvt.h ****     return false;
 218:./lib/chibios/os/rt/include/chvt.h ****   }
 219:./lib/chibios/os/rt/include/chvt.h **** 
 220:./lib/chibios/os/rt/include/chvt.h ****   if (timep != NULL) {
 221:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 222:./lib/chibios/os/rt/include/chvt.h ****     *timep = dlp->next->delta;
 223:./lib/chibios/os/rt/include/chvt.h **** #else
 224:./lib/chibios/os/rt/include/chvt.h ****     *timep = (dlp->next->delta + (sysinterval_t)CH_CFG_ST_TIMEDELTA) -
 225:./lib/chibios/os/rt/include/chvt.h ****              chTimeDiffX(vtlp->lasttime, chVTGetSystemTimeX());
 226:./lib/chibios/os/rt/include/chvt.h **** #endif
 227:./lib/chibios/os/rt/include/chvt.h ****   }
 228:./lib/chibios/os/rt/include/chvt.h **** 
 229:./lib/chibios/os/rt/include/chvt.h ****   return true;
 230:./lib/chibios/os/rt/include/chvt.h **** }
 231:./lib/chibios/os/rt/include/chvt.h **** 
 232:./lib/chibios/os/rt/include/chvt.h **** /**
 233:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns @p true if the specified timer is armed.
 234:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 235:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 236:./lib/chibios/os/rt/include/chvt.h ****  *
 237:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 238:./lib/chibios/os/rt/include/chvt.h ****  * @return              true if the timer is armed.
 239:./lib/chibios/os/rt/include/chvt.h ****  *
 240:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 241:./lib/chibios/os/rt/include/chvt.h ****  */
 242:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsArmedI(const virtual_timer_t *vtp) {
 243:./lib/chibios/os/rt/include/chvt.h **** 
 244:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 245:./lib/chibios/os/rt/include/chvt.h **** 
 246:./lib/chibios/os/rt/include/chvt.h ****   return (bool)(vtp->func != NULL);
 247:./lib/chibios/os/rt/include/chvt.h **** }
 248:./lib/chibios/os/rt/include/chvt.h **** 
 249:./lib/chibios/os/rt/include/chvt.h **** /**
 250:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns @p true if the specified timer is armed.
 251:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 252:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 253:./lib/chibios/os/rt/include/chvt.h ****  *
 254:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 255:./lib/chibios/os/rt/include/chvt.h ****  * @return              true if the timer is armed.
 256:./lib/chibios/os/rt/include/chvt.h ****  *
 257:./lib/chibios/os/rt/include/chvt.h ****  * @api
 258:./lib/chibios/os/rt/include/chvt.h ****  */
 259:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsArmed(const virtual_timer_t *vtp) {
 260:./lib/chibios/os/rt/include/chvt.h ****   bool b;
 261:./lib/chibios/os/rt/include/chvt.h **** 
 262:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 263:./lib/chibios/os/rt/include/chvt.h ****   b = chVTIsArmedI(vtp);
 264:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 265:./lib/chibios/os/rt/include/chvt.h **** 
 266:./lib/chibios/os/rt/include/chvt.h ****   return b;
 267:./lib/chibios/os/rt/include/chvt.h **** }
 268:./lib/chibios/os/rt/include/chvt.h **** 
 269:./lib/chibios/os/rt/include/chvt.h **** /**
 270:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Disables a Virtual Timer.
 271:./lib/chibios/os/rt/include/chvt.h ****  * @note    The timer is first checked and disabled only if armed.
 272:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 273:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 274:./lib/chibios/os/rt/include/chvt.h ****  *
 275:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 276:./lib/chibios/os/rt/include/chvt.h ****  *
 277:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 278:./lib/chibios/os/rt/include/chvt.h ****  */
 279:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTResetI(virtual_timer_t *vtp) {
 280:./lib/chibios/os/rt/include/chvt.h **** 
 281:./lib/chibios/os/rt/include/chvt.h ****   if (chVTIsArmedI(vtp)) {
 282:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 283:./lib/chibios/os/rt/include/chvt.h ****   }
 284:./lib/chibios/os/rt/include/chvt.h **** }
 285:./lib/chibios/os/rt/include/chvt.h **** 
 286:./lib/chibios/os/rt/include/chvt.h **** /**
 287:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Disables a Virtual Timer.
 288:./lib/chibios/os/rt/include/chvt.h ****  * @note    The timer is first checked and disabled only if armed.
 289:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 290:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 291:./lib/chibios/os/rt/include/chvt.h ****  *
 292:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 293:./lib/chibios/os/rt/include/chvt.h ****  *
 294:./lib/chibios/os/rt/include/chvt.h ****  * @api
 295:./lib/chibios/os/rt/include/chvt.h ****  */
 296:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTReset(virtual_timer_t *vtp) {
 297:./lib/chibios/os/rt/include/chvt.h **** 
 298:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 299:./lib/chibios/os/rt/include/chvt.h ****   chVTResetI(vtp);
 300:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 301:./lib/chibios/os/rt/include/chvt.h **** }
 302:./lib/chibios/os/rt/include/chvt.h **** 
 303:./lib/chibios/os/rt/include/chvt.h **** /**
 304:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Enables a virtual timer.
 305:./lib/chibios/os/rt/include/chvt.h ****  * @details If the virtual timer was already enabled then it is re-enabled
 306:./lib/chibios/os/rt/include/chvt.h ****  *          using the new parameters.
 307:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 308:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 309:./lib/chibios/os/rt/include/chvt.h ****  *
 310:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 311:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] delay     the number of ticks before the operation timeouts, the
 312:./lib/chibios/os/rt/include/chvt.h ****  *                      special values are handled as follow:
 313:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 314:./lib/chibios/os/rt/include/chvt.h ****  *                        normal time specification.
 315:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 316:./lib/chibios/os/rt/include/chvt.h ****  *                      .
 317:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtfunc    the timer callback function. After invoking the
 318:./lib/chibios/os/rt/include/chvt.h ****  *                      callback the timer is disabled and the structure can
 319:./lib/chibios/os/rt/include/chvt.h ****  *                      be disposed or reused.
 320:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] par       a parameter that will be passed to the callback
 321:./lib/chibios/os/rt/include/chvt.h ****  *                      function
 322:./lib/chibios/os/rt/include/chvt.h ****  *
 323:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 324:./lib/chibios/os/rt/include/chvt.h ****  */
 325:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTSetI(virtual_timer_t *vtp, sysinterval_t delay,
 492              		.loc 6 325 20 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 326:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 327:./lib/chibios/os/rt/include/chvt.h **** 
 328:./lib/chibios/os/rt/include/chvt.h ****   chVTResetI(vtp);
 496              		.loc 6 328 3 view .LVU129
 497              	.LBB369:
 498              	.LBI369:
 279:./lib/chibios/os/rt/include/chvt.h **** 
 499              		.loc 6 279 20 view .LVU130
 500              	.LBB370:
 281:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 501              		.loc 6 281 3 view .LVU131
 502              	.LBB371:
 503              	.LBI371:
 242:./lib/chibios/os/rt/include/chvt.h **** 
 504              		.loc 6 242 20 view .LVU132
 505              	.LBB372:
 244:./lib/chibios/os/rt/include/chvt.h **** 
 506              		.loc 6 244 21 view .LVU133
 246:./lib/chibios/os/rt/include/chvt.h **** }
 507              		.loc 6 246 3 view .LVU134
 246:./lib/chibios/os/rt/include/chvt.h **** }
 508              		.loc 6 246 3 is_stmt 0 view .LVU135
 509              	.LBE372:
 510              	.LBE371:
 511              	.LBE370:
 512              	.LBE369:
 325:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 513              		.loc 6 325 20 view .LVU136
 514 0000 70B5     		push	{r4, r5, r6, lr}
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 4, -16
 517              		.cfi_offset 5, -12
 518              		.cfi_offset 6, -8
 519              		.cfi_offset 14, -4
 325:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 520              		.loc 6 325 20 view .LVU137
 521 0002 0446     		mov	r4, r0
 522              	.LBB377:
 523              	.LBB375:
 524              	.LBB374:
 525              	.LBB373:
 246:./lib/chibios/os/rt/include/chvt.h **** }
 526              		.loc 6 246 20 view .LVU138
 527 0004 0648     		ldr	r0, .L26
 528              	.LVL27:
 246:./lib/chibios/os/rt/include/chvt.h **** }
 529              		.loc 6 246 20 view .LVU139
 530              	.LBE373:
 531              	.LBE374:
 281:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 532              		.loc 6 281 6 view .LVU140
 533 0006 C368     		ldr	r3, [r0, #12]
 534              	.LBE375:
 535              	.LBE377:
 325:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 536              		.loc 6 325 20 view .LVU141
 537 0008 0D46     		mov	r5, r1
 538              	.LBB378:
 539              	.LBB376:
 281:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 540              		.loc 6 281 6 view .LVU142
 541 000a 0BB1     		cbz	r3, .L22
 282:./lib/chibios/os/rt/include/chvt.h ****   }
 542              		.loc 6 282 5 is_stmt 1 view .LVU143
 543 000c FFF7FEFF 		bl	chVTDoResetI
 544              	.LVL28:
 545              	.L22:
 282:./lib/chibios/os/rt/include/chvt.h ****   }
 546              		.loc 6 282 5 is_stmt 0 view .LVU144
 547              	.LBE376:
 548              	.LBE378:
 329:./lib/chibios/os/rt/include/chvt.h ****   chVTDoSetI(vtp, delay, vtfunc, par);
 549              		.loc 6 329 3 is_stmt 1 view .LVU145
 550 0010 2B46     		mov	r3, r5
 551 0012 2146     		mov	r1, r4
 552 0014 034A     		ldr	r2, .L26+4
 553 0016 0248     		ldr	r0, .L26
 330:./lib/chibios/os/rt/include/chvt.h **** }
 554              		.loc 6 330 1 is_stmt 0 view .LVU146
 555 0018 BDE87040 		pop	{r4, r5, r6, lr}
 556              		.cfi_restore 14
 557              		.cfi_restore 6
 558              		.cfi_restore 5
 559              		.cfi_restore 4
 560              		.cfi_def_cfa_offset 0
 561              	.LVL29:
 329:./lib/chibios/os/rt/include/chvt.h ****   chVTDoSetI(vtp, delay, vtfunc, par);
 562              		.loc 6 329 3 view .LVU147
 563 001c FFF7FEBF 		b	chVTDoSetI
 564              	.LVL30:
 565              	.L27:
 329:./lib/chibios/os/rt/include/chvt.h ****   chVTDoSetI(vtp, delay, vtfunc, par);
 566              		.loc 6 329 3 view .LVU148
 567              		.align	2
 568              	.L26:
 569 0020 00000000 		.word	keyboard_idle_timer
 570 0024 00000000 		.word	keyboard_idle_timer_cb
 571              		.cfi_endproc
 572              	.LFE321:
 574              		.global	__aeabi_uldivmod
 575              		.global	__aeabi_ldivmod
 576              		.section	.text.keyboard_idle_timer_cb,"ax",%progbits
 577              		.align	1
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 582              	keyboard_idle_timer_cb:
 583              	.LVL31:
 584              	.LFB301:
 764:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 585              		.loc 1 764 47 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 765:tmk_core/protocol/chibios/usb_main.c **** 
 589              		.loc 1 765 5 view .LVU150
 767:tmk_core/protocol/chibios/usb_main.c **** 
 590              		.loc 1 767 5 view .LVU151
 591              	.LBB412:
 592              	.LBI412:
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 593              		.loc 2 595 20 view .LVU152
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 594              		.loc 2 597 3 view .LVU153
 595              	.LBB413:
 596              	.LBI413:
 395:./lib/chibios/os/rt/include/chsys.h **** 
 597              		.loc 3 395 20 view .LVU154
 397:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 598              		.loc 3 397 3 view .LVU155
 599              	.LBB414:
 600              	.LBI414:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 601              		.loc 4 708 27 view .LVU156
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 602              		.loc 4 710 3 view .LVU157
 603              	.LBB415:
 604              	.LBI415:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 605              		.loc 4 669 27 view .LVU158
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 606              		.loc 4 677 3 view .LVU159
 607              	.LBB416:
 608              	.LBI416:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 609              		.loc 5 491 27 view .LVU160
 610              	.LBB417:
 611              		.loc 5 493 3 view .LVU161
 612              	.LBE417:
 613              	.LBE416:
 614              	.LBE415:
 615              	.LBE414:
 616              	.LBE413:
 617              	.LBE412:
 764:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 618              		.loc 1 764 47 is_stmt 0 view .LVU162
 619 0000 38B5     		push	{r3, r4, r5, lr}
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 3, -16
 622              		.cfi_offset 4, -12
 623              		.cfi_offset 5, -8
 624              		.cfi_offset 14, -4
 764:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 625              		.loc 1 764 47 view .LVU163
 626 0002 0446     		mov	r4, r0
 627              	.LBB423:
 628              	.LBB422:
 629              	.LBB421:
 630              	.LBB420:
 631              	.LBB419:
 632              	.LBB418:
 633              		.loc 5 493 3 view .LVU164
 634 0004 2023     		movs	r3, #32
 635              		.syntax unified
 636              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 637 0006 83F31188 		MSR basepri, r3
 638              	@ 0 "" 2
 639              	.LVL32:
 640              		.loc 5 493 3 view .LVU165
 641              		.thumb
 642              		.syntax unified
 643              	.LBE418:
 644              	.LBE419:
 645              	.LBE420:
 646              	.LBE421:
 398:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 647              		.loc 3 398 34 is_stmt 1 view .LVU166
 399:./lib/chibios/os/rt/include/chsys.h **** }
 648              		.loc 3 399 29 view .LVU167
 649              	.LBE422:
 650              	.LBE423:
 770:tmk_core/protocol/chibios/usb_main.c ****         /* do not rearm the timer, should be enabled on IDLE request */
 651              		.loc 1 770 5 view .LVU168
 770:tmk_core/protocol/chibios/usb_main.c ****         /* do not rearm the timer, should be enabled on IDLE request */
 652              		.loc 1 770 8 is_stmt 0 view .LVU169
 653 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 654 000c 042B     		cmp	r3, #4
 655 000e 03D0     		beq	.L29
 656              	.LVL33:
 657              	.L31:
 658              	.LBB424:
 659              	.LBB425:
 791:tmk_core/protocol/chibios/usb_main.c **** }
 660              		.loc 1 791 5 is_stmt 1 view .LVU170
 661              	.LBB426:
 662              	.LBI426:
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 663              		.loc 2 606 20 view .LVU171
 664              		.loc 2 608 3 view .LVU172
 665              	.LBB427:
 666              	.LBI427:
 415:./lib/chibios/os/rt/include/chsys.h **** 
 667              		.loc 3 415 20 view .LVU173
 417:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 668              		.loc 3 417 31 view .LVU174
 418:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 669              		.loc 3 418 33 view .LVU175
 670              		.loc 3 419 3 view .LVU176
 671              	.LBB428:
 672              	.LBI428:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 673              		.loc 4 719 27 view .LVU177
 674              		.loc 4 721 3 view .LVU178
 675              	.LBB429:
 676              	.LBI429:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 677              		.loc 4 693 27 view .LVU179
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 678              		.loc 4 696 3 view .LVU180
 679              	.LBB430:
 680              	.LBI430:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 681              		.loc 5 491 27 view .LVU181
 682              	.LBB431:
 683              		.loc 5 493 3 view .LVU182
 684 0010 0023     		movs	r3, #0
 685              		.syntax unified
 686              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 687 0012 83F31188 		MSR basepri, r3
 688              	@ 0 "" 2
 689              	.LVL34:
 690              		.loc 5 493 3 is_stmt 0 view .LVU183
 691              		.thumb
 692              		.syntax unified
 693              	.LBE431:
 694              	.LBE430:
 695              	.LBE429:
 696              	.LBE428:
 697              	.LBE427:
 698              	.LBE426:
 699              	.LBE425:
 700              	.LBE424:
 792:tmk_core/protocol/chibios/usb_main.c **** 
 701              		.loc 1 792 1 view .LVU184
 702 0016 38BD     		pop	{r3, r4, r5, pc}
 703              	.LVL35:
 704              	.L29:
 705              	.LBB433:
 706              	.LBI424:
 764:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 707              		.loc 1 764 13 is_stmt 1 view .LVU185
 708              	.LBB432:
 777:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 709              		.loc 1 777 5 view .LVU186
 777:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 710              		.loc 1 777 23 is_stmt 0 view .LVU187
 711 0018 124B     		ldr	r3, .L39
 712 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 777:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 713              		.loc 1 777 8 view .LVU188
 714 001c DB09     		lsrs	r3, r3, #7
 715 001e F7D1     		bne	.L31
 777:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 716              		.loc 1 777 29 view .LVU189
 717 0020 114D     		ldr	r5, .L39+4
 718 0022 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 719 0024 002B     		cmp	r3, #0
 720 0026 F3D0     		beq	.L31
 777:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 721              		.loc 1 777 46 view .LVU190
 722 0028 104B     		ldr	r3, .L39+8
 723 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 724 002c 002B     		cmp	r3, #0
 725 002e EFD0     		beq	.L31
 782:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 726              		.loc 1 782 9 is_stmt 1 view .LVU191
 782:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 727              		.loc 1 782 12 is_stmt 0 view .LVU192
 728 0030 0389     		ldrh	r3, [r0, #8]
 729 0032 9B07     		lsls	r3, r3, #30
 730 0034 04D4     		bmi	.L32
 783:tmk_core/protocol/chibios/usb_main.c ****         }
 731              		.loc 1 783 13 is_stmt 1 view .LVU193
 732 0036 0E4A     		ldr	r2, .L39+12
 733 0038 0823     		movs	r3, #8
 734 003a 0121     		movs	r1, #1
 735 003c FFF7FEFF 		bl	usbStartTransmitI
 736              	.LVL36:
 737              	.L32:
 786:tmk_core/protocol/chibios/usb_main.c ****     }
 738              		.loc 1 786 9 view .LVU194
 786:tmk_core/protocol/chibios/usb_main.c ****     }
 739              		.loc 1 786 44 is_stmt 0 view .LVU195
 740 0040 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 741 0042 42F21073 		movw	r3, #10000
 742 0046 A0FB0303 		umull	r0, r3, r0, r3
 743 004a 4FF47A72 		mov	r2, #1000
 744 004e 0023     		movs	r3, #0
 745 0050 00F2E730 		addw	r0, r0, #999
 746 0054 0021     		movs	r1, #0
 747 0056 FFF7FEFF 		bl	__aeabi_uldivmod
 748              	.LVL37:
 786:tmk_core/protocol/chibios/usb_main.c ****     }
 749              		.loc 1 786 9 view .LVU196
 750 005a 2146     		mov	r1, r4
 751 005c 8000     		lsls	r0, r0, #2
 752 005e FFF7FEFF 		bl	chVTSetI.constprop.0
 753              	.LVL38:
 754 0062 D5E7     		b	.L31
 755              	.L40:
 756              		.align	2
 757              	.L39:
 758 0064 00000000 		.word	keymap_config
 759 0068 00000000 		.word	keyboard_idle
 760 006c 00000000 		.word	keyboard_protocol
 761 0070 00000000 		.word	keyboard_report_sent
 762              	.LBE432:
 763              	.LBE433:
 764              		.cfi_endproc
 765              	.LFE301:
 767              		.section	.text.usb_request_hook_cb,"ax",%progbits
 768              		.align	1
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 773              	usb_request_hook_cb:
 774              	.LVL39:
 775              	.LFB295:
 552:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 776              		.loc 1 552 50 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 553:tmk_core/protocol/chibios/usb_main.c **** 
 780              		.loc 1 553 5 view .LVU198
 563:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 781              		.loc 1 563 5 view .LVU199
 552:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 782              		.loc 1 552 50 is_stmt 0 view .LVU200
 783 0000 38B5     		push	{r3, r4, r5, lr}
 784              		.cfi_def_cfa_offset 16
 785              		.cfi_offset 3, -16
 786              		.cfi_offset 4, -12
 787              		.cfi_offset 5, -8
 788              		.cfi_offset 14, -4
 563:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 789              		.loc 1 563 22 view .LVU201
 790 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 563:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 791              		.loc 1 563 8 view .LVU202
 792 0006 03F07F02 		and	r2, r3, #127
 793 000a 212A     		cmp	r2, #33
 552:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 794              		.loc 1 552 50 view .LVU203
 795 000c 0446     		mov	r4, r0
 563:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 796              		.loc 1 563 8 view .LVU204
 797 000e 68D1     		bne	.L42
 564:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_DEV2HOST:
 798              		.loc 1 564 9 is_stmt 1 view .LVU205
 799 0010 13F0800F 		tst	r3, #128
 800 0014 90F87530 		ldrb	r3, [r0, #117]	@ zero_extendqisi2
 801 0018 1ED0     		beq	.L43
 566:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_REPORT:
 802              		.loc 1 566 17 view .LVU206
 803 001a 022B     		cmp	r3, #2
 804 001c 17D0     		beq	.L44
 805 001e 032B     		cmp	r3, #3
 806 0020 0DD0     		beq	.L45
 807 0022 012B     		cmp	r3, #1
 808 0024 5DD1     		bne	.L42
 568:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 809              		.loc 1 568 25 view .LVU207
 810 0026 90F87820 		ldrb	r2, [r0, #120]	@ zero_extendqisi2
 811 002a 0023     		movs	r3, #0
 812 002c 002A     		cmp	r2, #0
 813 002e 4DD1     		bne	.L68
 570:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 814              		.loc 1 570 33 view .LVU208
 815 0030 3C4B     		ldr	r3, .L69
 816 0032 8366     		str	r3, [r0, #104]
 570:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 817              		.loc 1 570 33 view .LVU209
 570:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 818              		.loc 1 570 33 view .LVU210
 570:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 819              		.loc 1 570 125 view .LVU211
 571:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 820              		.loc 1 571 33 view .LVU212
 571:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 821              		.loc 1 571 40 is_stmt 0 view .LVU213
 822 0034 2023     		movs	r3, #32
 823              	.LVL40:
 824              	.L47:
 582:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 825              		.loc 1 582 33 view .LVU214
 826 0036 C4E91B32 		strd	r3, r2, [r4, #108]
 571:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 827              		.loc 1 571 40 view .LVU215
 828 003a 0120     		movs	r0, #1
 829 003c 63E0     		b	.L55
 830              	.LVL41:
 831              	.L45:
 589:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 832              		.loc 1 589 25 is_stmt 1 view .LVU216
 589:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 833              		.loc 1 589 28 is_stmt 0 view .LVU217
 834 003e B0F87820 		ldrh	r2, [r0, #120]
 835 0042 002A     		cmp	r2, #0
 836 0044 4DD1     		bne	.L42
 590:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 837              		.loc 1 590 29 is_stmt 1 view .LVU218
 838 0046 384B     		ldr	r3, .L69+4
 839 0048 8366     		str	r3, [r0, #104]
 590:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 840              		.loc 1 590 29 view .LVU219
 590:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 841              		.loc 1 590 29 view .LVU220
 590:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 842              		.loc 1 590 80 view .LVU221
 591:tmk_core/protocol/chibios/usb_main.c ****                         }
 843              		.loc 1 591 29 view .LVU222
 591:tmk_core/protocol/chibios/usb_main.c ****                         }
 844              		.loc 1 591 36 is_stmt 0 view .LVU223
 845 004a 0123     		movs	r3, #1
 846 004c F3E7     		b	.L47
 847              	.L44:
 596:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 848              		.loc 1 596 25 is_stmt 1 view .LVU224
 849 004e 374B     		ldr	r3, .L69+8
 850 0050 8366     		str	r3, [r0, #104]
 596:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 851              		.loc 1 596 25 view .LVU225
 596:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 852              		.loc 1 596 25 view .LVU226
 596:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 853              		.loc 1 596 72 view .LVU227
 597:tmk_core/protocol/chibios/usb_main.c ****                         break;
 854              		.loc 1 597 25 view .LVU228
 597:tmk_core/protocol/chibios/usb_main.c ****                         break;
 855              		.loc 1 597 32 is_stmt 0 view .LVU229
 856 0052 0123     		movs	r3, #1
 857              	.LVL42:
 858              	.L65:
 659:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 859              		.loc 1 659 9 is_stmt 1 view .LVU230
 659:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 860              		.loc 1 659 76 view .LVU231
 660:tmk_core/protocol/chibios/usb_main.c ****     }
 861              		.loc 1 660 9 view .LVU232
 660:tmk_core/protocol/chibios/usb_main.c ****     }
 862              		.loc 1 660 16 is_stmt 0 view .LVU233
 863 0054 0022     		movs	r2, #0
 864 0056 EEE7     		b	.L47
 865              	.LVL43:
 866              	.L43:
 603:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_REPORT:
 867              		.loc 1 603 17 is_stmt 1 view .LVU234
 868 0058 0A2B     		cmp	r3, #10
 869 005a 39D0     		beq	.L48
 870 005c 0B2B     		cmp	r3, #11
 871 005e 0AD0     		beq	.L49
 872 0060 092B     		cmp	r3, #9
 873 0062 3ED1     		bne	.L42
 605:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 874              		.loc 1 605 25 discriminator 4 view .LVU235
 875 0064 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 876 0068 012B     		cmp	r3, #1
 877 006a 3AD8     		bhi	.L42
 610:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 878              		.loc 1 610 33 view .LVU236
 879 006c 304B     		ldr	r3, .L69+12
 880 006e 8366     		str	r3, [r0, #104]
 610:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 881              		.loc 1 610 33 view .LVU237
 610:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 882              		.loc 1 610 33 view .LVU238
 610:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 883              		.loc 1 610 116 view .LVU239
 611:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 884              		.loc 1 611 33 view .LVU240
 611:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 885              		.loc 1 611 40 is_stmt 0 view .LVU241
 886 0070 304A     		ldr	r2, .L69+16
 887 0072 0223     		movs	r3, #2
 888 0074 DFE7     		b	.L47
 889              	.L49:
 617:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 890              		.loc 1 617 25 is_stmt 1 view .LVU242
 617:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 891              		.loc 1 617 28 is_stmt 0 view .LVU243
 892 0076 B0F87830 		ldrh	r3, [r0, #120]
 893 007a 33BB     		cbnz	r3, .L51
 618:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 894              		.loc 1 618 29 is_stmt 1 view .LVU244
 618:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 895              		.loc 1 618 62 is_stmt 0 view .LVU245
 896 007c 90F87650 		ldrb	r5, [r0, #118]	@ zero_extendqisi2
 618:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 897              		.loc 1 618 47 view .LVU246
 898 0080 294B     		ldr	r3, .L69+4
 618:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 899              		.loc 1 618 67 view .LVU247
 900 0082 002D     		cmp	r5, #0
 901 0084 14BF     		ite	ne
 902 0086 0121     		movne	r1, #1
 903 0088 0021     		moveq	r1, #0
 618:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 904              		.loc 1 618 47 view .LVU248
 905 008a 1970     		strb	r1, [r3]
 620:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 906              		.loc 1 620 29 is_stmt 1 view .LVU249
 620:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 907              		.loc 1 620 48 is_stmt 0 view .LVU250
 908 008c 2A4B     		ldr	r3, .L69+20
 909 008e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 910 0090 61F3C712 		bfi	r2, r1, #7, #1
 911 0094 1A70     		strb	r2, [r3]
 621:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 912              		.loc 1 621 29 is_stmt 1 view .LVU251
 621:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 913              		.loc 1 621 32 is_stmt 0 view .LVU252
 914 0096 18D1     		bne	.L51
 621:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 915              		.loc 1 621 53 discriminator 1 view .LVU253
 916 0098 244B     		ldr	r3, .L69+8
 917 009a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 918              	.L67:
 621:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 919              		.loc 1 621 53 discriminator 1 view .LVU254
 920 009c AAB1     		cbz	r2, .L51
 626:tmk_core/protocol/chibios/usb_main.c ****                                 chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboa
 921              		.loc 1 626 33 is_stmt 1 view .LVU255
 922              	.LBB434:
 923              	.LBI434:
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 924              		.loc 2 595 20 view .LVU256
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 925              		.loc 2 597 3 view .LVU257
 926              	.LBB435:
 927              	.LBI435:
 395:./lib/chibios/os/rt/include/chsys.h **** 
 928              		.loc 3 395 20 view .LVU258
 397:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 929              		.loc 3 397 3 view .LVU259
 930              	.LBB436:
 931              	.LBI436:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 932              		.loc 4 708 27 view .LVU260
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 933              		.loc 4 710 3 view .LVU261
 934              	.LBB437:
 935              	.LBI437:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 936              		.loc 4 669 27 view .LVU262
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 937              		.loc 4 677 3 view .LVU263
 938              	.LVL44:
 939              	.LBB438:
 940              	.LBI438:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 941              		.loc 5 491 27 view .LVU264
 942              	.LBB439:
 943              		.loc 5 493 3 view .LVU265
 944 009e 2022     		movs	r2, #32
 945              		.syntax unified
 946              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 947 00a0 82F31188 		MSR basepri, r2
 948              	@ 0 "" 2
 949              	.LVL45:
 950              		.loc 5 493 3 is_stmt 0 view .LVU266
 951              		.thumb
 952              		.syntax unified
 953              	.LBE439:
 954              	.LBE438:
 955              	.LBE437:
 956              	.LBE436:
 398:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 957              		.loc 3 398 34 is_stmt 1 view .LVU267
 399:./lib/chibios/os/rt/include/chsys.h **** }
 958              		.loc 3 399 29 view .LVU268
 959              	.LBE435:
 960              	.LBE434:
 627:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 961              		.loc 1 627 33 view .LVU269
 627:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 962              		.loc 1 627 68 is_stmt 0 view .LVU270
 963 00a4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 964              	.LVL46:
 627:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 965              		.loc 1 627 68 view .LVU271
 966 00a6 42F21073 		movw	r3, #10000
 967 00aa A0FB0303 		umull	r0, r3, r0, r3
 968 00ae 4FF47A72 		mov	r2, #1000
 969 00b2 0023     		movs	r3, #0
 970 00b4 00F2E730 		addw	r0, r0, #999
 971 00b8 0021     		movs	r1, #0
 972 00ba FFF7FEFF 		bl	__aeabi_uldivmod
 973              	.LVL47:
 627:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 974              		.loc 1 627 33 view .LVU272
 975 00be 2146     		mov	r1, r4
 976 00c0 8000     		lsls	r0, r0, #2
 977 00c2 FFF7FEFF 		bl	chVTSetI.constprop.0
 978              	.LVL48:
 628:tmk_core/protocol/chibios/usb_main.c ****                             }
 979              		.loc 1 628 33 is_stmt 1 view .LVU273
 980              	.LBB440:
 981              	.LBI440:
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 982              		.loc 2 606 20 view .LVU274
 983              	.LBB441:
 984              		.loc 2 608 3 view .LVU275
 985              	.LBB442:
 986              	.LBI442:
 415:./lib/chibios/os/rt/include/chsys.h **** 
 987              		.loc 3 415 20 view .LVU276
 417:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 988              		.loc 3 417 31 view .LVU277
 418:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 989              		.loc 3 418 33 view .LVU278
 990              		.loc 3 419 3 view .LVU279
 991              	.LBB443:
 992              	.LBI443:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 993              		.loc 4 719 27 view .LVU280
 994              		.loc 4 721 3 view .LVU281
 995              	.LBB444:
 996              	.LBI444:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 997              		.loc 4 693 27 view .LVU282
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 998              		.loc 4 696 3 view .LVU283
 999              	.LBB445:
 1000              	.LBI445:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1001              		.loc 5 491 27 view .LVU284
 1002              	.LBB446:
 1003              		.loc 5 493 3 view .LVU285
 1004              		.syntax unified
 1005              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1006 00c6 85F31188 		MSR basepri, r5
 1007              	@ 0 "" 2
 1008              	.LVL49:
 1009              		.thumb
 1010              		.syntax unified
 1011              	.L51:
 1012              		.loc 5 493 3 is_stmt 0 view .LVU286
 1013              	.LBE446:
 1014              	.LBE445:
 1015              	.LBE444:
 1016              	.LBE443:
 1017              	.LBE442:
 1018              	.LBE441:
 1019              	.LBE440:
 631:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1020              		.loc 1 631 25 is_stmt 1 view .LVU287
 1021 00ca 0023     		movs	r3, #0
 1022              	.L68:
 1023 00cc A366     		str	r3, [r4, #104]
 631:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1024              		.loc 1 631 25 view .LVU288
 631:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1025              		.loc 1 631 25 view .LVU289
 631:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1026              		.loc 1 631 62 view .LVU290
 632:tmk_core/protocol/chibios/usb_main.c ****                         break;
 1027              		.loc 1 632 25 view .LVU291
 1028 00ce C1E7     		b	.L65
 1029              	.LVL50:
 1030              	.L48:
 633:tmk_core/protocol/chibios/usb_main.c **** 
 1031              		.loc 1 633 25 view .LVU292
 636:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1032              		.loc 1 636 25 view .LVU293
 639:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1033              		.loc 1 639 43 is_stmt 0 view .LVU294
 1034 00d0 1949     		ldr	r1, .L69+20
 636:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1035              		.loc 1 636 39 view .LVU295
 1036 00d2 164B     		ldr	r3, .L69+8
 639:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1037              		.loc 1 639 43 view .LVU296
 1038 00d4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 636:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1039              		.loc 1 636 52 view .LVU297
 1040 00d6 90F87720 		ldrb	r2, [r0, #119]	@ zero_extendqisi2
 636:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1041              		.loc 1 636 39 view .LVU298
 1042 00da 1A70     		strb	r2, [r3]
 639:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1043              		.loc 1 639 25 is_stmt 1 view .LVU299
 639:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1044              		.loc 1 639 28 is_stmt 0 view .LVU300
 1045 00dc CD09     		lsrs	r5, r1, #7
 1046 00de F4D1     		bne	.L51
 1047 00e0 DCE7     		b	.L67
 1048              	.L42:
 656:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 1049              		.loc 1 656 5 is_stmt 1 view .LVU301
 656:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 1050              		.loc 1 656 8 is_stmt 0 view .LVU302
 1051 00e2 B4F87420 		ldrh	r2, [r4, #116]
 1052 00e6 40F28163 		movw	r3, #1665
 1053 00ea 9A42     		cmp	r2, r3
 1054 00ec 10D1     		bne	.L53
 657:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1055              		.loc 1 657 9 is_stmt 1 view .LVU303
 657:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1056              		.loc 1 657 26 is_stmt 0 view .LVU304
 1057 00ee 6368     		ldr	r3, [r4, #4]
 657:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1058              		.loc 1 657 14 view .LVU305
 1059 00f0 94F87620 		ldrb	r2, [r4, #118]	@ zero_extendqisi2
 1060 00f4 5D68     		ldr	r5, [r3, #4]
 1061 00f6 94F87710 		ldrb	r1, [r4, #119]	@ zero_extendqisi2
 1062 00fa B4F87830 		ldrh	r3, [r4, #120]	@ unaligned
 1063 00fe 2046     		mov	r0, r4
 1064              	.LVL51:
 657:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1065              		.loc 1 657 14 view .LVU306
 1066 0100 A847     		blx	r5
 1067              	.LVL52:
 658:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 1068              		.loc 1 658 9 is_stmt 1 view .LVU307
 658:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 1069              		.loc 1 658 12 is_stmt 0 view .LVU308
 1070 0102 08B9     		cbnz	r0, .L54
 1071              	.LVL53:
 1072              	.L57:
 658:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 1073              		.loc 1 658 32 view .LVU309
 1074 0104 0020     		movs	r0, #0
 1075              	.L55:
 671:tmk_core/protocol/chibios/usb_main.c **** 
 1076              		.loc 1 671 1 view .LVU310
 1077 0106 38BD     		pop	{r3, r4, r5, pc}
 1078              	.LVL54:
 1079              	.L54:
 659:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1080              		.loc 1 659 9 is_stmt 1 view .LVU311
 1081 0108 4368     		ldr	r3, [r0, #4]
 1082 010a A366     		str	r3, [r4, #104]
 659:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1083              		.loc 1 659 9 view .LVU312
 1084 010c 0368     		ldr	r3, [r0]
 1085 010e A1E7     		b	.L65
 1086              	.LVL55:
 1087              	.L53:
 1088              	.LBB447:
 663:tmk_core/protocol/chibios/usb_main.c ****         if (drivers.array[i].config.int_in) {
 1089              		.loc 1 663 23 view .LVU313
 664:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1090              		.loc 1 664 9 view .LVU314
 664:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1091              		.loc 1 664 36 is_stmt 0 view .LVU315
 1092 0110 0A4B     		ldr	r3, .L69+24
 664:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1093              		.loc 1 664 12 view .LVU316
 1094 0112 93F8B630 		ldrb	r3, [r3, #182]	@ zero_extendqisi2
 1095 0116 002B     		cmp	r3, #0
 1096 0118 F4D0     		beq	.L57
 666:tmk_core/protocol/chibios/usb_main.c ****         }
 1097              		.loc 1 666 13 is_stmt 1 view .LVU317
 666:tmk_core/protocol/chibios/usb_main.c ****         }
 1098              		.loc 1 666 20 is_stmt 0 view .LVU318
 1099 011a 2046     		mov	r0, r4
 1100              	.LVL56:
 666:tmk_core/protocol/chibios/usb_main.c ****         }
 1101              		.loc 1 666 20 view .LVU319
 1102              	.LBE447:
 671:tmk_core/protocol/chibios/usb_main.c **** 
 1103              		.loc 1 671 1 view .LVU320
 1104 011c BDE83840 		pop	{r3, r4, r5, lr}
 1105              		.cfi_restore 14
 1106              		.cfi_restore 5
 1107              		.cfi_restore 4
 1108              		.cfi_restore 3
 1109              		.cfi_def_cfa_offset 0
 1110              	.LVL57:
 1111              	.LBB448:
 666:tmk_core/protocol/chibios/usb_main.c ****         }
 1112              		.loc 1 666 20 view .LVU321
 1113 0120 FFF7FEBF 		b	qmkusbRequestsHook
 1114              	.LVL58:
 1115              	.L70:
 666:tmk_core/protocol/chibios/usb_main.c ****         }
 1116              		.loc 1 666 20 view .LVU322
 1117              		.align	2
 1118              	.L69:
 1119 0124 00000000 		.word	keyboard_report_sent
 1120 0128 00000000 		.word	keyboard_protocol
 1121 012c 00000000 		.word	keyboard_idle
 1122 0130 00000000 		.word	set_report_buf
 1123 0134 00000000 		.word	set_led_transfer_cb
 1124 0138 00000000 		.word	keymap_config
 1125 013c 00000000 		.word	drivers
 1126              	.LBE448:
 1127              		.cfi_endproc
 1128              	.LFE295:
 1130              		.section	.text.usb_event_queue_enqueue.isra.0,"ax",%progbits
 1131              		.align	1
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1136              	usb_event_queue_enqueue.isra.0:
 1137              	.LVL59:
 1138              	.LFB323:
 395:tmk_core/protocol/chibios/usb_main.c ****     uint8_t next = (event_queue_head + 1) % USB_EVENT_QUEUE_SIZE;
 1139              		.loc 1 395 20 is_stmt 1 view -0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 396:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1143              		.loc 1 396 5 view .LVU324
 395:tmk_core/protocol/chibios/usb_main.c ****     uint8_t next = (event_queue_head + 1) % USB_EVENT_QUEUE_SIZE;
 1144              		.loc 1 395 20 is_stmt 0 view .LVU325
 1145 0000 10B5     		push	{r4, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 4, -8
 1148              		.cfi_offset 14, -4
 396:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1149              		.loc 1 396 38 view .LVU326
 1150 0002 064A     		ldr	r2, .L73
 397:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1151              		.loc 1 397 14 view .LVU327
 1152 0004 064C     		ldr	r4, .L73+4
 396:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1153              		.loc 1 396 38 view .LVU328
 1154 0006 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 397:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1155              		.loc 1 397 8 view .LVU329
 1156 0008 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 396:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1157              		.loc 1 396 38 view .LVU330
 1158 000a 4B1C     		adds	r3, r1, #1
 396:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1159              		.loc 1 396 13 view .LVU331
 1160 000c 03F00F03 		and	r3, r3, #15
 1161              	.LVL60:
 397:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1162              		.loc 1 397 5 is_stmt 1 view .LVU332
 397:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1163              		.loc 1 397 8 is_stmt 0 view .LVU333
 1164 0010 9C42     		cmp	r4, r3
 400:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head              = next;
 1165              		.loc 1 400 5 is_stmt 1 view .LVU334
 400:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head              = next;
 1166              		.loc 1 400 35 is_stmt 0 view .LVU335
 1167 0012 1EBF     		ittt	ne
 1168 0014 034C     		ldrne	r4, .L73+8
 401:tmk_core/protocol/chibios/usb_main.c ****     return true;
 1169              		.loc 1 401 35 view .LVU336
 1170 0016 1370     		strbne	r3, [r2]
 400:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head              = next;
 1171              		.loc 1 400 35 view .LVU337
 1172 0018 6054     		strbne	r0, [r4, r1]
 401:tmk_core/protocol/chibios/usb_main.c ****     return true;
 1173              		.loc 1 401 5 is_stmt 1 view .LVU338
 402:tmk_core/protocol/chibios/usb_main.c **** }
 1174              		.loc 1 402 5 view .LVU339
 403:tmk_core/protocol/chibios/usb_main.c **** 
 1175              		.loc 1 403 1 is_stmt 0 view .LVU340
 1176 001a 10BD     		pop	{r4, pc}
 1177              	.L74:
 1178              		.align	2
 1179              	.L73:
 1180 001c 00000000 		.word	event_queue_head
 1181 0020 00000000 		.word	event_queue_tail
 1182 0024 00000000 		.word	event_queue
 1183              		.cfi_endproc
 1184              	.LFE323:
 1186              		.section	.text.usb_event_cb,"ax",%progbits
 1187              		.align	1
 1188              		.syntax unified
 1189              		.thumb
 1190              		.thumb_func
 1192              	usb_event_cb:
 1193              	.LVL61:
 1194              	.LFB292:
 452:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 1195              		.loc 1 452 61 is_stmt 1 view -0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 453:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 1199              		.loc 1 453 5 view .LVU342
 452:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 1200              		.loc 1 452 61 is_stmt 0 view .LVU343
 1201 0000 38B5     		push	{r3, r4, r5, lr}
 1202              		.cfi_def_cfa_offset 16
 1203              		.cfi_offset 3, -16
 1204              		.cfi_offset 4, -12
 1205              		.cfi_offset 5, -8
 1206              		.cfi_offset 14, -4
 452:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 1207              		.loc 1 452 61 view .LVU344
 1208 0002 0446     		mov	r4, r0
 453:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 1209              		.loc 1 453 5 view .LVU345
 1210 0004 0529     		cmp	r1, #5
 1211 0006 41D8     		bhi	.L75
 1212 0008 DFE801F0 		tbb	[pc, r1]
 1213              	.L78:
 1214 000c 37       		.byte	(.L80-.L78)/2
 1215 000d 40       		.byte	(.L75-.L78)/2
 1216 000e 03       		.byte	(.L81-.L78)/2
 1217 000f 37       		.byte	(.L80-.L78)/2
 1218 0010 34       		.byte	(.L79-.L78)/2
 1219 0011 41       		.byte	(.L77-.L78)/2
 1220              		.p2align 1
 1221              	.L81:
 458:tmk_core/protocol/chibios/usb_main.c ****             /* Enable the endpoints specified into the configuration. */
 1222              		.loc 1 458 13 is_stmt 1 view .LVU346
 1223              	.LBB449:
 1224              	.LBI449:
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1225              		.loc 2 595 20 view .LVU347
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1226              		.loc 2 597 3 view .LVU348
 1227              	.LBB450:
 1228              	.LBI450:
 395:./lib/chibios/os/rt/include/chsys.h **** 
 1229              		.loc 3 395 20 view .LVU349
 397:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1230              		.loc 3 397 3 view .LVU350
 1231              	.LBB451:
 1232              	.LBI451:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1233              		.loc 4 708 27 view .LVU351
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1234              		.loc 4 710 3 view .LVU352
 1235              	.LBB452:
 1236              	.LBI452:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1237              		.loc 4 669 27 view .LVU353
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1238              		.loc 4 677 3 view .LVU354
 1239              	.LVL62:
 1240              	.LBB453:
 1241              	.LBI453:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1242              		.loc 5 491 27 view .LVU355
 1243              	.LBB454:
 1244              		.loc 5 493 3 view .LVU356
 1245 0012 2023     		movs	r3, #32
 1246              		.syntax unified
 1247              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1248 0014 83F31188 		MSR basepri, r3
 1249              	@ 0 "" 2
 1250              	.LVL63:
 1251              		.loc 5 493 3 is_stmt 0 view .LVU357
 1252              		.thumb
 1253              		.syntax unified
 1254              	.LBE454:
 1255              	.LBE453:
 1256              	.LBE452:
 1257              	.LBE451:
 398:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1258              		.loc 3 398 34 is_stmt 1 view .LVU358
 399:./lib/chibios/os/rt/include/chsys.h **** }
 1259              		.loc 3 399 29 view .LVU359
 1260              	.LBE450:
 1261              	.LBE449:
 461:tmk_core/protocol/chibios/usb_main.c **** #endif
 1262              		.loc 1 461 13 view .LVU360
 1263              	.LBB455:
 473:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 1264              		.loc 1 473 63 is_stmt 0 view .LVU361
 1265 0018 224D     		ldr	r5, .L92
 1266              	.LBE455:
 461:tmk_core/protocol/chibios/usb_main.c **** #endif
 1267              		.loc 1 461 13 view .LVU362
 1268 001a 234A     		ldr	r2, .L92+4
 1269 001c 0121     		movs	r1, #1
 1270              	.LVL64:
 461:tmk_core/protocol/chibios/usb_main.c **** #endif
 1271              		.loc 1 461 13 view .LVU363
 1272 001e FFF7FEFF 		bl	usbInitEndpointI
 1273              	.LVL65:
 467:tmk_core/protocol/chibios/usb_main.c **** #endif
 1274              		.loc 1 467 13 is_stmt 1 view .LVU364
 1275 0022 224A     		ldr	r2, .L92+8
 1276 0024 0221     		movs	r1, #2
 1277 0026 2046     		mov	r0, r4
 1278 0028 FFF7FEFF 		bl	usbInitEndpointI
 1279              	.LVL66:
 469:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1280              		.loc 1 469 13 view .LVU365
 1281              	.LBB456:
 469:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1282              		.loc 1 469 18 view .LVU366
 469:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1283              		.loc 1 469 31 view .LVU367
 473:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 1284              		.loc 1 473 17 view .LVU368
 1285 002c 95F8B410 		ldrb	r1, [r5, #180]	@ zero_extendqisi2
 1286 0030 05F14402 		add	r2, r5, #68
 1287 0034 2046     		mov	r0, r4
 1288 0036 FFF7FEFF 		bl	usbInitEndpointI
 1289              	.LVL67:
 474:tmk_core/protocol/chibios/usb_main.c **** #endif
 1290              		.loc 1 474 17 view .LVU369
 1291 003a 95F8B510 		ldrb	r1, [r5, #181]	@ zero_extendqisi2
 1292 003e 05F16802 		add	r2, r5, #104
 1293 0042 2046     		mov	r0, r4
 1294 0044 FFF7FEFF 		bl	usbInitEndpointI
 1295              	.LVL68:
 476:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1296              		.loc 1 476 17 view .LVU370
 476:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1297              		.loc 1 476 44 is_stmt 0 view .LVU371
 1298 0048 95F8B610 		ldrb	r1, [r5, #182]	@ zero_extendqisi2
 476:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1299              		.loc 1 476 20 view .LVU372
 1300 004c 21B1     		cbz	r1, .L82
 477:tmk_core/protocol/chibios/usb_main.c ****                 }
 1301              		.loc 1 477 21 is_stmt 1 view .LVU373
 1302 004e 05F18C02 		add	r2, r5, #140
 1303 0052 2046     		mov	r0, r4
 1304 0054 FFF7FEFF 		bl	usbInitEndpointI
 1305              	.LVL69:
 1306              	.L82:
 479:tmk_core/protocol/chibios/usb_main.c ****             }
 1307              		.loc 1 479 17 discriminator 2 view .LVU374
 1308 0058 1548     		ldr	r0, .L92+12
 1309 005a FFF7FEFF 		bl	qmkusbConfigureHookI
 1310              	.LVL70:
 469:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1311              		.loc 1 469 51 discriminator 2 view .LVU375
 469:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1312              		.loc 1 469 31 discriminator 2 view .LVU376
 1313              	.LBE456:
 481:tmk_core/protocol/chibios/usb_main.c ****             if (last_suspend_state) {
 1314              		.loc 1 481 13 discriminator 2 view .LVU377
 1315              	.LBB457:
 1316              	.LBI457:
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1317              		.loc 2 606 20 discriminator 2 view .LVU378
 1318              		.loc 2 608 3 discriminator 2 view .LVU379
 1319              	.LBB458:
 1320              	.LBI458:
 415:./lib/chibios/os/rt/include/chsys.h **** 
 1321              		.loc 3 415 20 discriminator 2 view .LVU380
 417:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1322              		.loc 3 417 31 discriminator 2 view .LVU381
 418:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1323              		.loc 3 418 33 discriminator 2 view .LVU382
 1324              		.loc 3 419 3 discriminator 2 view .LVU383
 1325              	.LBB459:
 1326              	.LBI459:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1327              		.loc 4 719 27 discriminator 2 view .LVU384
 1328              		.loc 4 721 3 discriminator 2 view .LVU385
 1329              	.LBB460:
 1330              	.LBI460:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1331              		.loc 4 693 27 discriminator 2 view .LVU386
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1332              		.loc 4 696 3 discriminator 2 view .LVU387
 1333              	.LBB461:
 1334              	.LBI461:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1335              		.loc 5 491 27 discriminator 2 view .LVU388
 1336              	.LBB462:
 1337              		.loc 5 493 3 discriminator 2 view .LVU389
 1338 005e 0023     		movs	r3, #0
 1339              		.syntax unified
 1340              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1341 0060 83F31188 		MSR basepri, r3
 1342              	@ 0 "" 2
 1343              	.LVL71:
 1344              		.loc 5 493 3 is_stmt 0 discriminator 2 view .LVU390
 1345              		.thumb
 1346              		.syntax unified
 1347              	.LBE462:
 1348              	.LBE461:
 1349              	.LBE460:
 1350              	.LBE459:
 1351              	.LBE458:
 1352              	.LBE457:
 482:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 1353              		.loc 1 482 13 is_stmt 1 discriminator 2 view .LVU391
 482:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 1354              		.loc 1 482 17 is_stmt 0 discriminator 2 view .LVU392
 1355 0064 134B     		ldr	r3, .L92+16
 482:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 1356              		.loc 1 482 16 discriminator 2 view .LVU393
 1357 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1358 0068 83B1     		cbz	r3, .L75
 1359              	.LVL72:
 1360              	.L91:
 1361              	.LBB463:
 502:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1362              		.loc 1 502 51 is_stmt 1 discriminator 1 view .LVU394
 502:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1363              		.loc 1 502 31 discriminator 1 view .LVU395
 1364              	.LBE463:
 508:tmk_core/protocol/chibios/usb_main.c ****             return;
 1365              		.loc 1 508 13 discriminator 1 view .LVU396
 514:tmk_core/protocol/chibios/usb_main.c **** 
 1366              		.loc 1 514 1 is_stmt 0 discriminator 1 view .LVU397
 1367 006a BDE83840 		pop	{r3, r4, r5, lr}
 1368              		.cfi_remember_state
 1369              		.cfi_restore 14
 1370              		.cfi_restore 5
 1371              		.cfi_restore 4
 1372              		.cfi_restore 3
 1373              		.cfi_def_cfa_offset 0
 1374              	.LVL73:
 508:tmk_core/protocol/chibios/usb_main.c ****             return;
 1375              		.loc 1 508 13 discriminator 1 view .LVU398
 1376 006e 0520     		movs	r0, #5
 1377 0070 FFF7FEBF 		b	usb_event_queue_enqueue.isra.0
 1378              	.LVL74:
 1379              	.L79:
 1380              		.cfi_restore_state
 487:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 1381              		.loc 1 487 13 is_stmt 1 view .LVU399
 1382 0074 0420     		movs	r0, #4
 1383              	.LVL75:
 487:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 1384              		.loc 1 487 13 is_stmt 0 view .LVU400
 1385 0076 FFF7FEFF 		bl	usb_event_queue_enqueue.isra.0
 1386              	.LVL76:
 1387              	.L80:
 1388              	.LBB474:
 492:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1389              		.loc 1 492 31 is_stmt 1 discriminator 1 view .LVU401
 493:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 1390              		.loc 1 493 17 discriminator 1 view .LVU402
 1391              	.LBB475:
 1392              	.LBI475:
 395:./lib/chibios/os/rt/include/chsys.h **** 
 1393              		.loc 3 395 20 discriminator 1 view .LVU403
 397:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1394              		.loc 3 397 3 discriminator 1 view .LVU404
 1395              	.LBB476:
 1396              	.LBI476:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1397              		.loc 4 708 27 discriminator 1 view .LVU405
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1398              		.loc 4 710 3 discriminator 1 view .LVU406
 1399              	.LBB477:
 1400              	.LBI477:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1401              		.loc 4 669 27 discriminator 1 view .LVU407
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1402              		.loc 4 677 3 discriminator 1 view .LVU408
 1403              	.LBB478:
 1404              	.LBI478:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1405              		.loc 5 491 27 discriminator 1 view .LVU409
 1406              	.LBB479:
 1407              		.loc 5 493 3 discriminator 1 view .LVU410
 1408 007a 2023     		movs	r3, #32
 1409              		.syntax unified
 1410              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1411 007c 83F31188 		MSR basepri, r3
 1412              	@ 0 "" 2
 1413              	.LVL77:
 1414              		.loc 5 493 3 is_stmt 0 discriminator 1 view .LVU411
 1415              		.thumb
 1416              		.syntax unified
 1417              	.LBE479:
 1418              	.LBE478:
 1419              	.LBE477:
 1420              	.LBE476:
 398:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1421              		.loc 3 398 34 is_stmt 1 discriminator 1 view .LVU412
 399:./lib/chibios/os/rt/include/chsys.h **** }
 1422              		.loc 3 399 29 discriminator 1 view .LVU413
 1423              	.LBE475:
 495:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 1424              		.loc 1 495 17 discriminator 1 view .LVU414
 1425 0080 0B48     		ldr	r0, .L92+12
 1426 0082 FFF7FEFF 		bl	qmkusbSuspendHookI
 1427              	.LVL78:
 496:tmk_core/protocol/chibios/usb_main.c ****             }
 1428              		.loc 1 496 17 discriminator 1 view .LVU415
 1429              	.LBB480:
 1430              	.LBI480:
 415:./lib/chibios/os/rt/include/chsys.h **** 
 1431              		.loc 3 415 20 discriminator 1 view .LVU416
 417:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1432              		.loc 3 417 31 discriminator 1 view .LVU417
 418:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1433              		.loc 3 418 33 discriminator 1 view .LVU418
 1434              		.loc 3 419 3 discriminator 1 view .LVU419
 1435              	.LBB481:
 1436              	.LBI481:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1437              		.loc 4 719 27 discriminator 1 view .LVU420
 1438              		.loc 4 721 3 discriminator 1 view .LVU421
 1439              	.LBB482:
 1440              	.LBI482:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1441              		.loc 4 693 27 discriminator 1 view .LVU422
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1442              		.loc 4 696 3 discriminator 1 view .LVU423
 1443              	.LBB483:
 1444              	.LBI483:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1445              		.loc 5 491 27 discriminator 1 view .LVU424
 1446              	.LBB484:
 1447              		.loc 5 493 3 discriminator 1 view .LVU425
 1448 0086 0023     		movs	r3, #0
 1449              		.syntax unified
 1450              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1451 0088 83F31188 		MSR basepri, r3
 1452              	@ 0 "" 2
 1453              	.LVL79:
 1454              		.loc 5 493 3 is_stmt 0 discriminator 1 view .LVU426
 1455              		.thumb
 1456              		.syntax unified
 1457              	.LBE484:
 1458              	.LBE483:
 1459              	.LBE482:
 1460              	.LBE481:
 1461              	.LBE480:
 492:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1462              		.loc 1 492 51 is_stmt 1 discriminator 1 view .LVU427
 492:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1463              		.loc 1 492 31 discriminator 1 view .LVU428
 1464              	.L75:
 492:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1465              		.loc 1 492 31 is_stmt 0 discriminator 1 view .LVU429
 1466              	.LBE474:
 514:tmk_core/protocol/chibios/usb_main.c **** 
 1467              		.loc 1 514 1 view .LVU430
 1468 008c 38BD     		pop	{r3, r4, r5, pc}
 1469              	.LVL80:
 1470              	.L77:
 1471              	.LBB485:
 502:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1472              		.loc 1 502 31 is_stmt 1 discriminator 1 view .LVU431
 503:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 1473              		.loc 1 503 17 discriminator 1 view .LVU432
 1474              	.LBB464:
 1475              	.LBI464:
 395:./lib/chibios/os/rt/include/chsys.h **** 
 1476              		.loc 3 395 20 discriminator 1 view .LVU433
 397:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1477              		.loc 3 397 3 discriminator 1 view .LVU434
 1478              	.LBB465:
 1479              	.LBI465:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1480              		.loc 4 708 27 discriminator 1 view .LVU435
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1481              		.loc 4 710 3 discriminator 1 view .LVU436
 1482              	.LBB466:
 1483              	.LBI466:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1484              		.loc 4 669 27 discriminator 1 view .LVU437
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1485              		.loc 4 677 3 discriminator 1 view .LVU438
 1486              	.LBB467:
 1487              	.LBI467:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1488              		.loc 5 491 27 discriminator 1 view .LVU439
 1489              	.LBB468:
 1490              		.loc 5 493 3 discriminator 1 view .LVU440
 1491 008e 2023     		movs	r3, #32
 1492              		.syntax unified
 1493              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1494 0090 83F31188 		MSR basepri, r3
 1495              	@ 0 "" 2
 1496              	.LVL81:
 1497              		.loc 5 493 3 is_stmt 0 discriminator 1 view .LVU441
 1498              		.thumb
 1499              		.syntax unified
 1500              	.LBE468:
 1501              	.LBE467:
 1502              	.LBE466:
 1503              	.LBE465:
 398:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1504              		.loc 3 398 34 is_stmt 1 discriminator 1 view .LVU442
 399:./lib/chibios/os/rt/include/chsys.h **** }
 1505              		.loc 3 399 29 discriminator 1 view .LVU443
 1506              	.LBE464:
 505:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 1507              		.loc 1 505 17 discriminator 1 view .LVU444
 1508 0094 0648     		ldr	r0, .L92+12
 1509              	.LVL82:
 505:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 1510              		.loc 1 505 17 is_stmt 0 discriminator 1 view .LVU445
 1511 0096 FFF7FEFF 		bl	qmkusbWakeupHookI
 1512              	.LVL83:
 506:tmk_core/protocol/chibios/usb_main.c ****             }
 1513              		.loc 1 506 17 is_stmt 1 discriminator 1 view .LVU446
 1514              	.LBB469:
 1515              	.LBI469:
 415:./lib/chibios/os/rt/include/chsys.h **** 
 1516              		.loc 3 415 20 discriminator 1 view .LVU447
 417:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1517              		.loc 3 417 31 discriminator 1 view .LVU448
 418:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1518              		.loc 3 418 33 discriminator 1 view .LVU449
 1519              		.loc 3 419 3 discriminator 1 view .LVU450
 1520              	.LBB470:
 1521              	.LBI470:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1522              		.loc 4 719 27 discriminator 1 view .LVU451
 1523              		.loc 4 721 3 discriminator 1 view .LVU452
 1524              	.LBB471:
 1525              	.LBI471:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1526              		.loc 4 693 27 discriminator 1 view .LVU453
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1527              		.loc 4 696 3 discriminator 1 view .LVU454
 1528              	.LBB472:
 1529              	.LBI472:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1530              		.loc 5 491 27 discriminator 1 view .LVU455
 1531              	.LBB473:
 1532              		.loc 5 493 3 discriminator 1 view .LVU456
 1533 009a 0023     		movs	r3, #0
 1534              		.syntax unified
 1535              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1536 009c 83F31188 		MSR basepri, r3
 1537              	@ 0 "" 2
 1538              		.thumb
 1539              		.syntax unified
 1540 00a0 E3E7     		b	.L91
 1541              	.L93:
 1542 00a2 00BF     		.align	2
 1543              	.L92:
 1544 00a4 00000000 		.word	drivers
 1545 00a8 00000000 		.word	kbd_ep_config
 1546 00ac 00000000 		.word	shared_ep_config
 1547 00b0 D4000000 		.word	drivers+212
 1548 00b4 00000000 		.word	last_suspend_state
 1549              	.LBE473:
 1550              	.LBE472:
 1551              	.LBE471:
 1552              	.LBE470:
 1553              	.LBE469:
 1554              	.LBE485:
 1555              		.cfi_endproc
 1556              	.LFE292:
 1558              		.section	.text.shared_in_cb,"ax",%progbits
 1559              		.align	1
 1560              		.global	shared_in_cb
 1561              		.syntax unified
 1562              		.thumb
 1563              		.thumb_func
 1565              	shared_in_cb:
 1566              	.LFB317:
 1567              		.cfi_startproc
 904:tmk_core/protocol/chibios/usb_main.c ****     /* STUB */
 1568              		.loc 1 904 6 view -0
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 1571              		@ link register save eliminated.
 1572 0000 7047     		bx	lr
 1573              		.cfi_endproc
 1574              	.LFE317:
 1576              		.section	.text.usb_event_queue_init,"ax",%progbits
 1577              		.align	1
 1578              		.global	usb_event_queue_init
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1583              	usb_event_queue_init:
 1584              	.LFB286:
 388:tmk_core/protocol/chibios/usb_main.c ****     // Initialise the event queue
 1585              		.loc 1 388 33 view -0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 390:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head = 0;
 1589              		.loc 1 390 5 view .LVU459
 388:tmk_core/protocol/chibios/usb_main.c ****     // Initialise the event queue
 1590              		.loc 1 388 33 is_stmt 0 view .LVU460
 1591 0000 08B5     		push	{r3, lr}
 1592              		.cfi_def_cfa_offset 8
 1593              		.cfi_offset 3, -8
 1594              		.cfi_offset 14, -4
 390:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head = 0;
 1595              		.loc 1 390 5 view .LVU461
 1596 0002 1022     		movs	r2, #16
 1597 0004 0448     		ldr	r0, .L96
 1598 0006 0021     		movs	r1, #0
 1599 0008 FFF7FEFF 		bl	memset
 1600              	.LVL84:
 391:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = 0;
 1601              		.loc 1 391 5 is_stmt 1 view .LVU462
 391:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = 0;
 1602              		.loc 1 391 22 is_stmt 0 view .LVU463
 1603 000c 034A     		ldr	r2, .L96+4
 1604 000e 0023     		movs	r3, #0
 1605 0010 1370     		strb	r3, [r2]
 392:tmk_core/protocol/chibios/usb_main.c **** }
 1606              		.loc 1 392 5 is_stmt 1 view .LVU464
 392:tmk_core/protocol/chibios/usb_main.c **** }
 1607              		.loc 1 392 22 is_stmt 0 view .LVU465
 1608 0012 034A     		ldr	r2, .L96+8
 1609 0014 1370     		strb	r3, [r2]
 393:tmk_core/protocol/chibios/usb_main.c **** 
 1610              		.loc 1 393 1 view .LVU466
 1611 0016 08BD     		pop	{r3, pc}
 1612              	.L97:
 1613              		.align	2
 1614              	.L96:
 1615 0018 00000000 		.word	event_queue
 1616 001c 00000000 		.word	event_queue_head
 1617 0020 00000000 		.word	event_queue_tail
 1618              		.cfi_endproc
 1619              	.LFE286:
 1621              		.section	.text.usb_event_queue_task,"ax",%progbits
 1622              		.align	1
 1623              		.global	usb_event_queue_task
 1624              		.syntax unified
 1625              		.thumb
 1626              		.thumb_func
 1628              	usb_event_queue_task:
 1629              	.LFB291:
 431:tmk_core/protocol/chibios/usb_main.c ****     usbevent_t event;
 1630              		.loc 1 431 33 is_stmt 1 view -0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 432:tmk_core/protocol/chibios/usb_main.c ****     while (usb_event_queue_dequeue(&event)) {
 1634              		.loc 1 432 5 view .LVU468
 433:tmk_core/protocol/chibios/usb_main.c ****         switch (event) {
 1635              		.loc 1 433 5 view .LVU469
 431:tmk_core/protocol/chibios/usb_main.c ****     usbevent_t event;
 1636              		.loc 1 431 33 is_stmt 0 view .LVU470
 1637 0000 70B5     		push	{r4, r5, r6, lr}
 1638              		.cfi_def_cfa_offset 16
 1639              		.cfi_offset 4, -16
 1640              		.cfi_offset 5, -12
 1641              		.cfi_offset 6, -8
 1642              		.cfi_offset 14, -4
 1643              	.LBB492:
 1644              	.LBB493:
 406:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1645              		.loc 1 406 26 view .LVU471
 1646 0002 104D     		ldr	r5, .L109
 1647 0004 104C     		ldr	r4, .L109+4
 1648              	.L99:
 1649 0006 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1650 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 409:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = (event_queue_tail + 1) % USB_EVENT_QUEUE_SIZE;
 1651              		.loc 1 409 35 view .LVU472
 1652 000a 104E     		ldr	r6, .L109+8
 406:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1653              		.loc 1 406 26 view .LVU473
 1654 000c 0022     		movs	r2, #0
 1655              	.L105:
 1656              	.LBE493:
 1657              	.LBE492:
 433:tmk_core/protocol/chibios/usb_main.c ****         switch (event) {
 1658              		.loc 1 433 12 is_stmt 1 view .LVU474
 1659              	.LVL85:
 1660              	.LBB497:
 1661              	.LBI492:
 405:tmk_core/protocol/chibios/usb_main.c ****     if (event_queue_head == event_queue_tail) {
 1662              		.loc 1 405 20 view .LVU475
 1663              	.LBB494:
 406:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1664              		.loc 1 406 5 view .LVU476
 406:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1665              		.loc 1 406 8 is_stmt 0 view .LVU477
 1666 000e 9942     		cmp	r1, r3
 1667 0010 07D1     		bne	.L101
 1668 0012 02B1     		cbz	r2, .L98
 1669 0014 2170     		strb	r1, [r4]
 1670              	.LVL86:
 1671              	.L98:
 406:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1672              		.loc 1 406 8 view .LVU478
 1673              	.LBE494:
 1674              	.LBE497:
 448:tmk_core/protocol/chibios/usb_main.c **** 
 1675              		.loc 1 448 1 view .LVU479
 1676 0016 70BD     		pop	{r4, r5, r6, pc}
 1677              	.LVL87:
 1678              	.L103:
 448:tmk_core/protocol/chibios/usb_main.c **** 
 1679              		.loc 1 448 1 view .LVU480
 1680 0018 2370     		strb	r3, [r4]
 436:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_suspend_handler();
 1681              		.loc 1 436 17 is_stmt 1 view .LVU481
 436:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_suspend_handler();
 1682              		.loc 1 436 36 is_stmt 0 view .LVU482
 1683 001a 0D4B     		ldr	r3, .L109+12
 1684 001c 0122     		movs	r2, #1
 1685 001e 1A70     		strb	r2, [r3]
 437:tmk_core/protocol/chibios/usb_main.c ****                 break;
 1686              		.loc 1 437 17 is_stmt 1 view .LVU483
 1687              	.LBB498:
 1688              	.LBI498:
 414:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 1689              		.loc 1 414 20 view .LVU484
 1690              	.LBB499:
 418:tmk_core/protocol/chibios/usb_main.c **** 
 1691              		.loc 1 418 1 view .LVU485
 1692 0020 F1E7     		b	.L99
 1693              	.LVL88:
 1694              	.L101:
 418:tmk_core/protocol/chibios/usb_main.c **** 
 1695              		.loc 1 418 1 is_stmt 0 view .LVU486
 1696              	.LBE499:
 1697              	.LBE498:
 1698              	.LBB500:
 1699              	.LBB495:
 409:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = (event_queue_tail + 1) % USB_EVENT_QUEUE_SIZE;
 1700              		.loc 1 409 5 is_stmt 1 view .LVU487
 409:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = (event_queue_tail + 1) % USB_EVENT_QUEUE_SIZE;
 1701              		.loc 1 409 35 is_stmt 0 view .LVU488
 1702 0022 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1703              	.LVL89:
 410:tmk_core/protocol/chibios/usb_main.c ****     return true;
 1704              		.loc 1 410 5 is_stmt 1 view .LVU489
 410:tmk_core/protocol/chibios/usb_main.c ****     return true;
 1705              		.loc 1 410 42 is_stmt 0 view .LVU490
 1706 0024 0133     		adds	r3, r3, #1
 1707              	.LBE495:
 1708              	.LBE500:
 434:tmk_core/protocol/chibios/usb_main.c ****             case USB_EVENT_SUSPEND:
 1709              		.loc 1 434 9 view .LVU491
 1710 0026 0428     		cmp	r0, #4
 1711              	.LBB501:
 1712              	.LBB496:
 410:tmk_core/protocol/chibios/usb_main.c ****     return true;
 1713              		.loc 1 410 22 view .LVU492
 1714 0028 03F00F03 		and	r3, r3, #15
 411:tmk_core/protocol/chibios/usb_main.c **** }
 1715              		.loc 1 411 5 is_stmt 1 view .LVU493
 1716              	.LVL90:
 411:tmk_core/protocol/chibios/usb_main.c **** }
 1717              		.loc 1 411 5 is_stmt 0 view .LVU494
 1718              	.LBE496:
 1719              	.LBE501:
 434:tmk_core/protocol/chibios/usb_main.c ****             case USB_EVENT_SUSPEND:
 1720              		.loc 1 434 9 is_stmt 1 view .LVU495
 1721 002c F4D0     		beq	.L103
 1722 002e 0528     		cmp	r0, #5
 1723 0030 4FF00102 		mov	r2, #1
 1724 0034 EBD1     		bne	.L105
 1725 0036 2370     		strb	r3, [r4]
 440:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_wakeup_handler();
 1726              		.loc 1 440 17 view .LVU496
 440:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_wakeup_handler();
 1727              		.loc 1 440 36 is_stmt 0 view .LVU497
 1728 0038 054B     		ldr	r3, .L109+12
 1729 003a 0022     		movs	r2, #0
 1730 003c 1A70     		strb	r2, [r3]
 441:tmk_core/protocol/chibios/usb_main.c ****                 break;
 1731              		.loc 1 441 17 is_stmt 1 view .LVU498
 1732              	.LBB502:
 1733              	.LBI502:
 420:tmk_core/protocol/chibios/usb_main.c ****     suspend_wakeup_init();
 1734              		.loc 1 420 20 view .LVU499
 1735              	.LBB503:
 421:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 1736              		.loc 1 421 5 view .LVU500
 1737 003e FFF7FEFF 		bl	suspend_wakeup_init
 1738              	.LVL91:
 427:tmk_core/protocol/chibios/usb_main.c **** 
 1739              		.loc 1 427 1 is_stmt 0 view .LVU501
 1740 0042 E0E7     		b	.L99
 1741              	.L110:
 1742              		.align	2
 1743              	.L109:
 1744 0044 00000000 		.word	event_queue_head
 1745 0048 00000000 		.word	event_queue_tail
 1746 004c 00000000 		.word	event_queue
 1747 0050 00000000 		.word	last_suspend_state
 1748              	.LBE503:
 1749              	.LBE502:
 1750              		.cfi_endproc
 1751              	.LFE291:
 1753              		.section	.text.init_usb_driver,"ax",%progbits
 1754              		.align	1
 1755              		.global	init_usb_driver
 1756              		.syntax unified
 1757              		.thumb
 1758              		.thumb_func
 1760              	init_usb_driver:
 1761              	.LVL92:
 1762              	.LFB297:
 694:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 1763              		.loc 1 694 39 is_stmt 1 view -0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 0
 1766              		@ frame_needed = 0, uses_anonymous_args = 0
 695:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1767              		.loc 1 695 5 view .LVU503
 1768              	.LBB504:
 695:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1769              		.loc 1 695 10 view .LVU504
 695:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1770              		.loc 1 695 23 view .LVU505
 1771              	.LBB505:
 704:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].in_ep_config.in_state   = &drivers.array[i].in_ep_state;
 1772              		.loc 1 704 9 view .LVU506
 705:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 1773              		.loc 1 705 9 view .LVU507
 1774              	.LBE505:
 1775              	.LBE504:
 694:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 1776              		.loc 1 694 39 is_stmt 0 view .LVU508
 1777 0000 70B5     		push	{r4, r5, r6, lr}
 1778              		.cfi_def_cfa_offset 16
 1779              		.cfi_offset 4, -16
 1780              		.cfi_offset 5, -12
 1781              		.cfi_offset 6, -8
 1782              		.cfi_offset 14, -4
 1783              	.LBB509:
 1784              	.LBB506:
 705:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 1785              		.loc 1 705 50 view .LVU509
 1786 0002 1B4C     		ldr	r4, .L112
 1787 0004 04F10802 		add	r2, r4, #8
 1788 0008 A265     		str	r2, [r4, #88]
 706:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 1789              		.loc 1 706 9 is_stmt 1 view .LVU510
 706:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 1790              		.loc 1 706 50 is_stmt 0 view .LVU511
 1791 000a 04F11C02 		add	r2, r4, #28
 1792 000e C4F88020 		str	r2, [r4, #128]
 707:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 1793              		.loc 1 707 9 is_stmt 1 view .LVU512
 707:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 1794              		.loc 1 707 50 is_stmt 0 view .LVU513
 1795 0012 04F13002 		add	r2, r4, #48
 1796 0016 C4F8A020 		str	r2, [r4, #160]
 708:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 1797              		.loc 1 708 9 is_stmt 1 view .LVU514
 1798 001a 04F1B006 		add	r6, r4, #176
 1799 001e D434     		adds	r4, r4, #212
 1800 0020 3146     		mov	r1, r6
 1801              	.LBE506:
 1802              	.LBE509:
 694:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 1803              		.loc 1 694 39 is_stmt 0 view .LVU515
 1804 0022 0546     		mov	r5, r0
 1805              	.LBB510:
 1806              	.LBB507:
 708:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 1807              		.loc 1 708 9 view .LVU516
 1808 0024 2046     		mov	r0, r4
 1809              	.LVL93:
 708:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 1810              		.loc 1 708 9 view .LVU517
 1811 0026 FFF7FEFF 		bl	qmkusbObjectInit
 1812              	.LVL94:
 709:tmk_core/protocol/chibios/usb_main.c **** #endif
 1813              		.loc 1 709 9 is_stmt 1 view .LVU518
 1814 002a 3146     		mov	r1, r6
 1815 002c 2046     		mov	r0, r4
 1816              	.LBE507:
 1817              	.LBE510:
 718:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1818              		.loc 1 718 5 is_stmt 0 view .LVU519
 1819 002e 4FF09044 		mov	r4, #1207959552
 1820              	.LBB511:
 1821              	.LBB508:
 709:tmk_core/protocol/chibios/usb_main.c **** #endif
 1822              		.loc 1 709 9 view .LVU520
 1823 0032 FFF7FEFF 		bl	qmkusbStart
 1824              	.LVL95:
 1825              	.LBE508:
 695:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1826              		.loc 1 695 43 is_stmt 1 view .LVU521
 695:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1827              		.loc 1 695 23 view .LVU522
 1828              	.LBE511:
 718:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1829              		.loc 1 718 5 view .LVU523
 718:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1830              		.loc 1 718 5 view .LVU524
 1831 0036 4FF48056 		mov	r6, #4096
 1832 003a 0122     		movs	r2, #1
 1833 003c 4FF48051 		mov	r1, #4096
 1834 0040 4FF09040 		mov	r0, #1207959552
 1835 0044 FFF7FEFF 		bl	_pal_lld_setgroupmode
 1836              	.LVL96:
 718:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1837              		.loc 1 718 5 view .LVU525
 719:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1838              		.loc 1 719 5 is_stmt 0 view .LVU526
 1839 0048 43F69820 		movw	r0, #15000
 718:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1840              		.loc 1 718 5 view .LVU527
 1841 004c 6683     		strh	r6, [r4, #26]	@ movhi
 718:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1842              		.loc 1 718 5 is_stmt 1 view .LVU528
 719:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1843              		.loc 1 719 5 view .LVU529
 719:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1844              		.loc 1 719 5 view .LVU530
 719:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1845              		.loc 1 719 5 view .LVU531
 1846 004e FFF7FEFF 		bl	chThdSleep
 1847              	.LVL97:
 719:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1848              		.loc 1 719 5 view .LVU532
 720:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 1849              		.loc 1 720 5 view .LVU533
 1850 0052 0849     		ldr	r1, .L112+4
 1851 0054 2846     		mov	r0, r5
 1852 0056 FFF7FEFF 		bl	usbStart
 1853              	.LVL98:
 721:tmk_core/protocol/chibios/usb_main.c **** 
 1854              		.loc 1 721 5 view .LVU534
 721:tmk_core/protocol/chibios/usb_main.c **** 
 1855              		.loc 1 721 5 view .LVU535
 1856 005a 40F20272 		movw	r2, #1794
 1857 005e 3146     		mov	r1, r6
 1858 0060 2046     		mov	r0, r4
 1859 0062 FFF7FEFF 		bl	_pal_lld_setgroupmode
 1860              	.LVL99:
 721:tmk_core/protocol/chibios/usb_main.c **** 
 1861              		.loc 1 721 5 view .LVU536
 723:tmk_core/protocol/chibios/usb_main.c **** }
 1862              		.loc 1 723 5 view .LVU537
 1863              	.LBB512:
 1864              	.LBI512:
  98:./lib/chibios/os/rt/include/chvt.h **** 
 1865              		.loc 6 98 20 view .LVU538
 1866              	.LBB513:
 100:./lib/chibios/os/rt/include/chvt.h **** }
 1867              		.loc 6 100 3 view .LVU539
 100:./lib/chibios/os/rt/include/chvt.h **** }
 1868              		.loc 6 100 13 is_stmt 0 view .LVU540
 1869 0066 044B     		ldr	r3, .L112+8
 1870 0068 0022     		movs	r2, #0
 1871 006a DA60     		str	r2, [r3, #12]
 1872              	.LVL100:
 100:./lib/chibios/os/rt/include/chvt.h **** }
 1873              		.loc 6 100 13 view .LVU541
 1874              	.LBE513:
 1875              	.LBE512:
 724:tmk_core/protocol/chibios/usb_main.c **** 
 1876              		.loc 1 724 1 view .LVU542
 1877 006c 70BD     		pop	{r4, r5, r6, pc}
 1878              	.LVL101:
 1879              	.L113:
 724:tmk_core/protocol/chibios/usb_main.c **** 
 1880              		.loc 1 724 1 view .LVU543
 1881 006e 00BF     		.align	2
 1882              	.L112:
 1883 0070 00000000 		.word	drivers
 1884 0074 00000000 		.word	usbcfg
 1885 0078 00000000 		.word	keyboard_idle_timer
 1886              		.cfi_endproc
 1887              	.LFE297:
 1889              		.section	.text.restart_usb_driver,"ax",%progbits
 1890              		.align	1
 1891              		.weak	restart_usb_driver
 1892              		.syntax unified
 1893              		.thumb
 1894              		.thumb_func
 1896              	restart_usb_driver:
 1897              	.LVL102:
 1898              	.LFB298:
 726:tmk_core/protocol/chibios/usb_main.c ****     usbStop(usbp);
 1899              		.loc 1 726 64 is_stmt 1 view -0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 0
 1902              		@ frame_needed = 0, uses_anonymous_args = 0
 727:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 1903              		.loc 1 727 5 view .LVU545
 726:tmk_core/protocol/chibios/usb_main.c ****     usbStop(usbp);
 1904              		.loc 1 726 64 is_stmt 0 view .LVU546
 1905 0000 70B5     		push	{r4, r5, r6, lr}
 1906              		.cfi_def_cfa_offset 16
 1907              		.cfi_offset 4, -16
 1908              		.cfi_offset 5, -12
 1909              		.cfi_offset 6, -8
 1910              		.cfi_offset 14, -4
 728:tmk_core/protocol/chibios/usb_main.c **** 
 1911              		.loc 1 728 5 view .LVU547
 1912 0002 4FF09045 		mov	r5, #1207959552
 726:tmk_core/protocol/chibios/usb_main.c ****     usbStop(usbp);
 1913              		.loc 1 726 64 view .LVU548
 1914 0006 0446     		mov	r4, r0
 728:tmk_core/protocol/chibios/usb_main.c **** 
 1915              		.loc 1 728 5 view .LVU549
 1916 0008 4FF48056 		mov	r6, #4096
 727:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 1917              		.loc 1 727 5 view .LVU550
 1918 000c FFF7FEFF 		bl	usbStop
 1919              	.LVL103:
 728:tmk_core/protocol/chibios/usb_main.c **** 
 1920              		.loc 1 728 5 is_stmt 1 view .LVU551
 728:tmk_core/protocol/chibios/usb_main.c **** 
 1921              		.loc 1 728 5 view .LVU552
 1922 0010 0122     		movs	r2, #1
 1923 0012 4FF48051 		mov	r1, #4096
 1924 0016 4FF09040 		mov	r0, #1207959552
 1925 001a FFF7FEFF 		bl	_pal_lld_setgroupmode
 1926              	.LVL104:
 728:tmk_core/protocol/chibios/usb_main.c **** 
 1927              		.loc 1 728 5 view .LVU553
 740:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 1928              		.loc 1 740 5 is_stmt 0 view .LVU554
 1929 001e 2046     		mov	r0, r4
 1930 0020 0549     		ldr	r1, .L115
 728:tmk_core/protocol/chibios/usb_main.c **** 
 1931              		.loc 1 728 5 view .LVU555
 1932 0022 6E83     		strh	r6, [r5, #26]	@ movhi
 728:tmk_core/protocol/chibios/usb_main.c **** 
 1933              		.loc 1 728 5 is_stmt 1 view .LVU556
 740:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 1934              		.loc 1 740 5 view .LVU557
 1935 0024 FFF7FEFF 		bl	usbStart
 1936              	.LVL105:
 741:tmk_core/protocol/chibios/usb_main.c **** }
 1937              		.loc 1 741 5 view .LVU558
 741:tmk_core/protocol/chibios/usb_main.c **** }
 1938              		.loc 1 741 5 view .LVU559
 1939 0028 3146     		mov	r1, r6
 1940 002a 2846     		mov	r0, r5
 1941 002c 40F20272 		movw	r2, #1794
 742:tmk_core/protocol/chibios/usb_main.c **** 
 1942              		.loc 1 742 1 is_stmt 0 view .LVU560
 1943 0030 BDE87040 		pop	{r4, r5, r6, lr}
 1944              		.cfi_restore 14
 1945              		.cfi_restore 6
 1946              		.cfi_restore 5
 1947              		.cfi_restore 4
 1948              		.cfi_def_cfa_offset 0
 1949              	.LVL106:
 741:tmk_core/protocol/chibios/usb_main.c **** }
 1950              		.loc 1 741 5 view .LVU561
 1951 0034 FFF7FEBF 		b	_pal_lld_setgroupmode
 1952              	.LVL107:
 1953              	.L116:
 1954              		.align	2
 1955              	.L115:
 1956 0038 00000000 		.word	usbcfg
 1957              		.cfi_endproc
 1958              	.LFE298:
 1960              		.section	.text.kbd_sof_cb,"ax",%progbits
 1961              		.align	1
 1962              		.global	kbd_sof_cb
 1963              		.syntax unified
 1964              		.thumb
 1965              		.thumb_func
 1967              	kbd_sof_cb:
 1968              	.LVL108:
 1969              	.LFB300:
 760:tmk_core/protocol/chibios/usb_main.c **** 
 1970              		.loc 1 760 34 is_stmt 1 view -0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 0, uses_anonymous_args = 0
 1974              		@ link register save eliminated.
 760:tmk_core/protocol/chibios/usb_main.c **** 
 1975              		.loc 1 760 36 view .LVU563
 760:tmk_core/protocol/chibios/usb_main.c **** 
 1976              		.loc 1 760 48 is_stmt 0 view .LVU564
 1977 0000 7047     		bx	lr
 1978              		.cfi_endproc
 1979              	.LFE300:
 1981              		.section	.text.keyboard_leds,"ax",%progbits
 1982              		.align	1
 1983              		.global	keyboard_leds
 1984              		.syntax unified
 1985              		.thumb
 1986              		.thumb_func
 1988              	keyboard_leds:
 1989              	.LFB302:
 795:tmk_core/protocol/chibios/usb_main.c **** 
 1990              		.loc 1 795 29 is_stmt 1 view -0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 0
 1993              		@ frame_needed = 0, uses_anonymous_args = 0
 1994              		@ link register save eliminated.
 795:tmk_core/protocol/chibios/usb_main.c **** 
 1995              		.loc 1 795 31 view .LVU566
 795:tmk_core/protocol/chibios/usb_main.c **** 
 1996              		.loc 1 795 58 is_stmt 0 view .LVU567
 1997 0000 014B     		ldr	r3, .L119
 1998 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1999 0004 7047     		bx	lr
 2000              	.L120:
 2001 0006 00BF     		.align	2
 2002              	.L119:
 2003 0008 00000000 		.word	keyboard_led_state
 2004              		.cfi_endproc
 2005              	.LFE302:
 2007              		.section	.text.send_keyboard,"ax",%progbits
 2008              		.align	1
 2009              		.global	send_keyboard
 2010              		.syntax unified
 2011              		.thumb
 2012              		.thumb_func
 2014              	send_keyboard:
 2015              	.LVL109:
 2016              	.LFB303:
 799:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2017              		.loc 1 799 47 is_stmt 1 view -0
 2018              		.cfi_startproc
 2019              		@ args = 0, pretend = 0, frame = 0
 2020              		@ frame_needed = 0, uses_anonymous_args = 0
 800:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 2021              		.loc 1 800 5 view .LVU569
 2022              	.LBB530:
 2023              	.LBI530:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2024              		.loc 2 573 20 view .LVU570
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2025              		.loc 2 575 3 view .LVU571
 2026              	.LBB531:
 2027              	.LBI531:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 2028              		.loc 3 355 20 view .LVU572
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2029              		.loc 3 357 3 view .LVU573
 2030              	.LBB532:
 2031              	.LBI532:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2032              		.loc 4 669 27 view .LVU574
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2033              		.loc 4 677 3 view .LVU575
 2034              	.LBB533:
 2035              	.LBI533:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2036              		.loc 5 491 27 view .LVU576
 2037              	.LBB534:
 2038              		.loc 5 493 3 view .LVU577
 2039              	.LBE534:
 2040              	.LBE533:
 2041              	.LBE532:
 2042              	.LBE531:
 2043              	.LBE530:
 799:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2044              		.loc 1 799 47 is_stmt 0 view .LVU578
 2045 0000 38B5     		push	{r3, r4, r5, lr}
 2046              		.cfi_def_cfa_offset 16
 2047              		.cfi_offset 3, -16
 2048              		.cfi_offset 4, -12
 2049              		.cfi_offset 5, -8
 2050              		.cfi_offset 14, -4
 799:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2051              		.loc 1 799 47 view .LVU579
 2052 0002 0446     		mov	r4, r0
 2053              	.LBB539:
 2054              	.LBB538:
 2055              	.LBB537:
 2056              	.LBB536:
 2057              	.LBB535:
 2058              		.loc 5 493 3 view .LVU580
 2059 0004 2023     		movs	r3, #32
 2060              		.syntax unified
 2061              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2062 0006 83F31188 		MSR basepri, r3
 2063              	@ 0 "" 2
 2064              	.LVL110:
 2065              		.loc 5 493 3 view .LVU581
 2066              		.thumb
 2067              		.syntax unified
 2068              	.LBE535:
 2069              	.LBE536:
 2070              	.LBE537:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2071              		.loc 3 358 34 is_stmt 1 view .LVU582
 359:./lib/chibios/os/rt/include/chsys.h **** }
 2072              		.loc 3 359 20 view .LVU583
 2073              	.LBE538:
 2074              	.LBE539:
 801:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 2075              		.loc 1 801 5 view .LVU584
 801:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 2076              		.loc 1 801 9 is_stmt 0 view .LVU585
 2077 000a 1F4D     		ldr	r5, .L140
 801:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 2078              		.loc 1 801 8 view .LVU586
 2079 000c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2080 000e 042B     		cmp	r3, #4
 2081 0010 25D1     		bne	.L123
 806:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 2082              		.loc 1 806 5 is_stmt 1 view .LVU587
 806:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 2083              		.loc 1 806 9 is_stmt 0 view .LVU588
 2084 0012 1E4A     		ldr	r2, .L140+4
 812:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2085              		.loc 1 812 13 view .LVU589
 2086 0014 2B89     		ldrh	r3, [r5, #8]
 806:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 2087              		.loc 1 806 8 view .LVU590
 2088 0016 92F90020 		ldrsb	r2, [r2]
 2089 001a 002A     		cmp	r2, #0
 2090 001c 23DA     		bge	.L124
 806:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 2091              		.loc 1 806 28 discriminator 1 view .LVU591
 2092 001e 1C4A     		ldr	r2, .L140+8
 2093 0020 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2094 0022 02B3     		cbz	r2, .L124
 812:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2095              		.loc 1 812 9 is_stmt 1 view .LVU592
 812:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2096              		.loc 1 812 12 is_stmt 0 view .LVU593
 2097 0024 5A07     		lsls	r2, r3, #29
 2098 0026 10D4     		bmi	.L125
 2099              	.LVL111:
 2100              	.L128:
 824:tmk_core/protocol/chibios/usb_main.c ****     } else
 2101              		.loc 1 824 9 is_stmt 1 view .LVU594
 2102 0028 2023     		movs	r3, #32
 2103 002a 2246     		mov	r2, r4
 2104 002c 0221     		movs	r1, #2
 2105              	.LVL112:
 2106              	.L139:
 2107              	.LBB540:
 850:tmk_core/protocol/chibios/usb_main.c ****     }
 2108              		.loc 1 850 9 is_stmt 0 view .LVU595
 2109 002e 1648     		ldr	r0, .L140
 2110 0030 FFF7FEFF 		bl	usbStartTransmitI
 2111              	.LVL113:
 850:tmk_core/protocol/chibios/usb_main.c ****     }
 2112              		.loc 1 850 9 view .LVU596
 2113              	.LBE540:
 852:tmk_core/protocol/chibios/usb_main.c **** 
 2114              		.loc 1 852 5 is_stmt 1 view .LVU597
 852:tmk_core/protocol/chibios/usb_main.c **** 
 2115              		.loc 1 852 26 is_stmt 0 view .LVU598
 2116 0034 174B     		ldr	r3, .L140+12
 2117 0036 2246     		mov	r2, r4
 2118 0038 04F12001 		add	r1, r4, #32
 2119              	.L133:
 2120 003c 52F8040B 		ldr	r0, [r2], #4	@ unaligned
 2121 0040 43F8040B 		str	r0, [r3], #4	@ unaligned
 2122 0044 8A42     		cmp	r2, r1
 2123 0046 F9D1     		bne	.L133
 2124 0048 09E0     		b	.L123
 2125              	.LVL114:
 2126              	.L125:
 817:tmk_core/protocol/chibios/usb_main.c **** 
 2127              		.loc 1 817 13 is_stmt 1 view .LVU599
 2128              	.LBB545:
 2129              	.LBI545:
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 761:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 762:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 763:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 764:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 765:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 766:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 767:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 768:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 769:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 770:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 771:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 772:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 774:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 775:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 776:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 777:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 778:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 779:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 780:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 781:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 782:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 783:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 784:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 785:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 786:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 787:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 788:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 789:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 790:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 791:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 792:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 793:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 794:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 795:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 796:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 797:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 2130              		.loc 2 797 21 view .LVU600
 2131              	.LBB546:
 798:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 799:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 2132              		.loc 2 799 3 view .LVU601
 2133              	.LBE546:
 2134              	.LBE545:
 817:tmk_core/protocol/chibios/usb_main.c **** 
 2135              		.loc 1 817 68 is_stmt 0 view .LVU602
 2136 004a 6B69     		ldr	r3, [r5, #20]
 817:tmk_core/protocol/chibios/usb_main.c **** 
 2137              		.loc 1 817 13 view .LVU603
 2138 004c 5869     		ldr	r0, [r3, #20]
 2139              	.LVL115:
 2140              	.LBB548:
 2141              	.LBB547:
 2142              		.loc 2 799 10 view .LVU604
 2143 004e 4FF0FF31 		mov	r1, #-1
 2144 0052 0C30     		adds	r0, r0, #12
 2145 0054 FFF7FEFF 		bl	chThdSuspendTimeoutS
 2146              	.LVL116:
 2147              		.loc 2 799 10 view .LVU605
 2148              	.LBE547:
 2149              	.LBE548:
 820:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2150              		.loc 1 820 13 is_stmt 1 view .LVU606
 820:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2151              		.loc 1 820 16 is_stmt 0 view .LVU607
 2152 0058 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2153 005a 042B     		cmp	r3, #4
 2154 005c E4D0     		beq	.L128
 2155              	.L123:
 855:tmk_core/protocol/chibios/usb_main.c **** }
 2156              		.loc 1 855 5 is_stmt 1 view .LVU608
 2157              	.LBB549:
 2158              	.LBI549:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2159              		.loc 2 584 20 view .LVU609
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2160              		.loc 2 586 3 view .LVU610
 2161              	.LBB550:
 2162              	.LBI550:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2163              		.loc 3 367 20 view .LVU611
 2164              	.LBB551:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2165              		.loc 3 369 22 view .LVU612
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2166              		.loc 3 370 33 view .LVU613
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2167              		.loc 3 376 3 view .LVU614
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2168              		.loc 3 376 3 view .LVU615
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2169              		.loc 3 376 3 view .LVU616
 380:./lib/chibios/os/rt/include/chsys.h **** }
 2170              		.loc 3 380 3 view .LVU617
 2171              	.LBB552:
 2172              	.LBI552:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2173              		.loc 4 693 27 view .LVU618
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 2174              		.loc 4 696 3 view .LVU619
 2175              	.LVL117:
 2176              	.LBB553:
 2177              	.LBI553:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2178              		.loc 5 491 27 view .LVU620
 2179              	.LBB554:
 2180              		.loc 5 493 3 view .LVU621
 2181 005e 0023     		movs	r3, #0
 2182              		.syntax unified
 2183              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2184 0060 83F31188 		MSR basepri, r3
 2185              	@ 0 "" 2
 2186              	.LVL118:
 2187              		.loc 5 493 3 is_stmt 0 view .LVU622
 2188              		.thumb
 2189              		.syntax unified
 2190              	.LBE554:
 2191              	.LBE553:
 2192              	.LBE552:
 2193              	.LBE551:
 2194              	.LBE550:
 2195              	.LBE549:
 856:tmk_core/protocol/chibios/usb_main.c **** 
 2196              		.loc 1 856 1 view .LVU623
 2197 0064 38BD     		pop	{r3, r4, r5, pc}
 2198              	.LVL119:
 2199              	.L124:
 2200              	.LBB555:
 830:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2201              		.loc 1 830 9 is_stmt 1 view .LVU624
 830:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2202              		.loc 1 830 12 is_stmt 0 view .LVU625
 2203 0066 9B07     		lsls	r3, r3, #30
 2204 0068 03D4     		bmi	.L129
 2205              	.LVL120:
 2206              	.L132:
 842:tmk_core/protocol/chibios/usb_main.c ****         if (keyboard_protocol) {
 2207              		.loc 1 842 9 is_stmt 1 view .LVU626
 843:tmk_core/protocol/chibios/usb_main.c ****             data = (uint8_t *)report;
 2208              		.loc 1 843 9 view .LVU627
 850:tmk_core/protocol/chibios/usb_main.c ****     }
 2209              		.loc 1 850 9 view .LVU628
 2210 006a 0823     		movs	r3, #8
 2211 006c 2246     		mov	r2, r4
 2212 006e 0121     		movs	r1, #1
 2213 0070 DDE7     		b	.L139
 2214              	.LVL121:
 2215              	.L129:
 835:tmk_core/protocol/chibios/usb_main.c **** 
 2216              		.loc 1 835 13 view .LVU629
 2217              	.LBB541:
 2218              	.LBI541:
 797:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2219              		.loc 2 797 21 view .LVU630
 2220              	.LBB542:
 2221              		.loc 2 799 3 view .LVU631
 2222              	.LBE542:
 2223              	.LBE541:
 835:tmk_core/protocol/chibios/usb_main.c **** 
 2224              		.loc 1 835 70 is_stmt 0 view .LVU632
 2225 0072 2B69     		ldr	r3, [r5, #16]
 835:tmk_core/protocol/chibios/usb_main.c **** 
 2226              		.loc 1 835 13 view .LVU633
 2227 0074 5869     		ldr	r0, [r3, #20]
 2228              	.LVL122:
 2229              	.LBB544:
 2230              	.LBB543:
 2231              		.loc 2 799 10 view .LVU634
 2232 0076 4FF0FF31 		mov	r1, #-1
 2233 007a 0C30     		adds	r0, r0, #12
 2234 007c FFF7FEFF 		bl	chThdSuspendTimeoutS
 2235              	.LVL123:
 2236              		.loc 2 799 10 view .LVU635
 2237              	.LBE543:
 2238              	.LBE544:
 838:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2239              		.loc 1 838 13 is_stmt 1 view .LVU636
 838:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2240              		.loc 1 838 16 is_stmt 0 view .LVU637
 2241 0080 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2242 0082 042B     		cmp	r3, #4
 2243 0084 EBD1     		bne	.L123
 2244 0086 F0E7     		b	.L132
 2245              	.L141:
 2246              		.align	2
 2247              	.L140:
 2248 0088 00000000 		.word	USBD1
 2249 008c 00000000 		.word	keymap_config
 2250 0090 00000000 		.word	keyboard_protocol
 2251 0094 00000000 		.word	keyboard_report_sent
 2252              	.LBE555:
 2253              		.cfi_endproc
 2254              	.LFE303:
 2256              		.section	.text.send_mouse,"ax",%progbits
 2257              		.align	1
 2258              		.global	send_mouse
 2259              		.syntax unified
 2260              		.thumb
 2261              		.thumb_func
 2263              	send_mouse:
 2264              	.LVL124:
 2265              	.LFB304:
 873:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2266              		.loc 1 873 41 is_stmt 1 view -0
 2267              		.cfi_startproc
 2268              		@ args = 0, pretend = 0, frame = 0
 2269              		@ frame_needed = 0, uses_anonymous_args = 0
 874:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 2270              		.loc 1 874 5 view .LVU639
 2271              	.LBB556:
 2272              	.LBI556:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2273              		.loc 2 573 20 view .LVU640
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2274              		.loc 2 575 3 view .LVU641
 2275              	.LBB557:
 2276              	.LBI557:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 2277              		.loc 3 355 20 view .LVU642
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2278              		.loc 3 357 3 view .LVU643
 2279              	.LBB558:
 2280              	.LBI558:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2281              		.loc 4 669 27 view .LVU644
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2282              		.loc 4 677 3 view .LVU645
 2283              	.LBB559:
 2284              	.LBI559:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2285              		.loc 5 491 27 view .LVU646
 2286              	.LBB560:
 2287              		.loc 5 493 3 view .LVU647
 2288              	.LBE560:
 2289              	.LBE559:
 2290              	.LBE558:
 2291              	.LBE557:
 2292              	.LBE556:
 873:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2293              		.loc 1 873 41 is_stmt 0 view .LVU648
 2294 0000 10B5     		push	{r4, lr}
 2295              		.cfi_def_cfa_offset 8
 2296              		.cfi_offset 4, -8
 2297              		.cfi_offset 14, -4
 2298              	.LBB569:
 2299              	.LBB567:
 2300              	.LBB565:
 2301              	.LBB563:
 2302              	.LBB561:
 2303              		.loc 5 493 3 view .LVU649
 2304 0002 2023     		movs	r3, #32
 2305              	.LBE561:
 2306              	.LBE563:
 2307              	.LBE565:
 2308              	.LBE567:
 2309              	.LBE569:
 873:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2310              		.loc 1 873 41 view .LVU650
 2311 0004 0446     		mov	r4, r0
 2312              	.LBB570:
 2313              	.LBB568:
 2314              	.LBB566:
 2315              	.LBB564:
 2316              	.LBB562:
 2317              		.loc 5 493 3 view .LVU651
 2318              		.syntax unified
 2319              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2320 0006 83F31188 		MSR basepri, r3
 2321              	@ 0 "" 2
 2322              	.LVL125:
 2323              		.loc 5 493 3 view .LVU652
 2324              		.thumb
 2325              		.syntax unified
 2326              	.LBE562:
 2327              	.LBE564:
 2328              	.LBE566:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2329              		.loc 3 358 34 is_stmt 1 view .LVU653
 359:./lib/chibios/os/rt/include/chsys.h **** }
 2330              		.loc 3 359 20 view .LVU654
 2331              	.LBE568:
 2332              	.LBE570:
 875:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2333              		.loc 1 875 5 view .LVU655
 875:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2334              		.loc 1 875 9 is_stmt 0 view .LVU656
 2335 000a 0D4B     		ldr	r3, .L150
 875:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2336              		.loc 1 875 8 view .LVU657
 2337 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2338 000e 042A     		cmp	r2, #4
 2339 0010 03D0     		beq	.L143
 2340              	.LVL126:
 2341              	.L149:
 891:tmk_core/protocol/chibios/usb_main.c **** }
 2342              		.loc 1 891 5 is_stmt 1 view .LVU658
 2343              	.LBB571:
 2344              	.LBI571:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2345              		.loc 2 584 20 view .LVU659
 2346              	.LBB572:
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2347              		.loc 2 586 3 view .LVU660
 2348              	.LBB573:
 2349              	.LBI573:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2350              		.loc 3 367 20 view .LVU661
 2351              	.LBB574:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2352              		.loc 3 369 22 view .LVU662
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2353              		.loc 3 370 33 view .LVU663
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2354              		.loc 3 376 3 view .LVU664
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2355              		.loc 3 376 3 view .LVU665
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2356              		.loc 3 376 3 view .LVU666
 380:./lib/chibios/os/rt/include/chsys.h **** }
 2357              		.loc 3 380 3 view .LVU667
 2358              	.LBB575:
 2359              	.LBI575:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2360              		.loc 4 693 27 view .LVU668
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 2361              		.loc 4 696 3 view .LVU669
 2362              	.LBB576:
 2363              	.LBI576:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2364              		.loc 5 491 27 view .LVU670
 2365              	.LBB577:
 2366              		.loc 5 493 3 view .LVU671
 2367 0012 0023     		movs	r3, #0
 2368              		.syntax unified
 2369              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2370 0014 83F31188 		MSR basepri, r3
 2371              	@ 0 "" 2
 2372              	.LVL127:
 2373              		.loc 5 493 3 is_stmt 0 view .LVU672
 2374              		.thumb
 2375              		.syntax unified
 2376              	.LBE577:
 2377              	.LBE576:
 2378              	.LBE575:
 2379              	.LBE574:
 2380              	.LBE573:
 2381              	.LBE572:
 2382              	.LBE571:
 892:tmk_core/protocol/chibios/usb_main.c **** 
 2383              		.loc 1 892 1 view .LVU673
 2384 0018 10BD     		pop	{r4, pc}
 2385              	.LVL128:
 2386              	.L143:
 880:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 2387              		.loc 1 880 5 is_stmt 1 view .LVU674
 880:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 2388              		.loc 1 880 8 is_stmt 0 view .LVU675
 2389 001a 1A89     		ldrh	r2, [r3, #8]
 2390 001c 5207     		lsls	r2, r2, #29
 2391 001e 07D5     		bpl	.L145
 885:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2392              		.loc 1 885 9 is_stmt 1 view .LVU676
 2393              	.LVL129:
 2394              	.LBB578:
 2395              	.LBI578:
 800:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 801:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 803:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 804:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 805:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 806:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 807:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 808:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 809:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 810:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 811:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 812:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 813:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 814:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 815:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 816:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 817:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 818:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 819:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 820:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 2396              		.loc 2 821 21 view .LVU677
 2397              	.LBB579:
 822:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 823:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 2398              		.loc 2 824 3 view .LVU678
 2399              	.LBE579:
 2400              	.LBE578:
 885:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2401              		.loc 1 885 74 is_stmt 0 view .LVU679
 2402 0020 5B69     		ldr	r3, [r3, #20]
 885:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2403              		.loc 1 885 13 view .LVU680
 2404 0022 5869     		ldr	r0, [r3, #20]
 2405              	.LVL130:
 2406              	.LBB581:
 2407              	.LBB580:
 2408              		.loc 2 824 10 view .LVU681
 2409 0024 6421     		movs	r1, #100
 2410 0026 0C30     		adds	r0, r0, #12
 2411 0028 FFF7FEFF 		bl	chThdSuspendTimeoutS
 2412              	.LVL131:
 2413              		.loc 2 824 10 view .LVU682
 2414              	.LBE580:
 2415              	.LBE581:
 885:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2416              		.loc 1 885 12 view .LVU683
 2417 002c 0130     		adds	r0, r0, #1
 2418 002e F0D0     		beq	.L149
 2419              	.L145:
 890:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 2420              		.loc 1 890 5 is_stmt 1 view .LVU684
 2421 0030 0348     		ldr	r0, .L150
 2422 0032 0623     		movs	r3, #6
 2423 0034 2246     		mov	r2, r4
 2424 0036 0221     		movs	r1, #2
 2425 0038 FFF7FEFF 		bl	usbStartTransmitI
 2426              	.LVL132:
 2427 003c E9E7     		b	.L149
 2428              	.L151:
 2429 003e 00BF     		.align	2
 2430              	.L150:
 2431 0040 00000000 		.word	USBD1
 2432              		.cfi_endproc
 2433              	.LFE304:
 2435              		.section	.text.send_system,"ax",%progbits
 2436              		.align	1
 2437              		.global	send_system
 2438              		.syntax unified
 2439              		.thumb
 2440              		.thumb_func
 2442              	send_system:
 2443              	.LVL133:
 2444              	.LFB307:
 930:tmk_core/protocol/chibios/usb_main.c **** #endif
 931:tmk_core/protocol/chibios/usb_main.c **** 
 932:tmk_core/protocol/chibios/usb_main.c **** void send_system(uint16_t data) {
 2445              		.loc 1 932 33 view -0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 0
 2448              		@ frame_needed = 0, uses_anonymous_args = 0
 2449              		@ link register save eliminated.
 933:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 934:tmk_core/protocol/chibios/usb_main.c ****     send_extra(REPORT_ID_SYSTEM, data);
 2450              		.loc 1 934 5 view .LVU686
 932:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 2451              		.loc 1 932 33 is_stmt 0 view .LVU687
 2452 0000 0146     		mov	r1, r0
 2453              		.loc 1 934 5 view .LVU688
 2454 0002 0320     		movs	r0, #3
 2455              	.LVL134:
 2456              		.loc 1 934 5 view .LVU689
 2457 0004 FFF7FEBF 		b	send_extra
 2458              	.LVL135:
 2459              		.cfi_endproc
 2460              	.LFE307:
 2462              		.section	.text.send_consumer,"ax",%progbits
 2463              		.align	1
 2464              		.global	send_consumer
 2465              		.syntax unified
 2466              		.thumb
 2467              		.thumb_func
 2469              	send_consumer:
 2470              	.LVL136:
 2471              	.LFB308:
 935:tmk_core/protocol/chibios/usb_main.c **** #endif
 936:tmk_core/protocol/chibios/usb_main.c **** }
 937:tmk_core/protocol/chibios/usb_main.c **** 
 938:tmk_core/protocol/chibios/usb_main.c **** void send_consumer(uint16_t data) {
 2472              		.loc 1 938 35 is_stmt 1 view -0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              		@ link register save eliminated.
 939:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 940:tmk_core/protocol/chibios/usb_main.c ****     send_extra(REPORT_ID_CONSUMER, data);
 2477              		.loc 1 940 5 view .LVU691
 938:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 2478              		.loc 1 938 35 is_stmt 0 view .LVU692
 2479 0000 0146     		mov	r1, r0
 2480              		.loc 1 940 5 view .LVU693
 2481 0002 0420     		movs	r0, #4
 2482              	.LVL137:
 2483              		.loc 1 940 5 view .LVU694
 2484 0004 FFF7FEBF 		b	send_extra
 2485              	.LVL138:
 2486              		.cfi_endproc
 2487              	.LFE308:
 2489              		.section	.text.send_digitizer,"ax",%progbits
 2490              		.align	1
 2491              		.global	send_digitizer
 2492              		.syntax unified
 2493              		.thumb
 2494              		.thumb_func
 2496              	send_digitizer:
 2497              	.LFB319:
 2498              		.cfi_startproc
 941:tmk_core/protocol/chibios/usb_main.c **** #endif
 942:tmk_core/protocol/chibios/usb_main.c **** }
 943:tmk_core/protocol/chibios/usb_main.c **** 
 944:tmk_core/protocol/chibios/usb_main.c **** void send_digitizer(report_digitizer_t *report) {
 2499              		.loc 1 944 6 is_stmt 1 view -0
 2500              		@ args = 0, pretend = 0, frame = 0
 2501              		@ frame_needed = 0, uses_anonymous_args = 0
 2502              		@ link register save eliminated.
 2503 0000 7047     		bx	lr
 2504              		.cfi_endproc
 2505              	.LFE319:
 2507              		.section	.text.sendchar,"ax",%progbits
 2508              		.align	1
 2509              		.global	sendchar
 2510              		.syntax unified
 2511              		.thumb
 2512              		.thumb_func
 2514              	sendchar:
 2515              	.LVL139:
 2516              	.LFB310:
 945:tmk_core/protocol/chibios/usb_main.c **** #ifdef DIGITIZER_ENABLE
 946:tmk_core/protocol/chibios/usb_main.c **** #    ifdef DIGITIZER_SHARED_EP
 947:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 948:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 949:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 950:tmk_core/protocol/chibios/usb_main.c ****         return;
 951:tmk_core/protocol/chibios/usb_main.c ****     }
 952:tmk_core/protocol/chibios/usb_main.c **** 
 953:tmk_core/protocol/chibios/usb_main.c ****     usbStartTransmitI(&USB_DRIVER, DIGITIZER_IN_EPNUM, (uint8_t *)report, sizeof(report_digitizer_t
 954:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 955:tmk_core/protocol/chibios/usb_main.c **** #    else
 956:tmk_core/protocol/chibios/usb_main.c ****     chnWrite(&drivers.digitizer_driver.driver, (uint8_t *)report, sizeof(report_digitizer_t));
 957:tmk_core/protocol/chibios/usb_main.c **** #    endif
 958:tmk_core/protocol/chibios/usb_main.c **** #endif
 959:tmk_core/protocol/chibios/usb_main.c **** }
 960:tmk_core/protocol/chibios/usb_main.c **** 
 961:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 962:tmk_core/protocol/chibios/usb_main.c ****  *                   Console functions
 963:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 964:tmk_core/protocol/chibios/usb_main.c ****  */
 965:tmk_core/protocol/chibios/usb_main.c **** 
 966:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 967:tmk_core/protocol/chibios/usb_main.c **** 
 968:tmk_core/protocol/chibios/usb_main.c **** int8_t sendchar(uint8_t c) {
 2517              		.loc 1 968 28 view -0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 8
 2520              		@ frame_needed = 0, uses_anonymous_args = 0
 969:tmk_core/protocol/chibios/usb_main.c ****     static bool timed_out = false;
 2521              		.loc 1 969 5 view .LVU697
 970:tmk_core/protocol/chibios/usb_main.c ****     /* The `timed_out` state is an approximation of the ideal `is_listener_disconnected?` state.
 971:tmk_core/protocol/chibios/usb_main.c ****      *
 972:tmk_core/protocol/chibios/usb_main.c ****      * When a 5ms timeout write has timed out, hid_listen is most likely not running, or not
 973:tmk_core/protocol/chibios/usb_main.c ****      * listening to this keyboard, so we go into the timed_out state. In this state we assume
 974:tmk_core/protocol/chibios/usb_main.c ****      * that hid_listen is most likely not gonna be connected to us any time soon, so it would
 975:tmk_core/protocol/chibios/usb_main.c ****      * be wasteful to write follow-up characters with a 5ms timeout, it would all add up and
 976:tmk_core/protocol/chibios/usb_main.c ****      * unncecessarily slow down the firmware. However instead of just dropping the characters,
 977:tmk_core/protocol/chibios/usb_main.c ****      * we write them with a TIME_IMMEDIATE timeout, which is a zero timeout,
 978:tmk_core/protocol/chibios/usb_main.c ****      * and this will succeed only if hid_listen gets connected again. When a write with
 979:tmk_core/protocol/chibios/usb_main.c ****      * TIME_IMMEDIATE timeout succeeds, we know that hid_listen is listening to us again, and
 980:tmk_core/protocol/chibios/usb_main.c ****      * we can go back to the timed_out = false state, and following writes will be executed
 981:tmk_core/protocol/chibios/usb_main.c ****      * with a 5ms timeout. The reason we don't just send all characters with the TIME_IMMEDIATE
 982:tmk_core/protocol/chibios/usb_main.c ****      * timeout is that this could cause bytes to be lost even if hid_listen is running, if there
 983:tmk_core/protocol/chibios/usb_main.c ****      * is a lot of data being sent over the console.
 984:tmk_core/protocol/chibios/usb_main.c ****      *
 985:tmk_core/protocol/chibios/usb_main.c ****      * This logic will work correctly as long as hid_listen is able to receive at least 200
 986:tmk_core/protocol/chibios/usb_main.c ****      * bytes per second. On a heavily overloaded machine that's so overloaded that it's
 987:tmk_core/protocol/chibios/usb_main.c ****      * unusable, and constantly swapping, hid_listen might have trouble receiving 200 bytes per
 988:tmk_core/protocol/chibios/usb_main.c ****      * second, so some bytes might be lost on the console.
 989:tmk_core/protocol/chibios/usb_main.c ****      */
 990:tmk_core/protocol/chibios/usb_main.c **** 
 991:tmk_core/protocol/chibios/usb_main.c ****     const sysinterval_t timeout = timed_out ? TIME_IMMEDIATE : TIME_MS2I(5);
 2522              		.loc 1 991 5 view .LVU698
 968:tmk_core/protocol/chibios/usb_main.c ****     static bool timed_out = false;
 2523              		.loc 1 968 28 is_stmt 0 view .LVU699
 2524 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2525              		.cfi_def_cfa_offset 24
 2526              		.cfi_offset 4, -12
 2527              		.cfi_offset 5, -8
 2528              		.cfi_offset 14, -4
 2529              		.loc 1 991 45 view .LVU700
 2530 0002 0C4C     		ldr	r4, .L158
 968:tmk_core/protocol/chibios/usb_main.c ****     static bool timed_out = false;
 2531              		.loc 1 968 28 view .LVU701
 2532 0004 8DF80700 		strb	r0, [sp, #7]
 2533              		.loc 1 991 62 view .LVU702
 2534 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 992:tmk_core/protocol/chibios/usb_main.c ****     const size_t        result  = chnWriteTimeout(&drivers.console_driver.driver, &c, 1, timeout);
 2535              		.loc 1 992 35 view .LVU703
 2536 000a 0B48     		ldr	r0, .L158+4
 2537              	.LVL140:
 991:tmk_core/protocol/chibios/usb_main.c ****     const size_t        result  = chnWriteTimeout(&drivers.console_driver.driver, &c, 1, timeout);
 2538              		.loc 1 991 62 view .LVU704
 2539 000c 002B     		cmp	r3, #0
 2540              	.LVL141:
 2541              		.loc 1 992 5 is_stmt 1 view .LVU705
 2542              		.loc 1 992 35 is_stmt 0 view .LVU706
 2543 000e 50F8D43F 		ldr	r3, [r0, #212]!
 2544 0012 4FF00102 		mov	r2, #1
 2545 0016 DD69     		ldr	r5, [r3, #28]
 2546 0018 0DF10701 		add	r1, sp, #7
 2547              	.LVL142:
 2548              		.loc 1 992 35 view .LVU707
 2549 001c 0CBF     		ite	eq
 2550 001e 3223     		moveq	r3, #50
 2551 0020 0023     		movne	r3, #0
 2552 0022 A847     		blx	r5
 2553              	.LVL143:
 993:tmk_core/protocol/chibios/usb_main.c ****     timed_out                   = (result == 0);
 2554              		.loc 1 993 5 is_stmt 1 view .LVU708
 2555              		.loc 1 993 43 is_stmt 0 view .LVU709
 2556 0024 B0FA80F3 		clz	r3, r0
 2557 0028 5B09     		lsrs	r3, r3, #5
 994:tmk_core/protocol/chibios/usb_main.c ****     return result;
 995:tmk_core/protocol/chibios/usb_main.c **** }
 2558              		.loc 1 995 1 view .LVU710
 2559 002a 40B2     		sxtb	r0, r0
 2560              	.LVL144:
 993:tmk_core/protocol/chibios/usb_main.c ****     timed_out                   = (result == 0);
 2561              		.loc 1 993 43 view .LVU711
 2562 002c 2370     		strb	r3, [r4]
 994:tmk_core/protocol/chibios/usb_main.c ****     return result;
 2563              		.loc 1 994 5 is_stmt 1 view .LVU712
 2564              		.loc 1 995 1 is_stmt 0 view .LVU713
 2565 002e 03B0     		add	sp, sp, #12
 2566              		.cfi_def_cfa_offset 12
 2567              		@ sp needed
 2568 0030 30BD     		pop	{r4, r5, pc}
 2569              	.L159:
 2570 0032 00BF     		.align	2
 2571              	.L158:
 2572 0034 00000000 		.word	timed_out.0
 2573 0038 00000000 		.word	drivers
 2574              		.cfi_endproc
 2575              	.LFE310:
 2577              		.section	.text.console_task,"ax",%progbits
 2578              		.align	1
 2579              		.global	console_task
 2580              		.syntax unified
 2581              		.thumb
 2582              		.thumb_func
 2584              	console_task:
 2585              	.LFB312:
 996:tmk_core/protocol/chibios/usb_main.c **** 
 997:tmk_core/protocol/chibios/usb_main.c **** // Just a dummy function for now, this could be exposed as a weak function
 998:tmk_core/protocol/chibios/usb_main.c **** // Or connected to the actual QMK console
 999:tmk_core/protocol/chibios/usb_main.c **** static void console_receive(uint8_t *data, uint8_t length) {
1000:tmk_core/protocol/chibios/usb_main.c ****     (void)data;
1001:tmk_core/protocol/chibios/usb_main.c ****     (void)length;
1002:tmk_core/protocol/chibios/usb_main.c **** }
1003:tmk_core/protocol/chibios/usb_main.c **** 
1004:tmk_core/protocol/chibios/usb_main.c **** void console_task(void) {
 2586              		.loc 1 1004 25 is_stmt 1 view -0
 2587              		.cfi_startproc
 2588              		@ args = 0, pretend = 0, frame = 32
 2589              		@ frame_needed = 0, uses_anonymous_args = 0
1005:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 2590              		.loc 1 1005 5 view .LVU715
1006:tmk_core/protocol/chibios/usb_main.c ****     size_t  size = 0;
 2591              		.loc 1 1006 5 view .LVU716
 2592              	.LVL145:
1007:tmk_core/protocol/chibios/usb_main.c ****     do {
 2593              		.loc 1 1007 5 view .LVU717
 2594              	.LBB582:
1008:tmk_core/protocol/chibios/usb_main.c ****         size_t size = chnReadTimeout(&drivers.console_driver.driver, buffer, sizeof(buffer), TIME_I
 2595              		.loc 1 1008 9 view .LVU718
 2596              	.LBE582:
1004:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 2597              		.loc 1 1004 25 is_stmt 0 view .LVU719
 2598 0000 10B5     		push	{r4, lr}
 2599              		.cfi_def_cfa_offset 8
 2600              		.cfi_offset 4, -8
 2601              		.cfi_offset 14, -4
 2602              	.LBB583:
 2603              		.loc 1 1008 23 view .LVU720
 2604 0002 0548     		ldr	r0, .L161
 2605 0004 0368     		ldr	r3, [r0]
 2606              	.LBE583:
1004:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 2607              		.loc 1 1004 25 view .LVU721
 2608 0006 88B0     		sub	sp, sp, #32
 2609              		.cfi_def_cfa_offset 40
 2610              	.LBB584:
 2611              		.loc 1 1008 23 view .LVU722
 2612 0008 1C6A     		ldr	r4, [r3, #32]
 2613 000a 2022     		movs	r2, #32
 2614 000c 0023     		movs	r3, #0
 2615 000e 6946     		mov	r1, sp
 2616 0010 A047     		blx	r4
 2617              	.LVL146:
1009:tmk_core/protocol/chibios/usb_main.c ****         if (size > 0) {
 2618              		.loc 1 1009 9 is_stmt 1 view .LVU723
 2619              	.LBE584:
1010:tmk_core/protocol/chibios/usb_main.c ****             console_receive(buffer, size);
1011:tmk_core/protocol/chibios/usb_main.c ****         }
1012:tmk_core/protocol/chibios/usb_main.c ****     } while (size > 0);
 2620              		.loc 1 1012 19 view .LVU724
1013:tmk_core/protocol/chibios/usb_main.c **** }
 2621              		.loc 1 1013 1 is_stmt 0 view .LVU725
 2622 0012 08B0     		add	sp, sp, #32
 2623              		.cfi_def_cfa_offset 8
 2624              		@ sp needed
 2625 0014 10BD     		pop	{r4, pc}
 2626              	.L162:
 2627 0016 00BF     		.align	2
 2628              	.L161:
 2629 0018 D4000000 		.word	drivers+212
 2630              		.cfi_endproc
 2631              	.LFE312:
 2633              		.section	.bss.timed_out.0,"aw",%nobits
 2636              	timed_out.0:
 2637 0000 00       		.space	1
 2638              		.section	.bss.report.1,"aw",%nobits
 2641              	report.1:
 2642 0000 000000   		.space	3
 2643              		.section	.bss.desc.2,"aw",%nobits
 2644              		.align	2
 2647              	desc.2:
 2648 0000 00000000 		.space	8
 2648      00000000 
 2649              		.section	.rodata.usbcfg,"a"
 2650              		.align	2
 2653              	usbcfg:
 2654 0000 00000000 		.word	usb_event_cb
 2655 0004 00000000 		.word	usb_get_descriptor_cb
 2656 0008 00000000 		.word	usb_request_hook_cb
 2657 000c 00000000 		.word	usb_sof_cb
 2658              		.section	.bss.set_report_buf,"aw",%nobits
 2659              		.align	2
 2662              	set_report_buf:
 2663 0000 0000     		.space	2
 2664              		.global	last_suspend_state
 2665              		.section	.bss.last_suspend_state,"aw",%nobits
 2668              	last_suspend_state:
 2669 0000 00       		.space	1
 2670              		.comm	event_queue_tail,1,1
 2671              		.comm	event_queue_head,1,1
 2672              		.comm	event_queue,16,1
 2673              		.section	.data.drivers,"aw"
 2674              		.align	2
 2677              	drivers:
 2678 0000 04000000 		.word	4
 2679 0004 04000000 		.word	4
 2680 0008 00000000 		.space	60
 2680      00000000 
 2680      00000000 
 2680      00000000 
 2680      00000000 
 2681 0044 03000000 		.word	3
 2682 0048 00000000 		.word	0
 2683 004c 00000000 		.word	qmkusbDataTransmitted
 2684 0050 00000000 		.word	0
 2685 0054 2000     		.short	32
 2686 0056 0000     		.short	0
 2687 0058 00000000 		.word	0
 2688 005c 00000000 		.word	0
 2689 0060 0200     		.short	2
 2690 0062 0000     		.space	2
 2691 0064 00000000 		.word	0
 2692 0068 03000000 		.word	3
 2693 006c 00000000 		.word	0
 2694 0070 00000000 		.word	0
 2695 0074 00000000 		.word	qmkusbDataReceived
 2696 0078 0000     		.short	0
 2697 007a 2000     		.short	32
 2698 007c 00000000 		.word	0
 2699 0080 00000000 		.word	0
 2700 0084 0200     		.short	2
 2701 0086 0000     		.space	2
 2702 0088 00000000 		.word	0
 2703 008c 03000000 		.word	3
 2704 0090 00000000 		.word	0
 2705 0094 00000000 		.word	qmkusbInterruptTransmitted
 2706 0098 00000000 		.word	0
 2707 009c 0800     		.short	8
 2708 009e 0000     		.short	0
 2709 00a0 00000000 		.word	0
 2710 00a4 00000000 		.word	0
 2711 00a8 0200     		.short	2
 2712 00aa 0000     		.space	2
 2713 00ac 00000000 		.word	0
 2714 00b0 00000000 		.word	USBD1
 2715 00b4 03       		.byte	3
 2716 00b5 04       		.byte	4
 2717 00b6 00       		.byte	0
 2718 00b7 00       		.space	1
 2719 00b8 04000000 		.word	4
 2720 00bc 04000000 		.word	4
 2721 00c0 20000000 		.word	32
 2722 00c4 20000000 		.word	32
 2723 00c8 01       		.byte	1
 2724 00c9 000000   		.space	3
 2725 00cc 00000000 		.word	__compound_literal.0
 2726 00d0 00000000 		.word	__compound_literal.1
 2727 00d4 00000000 		.space	128
 2727      00000000 
 2727      00000000 
 2727      00000000 
 2727      00000000 
 2728              		.section	.bss.__compound_literal.1,"aw",%nobits
 2729              		.align	2
 2732              	__compound_literal.1:
 2733 0000 00000000 		.space	144
 2733      00000000 
 2733      00000000 
 2733      00000000 
 2733      00000000 
 2734              		.section	.bss.__compound_literal.0,"aw",%nobits
 2735              		.align	2
 2738              	__compound_literal.0:
 2739 0000 00000000 		.space	144
 2739      00000000 
 2739      00000000 
 2739      00000000 
 2739      00000000 
 2740              		.section	.rodata.shared_ep_config,"a"
 2741              		.align	2
 2744              	shared_ep_config:
 2745 0000 03000000 		.word	3
 2746 0004 00000000 		.word	0
 2747 0008 00000000 		.word	shared_in_cb
 2748 000c 00000000 		.word	0
 2749 0010 2000     		.short	32
 2750 0012 0000     		.short	0
 2751 0014 00000000 		.word	shared_ep_state
 2752 0018 00000000 		.word	0
 2753 001c 0200     		.short	2
 2754 001e 0000     		.space	2
 2755 0020 00000000 		.word	0
 2756              		.section	.bss.shared_ep_state,"aw",%nobits
 2757              		.align	2
 2760              	shared_ep_state:
 2761 0000 00000000 		.space	20
 2761      00000000 
 2761      00000000 
 2761      00000000 
 2761      00000000 
 2762              		.section	.rodata.kbd_ep_config,"a"
 2763              		.align	2
 2766              	kbd_ep_config:
 2767 0000 03000000 		.word	3
 2768 0004 00000000 		.word	0
 2769 0008 00000000 		.word	kbd_in_cb
 2770 000c 00000000 		.word	0
 2771 0010 0800     		.short	8
 2772 0012 0000     		.short	0
 2773 0014 00000000 		.word	kbd_ep_state
 2774 0018 00000000 		.word	0
 2775 001c 0200     		.short	2
 2776 001e 0000     		.space	2
 2777 0020 00000000 		.word	0
 2778              		.section	.bss.kbd_ep_state,"aw",%nobits
 2779              		.align	2
 2782              	kbd_ep_state:
 2783 0000 00000000 		.space	20
 2783      00000000 
 2783      00000000 
 2783      00000000 
 2783      00000000 
 2784              		.global	extra_report_blank
 2785              		.section	.bss.extra_report_blank,"aw",%nobits
 2788              	extra_report_blank:
 2789 0000 000000   		.space	3
 2790              		.global	mouse_report_blank
 2791              		.section	.bss.mouse_report_blank,"aw",%nobits
 2794              	mouse_report_blank:
 2795 0000 00000000 		.space	6
 2795      0000
 2796              		.global	keyboard_report_sent
 2797              		.section	.bss.keyboard_report_sent,"aw",%nobits
 2800              	keyboard_report_sent:
 2801 0000 00000000 		.space	32
 2801      00000000 
 2801      00000000 
 2801      00000000 
 2801      00000000 
 2802              		.section	.bss.keyboard_idle_timer,"aw",%nobits
 2803              		.align	2
 2806              	keyboard_idle_timer:
 2807 0000 00000000 		.space	20
 2807      00000000 
 2807      00000000 
 2807      00000000 
 2807      00000000 
 2808              		.global	keyboard_idle_count
 2809              		.section	.bss.keyboard_idle_count,"aw",%nobits
 2810              		.align	1
 2813              	keyboard_idle_count:
 2814 0000 0000     		.space	2
 2815              		.global	keyboard_led_state
 2816              		.section	.bss.keyboard_led_state,"aw",%nobits
 2819              	keyboard_led_state:
 2820 0000 00       		.space	1
 2821              		.global	keyboard_protocol
 2822              		.section	.data.keyboard_protocol,"aw"
 2823              		.align	1
 2826              	keyboard_protocol:
 2827 0000 01       		.byte	1
 2828              		.global	keyboard_idle
 2829              		.section	.bss.keyboard_idle,"aw",%nobits
 2830              		.align	1
 2833              	keyboard_idle:
 2834 0000 00       		.space	1
 2835              		.text
 2836              	.Letext0:
 2837              		.file 7 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 2838              		.file 8 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2839              		.file 9 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2840              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2841              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 2842              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 2843              		.file 13 "./lib/chibios/os/rt/include/chlists.h"
 2844              		.file 14 "./lib/chibios/os/rt/include/chtime.h"
 2845              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 2846              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
 2847              		.file 17 "./lib/chibios/os/rt/include/chevents.h"
 2848              		.file 18 "./lib/chibios/os/hal/include/hal_buffers.h"
 2849              		.file 19 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 2850              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 2851              		.file 21 "./lib/chibios/os/hal/include/hal_usb.h"
 2852              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 2853              		.file 23 "tmk_core/common/report.h"
 2854              		.file 24 "tmk_core/protocol/usb_descriptor.h"
 2855              		.file 25 "tmk_core/common/host.h"
 2856              		.file 26 "tmk_core/protocol/chibios/usb_driver.h"
 2857              		.file 27 "quantum/keycode_config.h"
 2858              		.file 28 "./lib/chibios/os/rt/include/chthreads.h"
 2859              		.file 29 "/usr/arm-none-eabi/include/string.h"
 2860              		.file 30 "tmk_core/common/suspend.h"
 2861              		.file 31 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_main.c
     /tmp/cc1lkQek.s:21     .text.kbd_in_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:27     .text.kbd_in_cb:0000000000000000 kbd_in_cb
     /tmp/cc1lkQek.s:43     .text.usb_sof_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:48     .text.usb_sof_cb:0000000000000000 usb_sof_cb
     /tmp/cc1lkQek.s:174    .text.usb_sof_cb:0000000000000018 $d
     /tmp/cc1lkQek.s:2677   .data.drivers:0000000000000000 drivers
     /tmp/cc1lkQek.s:179    .text.usb_get_descriptor_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:184    .text.usb_get_descriptor_cb:0000000000000000 usb_get_descriptor_cb
     /tmp/cc1lkQek.s:241    .text.usb_get_descriptor_cb:0000000000000028 $d
     /tmp/cc1lkQek.s:2647   .bss.desc.2:0000000000000000 desc.2
     /tmp/cc1lkQek.s:246    .text.set_led_transfer_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:251    .text.set_led_transfer_cb:0000000000000000 set_led_transfer_cb
     /tmp/cc1lkQek.s:313    .text.set_led_transfer_cb:0000000000000024 $d
     /tmp/cc1lkQek.s:2662   .bss.set_report_buf:0000000000000000 set_report_buf
     /tmp/cc1lkQek.s:2819   .bss.keyboard_led_state:0000000000000000 keyboard_led_state
     /tmp/cc1lkQek.s:319    .text.send_extra:0000000000000000 $t
     /tmp/cc1lkQek.s:324    .text.send_extra:0000000000000000 send_extra
     /tmp/cc1lkQek.s:475    .text.send_extra:000000000000002c $d
     /tmp/cc1lkQek.s:2641   .bss.report.1:0000000000000000 report.1
     /tmp/cc1lkQek.s:483    .text.chVTSetI.constprop.0:0000000000000000 $t
     /tmp/cc1lkQek.s:488    .text.chVTSetI.constprop.0:0000000000000000 chVTSetI.constprop.0
     /tmp/cc1lkQek.s:569    .text.chVTSetI.constprop.0:0000000000000020 $d
     /tmp/cc1lkQek.s:2806   .bss.keyboard_idle_timer:0000000000000000 keyboard_idle_timer
     /tmp/cc1lkQek.s:582    .text.keyboard_idle_timer_cb:0000000000000000 keyboard_idle_timer_cb
     /tmp/cc1lkQek.s:577    .text.keyboard_idle_timer_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:758    .text.keyboard_idle_timer_cb:0000000000000064 $d
     /tmp/cc1lkQek.s:2833   .bss.keyboard_idle:0000000000000000 keyboard_idle
     /tmp/cc1lkQek.s:2826   .data.keyboard_protocol:0000000000000000 keyboard_protocol
     /tmp/cc1lkQek.s:2800   .bss.keyboard_report_sent:0000000000000000 keyboard_report_sent
     /tmp/cc1lkQek.s:768    .text.usb_request_hook_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:773    .text.usb_request_hook_cb:0000000000000000 usb_request_hook_cb
     /tmp/cc1lkQek.s:1119   .text.usb_request_hook_cb:0000000000000124 $d
     /tmp/cc1lkQek.s:1131   .text.usb_event_queue_enqueue.isra.0:0000000000000000 $t
     /tmp/cc1lkQek.s:1136   .text.usb_event_queue_enqueue.isra.0:0000000000000000 usb_event_queue_enqueue.isra.0
     /tmp/cc1lkQek.s:1180   .text.usb_event_queue_enqueue.isra.0:000000000000001c $d
                            *COM*:0000000000000001 event_queue_head
                            *COM*:0000000000000001 event_queue_tail
                            *COM*:0000000000000010 event_queue
     /tmp/cc1lkQek.s:1187   .text.usb_event_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:1192   .text.usb_event_cb:0000000000000000 usb_event_cb
     /tmp/cc1lkQek.s:1214   .text.usb_event_cb:000000000000000c $d
     /tmp/cc1lkQek.s:1220   .text.usb_event_cb:0000000000000012 $t
     /tmp/cc1lkQek.s:1544   .text.usb_event_cb:00000000000000a4 $d
     /tmp/cc1lkQek.s:2766   .rodata.kbd_ep_config:0000000000000000 kbd_ep_config
     /tmp/cc1lkQek.s:2744   .rodata.shared_ep_config:0000000000000000 shared_ep_config
     /tmp/cc1lkQek.s:2668   .bss.last_suspend_state:0000000000000000 last_suspend_state
     /tmp/cc1lkQek.s:1559   .text.shared_in_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:1565   .text.shared_in_cb:0000000000000000 shared_in_cb
     /tmp/cc1lkQek.s:1577   .text.usb_event_queue_init:0000000000000000 $t
     /tmp/cc1lkQek.s:1583   .text.usb_event_queue_init:0000000000000000 usb_event_queue_init
     /tmp/cc1lkQek.s:1615   .text.usb_event_queue_init:0000000000000018 $d
     /tmp/cc1lkQek.s:1622   .text.usb_event_queue_task:0000000000000000 $t
     /tmp/cc1lkQek.s:1628   .text.usb_event_queue_task:0000000000000000 usb_event_queue_task
     /tmp/cc1lkQek.s:1744   .text.usb_event_queue_task:0000000000000044 $d
     /tmp/cc1lkQek.s:1754   .text.init_usb_driver:0000000000000000 $t
     /tmp/cc1lkQek.s:1760   .text.init_usb_driver:0000000000000000 init_usb_driver
     /tmp/cc1lkQek.s:1883   .text.init_usb_driver:0000000000000070 $d
     /tmp/cc1lkQek.s:2653   .rodata.usbcfg:0000000000000000 usbcfg
     /tmp/cc1lkQek.s:1890   .text.restart_usb_driver:0000000000000000 $t
     /tmp/cc1lkQek.s:1896   .text.restart_usb_driver:0000000000000000 restart_usb_driver
     /tmp/cc1lkQek.s:1956   .text.restart_usb_driver:0000000000000038 $d
     /tmp/cc1lkQek.s:1961   .text.kbd_sof_cb:0000000000000000 $t
     /tmp/cc1lkQek.s:1967   .text.kbd_sof_cb:0000000000000000 kbd_sof_cb
     /tmp/cc1lkQek.s:1982   .text.keyboard_leds:0000000000000000 $t
     /tmp/cc1lkQek.s:1988   .text.keyboard_leds:0000000000000000 keyboard_leds
     /tmp/cc1lkQek.s:2003   .text.keyboard_leds:0000000000000008 $d
     /tmp/cc1lkQek.s:2008   .text.send_keyboard:0000000000000000 $t
     /tmp/cc1lkQek.s:2014   .text.send_keyboard:0000000000000000 send_keyboard
     /tmp/cc1lkQek.s:2248   .text.send_keyboard:0000000000000088 $d
     /tmp/cc1lkQek.s:2257   .text.send_mouse:0000000000000000 $t
     /tmp/cc1lkQek.s:2263   .text.send_mouse:0000000000000000 send_mouse
     /tmp/cc1lkQek.s:2431   .text.send_mouse:0000000000000040 $d
     /tmp/cc1lkQek.s:2436   .text.send_system:0000000000000000 $t
     /tmp/cc1lkQek.s:2442   .text.send_system:0000000000000000 send_system
     /tmp/cc1lkQek.s:2463   .text.send_consumer:0000000000000000 $t
     /tmp/cc1lkQek.s:2469   .text.send_consumer:0000000000000000 send_consumer
     /tmp/cc1lkQek.s:2490   .text.send_digitizer:0000000000000000 $t
     /tmp/cc1lkQek.s:2496   .text.send_digitizer:0000000000000000 send_digitizer
     /tmp/cc1lkQek.s:2508   .text.sendchar:0000000000000000 $t
     /tmp/cc1lkQek.s:2514   .text.sendchar:0000000000000000 sendchar
     /tmp/cc1lkQek.s:2572   .text.sendchar:0000000000000034 $d
     /tmp/cc1lkQek.s:2636   .bss.timed_out.0:0000000000000000 timed_out.0
     /tmp/cc1lkQek.s:2578   .text.console_task:0000000000000000 $t
     /tmp/cc1lkQek.s:2584   .text.console_task:0000000000000000 console_task
     /tmp/cc1lkQek.s:2629   .text.console_task:0000000000000018 $d
     /tmp/cc1lkQek.s:2637   .bss.timed_out.0:0000000000000000 $d
     /tmp/cc1lkQek.s:2642   .bss.report.1:0000000000000000 $d
     /tmp/cc1lkQek.s:2644   .bss.desc.2:0000000000000000 $d
     /tmp/cc1lkQek.s:2650   .rodata.usbcfg:0000000000000000 $d
     /tmp/cc1lkQek.s:2659   .bss.set_report_buf:0000000000000000 $d
     /tmp/cc1lkQek.s:2669   .bss.last_suspend_state:0000000000000000 $d
     /tmp/cc1lkQek.s:2674   .data.drivers:0000000000000000 $d
     /tmp/cc1lkQek.s:2738   .bss.__compound_literal.0:0000000000000000 __compound_literal.0
     /tmp/cc1lkQek.s:2732   .bss.__compound_literal.1:0000000000000000 __compound_literal.1
     /tmp/cc1lkQek.s:2729   .bss.__compound_literal.1:0000000000000000 $d
     /tmp/cc1lkQek.s:2735   .bss.__compound_literal.0:0000000000000000 $d
     /tmp/cc1lkQek.s:2741   .rodata.shared_ep_config:0000000000000000 $d
     /tmp/cc1lkQek.s:2760   .bss.shared_ep_state:0000000000000000 shared_ep_state
     /tmp/cc1lkQek.s:2757   .bss.shared_ep_state:0000000000000000 $d
     /tmp/cc1lkQek.s:2763   .rodata.kbd_ep_config:0000000000000000 $d
     /tmp/cc1lkQek.s:2782   .bss.kbd_ep_state:0000000000000000 kbd_ep_state
     /tmp/cc1lkQek.s:2779   .bss.kbd_ep_state:0000000000000000 $d
     /tmp/cc1lkQek.s:2788   .bss.extra_report_blank:0000000000000000 extra_report_blank
     /tmp/cc1lkQek.s:2789   .bss.extra_report_blank:0000000000000000 $d
     /tmp/cc1lkQek.s:2794   .bss.mouse_report_blank:0000000000000000 mouse_report_blank
     /tmp/cc1lkQek.s:2795   .bss.mouse_report_blank:0000000000000000 $d
     /tmp/cc1lkQek.s:2801   .bss.keyboard_report_sent:0000000000000000 $d
     /tmp/cc1lkQek.s:2803   .bss.keyboard_idle_timer:0000000000000000 $d
     /tmp/cc1lkQek.s:2813   .bss.keyboard_idle_count:0000000000000000 keyboard_idle_count
     /tmp/cc1lkQek.s:2810   .bss.keyboard_idle_count:0000000000000000 $d
     /tmp/cc1lkQek.s:2820   .bss.keyboard_led_state:0000000000000000 $d
     /tmp/cc1lkQek.s:2823   .data.keyboard_protocol:0000000000000000 $d
     /tmp/cc1lkQek.s:2830   .bss.keyboard_idle:0000000000000000 $d

UNDEFINED SYMBOLS
qmkusbSOFHookI
get_usb_descriptor
usbStartTransmitI
USBD1
chVTDoResetI
chVTDoSetI
__aeabi_uldivmod
__aeabi_ldivmod
keymap_config
qmkusbRequestsHook
usbInitEndpointI
qmkusbConfigureHookI
qmkusbSuspendHookI
qmkusbWakeupHookI
memset
suspend_wakeup_init
qmkusbObjectInit
qmkusbStart
_pal_lld_setgroupmode
chThdSleep
usbStart
usbStop
chThdSuspendTimeoutS
qmkusbDataTransmitted
qmkusbDataReceived
qmkusbInterruptTransmitted
