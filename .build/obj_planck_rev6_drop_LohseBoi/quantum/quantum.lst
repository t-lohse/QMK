   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"quantum.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "quantum/quantum.c"
  20              		.section	.text.extract_mod_bits,"ax",%progbits
  21              		.align	1
  22              		.global	extract_mod_bits
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	extract_mod_bits:
  28              	.LVL0:
  29              	.LFB295:
   1:quantum/quantum.c **** /* Copyright 2016-2017 Jack Humbert
   2:quantum/quantum.c ****  *
   3:quantum/quantum.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/quantum.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/quantum.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/quantum.c ****  * (at your option) any later version.
   7:quantum/quantum.c ****  *
   8:quantum/quantum.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/quantum.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/quantum.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/quantum.c ****  * GNU General Public License for more details.
  12:quantum/quantum.c ****  *
  13:quantum/quantum.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/quantum.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/quantum.c ****  */
  16:quantum/quantum.c **** 
  17:quantum/quantum.c **** #include "quantum.h"
  18:quantum/quantum.c **** #include "magic.h"
  19:quantum/quantum.c **** 
  20:quantum/quantum.c **** #ifdef BLUETOOTH_ENABLE
  21:quantum/quantum.c **** #    include "outputselect.h"
  22:quantum/quantum.c **** #endif
  23:quantum/quantum.c **** 
  24:quantum/quantum.c **** #ifdef BACKLIGHT_ENABLE
  25:quantum/quantum.c **** #    include "backlight.h"
  26:quantum/quantum.c **** #endif
  27:quantum/quantum.c **** 
  28:quantum/quantum.c **** #ifdef API_ENABLE
  29:quantum/quantum.c **** #    include "api.h"
  30:quantum/quantum.c **** #endif
  31:quantum/quantum.c **** 
  32:quantum/quantum.c **** #ifdef MIDI_ENABLE
  33:quantum/quantum.c **** #    include "process_midi.h"
  34:quantum/quantum.c **** #endif
  35:quantum/quantum.c **** 
  36:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
  37:quantum/quantum.c **** #    include "velocikey.h"
  38:quantum/quantum.c **** #endif
  39:quantum/quantum.c **** 
  40:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
  41:quantum/quantum.c **** #    include "haptic.h"
  42:quantum/quantum.c **** #endif
  43:quantum/quantum.c **** 
  44:quantum/quantum.c **** #ifdef AUDIO_ENABLE
  45:quantum/quantum.c **** #    ifndef GOODBYE_SONG
  46:quantum/quantum.c **** #        define GOODBYE_SONG SONG(GOODBYE_SOUND)
  47:quantum/quantum.c **** #    endif
  48:quantum/quantum.c **** float goodbye_song[][2] = GOODBYE_SONG;
  49:quantum/quantum.c **** #    ifdef DEFAULT_LAYER_SONGS
  50:quantum/quantum.c **** float default_layer_songs[][16][2] = DEFAULT_LAYER_SONGS;
  51:quantum/quantum.c **** #    endif
  52:quantum/quantum.c **** #endif
  53:quantum/quantum.c **** 
  54:quantum/quantum.c **** #ifdef AUTO_SHIFT_ENABLE
  55:quantum/quantum.c **** #    include "process_auto_shift.h"
  56:quantum/quantum.c **** #endif
  57:quantum/quantum.c **** 
  58:quantum/quantum.c **** uint8_t extract_mod_bits(uint16_t code) {
  30              		.loc 1 58 41 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  59:quantum/quantum.c ****     switch (code) {
  35              		.loc 1 59 5 view .LVU1
  36 0000 A0F58072 		sub	r2, r0, #256
  37 0004 B2F5F85F 		cmp	r2, #7936
  58:quantum/quantum.c ****     switch (code) {
  38              		.loc 1 58 41 is_stmt 0 view .LVU2
  39 0008 0346     		mov	r3, r0
  40              		.loc 1 59 5 view .LVU3
  41 000a 1FD2     		bcs	.L8
  42              	.LVL1:
  43              	.LBB4:
  44              	.LBI4:
  58:quantum/quantum.c ****     switch (code) {
  45              		.loc 1 58 9 is_stmt 1 view .LVU4
  46              	.LBB5:
  60:quantum/quantum.c ****         case QK_MODS ... QK_MODS_MAX:
  61:quantum/quantum.c ****             break;
  47              		.loc 1 61 13 view .LVU5
  62:quantum/quantum.c ****         default:
  63:quantum/quantum.c ****             return 0;
  64:quantum/quantum.c ****     }
  65:quantum/quantum.c **** 
  66:quantum/quantum.c ****     uint8_t mods_to_send = 0;
  48              		.loc 1 66 5 view .LVU6
  67:quantum/quantum.c **** 
  68:quantum/quantum.c ****     if (code & QK_RMODS_MIN) {  // Right mod flag is set
  49              		.loc 1 68 5 view .LVU7
  50              		.loc 1 68 8 is_stmt 0 view .LVU8
  51 000c 13F4805F 		tst	r3, #4096
  52 0010 00F40071 		and	r1, r0, #512
  53 0014 03F48062 		and	r2, r3, #1024
  69:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_RCTL);
  54              		.loc 1 69 12 view .LVU9
  55 0018 C0F30020 		ubfx	r0, r0, #8, #1
  56              	.LVL2:
  57              		.loc 1 69 12 view .LVU10
  58 001c 03F40063 		and	r3, r3, #2048
  59              	.LVL3:
  68:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_RCTL);
  60              		.loc 1 68 8 view .LVU11
  61 0020 0AD0     		beq	.L3
  62              		.loc 1 69 9 is_stmt 1 view .LVU12
  63              		.loc 1 69 12 is_stmt 0 view .LVU13
  64 0022 0001     		lsls	r0, r0, #4
  65              	.LVL4:
  70:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_RSFT);
  66              		.loc 1 70 9 is_stmt 1 view .LVU14
  67              		.loc 1 70 12 is_stmt 0 view .LVU15
  68 0024 09B1     		cbz	r1, .L4
  69              		.loc 1 70 29 is_stmt 1 view .LVU16
  70              		.loc 1 70 42 is_stmt 0 view .LVU17
  71 0026 40F02000 		orr	r0, r0, #32
  72              	.LVL5:
  73              	.L4:
  71:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_RALT);
  74              		.loc 1 71 9 is_stmt 1 view .LVU18
  75              		.loc 1 71 12 is_stmt 0 view .LVU19
  76 002a 0AB1     		cbz	r2, .L5
  77              		.loc 1 71 29 is_stmt 1 view .LVU20
  78              		.loc 1 71 42 is_stmt 0 view .LVU21
  79 002c 40F04000 		orr	r0, r0, #64
  80              	.LVL6:
  81              	.L5:
  72:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_RGUI);
  82              		.loc 1 72 9 is_stmt 1 view .LVU22
  83              		.loc 1 72 12 is_stmt 0 view .LVU23
  84 0030 6BB1     		cbz	r3, .L2
  85              		.loc 1 72 29 is_stmt 1 view .LVU24
  86              		.loc 1 72 42 is_stmt 0 view .LVU25
  87 0032 40F08000 		orr	r0, r0, #128
  88              	.LVL7:
  89              		.loc 1 72 42 view .LVU26
  90 0036 7047     		bx	lr
  91              	.LVL8:
  92              	.L3:
  73:quantum/quantum.c ****     } else {
  74:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_LCTL);
  93              		.loc 1 74 9 is_stmt 1 view .LVU27
  75:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_LSFT);
  94              		.loc 1 75 9 view .LVU28
  95              		.loc 1 75 12 is_stmt 0 view .LVU29
  96 0038 09B1     		cbz	r1, .L6
  97              		.loc 1 75 29 is_stmt 1 view .LVU30
  98              		.loc 1 75 42 is_stmt 0 view .LVU31
  99 003a 40F00200 		orr	r0, r0, #2
 100              	.LVL9:
 101              	.L6:
  76:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 102              		.loc 1 76 9 is_stmt 1 view .LVU32
 103              		.loc 1 76 12 is_stmt 0 view .LVU33
 104 003e 0AB1     		cbz	r2, .L7
 105              		.loc 1 76 29 is_stmt 1 view .LVU34
 106              		.loc 1 76 42 is_stmt 0 view .LVU35
 107 0040 40F00400 		orr	r0, r0, #4
 108              	.LVL10:
 109              	.L7:
  77:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 110              		.loc 1 77 9 is_stmt 1 view .LVU36
 111              		.loc 1 77 12 is_stmt 0 view .LVU37
 112 0044 1BB1     		cbz	r3, .L2
 113              		.loc 1 77 29 is_stmt 1 view .LVU38
 114              		.loc 1 77 42 is_stmt 0 view .LVU39
 115 0046 40F00800 		orr	r0, r0, #8
 116              	.LVL11:
 117              		.loc 1 77 42 view .LVU40
 118 004a 7047     		bx	lr
 119              	.LVL12:
 120              	.L8:
 121              		.loc 1 77 42 view .LVU41
 122              	.LBE5:
 123              	.LBE4:
  63:quantum/quantum.c ****     }
 124              		.loc 1 63 20 view .LVU42
 125 004c 0020     		movs	r0, #0
 126              	.LVL13:
 127              	.L2:
  78:quantum/quantum.c ****     }
  79:quantum/quantum.c **** 
  80:quantum/quantum.c ****     return mods_to_send;
  81:quantum/quantum.c **** }
 128              		.loc 1 81 1 view .LVU43
 129 004e 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE295:
 133              		.section	.text.do_code16,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 139              	do_code16:
 140              	.LVL14:
 141              	.LFB296:
  82:quantum/quantum.c **** 
  83:quantum/quantum.c **** static void do_code16(uint16_t code, void (*f)(uint8_t)) { f(extract_mod_bits(code)); }
 142              		.loc 1 83 58 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		.loc 1 83 60 view .LVU45
 147              		.loc 1 83 58 is_stmt 0 view .LVU46
 148 0000 10B5     		push	{r4, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 4, -8
 151              		.cfi_offset 14, -4
 152              		.loc 1 83 58 view .LVU47
 153 0002 0C46     		mov	r4, r1
 154              		.loc 1 83 60 view .LVU48
 155 0004 FFF7FEFF 		bl	extract_mod_bits
 156              	.LVL15:
 157              		.loc 1 83 60 view .LVU49
 158 0008 2346     		mov	r3, r4
 159              		.loc 1 83 87 view .LVU50
 160 000a BDE81040 		pop	{r4, lr}
 161              		.cfi_restore 14
 162              		.cfi_restore 4
 163              		.cfi_def_cfa_offset 0
 164              	.LVL16:
 165              		.loc 1 83 60 view .LVU51
 166 000e 1847     		bx	r3	@ indirect register sibling call
 167              	.LVL17:
 168              		.loc 1 83 60 view .LVU52
 169              		.cfi_endproc
 170              	.LFE296:
 172              		.section	.text.register_code16,"ax",%progbits
 173              		.align	1
 174              		.global	register_code16
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	register_code16:
 180              	.LVL18:
 181              	.LFB297:
  84:quantum/quantum.c **** 
  85:quantum/quantum.c **** void register_code16(uint16_t code) {
 182              		.loc 1 85 37 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
  86:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 186              		.loc 1 86 5 view .LVU54
 187              		.loc 1 86 8 is_stmt 0 view .LVU55
 188 0000 A0F1E003 		sub	r3, r0, #224
 189 0004 072B     		cmp	r3, #7
  85:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 190              		.loc 1 85 37 view .LVU56
 191 0006 10B5     		push	{r4, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 4, -8
 194              		.cfi_offset 14, -4
  85:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 195              		.loc 1 85 37 view .LVU57
 196 0008 0446     		mov	r4, r0
 197              		.loc 1 86 8 view .LVU58
 198 000a 00D9     		bls	.L29
 199              		.loc 1 86 22 discriminator 1 view .LVU59
 200 000c 40B9     		cbnz	r0, .L30
 201              	.L29:
  87:quantum/quantum.c ****         do_code16(code, register_mods);
 202              		.loc 1 87 9 is_stmt 1 view .LVU60
 203 000e 0549     		ldr	r1, .L33
 204 0010 2046     		mov	r0, r4
 205              	.LVL19:
 206              	.L32:
  88:quantum/quantum.c ****     } else {
  89:quantum/quantum.c ****         do_code16(code, register_weak_mods);
 207              		.loc 1 89 9 is_stmt 0 view .LVU61
 208 0012 FFF7FEFF 		bl	do_code16
 209              	.LVL20:
  90:quantum/quantum.c ****     }
  91:quantum/quantum.c ****     register_code(code);
 210              		.loc 1 91 5 is_stmt 1 view .LVU62
 211 0016 E0B2     		uxtb	r0, r4
  92:quantum/quantum.c **** }
 212              		.loc 1 92 1 is_stmt 0 view .LVU63
 213 0018 BDE81040 		pop	{r4, lr}
 214              		.cfi_remember_state
 215              		.cfi_restore 14
 216              		.cfi_restore 4
 217              		.cfi_def_cfa_offset 0
  91:quantum/quantum.c **** }
 218              		.loc 1 91 5 view .LVU64
 219 001c FFF7FEBF 		b	register_code
 220              	.LVL21:
 221              	.L30:
 222              		.cfi_restore_state
  89:quantum/quantum.c ****     }
 223              		.loc 1 89 9 is_stmt 1 view .LVU65
 224 0020 0149     		ldr	r1, .L33+4
 225 0022 F6E7     		b	.L32
 226              	.L34:
 227              		.align	2
 228              	.L33:
 229 0024 00000000 		.word	register_mods
 230 0028 00000000 		.word	register_weak_mods
 231              		.cfi_endproc
 232              	.LFE297:
 234              		.section	.text.unregister_code16,"ax",%progbits
 235              		.align	1
 236              		.global	unregister_code16
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	unregister_code16:
 242              	.LVL22:
 243              	.LFB298:
  93:quantum/quantum.c **** 
  94:quantum/quantum.c **** void unregister_code16(uint16_t code) {
 244              		.loc 1 94 39 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
  95:quantum/quantum.c ****     unregister_code(code);
 248              		.loc 1 95 5 view .LVU67
  94:quantum/quantum.c ****     unregister_code(code);
 249              		.loc 1 94 39 is_stmt 0 view .LVU68
 250 0000 10B5     		push	{r4, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 4, -8
 253              		.cfi_offset 14, -4
  94:quantum/quantum.c ****     unregister_code(code);
 254              		.loc 1 94 39 view .LVU69
 255 0002 0446     		mov	r4, r0
 256              		.loc 1 95 5 view .LVU70
 257 0004 C0B2     		uxtb	r0, r0
 258              	.LVL23:
 259              		.loc 1 95 5 view .LVU71
 260 0006 FFF7FEFF 		bl	unregister_code
 261              	.LVL24:
  96:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 262              		.loc 1 96 5 is_stmt 1 view .LVU72
 263              		.loc 1 96 8 is_stmt 0 view .LVU73
 264 000a A4F1E003 		sub	r3, r4, #224
 265 000e 072B     		cmp	r3, #7
 266 0010 00D9     		bls	.L36
 267              		.loc 1 96 22 discriminator 1 view .LVU74
 268 0012 2CB9     		cbnz	r4, .L37
 269              	.L36:
  97:quantum/quantum.c ****         do_code16(code, unregister_mods);
 270              		.loc 1 97 9 is_stmt 1 view .LVU75
 271 0014 0349     		ldr	r1, .L39
 272              	.L38:
 273              	.LBB8:
 274              	.LBB9:
  98:quantum/quantum.c ****     } else {
  99:quantum/quantum.c ****         do_code16(code, unregister_weak_mods);
 275              		.loc 1 99 9 is_stmt 0 view .LVU76
 276 0016 2046     		mov	r0, r4
 277              	.LBE9:
 278              	.LBE8:
 100:quantum/quantum.c ****     }
 101:quantum/quantum.c **** }
 279              		.loc 1 101 1 view .LVU77
 280 0018 BDE81040 		pop	{r4, lr}
 281              		.cfi_remember_state
 282              		.cfi_restore 14
 283              		.cfi_restore 4
 284              		.cfi_def_cfa_offset 0
 285              	.LBB12:
 286              	.LBB10:
  99:quantum/quantum.c ****     }
 287              		.loc 1 99 9 view .LVU78
 288 001c FFF7FEBF 		b	do_code16
 289              	.LVL25:
 290              	.L37:
 291              		.cfi_restore_state
  99:quantum/quantum.c ****     }
 292              		.loc 1 99 9 view .LVU79
 293              	.LBE10:
 294              	.LBI8:
  94:quantum/quantum.c ****     unregister_code(code);
 295              		.loc 1 94 6 is_stmt 1 view .LVU80
 296              	.LBB11:
  99:quantum/quantum.c ****     }
 297              		.loc 1 99 9 view .LVU81
 298 0020 0149     		ldr	r1, .L39+4
 299 0022 F8E7     		b	.L38
 300              	.L40:
 301              		.align	2
 302              	.L39:
 303 0024 00000000 		.word	unregister_mods
 304 0028 00000000 		.word	unregister_weak_mods
 305              	.LBE11:
 306              	.LBE12:
 307              		.cfi_endproc
 308              	.LFE298:
 310              		.section	.text.tap_code16,"ax",%progbits
 311              		.align	1
 312              		.global	tap_code16
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 317              	tap_code16:
 318              	.LVL26:
 319              	.LFB299:
 102:quantum/quantum.c **** 
 103:quantum/quantum.c **** void tap_code16(uint16_t code) {
 320              		.loc 1 103 32 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 104:quantum/quantum.c ****     register_code16(code);
 324              		.loc 1 104 5 view .LVU83
 103:quantum/quantum.c ****     register_code16(code);
 325              		.loc 1 103 32 is_stmt 0 view .LVU84
 326 0000 10B5     		push	{r4, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 4, -8
 329              		.cfi_offset 14, -4
 103:quantum/quantum.c ****     register_code16(code);
 330              		.loc 1 103 32 view .LVU85
 331 0002 0446     		mov	r4, r0
 332              		.loc 1 104 5 view .LVU86
 333 0004 FFF7FEFF 		bl	register_code16
 334              	.LVL27:
 105:quantum/quantum.c **** #if TAP_CODE_DELAY > 0
 106:quantum/quantum.c ****     wait_ms(TAP_CODE_DELAY);
 107:quantum/quantum.c **** #endif
 108:quantum/quantum.c ****     unregister_code16(code);
 335              		.loc 1 108 5 is_stmt 1 view .LVU87
 336 0008 2046     		mov	r0, r4
 109:quantum/quantum.c **** }
 337              		.loc 1 109 1 is_stmt 0 view .LVU88
 338 000a BDE81040 		pop	{r4, lr}
 339              		.cfi_restore 14
 340              		.cfi_restore 4
 341              		.cfi_def_cfa_offset 0
 108:quantum/quantum.c **** }
 342              		.loc 1 108 5 view .LVU89
 343 000e FFF7FEBF 		b	unregister_code16
 344              	.LVL28:
 345              		.cfi_endproc
 346              	.LFE299:
 348              		.section	.text.process_action_kb,"ax",%progbits
 349              		.align	1
 350              		.weak	process_action_kb
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 355              	process_action_kb:
 356              	.LVL29:
 357              	.LFB300:
 110:quantum/quantum.c **** 
 111:quantum/quantum.c **** __attribute__((weak)) bool process_action_kb(keyrecord_t *record) { return true; }
 358              		.loc 1 111 67 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363              		.loc 1 111 69 view .LVU91
 364              		.loc 1 111 82 is_stmt 0 view .LVU92
 365 0000 0120     		movs	r0, #1
 366              	.LVL30:
 367              		.loc 1 111 82 view .LVU93
 368 0002 7047     		bx	lr
 369              		.cfi_endproc
 370              	.LFE300:
 372              		.section	.text.process_record_user,"ax",%progbits
 373              		.align	1
 374              		.weak	process_record_user
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 379              	process_record_user:
 380              	.LVL31:
 381              	.LFB302:
 112:quantum/quantum.c **** 
 113:quantum/quantum.c **** __attribute__((weak)) bool process_record_kb(uint16_t keycode, keyrecord_t *record) { return proces
 114:quantum/quantum.c **** 
 115:quantum/quantum.c **** __attribute__((weak)) bool process_record_user(uint16_t keycode, keyrecord_t *record) { return true
 382              		.loc 1 115 87 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387              		.loc 1 115 89 view .LVU95
 388              		.loc 1 115 102 is_stmt 0 view .LVU96
 389 0000 0120     		movs	r0, #1
 390              	.LVL32:
 391              		.loc 1 115 102 view .LVU97
 392 0002 7047     		bx	lr
 393              		.cfi_endproc
 394              	.LFE302:
 396              		.section	.text.process_record_kb,"ax",%progbits
 397              		.align	1
 398              		.weak	process_record_kb
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 403              	process_record_kb:
 404              	.LVL33:
 405              	.LFB301:
 113:quantum/quantum.c **** 
 406              		.loc 1 113 85 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 113:quantum/quantum.c **** 
 410              		.loc 1 113 87 view .LVU99
 113:quantum/quantum.c **** 
 411              		.loc 1 113 85 is_stmt 0 view .LVU100
 412 0000 08B5     		push	{r3, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 3, -8
 415              		.cfi_offset 14, -4
 113:quantum/quantum.c **** 
 416              		.loc 1 113 94 view .LVU101
 417 0002 FFF7FEFF 		bl	process_record_user
 418              	.LVL34:
 113:quantum/quantum.c **** 
 419              		.loc 1 113 132 view .LVU102
 420 0006 08BD     		pop	{r3, pc}
 421              		.cfi_endproc
 422              	.LFE301:
 424              		.section	.text.post_process_record_user,"ax",%progbits
 425              		.align	1
 426              		.weak	post_process_record_user
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 431              	post_process_record_user:
 432              	.LVL35:
 433              	.LFB304:
 116:quantum/quantum.c **** 
 117:quantum/quantum.c **** __attribute__((weak)) void post_process_record_kb(uint16_t keycode, keyrecord_t *record) { post_pro
 118:quantum/quantum.c **** 
 119:quantum/quantum.c **** __attribute__((weak)) void post_process_record_user(uint16_t keycode, keyrecord_t *record) {}
 434              		.loc 1 119 92 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              		.loc 1 119 93 view .LVU104
 440 0000 7047     		bx	lr
 441              		.cfi_endproc
 442              	.LFE304:
 444              		.section	.text.post_process_record_kb,"ax",%progbits
 445              		.align	1
 446              		.weak	post_process_record_kb
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	post_process_record_kb:
 452              	.LVL36:
 453              	.LFB303:
 117:quantum/quantum.c **** 
 454              		.loc 1 117 90 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 117:quantum/quantum.c **** 
 458              		.loc 1 117 92 view .LVU106
 117:quantum/quantum.c **** 
 459              		.loc 1 117 90 is_stmt 0 view .LVU107
 460 0000 08B5     		push	{r3, lr}
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 3, -8
 463              		.cfi_offset 14, -4
 117:quantum/quantum.c **** 
 464              		.loc 1 117 92 view .LVU108
 465 0002 FFF7FEFF 		bl	post_process_record_user
 466              	.LVL37:
 117:quantum/quantum.c **** 
 467              		.loc 1 117 135 view .LVU109
 468 0006 08BD     		pop	{r3, pc}
 469              		.cfi_endproc
 470              	.LFE303:
 472              		.section	.text.get_event_keycode,"ax",%progbits
 473              		.align	1
 474              		.global	get_event_keycode
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 479              	get_event_keycode:
 480              	.LVL38:
 481              	.LFB307:
 120:quantum/quantum.c **** 
 121:quantum/quantum.c **** void reset_keyboard(void) {
 122:quantum/quantum.c ****     clear_keyboard();
 123:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 124:quantum/quantum.c ****     process_midi_all_notes_off();
 125:quantum/quantum.c **** #endif
 126:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 127:quantum/quantum.c **** #    ifndef NO_MUSIC_MODE
 128:quantum/quantum.c ****     music_all_notes_off();
 129:quantum/quantum.c **** #    endif
 130:quantum/quantum.c ****     uint16_t timer_start = timer_read();
 131:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 132:quantum/quantum.c ****     shutdown_user();
 133:quantum/quantum.c ****     while (timer_elapsed(timer_start) < 250) wait_ms(1);
 134:quantum/quantum.c ****     stop_all_notes();
 135:quantum/quantum.c **** #else
 136:quantum/quantum.c ****     shutdown_user();
 137:quantum/quantum.c ****     wait_ms(250);
 138:quantum/quantum.c **** #endif
 139:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 140:quantum/quantum.c ****     haptic_shutdown();
 141:quantum/quantum.c **** #endif
 142:quantum/quantum.c ****     bootloader_jump();
 143:quantum/quantum.c **** }
 144:quantum/quantum.c **** 
 145:quantum/quantum.c **** /* Convert record into usable keycode via the contained event. */
 146:quantum/quantum.c **** uint16_t get_record_keycode(keyrecord_t *record, bool update_layer_cache) {
 147:quantum/quantum.c **** #ifdef COMBO_ENABLE
 148:quantum/quantum.c ****     if (record->keycode) { return record->keycode; }
 149:quantum/quantum.c **** #endif
 150:quantum/quantum.c ****     return get_event_keycode(record->event, update_layer_cache);
 151:quantum/quantum.c **** }
 152:quantum/quantum.c **** 
 153:quantum/quantum.c **** 
 154:quantum/quantum.c **** /* Convert event into usable keycode. Checks the layer cache to ensure that it
 155:quantum/quantum.c ****  * retains the correct keycode after a layer change, if the key is still pressed.
 156:quantum/quantum.c ****  * "update_layer_cache" is to ensure that it only updates the layer cache when
 157:quantum/quantum.c ****  * appropriate, otherwise, it will update it and cause layer tap (and other keys)
 158:quantum/quantum.c ****  * from triggering properly.
 159:quantum/quantum.c ****  */
 160:quantum/quantum.c **** uint16_t get_event_keycode(keyevent_t event, bool update_layer_cache) {
 482              		.loc 1 160 71 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 161:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 162:quantum/quantum.c ****     /* TODO: Use store_or_get_action() or a similar function. */
 163:quantum/quantum.c ****     if (!disable_action_cache) {
 486              		.loc 1 163 5 view .LVU111
 160:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 487              		.loc 1 160 71 is_stmt 0 view .LVU112
 488 0000 13B5     		push	{r0, r1, r4, lr}
 489              		.cfi_def_cfa_offset 16
 490              		.cfi_offset 4, -8
 491              		.cfi_offset 14, -4
 160:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 492              		.loc 1 160 71 view .LVU113
 493 0002 02AB     		add	r3, sp, #8
 494 0004 03E90300 		stmdb	r3, {r0, r1}
 495              		.loc 1 163 9 view .LVU114
 496 0008 0F4B     		ldr	r3, .L58
 497              		.loc 1 163 8 view .LVU115
 498 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 499 000c B3B9     		cbnz	r3, .L48
 500              	.LBB13:
 164:quantum/quantum.c ****         uint8_t layer;
 501              		.loc 1 164 9 is_stmt 1 view .LVU116
 165:quantum/quantum.c **** 
 166:quantum/quantum.c ****         if (event.pressed && update_layer_cache) {
 502              		.loc 1 166 9 view .LVU117
 503              		.loc 1 166 12 is_stmt 0 view .LVU118
 504 000e 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 505 0012 73B1     		cbz	r3, .L49
 506              		.loc 1 166 27 discriminator 1 view .LVU119
 507 0014 6AB1     		cbz	r2, .L49
 167:quantum/quantum.c ****             layer = layer_switch_get_layer(event.key);
 508              		.loc 1 167 13 is_stmt 1 view .LVU120
 509              		.loc 1 167 21 is_stmt 0 view .LVU121
 510 0016 FFF7FEFF 		bl	layer_switch_get_layer
 511              	.LVL39:
 512              		.loc 1 167 21 view .LVU122
 513 001a 0446     		mov	r4, r0
 514              	.LVL40:
 168:quantum/quantum.c ****             update_source_layers_cache(event.key, layer);
 515              		.loc 1 168 13 is_stmt 1 view .LVU123
 516 001c 0146     		mov	r1, r0
 517 001e 0098     		ldr	r0, [sp]
 518              	.LVL41:
 519              		.loc 1 168 13 is_stmt 0 view .LVU124
 520 0020 FFF7FEFF 		bl	update_source_layers_cache
 521              	.LVL42:
 522              	.L50:
 169:quantum/quantum.c ****         } else {
 170:quantum/quantum.c ****             layer = read_source_layers_cache(event.key);
 171:quantum/quantum.c ****         }
 172:quantum/quantum.c ****         return keymap_key_to_keycode(layer, event.key);
 523              		.loc 1 172 9 is_stmt 1 view .LVU125
 524              		.loc 1 172 16 is_stmt 0 view .LVU126
 525 0024 0099     		ldr	r1, [sp]
 526 0026 2046     		mov	r0, r4
 527              	.LVL43:
 528              	.L57:
 529              		.loc 1 172 16 view .LVU127
 530              	.LBE13:
 173:quantum/quantum.c ****     } else
 174:quantum/quantum.c **** #endif
 175:quantum/quantum.c ****         return keymap_key_to_keycode(layer_switch_get_layer(event.key), event.key);
 176:quantum/quantum.c **** }
 531              		.loc 1 176 1 view .LVU128
 532 0028 02B0     		add	sp, sp, #8
 533              		.cfi_remember_state
 534              		.cfi_def_cfa_offset 8
 535              		@ sp needed
 536 002a BDE81040 		pop	{r4, lr}
 537              		.cfi_restore 14
 538              		.cfi_restore 4
 539              		.cfi_def_cfa_offset 0
 175:quantum/quantum.c **** }
 540              		.loc 1 175 16 view .LVU129
 541 002e FFF7FEBF 		b	keymap_key_to_keycode
 542              	.LVL44:
 543              	.L49:
 544              		.cfi_restore_state
 545              	.LBB14:
 170:quantum/quantum.c ****         }
 546              		.loc 1 170 13 is_stmt 1 view .LVU130
 170:quantum/quantum.c ****         }
 547              		.loc 1 170 21 is_stmt 0 view .LVU131
 548 0032 0098     		ldr	r0, [sp]
 549 0034 FFF7FEFF 		bl	read_source_layers_cache
 550              	.LVL45:
 170:quantum/quantum.c ****         }
 551              		.loc 1 170 21 view .LVU132
 552 0038 0446     		mov	r4, r0
 553              	.LVL46:
 170:quantum/quantum.c ****         }
 554              		.loc 1 170 21 view .LVU133
 555 003a F3E7     		b	.L50
 556              	.LVL47:
 557              	.L48:
 170:quantum/quantum.c ****         }
 558              		.loc 1 170 21 view .LVU134
 559              	.LBE14:
 175:quantum/quantum.c **** }
 560              		.loc 1 175 9 is_stmt 1 view .LVU135
 175:quantum/quantum.c **** }
 561              		.loc 1 175 16 is_stmt 0 view .LVU136
 562 003c 0098     		ldr	r0, [sp]
 563 003e FFF7FEFF 		bl	layer_switch_get_layer
 564              	.LVL48:
 175:quantum/quantum.c **** }
 565              		.loc 1 175 16 view .LVU137
 566 0042 0099     		ldr	r1, [sp]
 567 0044 F0E7     		b	.L57
 568              	.L59:
 569 0046 00BF     		.align	2
 570              	.L58:
 571 0048 00000000 		.word	disable_action_cache
 572              		.cfi_endproc
 573              	.LFE307:
 575              		.section	.text.get_record_keycode,"ax",%progbits
 576              		.align	1
 577              		.global	get_record_keycode
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 582              	get_record_keycode:
 583              	.LVL49:
 584              	.LFB306:
 146:quantum/quantum.c **** #ifdef COMBO_ENABLE
 585              		.loc 1 146 75 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 150:quantum/quantum.c **** }
 590              		.loc 1 150 5 view .LVU139
 146:quantum/quantum.c **** #ifdef COMBO_ENABLE
 591              		.loc 1 146 75 is_stmt 0 view .LVU140
 592 0000 0346     		mov	r3, r0
 593 0002 0A46     		mov	r2, r1
 150:quantum/quantum.c **** }
 594              		.loc 1 150 12 view .LVU141
 595 0004 0068     		ldr	r0, [r0]	@ unaligned
 596              	.LVL50:
 150:quantum/quantum.c **** }
 597              		.loc 1 150 12 view .LVU142
 598 0006 9988     		ldrh	r1, [r3, #4]
 599              	.LVL51:
 150:quantum/quantum.c **** }
 600              		.loc 1 150 12 view .LVU143
 601 0008 FFF7FEBF 		b	get_event_keycode
 602              	.LVL52:
 150:quantum/quantum.c **** }
 603              		.loc 1 150 12 view .LVU144
 604              		.cfi_endproc
 605              	.LFE306:
 607              		.section	.text.pre_process_record_quantum,"ax",%progbits
 608              		.align	1
 609              		.global	pre_process_record_quantum
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	pre_process_record_quantum:
 615              	.LVL53:
 616              	.LFB308:
 177:quantum/quantum.c **** 
 178:quantum/quantum.c **** /* Get keycode, and then process pre tapping functionality */
 179:quantum/quantum.c **** bool pre_process_record_quantum(keyrecord_t *record) {
 617              		.loc 1 179 54 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 180:quantum/quantum.c ****     if (!(
 622              		.loc 1 180 5 view .LVU146
 181:quantum/quantum.c **** #ifdef COMBO_ENABLE
 182:quantum/quantum.c ****         process_combo(get_record_keycode(record, true), record) &&
 183:quantum/quantum.c **** #endif
 184:quantum/quantum.c ****         true)) {
 185:quantum/quantum.c ****         return false;
 186:quantum/quantum.c ****     }
 187:quantum/quantum.c ****     return true; // continue processing
 623              		.loc 1 187 5 view .LVU147
 188:quantum/quantum.c **** }
 624              		.loc 1 188 1 is_stmt 0 view .LVU148
 625 0000 0120     		movs	r0, #1
 626              	.LVL54:
 627              		.loc 1 188 1 view .LVU149
 628 0002 7047     		bx	lr
 629              		.cfi_endproc
 630              	.LFE308:
 632              		.section	.text.post_process_record_quantum,"ax",%progbits
 633              		.align	1
 634              		.global	post_process_record_quantum
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	post_process_record_quantum:
 640              	.LVL55:
 641              	.LFB309:
 189:quantum/quantum.c **** 
 190:quantum/quantum.c **** /* Get keycode, and then call keyboard function */
 191:quantum/quantum.c **** void post_process_record_quantum(keyrecord_t *record) {
 642              		.loc 1 191 55 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 192:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, false);
 646              		.loc 1 192 5 view .LVU151
 191:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, false);
 647              		.loc 1 191 55 is_stmt 0 view .LVU152
 648 0000 10B5     		push	{r4, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 4, -8
 651              		.cfi_offset 14, -4
 652              		.loc 1 192 24 view .LVU153
 653 0002 0021     		movs	r1, #0
 191:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, false);
 654              		.loc 1 191 55 view .LVU154
 655 0004 0446     		mov	r4, r0
 656              		.loc 1 192 24 view .LVU155
 657 0006 FFF7FEFF 		bl	get_record_keycode
 658              	.LVL56:
 193:quantum/quantum.c ****     post_process_record_kb(keycode, record);
 659              		.loc 1 193 5 is_stmt 1 view .LVU156
 660 000a 2146     		mov	r1, r4
 661 000c FFF7FEFF 		bl	post_process_record_kb
 662              	.LVL57:
 194:quantum/quantum.c **** }
 663              		.loc 1 194 1 is_stmt 0 view .LVU157
 664 0010 10BD     		pop	{r4, pc}
 665              		.loc 1 194 1 view .LVU158
 666              		.cfi_endproc
 667              	.LFE309:
 669              		.section	.text.set_single_persistent_default_layer,"ax",%progbits
 670              		.align	1
 671              		.global	set_single_persistent_default_layer
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 676              	set_single_persistent_default_layer:
 677              	.LVL58:
 678              	.LFB311:
 195:quantum/quantum.c **** 
 196:quantum/quantum.c **** /* Core keycode function, hands off handling to other functions,
 197:quantum/quantum.c ****     then processes internal quantum keycodes, and then processes
 198:quantum/quantum.c ****     ACTIONs.                                                      */
 199:quantum/quantum.c **** bool process_record_quantum(keyrecord_t *record) {
 200:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, true);
 201:quantum/quantum.c **** 
 202:quantum/quantum.c ****     // This is how you use actions here
 203:quantum/quantum.c ****     // if (keycode == KC_LEAD) {
 204:quantum/quantum.c ****     //   action_t action;
 205:quantum/quantum.c ****     //   action.code = ACTION_DEFAULT_LAYER_SET(0);
 206:quantum/quantum.c ****     //   process_action(record, action);
 207:quantum/quantum.c ****     //   return false;
 208:quantum/quantum.c ****     // }
 209:quantum/quantum.c **** 
 210:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 211:quantum/quantum.c ****     if (velocikey_enabled() && record->event.pressed) {
 212:quantum/quantum.c ****         velocikey_accelerate();
 213:quantum/quantum.c ****     }
 214:quantum/quantum.c **** #endif
 215:quantum/quantum.c **** 
 216:quantum/quantum.c **** #ifdef WPM_ENABLE
 217:quantum/quantum.c ****     if (record->event.pressed) {
 218:quantum/quantum.c ****         update_wpm(keycode);
 219:quantum/quantum.c ****     }
 220:quantum/quantum.c **** #endif
 221:quantum/quantum.c **** 
 222:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 223:quantum/quantum.c ****     preprocess_tap_dance(keycode, record);
 224:quantum/quantum.c **** #endif
 225:quantum/quantum.c **** 
 226:quantum/quantum.c ****     if (!(
 227:quantum/quantum.c **** #if defined(KEY_LOCK_ENABLE)
 228:quantum/quantum.c ****             // Must run first to be able to mask key_up events.
 229:quantum/quantum.c ****             process_key_lock(&keycode, record) &&
 230:quantum/quantum.c **** #endif
 231:quantum/quantum.c **** #if defined(DYNAMIC_MACRO_ENABLE) && !defined(DYNAMIC_MACRO_USER_CALL)
 232:quantum/quantum.c ****             // Must run asap to ensure all keypresses are recorded.
 233:quantum/quantum.c ****             process_dynamic_macro(keycode, record) &&
 234:quantum/quantum.c **** #endif
 235:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(AUDIO_CLICKY)
 236:quantum/quantum.c ****             process_clicky(keycode, record) &&
 237:quantum/quantum.c **** #endif
 238:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 239:quantum/quantum.c ****             process_haptic(keycode, record) &&
 240:quantum/quantum.c **** #endif
 241:quantum/quantum.c **** #if defined(VIA_ENABLE)
 242:quantum/quantum.c ****             process_record_via(keycode, record) &&
 243:quantum/quantum.c **** #endif
 244:quantum/quantum.c ****             process_record_kb(keycode, record) &&
 245:quantum/quantum.c **** #if defined(SEQUENCER_ENABLE)
 246:quantum/quantum.c ****             process_sequencer(keycode, record) &&
 247:quantum/quantum.c **** #endif
 248:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_ADVANCED)
 249:quantum/quantum.c ****             process_midi(keycode, record) &&
 250:quantum/quantum.c **** #endif
 251:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 252:quantum/quantum.c ****             process_audio(keycode, record) &&
 253:quantum/quantum.c **** #endif
 254:quantum/quantum.c **** #if defined(BACKLIGHT_ENABLE) || defined(LED_MATRIX_ENABLE)
 255:quantum/quantum.c ****             process_backlight(keycode, record) &&
 256:quantum/quantum.c **** #endif
 257:quantum/quantum.c **** #ifdef STENO_ENABLE
 258:quantum/quantum.c ****             process_steno(keycode, record) &&
 259:quantum/quantum.c **** #endif
 260:quantum/quantum.c **** #if (defined(AUDIO_ENABLE) || (defined(MIDI_ENABLE) && defined(MIDI_BASIC))) && !defined(NO_MUSIC_M
 261:quantum/quantum.c ****             process_music(keycode, record) &&
 262:quantum/quantum.c **** #endif
 263:quantum/quantum.c **** #ifdef KEY_OVERRIDE_ENABLE
 264:quantum/quantum.c ****             process_key_override(keycode, record) &&
 265:quantum/quantum.c **** #endif
 266:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 267:quantum/quantum.c ****             process_tap_dance(keycode, record) &&
 268:quantum/quantum.c **** #endif
 269:quantum/quantum.c **** #if defined(UNICODE_ENABLE) || defined(UNICODEMAP_ENABLE) || defined(UCIS_ENABLE)
 270:quantum/quantum.c ****             process_unicode_common(keycode, record) &&
 271:quantum/quantum.c **** #endif
 272:quantum/quantum.c **** #ifdef LEADER_ENABLE
 273:quantum/quantum.c ****             process_leader(keycode, record) &&
 274:quantum/quantum.c **** #endif
 275:quantum/quantum.c **** #ifdef PRINTING_ENABLE
 276:quantum/quantum.c ****             process_printer(keycode, record) &&
 277:quantum/quantum.c **** #endif
 278:quantum/quantum.c **** #ifdef AUTO_SHIFT_ENABLE
 279:quantum/quantum.c ****             process_auto_shift(keycode, record) &&
 280:quantum/quantum.c **** #endif
 281:quantum/quantum.c **** #ifdef TERMINAL_ENABLE
 282:quantum/quantum.c ****             process_terminal(keycode, record) &&
 283:quantum/quantum.c **** #endif
 284:quantum/quantum.c **** #ifdef SPACE_CADET_ENABLE
 285:quantum/quantum.c ****             process_space_cadet(keycode, record) &&
 286:quantum/quantum.c **** #endif
 287:quantum/quantum.c **** #ifdef MAGIC_KEYCODE_ENABLE
 288:quantum/quantum.c ****             process_magic(keycode, record) &&
 289:quantum/quantum.c **** #endif
 290:quantum/quantum.c **** #ifdef GRAVE_ESC_ENABLE
 291:quantum/quantum.c ****             process_grave_esc(keycode, record) &&
 292:quantum/quantum.c **** #endif
 293:quantum/quantum.c **** #if defined(RGBLIGHT_ENABLE) || defined(RGB_MATRIX_ENABLE)
 294:quantum/quantum.c ****             process_rgb(keycode, record) &&
 295:quantum/quantum.c **** #endif
 296:quantum/quantum.c **** #ifdef JOYSTICK_ENABLE
 297:quantum/quantum.c ****             process_joystick(keycode, record) &&
 298:quantum/quantum.c **** #endif
 299:quantum/quantum.c ****             true)) {
 300:quantum/quantum.c ****         return false;
 301:quantum/quantum.c ****     }
 302:quantum/quantum.c **** 
 303:quantum/quantum.c ****     if (record->event.pressed) {
 304:quantum/quantum.c ****         switch (keycode) {
 305:quantum/quantum.c **** #ifndef NO_RESET
 306:quantum/quantum.c ****             case RESET:
 307:quantum/quantum.c ****                 reset_keyboard();
 308:quantum/quantum.c ****                 return false;
 309:quantum/quantum.c **** #endif
 310:quantum/quantum.c **** #ifndef NO_DEBUG
 311:quantum/quantum.c ****             case DEBUG:
 312:quantum/quantum.c ****                 debug_enable ^= 1;
 313:quantum/quantum.c ****                 if (debug_enable) {
 314:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 315:quantum/quantum.c ****                 } else {
 316:quantum/quantum.c ****                     print("DEBUG: disabled.\n");
 317:quantum/quantum.c ****                 }
 318:quantum/quantum.c **** #endif
 319:quantum/quantum.c ****                 return false;
 320:quantum/quantum.c ****             case EEPROM_RESET:
 321:quantum/quantum.c ****                 eeconfig_init();
 322:quantum/quantum.c ****                 return false;
 323:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 324:quantum/quantum.c ****             case VLK_TOG:
 325:quantum/quantum.c ****                 velocikey_toggle();
 326:quantum/quantum.c ****                 return false;
 327:quantum/quantum.c **** #endif
 328:quantum/quantum.c **** #ifdef BLUETOOTH_ENABLE
 329:quantum/quantum.c ****             case OUT_AUTO:
 330:quantum/quantum.c ****                 set_output(OUTPUT_AUTO);
 331:quantum/quantum.c ****                 return false;
 332:quantum/quantum.c ****             case OUT_USB:
 333:quantum/quantum.c ****                 set_output(OUTPUT_USB);
 334:quantum/quantum.c ****                 return false;
 335:quantum/quantum.c ****             case OUT_BT:
 336:quantum/quantum.c ****                 set_output(OUTPUT_BLUETOOTH);
 337:quantum/quantum.c ****                 return false;
 338:quantum/quantum.c **** #endif
 339:quantum/quantum.c **** #ifndef NO_ACTION_ONESHOT
 340:quantum/quantum.c ****             case ONESHOT_TOGGLE:
 341:quantum/quantum.c ****                 oneshot_toggle();
 342:quantum/quantum.c ****                 break;
 343:quantum/quantum.c ****             case ONESHOT_ENABLE:
 344:quantum/quantum.c ****                 oneshot_enable();
 345:quantum/quantum.c ****                 break;
 346:quantum/quantum.c ****             case ONESHOT_DISABLE:
 347:quantum/quantum.c ****                 oneshot_disable();
 348:quantum/quantum.c ****                 break;
 349:quantum/quantum.c **** #endif
 350:quantum/quantum.c ****         }
 351:quantum/quantum.c ****     }
 352:quantum/quantum.c **** 
 353:quantum/quantum.c ****     return process_action_kb(record);
 354:quantum/quantum.c **** }
 355:quantum/quantum.c **** 
 356:quantum/quantum.c **** void set_single_persistent_default_layer(uint8_t default_layer) {
 679              		.loc 1 356 65 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 357:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(DEFAULT_LAYER_SONGS)
 358:quantum/quantum.c ****     PLAY_SONG(default_layer_songs[default_layer]);
 683              		.loc 1 358 5 view .LVU160
 356:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(DEFAULT_LAYER_SONGS)
 684              		.loc 1 356 65 is_stmt 0 view .LVU161
 685 0000 38B5     		push	{r3, r4, r5, lr}
 686              		.cfi_def_cfa_offset 16
 687              		.cfi_offset 3, -16
 688              		.cfi_offset 4, -12
 689              		.cfi_offset 5, -8
 690              		.cfi_offset 14, -4
 356:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(DEFAULT_LAYER_SONGS)
 691              		.loc 1 356 65 view .LVU162
 692 0002 0546     		mov	r5, r0
 693              		.loc 1 358 5 view .LVU163
 694 0004 0848     		ldr	r0, .L64
 695              	.LVL59:
 359:quantum/quantum.c **** #endif
 360:quantum/quantum.c ****     eeconfig_update_default_layer((layer_state_t)1 << default_layer);
 696              		.loc 1 360 52 view .LVU164
 697 0006 0124     		movs	r4, #1
 358:quantum/quantum.c **** #endif
 698              		.loc 1 358 5 view .LVU165
 699 0008 00EBC510 		add	r0, r0, r5, lsl #7
 700              		.loc 1 360 52 view .LVU166
 701 000c AC40     		lsls	r4, r4, r5
 358:quantum/quantum.c **** #endif
 702              		.loc 1 358 5 view .LVU167
 703 000e 0022     		movs	r2, #0
 704 0010 1021     		movs	r1, #16
 705 0012 FFF7FEFF 		bl	audio_play_melody
 706              	.LVL60:
 707              		.loc 1 360 5 is_stmt 1 view .LVU168
 708 0016 E0B2     		uxtb	r0, r4
 709 0018 FFF7FEFF 		bl	eeconfig_update_default_layer
 710              	.LVL61:
 361:quantum/quantum.c ****     default_layer_set((layer_state_t)1 << default_layer);
 711              		.loc 1 361 5 view .LVU169
 712 001c 2046     		mov	r0, r4
 362:quantum/quantum.c **** }
 713              		.loc 1 362 1 is_stmt 0 view .LVU170
 714 001e BDE83840 		pop	{r3, r4, r5, lr}
 715              		.cfi_restore 14
 716              		.cfi_restore 5
 717              		.cfi_restore 4
 718              		.cfi_restore 3
 719              		.cfi_def_cfa_offset 0
 361:quantum/quantum.c ****     default_layer_set((layer_state_t)1 << default_layer);
 720              		.loc 1 361 5 view .LVU171
 721 0022 FFF7FEBF 		b	default_layer_set
 722              	.LVL62:
 723              	.L65:
 724 0026 00BF     		.align	2
 725              	.L64:
 726 0028 00000000 		.word	default_layer_songs
 727              		.cfi_endproc
 728              	.LFE311:
 730              		.section	.text.update_tri_layer_state,"ax",%progbits
 731              		.align	1
 732              		.global	update_tri_layer_state
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 737              	update_tri_layer_state:
 738              	.LVL63:
 739              	.LFB312:
 363:quantum/quantum.c **** 
 364:quantum/quantum.c **** layer_state_t update_tri_layer_state(layer_state_t state, uint8_t layer1, uint8_t layer2, uint8_t l
 740              		.loc 1 364 107 is_stmt 1 view -0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 365:quantum/quantum.c ****     layer_state_t mask12 = ((layer_state_t)1 << layer1) | ((layer_state_t)1 << layer2);
 744              		.loc 1 365 5 view .LVU173
 364:quantum/quantum.c ****     layer_state_t mask12 = ((layer_state_t)1 << layer1) | ((layer_state_t)1 << layer2);
 745              		.loc 1 364 107 is_stmt 0 view .LVU174
 746 0000 10B5     		push	{r4, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 4, -8
 749              		.cfi_offset 14, -4
 750              		.loc 1 365 46 view .LVU175
 751 0002 0124     		movs	r4, #1
 752              		.loc 1 365 77 view .LVU176
 753 0004 04FA02F2 		lsl	r2, r4, r2
 754              	.LVL64:
 755              		.loc 1 365 46 view .LVU177
 756 0008 04FA01F1 		lsl	r1, r4, r1
 757              	.LVL65:
 758              		.loc 1 365 19 view .LVU178
 759 000c 1143     		orrs	r1, r1, r2
 760              	.LVL66:
 366:quantum/quantum.c ****     layer_state_t mask3  = (layer_state_t)1 << layer3;
 761              		.loc 1 366 5 is_stmt 1 view .LVU179
 762              		.loc 1 366 19 is_stmt 0 view .LVU180
 763 000e 9C40     		lsls	r4, r4, r3
 764              	.LVL67:
 367:quantum/quantum.c ****     return (state & mask12) == mask12 ? (state | mask3) : (state & ~mask3);
 765              		.loc 1 367 5 is_stmt 1 view .LVU181
 766              		.loc 1 367 57 is_stmt 0 view .LVU182
 767 0010 8143     		bics	r1, r1, r0
 768              	.LVL68:
 769              		.loc 1 367 57 view .LVU183
 770 0012 0CBF     		ite	eq
 771 0014 2043     		orreq	r0, r0, r4
 772              	.LVL69:
 773              		.loc 1 367 57 view .LVU184
 774 0016 A043     		bicne	r0, r0, r4
 368:quantum/quantum.c **** }
 775              		.loc 1 368 1 view .LVU185
 776 0018 10BD     		pop	{r4, pc}
 777              		.loc 1 368 1 view .LVU186
 778              		.cfi_endproc
 779              	.LFE312:
 781              		.section	.text.update_tri_layer,"ax",%progbits
 782              		.align	1
 783              		.global	update_tri_layer
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 788              	update_tri_layer:
 789              	.LVL70:
 790              	.LFB313:
 369:quantum/quantum.c **** 
 370:quantum/quantum.c **** void update_tri_layer(uint8_t layer1, uint8_t layer2, uint8_t layer3) { layer_state_set(update_tri_
 791              		.loc 1 370 71 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		.loc 1 370 73 view .LVU188
 796              		.loc 1 370 71 is_stmt 0 view .LVU189
 797 0000 08B5     		push	{r3, lr}
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 3, -8
 800              		.cfi_offset 14, -4
 801              		.loc 1 370 71 view .LVU190
 802 0002 1346     		mov	r3, r2
 803              		.loc 1 370 73 view .LVU191
 804 0004 0A46     		mov	r2, r1
 805              	.LVL71:
 806              		.loc 1 370 73 view .LVU192
 807 0006 0146     		mov	r1, r0
 808              	.LVL72:
 809              		.loc 1 370 73 view .LVU193
 810 0008 0348     		ldr	r0, .L70
 811              	.LVL73:
 812              		.loc 1 370 73 view .LVU194
 813 000a 0068     		ldr	r0, [r0]
 814 000c FFF7FEFF 		bl	update_tri_layer_state
 815              	.LVL74:
 816              		.loc 1 370 151 view .LVU195
 817 0010 BDE80840 		pop	{r3, lr}
 818              		.cfi_restore 14
 819              		.cfi_restore 3
 820              		.cfi_def_cfa_offset 0
 821              		.loc 1 370 73 view .LVU196
 822 0014 FFF7FEBF 		b	layer_state_set
 823              	.LVL75:
 824              	.L71:
 825              		.align	2
 826              	.L70:
 827 0018 00000000 		.word	layer_state
 828              		.cfi_endproc
 829              	.LFE313:
 831              		.section	.text.matrix_init_quantum,"ax",%progbits
 832              		.align	1
 833              		.global	matrix_init_quantum
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 838              	matrix_init_quantum:
 839              	.LFB314:
 371:quantum/quantum.c **** 
 372:quantum/quantum.c **** void matrix_init_quantum() {
 840              		.loc 1 372 28 is_stmt 1 view -0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 373:quantum/quantum.c ****     magic();
 844              		.loc 1 373 5 view .LVU198
 372:quantum/quantum.c ****     magic();
 845              		.loc 1 372 28 is_stmt 0 view .LVU199
 846 0000 08B5     		push	{r3, lr}
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 3, -8
 849              		.cfi_offset 14, -4
 850              		.loc 1 373 5 view .LVU200
 851 0002 FFF7FEFF 		bl	magic
 852              	.LVL76:
 374:quantum/quantum.c ****     led_init_ports();
 853              		.loc 1 374 5 is_stmt 1 view .LVU201
 854 0006 FFF7FEFF 		bl	led_init_ports
 855              	.LVL77:
 375:quantum/quantum.c **** #ifdef BACKLIGHT_ENABLE
 376:quantum/quantum.c ****     backlight_init_ports();
 377:quantum/quantum.c **** #endif
 378:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 379:quantum/quantum.c ****     audio_init();
 856              		.loc 1 379 5 view .LVU202
 857 000a FFF7FEFF 		bl	audio_init
 858              	.LVL78:
 380:quantum/quantum.c **** #endif
 381:quantum/quantum.c **** #ifdef LED_MATRIX_ENABLE
 382:quantum/quantum.c ****     led_matrix_init();
 383:quantum/quantum.c **** #endif
 384:quantum/quantum.c **** #ifdef RGB_MATRIX_ENABLE
 385:quantum/quantum.c ****     rgb_matrix_init();
 386:quantum/quantum.c **** #endif
 387:quantum/quantum.c **** #if defined(UNICODE_ENABLE) || defined(UNICODEMAP_ENABLE) || defined(UCIS_ENABLE)
 388:quantum/quantum.c ****     unicode_input_mode_init();
 389:quantum/quantum.c **** #endif
 390:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 391:quantum/quantum.c ****     haptic_init();
 392:quantum/quantum.c **** #endif
 393:quantum/quantum.c **** #if defined(BLUETOOTH_ENABLE) && defined(OUTPUT_AUTO_ENABLE)
 394:quantum/quantum.c ****     set_output(OUTPUT_AUTO);
 395:quantum/quantum.c **** #endif
 396:quantum/quantum.c **** 
 397:quantum/quantum.c ****     matrix_init_kb();
 859              		.loc 1 397 5 view .LVU203
 398:quantum/quantum.c **** }
 860              		.loc 1 398 1 is_stmt 0 view .LVU204
 861 000e BDE80840 		pop	{r3, lr}
 862              		.cfi_restore 14
 863              		.cfi_restore 3
 864              		.cfi_def_cfa_offset 0
 397:quantum/quantum.c **** }
 865              		.loc 1 397 5 view .LVU205
 866 0012 FFF7FEBF 		b	matrix_init_kb
 867              	.LVL79:
 868              		.cfi_endproc
 869              	.LFE314:
 871              		.section	.text.matrix_scan_quantum,"ax",%progbits
 872              		.align	1
 873              		.global	matrix_scan_quantum
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 878              	matrix_scan_quantum:
 879              	.LFB315:
 399:quantum/quantum.c **** 
 400:quantum/quantum.c **** void matrix_scan_quantum() {
 880              		.loc 1 400 28 is_stmt 1 view -0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 401:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(AUDIO_INIT_DELAY)
 402:quantum/quantum.c ****     // There are some tasks that need to be run a little bit
 403:quantum/quantum.c ****     // after keyboard startup, or else they will not work correctly
 404:quantum/quantum.c ****     // because of interaction with the USB device state, which
 405:quantum/quantum.c ****     // may still be in flux...
 406:quantum/quantum.c ****     //
 407:quantum/quantum.c ****     // At the moment the only feature that needs this is the
 408:quantum/quantum.c ****     // startup song.
 409:quantum/quantum.c ****     static bool     delayed_tasks_run  = false;
 410:quantum/quantum.c ****     static uint16_t delayed_task_timer = 0;
 411:quantum/quantum.c ****     if (!delayed_tasks_run) {
 412:quantum/quantum.c ****         if (!delayed_task_timer) {
 413:quantum/quantum.c ****             delayed_task_timer = timer_read();
 414:quantum/quantum.c ****         } else if (timer_elapsed(delayed_task_timer) > 300) {
 415:quantum/quantum.c ****             audio_startup();
 416:quantum/quantum.c ****             delayed_tasks_run = true;
 417:quantum/quantum.c ****         }
 418:quantum/quantum.c ****     }
 419:quantum/quantum.c **** #endif
 420:quantum/quantum.c **** 
 421:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && !defined(NO_MUSIC_MODE)
 422:quantum/quantum.c ****     music_task();
 884              		.loc 1 422 5 view .LVU207
 400:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(AUDIO_INIT_DELAY)
 885              		.loc 1 400 28 is_stmt 0 view .LVU208
 886 0000 08B5     		push	{r3, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 3, -8
 889              		.cfi_offset 14, -4
 890              		.loc 1 422 5 view .LVU209
 891 0002 FFF7FEFF 		bl	music_task
 892              	.LVL80:
 423:quantum/quantum.c **** #endif
 424:quantum/quantum.c **** 
 425:quantum/quantum.c **** #ifdef KEY_OVERRIDE_ENABLE
 426:quantum/quantum.c ****     key_override_task();
 427:quantum/quantum.c **** #endif
 428:quantum/quantum.c **** 
 429:quantum/quantum.c **** #ifdef SEQUENCER_ENABLE
 430:quantum/quantum.c ****     sequencer_task();
 431:quantum/quantum.c **** #endif
 432:quantum/quantum.c **** 
 433:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 434:quantum/quantum.c ****     tap_dance_task();
 435:quantum/quantum.c **** #endif
 436:quantum/quantum.c **** 
 437:quantum/quantum.c **** #ifdef COMBO_ENABLE
 438:quantum/quantum.c ****     combo_task();
 439:quantum/quantum.c **** #endif
 440:quantum/quantum.c **** 
 441:quantum/quantum.c **** #ifdef LED_MATRIX_ENABLE
 442:quantum/quantum.c ****     led_matrix_task();
 443:quantum/quantum.c **** #endif
 444:quantum/quantum.c **** 
 445:quantum/quantum.c **** #ifdef WPM_ENABLE
 446:quantum/quantum.c ****     decay_wpm();
 447:quantum/quantum.c **** #endif
 448:quantum/quantum.c **** 
 449:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 450:quantum/quantum.c ****     haptic_task();
 451:quantum/quantum.c **** #endif
 452:quantum/quantum.c **** 
 453:quantum/quantum.c **** #ifdef DIP_SWITCH_ENABLE
 454:quantum/quantum.c ****     dip_switch_read(false);
 893              		.loc 1 454 5 is_stmt 1 view .LVU210
 894 0006 0020     		movs	r0, #0
 895 0008 FFF7FEFF 		bl	dip_switch_read
 896              	.LVL81:
 455:quantum/quantum.c **** #endif
 456:quantum/quantum.c **** 
 457:quantum/quantum.c **** #ifdef AUTO_SHIFT_ENABLE
 458:quantum/quantum.c ****     autoshift_matrix_scan();
 459:quantum/quantum.c **** #endif
 460:quantum/quantum.c **** 
 461:quantum/quantum.c ****     matrix_scan_kb();
 897              		.loc 1 461 5 view .LVU211
 462:quantum/quantum.c **** }
 898              		.loc 1 462 1 is_stmt 0 view .LVU212
 899 000c BDE80840 		pop	{r3, lr}
 900              		.cfi_restore 14
 901              		.cfi_restore 3
 902              		.cfi_def_cfa_offset 0
 461:quantum/quantum.c **** }
 903              		.loc 1 461 5 view .LVU213
 904 0010 FFF7FEBF 		b	matrix_scan_kb
 905              	.LVL82:
 906              		.cfi_endproc
 907              	.LFE315:
 909              		.section	.text.api_send_unicode,"ax",%progbits
 910              		.align	1
 911              		.global	api_send_unicode
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 916              	api_send_unicode:
 917              	.LVL83:
 918              	.LFB316:
 463:quantum/quantum.c **** 
 464:quantum/quantum.c **** #ifdef HD44780_ENABLED
 465:quantum/quantum.c **** #    include "hd44780.h"
 466:quantum/quantum.c **** #endif
 467:quantum/quantum.c **** 
 468:quantum/quantum.c **** void api_send_unicode(uint32_t unicode) {
 919              		.loc 1 468 41 is_stmt 1 view -0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              		@ link register save eliminated.
 469:quantum/quantum.c **** #ifdef API_ENABLE
 470:quantum/quantum.c ****     uint8_t chunk[4];
 471:quantum/quantum.c ****     dword_to_bytes(unicode, chunk);
 472:quantum/quantum.c ****     MT_SEND_DATA(DT_UNICODE, chunk, 5);
 473:quantum/quantum.c **** #endif
 474:quantum/quantum.c **** }
 924              		.loc 1 474 1 view .LVU215
 925 0000 7047     		bx	lr
 926              		.cfi_endproc
 927              	.LFE316:
 929              		.section	.text.startup_user,"ax",%progbits
 930              		.align	1
 931              		.weak	startup_user
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 936              	startup_user:
 937              	.LFB317:
 475:quantum/quantum.c **** 
 476:quantum/quantum.c **** //------------------------------------------------------------------------------
 477:quantum/quantum.c **** // Override these functions in your keymap file to play different tunes on
 478:quantum/quantum.c **** // different events such as startup and bootloader jump
 479:quantum/quantum.c **** 
 480:quantum/quantum.c **** __attribute__((weak)) void startup_user() {}
 938              		.loc 1 480 43 view -0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943              		.loc 1 480 44 view .LVU217
 944 0000 7047     		bx	lr
 945              		.cfi_endproc
 946              	.LFE317:
 948              		.section	.text.shutdown_user,"ax",%progbits
 949              		.align	1
 950              		.weak	shutdown_user
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 955              	shutdown_user:
 956              	.LFB322:
 957              		.cfi_startproc
 481:quantum/quantum.c **** 
 482:quantum/quantum.c **** __attribute__((weak)) void shutdown_user() {}
 958              		.loc 1 482 28 view -0
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              		@ link register save eliminated.
 962 0000 7047     		bx	lr
 963              		.cfi_endproc
 964              	.LFE322:
 966              		.section	.text.reset_keyboard,"ax",%progbits
 967              		.align	1
 968              		.global	reset_keyboard
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 973              	reset_keyboard:
 974              	.LFB305:
 121:quantum/quantum.c ****     clear_keyboard();
 975              		.loc 1 121 27 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 122:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 979              		.loc 1 122 5 view .LVU220
 121:quantum/quantum.c ****     clear_keyboard();
 980              		.loc 1 121 27 is_stmt 0 view .LVU221
 981 0000 10B5     		push	{r4, lr}
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 4, -8
 984              		.cfi_offset 14, -4
 122:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 985              		.loc 1 122 5 view .LVU222
 986 0002 FFF7FEFF 		bl	clear_keyboard
 987              	.LVL84:
 128:quantum/quantum.c **** #    endif
 988              		.loc 1 128 5 is_stmt 1 view .LVU223
 989 0006 FFF7FEFF 		bl	music_all_notes_off
 990              	.LVL85:
 130:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 991              		.loc 1 130 5 view .LVU224
 130:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 992              		.loc 1 130 28 is_stmt 0 view .LVU225
 993 000a FFF7FEFF 		bl	timer_read
 994              	.LVL86:
 131:quantum/quantum.c ****     shutdown_user();
 995              		.loc 1 131 5 view .LVU226
 996 000e 0022     		movs	r2, #0
 130:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 997              		.loc 1 130 28 view .LVU227
 998 0010 0446     		mov	r4, r0
 999              	.LVL87:
 131:quantum/quantum.c ****     shutdown_user();
 1000              		.loc 1 131 5 is_stmt 1 view .LVU228
 1001 0012 0321     		movs	r1, #3
 1002 0014 0948     		ldr	r0, .L80
 1003 0016 FFF7FEFF 		bl	audio_play_melody
 1004              	.LVL88:
 132:quantum/quantum.c ****     while (timer_elapsed(timer_start) < 250) wait_ms(1);
 1005              		.loc 1 132 5 view .LVU229
 1006 001a FFF7FEFF 		bl	shutdown_user
 1007              	.LVL89:
 133:quantum/quantum.c ****     stop_all_notes();
 1008              		.loc 1 133 5 view .LVU230
 1009              	.L78:
 133:quantum/quantum.c ****     stop_all_notes();
 1010              		.loc 1 133 46 discriminator 4 view .LVU231
 133:quantum/quantum.c ****     stop_all_notes();
 1011              		.loc 1 133 39 discriminator 4 view .LVU232
 133:quantum/quantum.c ****     stop_all_notes();
 1012              		.loc 1 133 12 is_stmt 0 discriminator 4 view .LVU233
 1013 001e 2046     		mov	r0, r4
 1014 0020 FFF7FEFF 		bl	timer_elapsed
 1015              	.LVL90:
 133:quantum/quantum.c ****     stop_all_notes();
 1016              		.loc 1 133 39 discriminator 4 view .LVU234
 1017 0024 F928     		cmp	r0, #249
 1018 0026 05D9     		bls	.L79
 134:quantum/quantum.c **** #else
 1019              		.loc 1 134 5 is_stmt 1 view .LVU235
 1020 0028 FFF7FEFF 		bl	audio_stop_all
 1021              	.LVL91:
 142:quantum/quantum.c **** }
 1022              		.loc 1 142 5 view .LVU236
 143:quantum/quantum.c **** 
 1023              		.loc 1 143 1 is_stmt 0 view .LVU237
 1024 002c BDE81040 		pop	{r4, lr}
 1025              		.cfi_remember_state
 1026              		.cfi_restore 14
 1027              		.cfi_restore 4
 1028              		.cfi_def_cfa_offset 0
 1029              	.LVL92:
 142:quantum/quantum.c **** }
 1030              		.loc 1 142 5 view .LVU238
 1031 0030 FFF7FEBF 		b	bootloader_jump
 1032              	.LVL93:
 1033              	.L79:
 1034              		.cfi_restore_state
 133:quantum/quantum.c ****     stop_all_notes();
 1035              		.loc 1 133 46 is_stmt 1 discriminator 1 view .LVU239
 133:quantum/quantum.c ****     stop_all_notes();
 1036              		.loc 1 133 46 discriminator 1 view .LVU240
 133:quantum/quantum.c ****     stop_all_notes();
 1037              		.loc 1 133 46 discriminator 1 view .LVU241
 1038 0034 0A20     		movs	r0, #10
 1039 0036 FFF7FEFF 		bl	chThdSleep
 1040              	.LVL94:
 1041 003a F0E7     		b	.L78
 1042              	.L81:
 1043              		.align	2
 1044              	.L80:
 1045 003c 00000000 		.word	goodbye_song
 1046              		.cfi_endproc
 1047              	.LFE305:
 1049              		.section	.rodata.process_record_quantum.str1.1,"aMS",%progbits,1
 1050              	.LC0:
 1051 0000 44454255 		.ascii	"DEBUG: enabled.\012\000"
 1051      473A2065 
 1051      6E61626C 
 1051      65642E0A 
 1051      00
 1052              	.LC1:
 1053 0011 44454255 		.ascii	"DEBUG: disabled.\012\000"
 1053      473A2064 
 1053      69736162 
 1053      6C65642E 
 1053      0A00
 1054              		.section	.text.process_record_quantum,"ax",%progbits
 1055              		.align	1
 1056              		.global	process_record_quantum
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1061              	process_record_quantum:
 1062              	.LVL95:
 1063              	.LFB310:
 199:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, true);
 1064              		.loc 1 199 50 view -0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 0, uses_anonymous_args = 0
 200:quantum/quantum.c **** 
 1068              		.loc 1 200 5 view .LVU243
 199:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, true);
 1069              		.loc 1 199 50 is_stmt 0 view .LVU244
 1070 0000 38B5     		push	{r3, r4, r5, lr}
 1071              		.cfi_def_cfa_offset 16
 1072              		.cfi_offset 3, -16
 1073              		.cfi_offset 4, -12
 1074              		.cfi_offset 5, -8
 1075              		.cfi_offset 14, -4
 200:quantum/quantum.c **** 
 1076              		.loc 1 200 24 view .LVU245
 1077 0002 0121     		movs	r1, #1
 199:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record, true);
 1078              		.loc 1 199 50 view .LVU246
 1079 0004 0546     		mov	r5, r0
 200:quantum/quantum.c **** 
 1080              		.loc 1 200 24 view .LVU247
 1081 0006 FFF7FEFF 		bl	get_record_keycode
 1082              	.LVL96:
 244:quantum/quantum.c **** #if defined(SEQUENCER_ENABLE)
 1083              		.loc 1 244 13 view .LVU248
 1084 000a 2946     		mov	r1, r5
 200:quantum/quantum.c **** 
 1085              		.loc 1 200 24 view .LVU249
 1086 000c 0446     		mov	r4, r0
 1087              	.LVL97:
 226:quantum/quantum.c **** #if defined(KEY_LOCK_ENABLE)
 1088              		.loc 1 226 5 is_stmt 1 view .LVU250
 244:quantum/quantum.c **** #if defined(SEQUENCER_ENABLE)
 1089              		.loc 1 244 13 is_stmt 0 view .LVU251
 1090 000e FFF7FEFF 		bl	process_record_kb
 1091              	.LVL98:
 288:quantum/quantum.c **** #endif
 1092              		.loc 1 288 44 view .LVU252
 1093 0012 D8B3     		cbz	r0, .L84
 252:quantum/quantum.c **** #endif
 1094              		.loc 1 252 13 view .LVU253
 1095 0014 2946     		mov	r1, r5
 1096 0016 2046     		mov	r0, r4
 1097 0018 FFF7FEFF 		bl	process_audio
 1098              	.LVL99:
 244:quantum/quantum.c **** #if defined(SEQUENCER_ENABLE)
 1099              		.loc 1 244 48 view .LVU254
 1100 001c B0B3     		cbz	r0, .L84
 261:quantum/quantum.c **** #endif
 1101              		.loc 1 261 13 view .LVU255
 1102 001e 2946     		mov	r1, r5
 1103 0020 2046     		mov	r0, r4
 1104 0022 FFF7FEFF 		bl	process_music
 1105              	.LVL100:
 252:quantum/quantum.c **** #endif
 1106              		.loc 1 252 44 view .LVU256
 1107 0026 88B3     		cbz	r0, .L84
 285:quantum/quantum.c **** #endif
 1108              		.loc 1 285 13 view .LVU257
 1109 0028 2946     		mov	r1, r5
 1110 002a 2046     		mov	r0, r4
 1111 002c FFF7FEFF 		bl	process_space_cadet
 1112              	.LVL101:
 261:quantum/quantum.c **** #endif
 1113              		.loc 1 261 44 view .LVU258
 1114 0030 60B3     		cbz	r0, .L84
 288:quantum/quantum.c **** #endif
 1115              		.loc 1 288 13 view .LVU259
 1116 0032 2946     		mov	r1, r5
 1117 0034 2046     		mov	r0, r4
 1118 0036 FFF7FEFF 		bl	process_magic
 1119              	.LVL102:
 285:quantum/quantum.c **** #endif
 1120              		.loc 1 285 50 view .LVU260
 1121 003a 38B3     		cbz	r0, .L84
 291:quantum/quantum.c **** #endif
 1122              		.loc 1 291 13 discriminator 2 view .LVU261
 1123 003c 2946     		mov	r1, r5
 1124 003e 2046     		mov	r0, r4
 1125 0040 FFF7FEFF 		bl	process_grave_esc
 1126              	.LVL103:
 288:quantum/quantum.c **** #endif
 1127              		.loc 1 288 44 discriminator 2 view .LVU262
 1128 0044 10B3     		cbz	r0, .L84
 303:quantum/quantum.c ****         switch (keycode) {
 1129              		.loc 1 303 5 is_stmt 1 view .LVU263
 303:quantum/quantum.c ****         switch (keycode) {
 1130              		.loc 1 303 8 is_stmt 0 view .LVU264
 1131 0046 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1132 0048 7BB1     		cbz	r3, .L86
 304:quantum/quantum.c **** #ifndef NO_RESET
 1133              		.loc 1 304 9 is_stmt 1 view .LVU265
 1134 004a 45F65B53 		movw	r3, #23899
 1135 004e 9C42     		cmp	r4, r3
 1136 0050 31D0     		beq	.L87
 1137 0052 0ED8     		bhi	.L88
 1138 0054 45F60143 		movw	r3, #23553
 1139 0058 9C42     		cmp	r4, r3
 1140 005a 19D0     		beq	.L89
 1141 005c 45F6DF43 		movw	r3, #23775
 1142 0060 9C42     		cmp	r4, r3
 1143 0062 25D0     		beq	.L90
 1144 0064 B4F5B84F 		cmp	r4, #23552
 1145 0068 0ED0     		beq	.L91
 1146              	.L86:
 353:quantum/quantum.c **** }
 1147              		.loc 1 353 5 view .LVU266
 353:quantum/quantum.c **** }
 1148              		.loc 1 353 12 is_stmt 0 view .LVU267
 1149 006a 2846     		mov	r0, r5
 1150 006c FFF7FEFF 		bl	process_action_kb
 1151              	.LVL104:
 1152 0070 0DE0     		b	.L94
 1153              	.L88:
 304:quantum/quantum.c **** #ifndef NO_RESET
 1154              		.loc 1 304 9 view .LVU268
 1155 0072 45F65C53 		movw	r3, #23900
 1156 0076 9C42     		cmp	r4, r3
 1157 0078 20D0     		beq	.L92
 1158 007a 45F65D53 		movw	r3, #23901
 1159 007e 9C42     		cmp	r4, r3
 1160 0080 F3D1     		bne	.L86
 341:quantum/quantum.c ****                 break;
 1161              		.loc 1 341 17 is_stmt 1 view .LVU269
 1162 0082 FFF7FEFF 		bl	oneshot_toggle
 1163              	.LVL105:
 342:quantum/quantum.c ****             case ONESHOT_ENABLE:
 1164              		.loc 1 342 17 view .LVU270
 1165 0086 F0E7     		b	.L86
 1166              	.L91:
 307:quantum/quantum.c ****                 return false;
 1167              		.loc 1 307 17 view .LVU271
 1168 0088 FFF7FEFF 		bl	reset_keyboard
 1169              	.LVL106:
 308:quantum/quantum.c **** #endif
 1170              		.loc 1 308 17 view .LVU272
 1171              	.L84:
 300:quantum/quantum.c ****     }
 1172              		.loc 1 300 16 is_stmt 0 view .LVU273
 1173 008c 0020     		movs	r0, #0
 1174              	.L94:
 354:quantum/quantum.c **** 
 1175              		.loc 1 354 1 view .LVU274
 1176 008e 38BD     		pop	{r3, r4, r5, pc}
 1177              	.LVL107:
 1178              	.L89:
 312:quantum/quantum.c ****                 if (debug_enable) {
 1179              		.loc 1 312 17 is_stmt 1 view .LVU275
 312:quantum/quantum.c ****                 if (debug_enable) {
 1180              		.loc 1 312 30 is_stmt 0 view .LVU276
 1181 0090 0C49     		ldr	r1, .L115
 312:quantum/quantum.c ****                 if (debug_enable) {
 1182              		.loc 1 312 17 view .LVU277
 1183 0092 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1184 0094 C3F30002 		ubfx	r2, r3, #0, #1
 312:quantum/quantum.c ****                 if (debug_enable) {
 1185              		.loc 1 312 30 view .LVU278
 1186 0098 82F00102 		eor	r2, r2, #1
 1187 009c 62F30003 		bfi	r3, r2, #0, #1
 1188 00a0 0B70     		strb	r3, [r1]
 313:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 1189              		.loc 1 313 17 is_stmt 1 view .LVU279
 313:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 1190              		.loc 1 313 20 is_stmt 0 view .LVU280
 1191 00a2 DB07     		lsls	r3, r3, #31
 314:quantum/quantum.c ****                 } else {
 1192              		.loc 1 314 21 is_stmt 1 view .LVU281
 1193 00a4 4CBF     		ite	mi
 1194 00a6 0848     		ldrmi	r0, .L115+4
 316:quantum/quantum.c ****                 }
 1195              		.loc 1 316 21 view .LVU282
 1196 00a8 0848     		ldrpl	r0, .L115+8
 1197 00aa FFF7FEFF 		bl	printf_
 1198              	.LVL108:
 1199 00ae EDE7     		b	.L84
 1200              	.L90:
 321:quantum/quantum.c ****                 return false;
 1201              		.loc 1 321 17 view .LVU283
 1202 00b0 FFF7FEFF 		bl	eeconfig_init
 1203              	.LVL109:
 322:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 1204              		.loc 1 322 17 view .LVU284
 322:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 1205              		.loc 1 322 24 is_stmt 0 view .LVU285
 1206 00b4 EAE7     		b	.L84
 1207              	.L87:
 344:quantum/quantum.c ****                 break;
 1208              		.loc 1 344 17 is_stmt 1 view .LVU286
 1209 00b6 FFF7FEFF 		bl	oneshot_enable
 1210              	.LVL110:
 345:quantum/quantum.c ****             case ONESHOT_DISABLE:
 1211              		.loc 1 345 17 view .LVU287
 1212 00ba D6E7     		b	.L86
 1213              	.L92:
 347:quantum/quantum.c ****                 break;
 1214              		.loc 1 347 17 view .LVU288
 1215 00bc FFF7FEFF 		bl	oneshot_disable
 1216              	.LVL111:
 348:quantum/quantum.c **** #endif
 1217              		.loc 1 348 17 view .LVU289
 1218 00c0 D3E7     		b	.L86
 1219              	.L116:
 1220 00c2 00BF     		.align	2
 1221              	.L115:
 1222 00c4 00000000 		.word	debug_config
 1223 00c8 00000000 		.word	.LC0
 1224 00cc 11000000 		.word	.LC1
 1225              		.cfi_endproc
 1226              	.LFE310:
 1228              		.global	default_layer_songs
 1229              		.section	.data.default_layer_songs,"aw"
 1230              		.align	2
 1233              	default_layer_songs:
 1234 0000 0AA7CF44 		.word	1154459402
 1235 0004 00000041 		.word	1090519040
 1236 0008 0000DC44 		.word	1155268608
 1237 000c 00000041 		.word	1090519040
 1238 0010 00000000 		.word	0
 1239 0014 00008040 		.word	1082130432
 1240 0018 52D02445 		.word	1160040530
 1241 001c 00008041 		.word	1098907648
 1242 0020 00000000 		.space	96
 1242      00000000 
 1242      00000000 
 1242      00000000 
 1242      00000000 
 1243              		.global	goodbye_song
 1244              		.section	.data.goodbye_song,"aw"
 1245              		.align	2
 1248              	goodbye_song:
 1249 0000 52D02445 		.word	1160040530
 1250 0004 00000041 		.word	1090519040
 1251 0008 0000DC44 		.word	1155268608
 1252 000c 00000041 		.word	1090519040
 1253 0010 52D0A444 		.word	1151651922
 1254 0014 00004041 		.word	1094713344
 1255              		.text
 1256              	.Letext0:
 1257              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1258              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1259              		.file 4 "./lib/chibios/os/rt/include/chtime.h"
 1260              		.file 5 "quantum/keyboard.h"
 1261              		.file 6 "quantum/action.h"
 1262              		.file 7 "quantum/logging/debug.h"
 1263              		.file 8 "quantum/keycode.h"
 1264              		.file 9 "quantum/quantum_keycodes.h"
 1265              		.file 10 "quantum/action_layer.h"
 1266              		.file 11 "quantum/matrix.h"
 1267              		.file 12 "quantum/process_keycode/process_music.h"
 1268              		.file 13 "quantum/audio/audio.h"
 1269              		.file 14 "quantum/led.h"
 1270              		.file 15 "quantum/bootmagic/magic.h"
 1271              		.file 16 "quantum/dip_switch.h"
 1272              		.file 17 "quantum/eeconfig.h"
 1273              		.file 18 "quantum/action_util.h"
 1274              		.file 19 "lib/printf/printf.h"
 1275              		.file 20 "quantum/process_keycode/process_grave_esc.h"
 1276              		.file 21 "quantum/process_keycode/process_magic.h"
 1277              		.file 22 "quantum/process_keycode/process_space_cadet.h"
 1278              		.file 23 "quantum/process_keycode/process_audio.h"
 1279              		.file 24 "quantum/keymap.h"
 1280              		.file 25 "tmk_core/common/bootloader.h"
 1281              		.file 26 "tmk_core/common/timer.h"
 1282              		.file 27 "./lib/chibios/os/rt/include/chthreads.h"
 1283              		.file 28 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 quantum.c
     /tmp/ccy1uU6b.s:21     .text.extract_mod_bits:0000000000000000 $t
     /tmp/ccy1uU6b.s:27     .text.extract_mod_bits:0000000000000000 extract_mod_bits
     /tmp/ccy1uU6b.s:134    .text.do_code16:0000000000000000 $t
     /tmp/ccy1uU6b.s:139    .text.do_code16:0000000000000000 do_code16
     /tmp/ccy1uU6b.s:173    .text.register_code16:0000000000000000 $t
     /tmp/ccy1uU6b.s:179    .text.register_code16:0000000000000000 register_code16
     /tmp/ccy1uU6b.s:229    .text.register_code16:0000000000000024 $d
     /tmp/ccy1uU6b.s:235    .text.unregister_code16:0000000000000000 $t
     /tmp/ccy1uU6b.s:241    .text.unregister_code16:0000000000000000 unregister_code16
     /tmp/ccy1uU6b.s:303    .text.unregister_code16:0000000000000024 $d
     /tmp/ccy1uU6b.s:311    .text.tap_code16:0000000000000000 $t
     /tmp/ccy1uU6b.s:317    .text.tap_code16:0000000000000000 tap_code16
     /tmp/ccy1uU6b.s:349    .text.process_action_kb:0000000000000000 $t
     /tmp/ccy1uU6b.s:355    .text.process_action_kb:0000000000000000 process_action_kb
     /tmp/ccy1uU6b.s:373    .text.process_record_user:0000000000000000 $t
     /tmp/ccy1uU6b.s:379    .text.process_record_user:0000000000000000 process_record_user
     /tmp/ccy1uU6b.s:397    .text.process_record_kb:0000000000000000 $t
     /tmp/ccy1uU6b.s:403    .text.process_record_kb:0000000000000000 process_record_kb
     /tmp/ccy1uU6b.s:425    .text.post_process_record_user:0000000000000000 $t
     /tmp/ccy1uU6b.s:431    .text.post_process_record_user:0000000000000000 post_process_record_user
     /tmp/ccy1uU6b.s:445    .text.post_process_record_kb:0000000000000000 $t
     /tmp/ccy1uU6b.s:451    .text.post_process_record_kb:0000000000000000 post_process_record_kb
     /tmp/ccy1uU6b.s:473    .text.get_event_keycode:0000000000000000 $t
     /tmp/ccy1uU6b.s:479    .text.get_event_keycode:0000000000000000 get_event_keycode
     /tmp/ccy1uU6b.s:571    .text.get_event_keycode:0000000000000048 $d
     /tmp/ccy1uU6b.s:576    .text.get_record_keycode:0000000000000000 $t
     /tmp/ccy1uU6b.s:582    .text.get_record_keycode:0000000000000000 get_record_keycode
     /tmp/ccy1uU6b.s:608    .text.pre_process_record_quantum:0000000000000000 $t
     /tmp/ccy1uU6b.s:614    .text.pre_process_record_quantum:0000000000000000 pre_process_record_quantum
     /tmp/ccy1uU6b.s:633    .text.post_process_record_quantum:0000000000000000 $t
     /tmp/ccy1uU6b.s:639    .text.post_process_record_quantum:0000000000000000 post_process_record_quantum
     /tmp/ccy1uU6b.s:670    .text.set_single_persistent_default_layer:0000000000000000 $t
     /tmp/ccy1uU6b.s:676    .text.set_single_persistent_default_layer:0000000000000000 set_single_persistent_default_layer
     /tmp/ccy1uU6b.s:726    .text.set_single_persistent_default_layer:0000000000000028 $d
     /tmp/ccy1uU6b.s:1233   .data.default_layer_songs:0000000000000000 default_layer_songs
     /tmp/ccy1uU6b.s:731    .text.update_tri_layer_state:0000000000000000 $t
     /tmp/ccy1uU6b.s:737    .text.update_tri_layer_state:0000000000000000 update_tri_layer_state
     /tmp/ccy1uU6b.s:782    .text.update_tri_layer:0000000000000000 $t
     /tmp/ccy1uU6b.s:788    .text.update_tri_layer:0000000000000000 update_tri_layer
     /tmp/ccy1uU6b.s:827    .text.update_tri_layer:0000000000000018 $d
     /tmp/ccy1uU6b.s:832    .text.matrix_init_quantum:0000000000000000 $t
     /tmp/ccy1uU6b.s:838    .text.matrix_init_quantum:0000000000000000 matrix_init_quantum
     /tmp/ccy1uU6b.s:872    .text.matrix_scan_quantum:0000000000000000 $t
     /tmp/ccy1uU6b.s:878    .text.matrix_scan_quantum:0000000000000000 matrix_scan_quantum
     /tmp/ccy1uU6b.s:910    .text.api_send_unicode:0000000000000000 $t
     /tmp/ccy1uU6b.s:916    .text.api_send_unicode:0000000000000000 api_send_unicode
     /tmp/ccy1uU6b.s:930    .text.startup_user:0000000000000000 $t
     /tmp/ccy1uU6b.s:936    .text.startup_user:0000000000000000 startup_user
     /tmp/ccy1uU6b.s:949    .text.shutdown_user:0000000000000000 $t
     /tmp/ccy1uU6b.s:955    .text.shutdown_user:0000000000000000 shutdown_user
     /tmp/ccy1uU6b.s:967    .text.reset_keyboard:0000000000000000 $t
     /tmp/ccy1uU6b.s:973    .text.reset_keyboard:0000000000000000 reset_keyboard
     /tmp/ccy1uU6b.s:1045   .text.reset_keyboard:000000000000003c $d
     /tmp/ccy1uU6b.s:1248   .data.goodbye_song:0000000000000000 goodbye_song
     /tmp/ccy1uU6b.s:1055   .text.process_record_quantum:0000000000000000 $t
     /tmp/ccy1uU6b.s:1061   .text.process_record_quantum:0000000000000000 process_record_quantum
     /tmp/ccy1uU6b.s:1222   .text.process_record_quantum:00000000000000c4 $d
     /tmp/ccy1uU6b.s:1230   .data.default_layer_songs:0000000000000000 $d
     /tmp/ccy1uU6b.s:1245   .data.goodbye_song:0000000000000000 $d

UNDEFINED SYMBOLS
register_code
register_mods
register_weak_mods
unregister_code
unregister_mods
unregister_weak_mods
layer_switch_get_layer
update_source_layers_cache
keymap_key_to_keycode
read_source_layers_cache
disable_action_cache
audio_play_melody
eeconfig_update_default_layer
default_layer_set
layer_state_set
layer_state
magic
led_init_ports
audio_init
matrix_init_kb
music_task
dip_switch_read
matrix_scan_kb
clear_keyboard
music_all_notes_off
timer_read
timer_elapsed
audio_stop_all
bootloader_jump
chThdSleep
process_audio
process_music
process_space_cadet
process_magic
process_grave_esc
oneshot_toggle
printf_
eeconfig_init
oneshot_enable
oneshot_disable
debug_config
