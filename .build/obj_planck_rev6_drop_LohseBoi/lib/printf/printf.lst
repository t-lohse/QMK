   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/printf/printf.c"
  20              		.section	.text._out_buffer,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_out_buffer:
  27              	.LVL0:
  28              	.LFB0:
   1:lib/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:lib/printf/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:lib/printf/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:lib/printf/printf.c **** //
   5:lib/printf/printf.c **** // \license The MIT License (MIT)
   6:lib/printf/printf.c **** //
   7:lib/printf/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:lib/printf/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:lib/printf/printf.c **** // in the Software without restriction, including without limitation the rights
  10:lib/printf/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:lib/printf/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:lib/printf/printf.c **** // furnished to do so, subject to the following conditions:
  13:lib/printf/printf.c **** //
  14:lib/printf/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:lib/printf/printf.c **** // all copies or substantial portions of the Software.
  16:lib/printf/printf.c **** //
  17:lib/printf/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:lib/printf/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:lib/printf/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:lib/printf/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:lib/printf/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:lib/printf/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:lib/printf/printf.c **** // THE SOFTWARE.
  24:lib/printf/printf.c **** //
  25:lib/printf/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:lib/printf/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:lib/printf/printf.c **** //        safe and reentrant!
  28:lib/printf/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:lib/printf/printf.c **** //        malloc for printf (and may not be thread safe).
  30:lib/printf/printf.c **** //
  31:lib/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:lib/printf/printf.c **** 
  33:lib/printf/printf.c **** #include <stdbool.h>
  34:lib/printf/printf.c **** #include <stdint.h>
  35:lib/printf/printf.c **** 
  36:lib/printf/printf.c **** #include "printf.h"
  37:lib/printf/printf.c **** 
  38:lib/printf/printf.c **** 
  39:lib/printf/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  40:lib/printf/printf.c **** // printf_config.h header file
  41:lib/printf/printf.c **** // default: undefined
  42:lib/printf/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  43:lib/printf/printf.c **** #include "printf_config.h"
  44:lib/printf/printf.c **** #endif
  45:lib/printf/printf.c **** 
  46:lib/printf/printf.c **** 
  47:lib/printf/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  48:lib/printf/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  49:lib/printf/printf.c **** // default: 32 byte
  50:lib/printf/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  51:lib/printf/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  52:lib/printf/printf.c **** #endif
  53:lib/printf/printf.c **** 
  54:lib/printf/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  55:lib/printf/printf.c **** // float number including padded zeros (dynamically created on stack)
  56:lib/printf/printf.c **** // default: 32 byte
  57:lib/printf/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  58:lib/printf/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  59:lib/printf/printf.c **** #endif
  60:lib/printf/printf.c **** 
  61:lib/printf/printf.c **** // support for the floating point type (%f)
  62:lib/printf/printf.c **** // default: activated
  63:lib/printf/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  64:lib/printf/printf.c **** #define PRINTF_SUPPORT_FLOAT
  65:lib/printf/printf.c **** #endif
  66:lib/printf/printf.c **** 
  67:lib/printf/printf.c **** // support for exponential floating point notation (%e/%g)
  68:lib/printf/printf.c **** // default: activated
  69:lib/printf/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  70:lib/printf/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  71:lib/printf/printf.c **** #endif
  72:lib/printf/printf.c **** 
  73:lib/printf/printf.c **** // define the default floating point precision
  74:lib/printf/printf.c **** // default: 6 digits
  75:lib/printf/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  76:lib/printf/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  77:lib/printf/printf.c **** #endif
  78:lib/printf/printf.c **** 
  79:lib/printf/printf.c **** // define the largest float suitable to print with %f
  80:lib/printf/printf.c **** // default: 1e9
  81:lib/printf/printf.c **** #ifndef PRINTF_MAX_FLOAT
  82:lib/printf/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  83:lib/printf/printf.c **** #endif
  84:lib/printf/printf.c **** 
  85:lib/printf/printf.c **** // support for the long long types (%llu or %p)
  86:lib/printf/printf.c **** // default: activated
  87:lib/printf/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  88:lib/printf/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  89:lib/printf/printf.c **** #endif
  90:lib/printf/printf.c **** 
  91:lib/printf/printf.c **** // support for the ptrdiff_t type (%t)
  92:lib/printf/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  93:lib/printf/printf.c **** // default: activated
  94:lib/printf/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  95:lib/printf/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  96:lib/printf/printf.c **** #endif
  97:lib/printf/printf.c **** 
  98:lib/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  99:lib/printf/printf.c **** 
 100:lib/printf/printf.c **** // internal flag definitions
 101:lib/printf/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 102:lib/printf/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 103:lib/printf/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 104:lib/printf/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 105:lib/printf/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 106:lib/printf/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 107:lib/printf/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 108:lib/printf/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 109:lib/printf/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 110:lib/printf/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 111:lib/printf/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 112:lib/printf/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 113:lib/printf/printf.c **** 
 114:lib/printf/printf.c **** 
 115:lib/printf/printf.c **** // import float.h for DBL_MAX
 116:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 117:lib/printf/printf.c **** #include <float.h>
 118:lib/printf/printf.c **** #endif
 119:lib/printf/printf.c **** 
 120:lib/printf/printf.c **** 
 121:lib/printf/printf.c **** // output function type
 122:lib/printf/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 123:lib/printf/printf.c **** 
 124:lib/printf/printf.c **** 
 125:lib/printf/printf.c **** // wrapper (used as buffer) for output function type
 126:lib/printf/printf.c **** typedef struct {
 127:lib/printf/printf.c ****   void  (*fct)(char character, void* arg);
 128:lib/printf/printf.c ****   void* arg;
 129:lib/printf/printf.c **** } out_fct_wrap_type;
 130:lib/printf/printf.c **** 
 131:lib/printf/printf.c **** 
 132:lib/printf/printf.c **** // internal buffer output
 133:lib/printf/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 134:lib/printf/printf.c **** {
  29              		.loc 1 134 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 135:lib/printf/printf.c ****   if (idx < maxlen) {
  34              		.loc 1 135 3 view .LVU1
  35              		.loc 1 135 6 is_stmt 0 view .LVU2
  36 0000 9A42     		cmp	r2, r3
 136:lib/printf/printf.c ****     ((char*)buffer)[idx] = character;
  37              		.loc 1 136 5 is_stmt 1 view .LVU3
  38              		.loc 1 136 26 is_stmt 0 view .LVU4
  39 0002 38BF     		it	cc
  40 0004 8854     		strbcc	r0, [r1, r2]
 137:lib/printf/printf.c ****   }
 138:lib/printf/printf.c **** }
  41              		.loc 1 138 1 view .LVU5
  42 0006 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE0:
  46              		.section	.text._out_null,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  52              	_out_null:
  53              	.LVL1:
  54              	.LFB1:
 139:lib/printf/printf.c **** 
 140:lib/printf/printf.c **** 
 141:lib/printf/printf.c **** // internal null output
 142:lib/printf/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 143:lib/printf/printf.c **** {
  55              		.loc 1 143 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
 144:lib/printf/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  60              		.loc 1 144 3 view .LVU7
  61              		.loc 1 144 20 view .LVU8
  62              		.loc 1 144 34 view .LVU9
  63              		.loc 1 144 45 view .LVU10
 145:lib/printf/printf.c **** }
  64              		.loc 1 145 1 is_stmt 0 view .LVU11
  65 0000 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE1:
  69              		.section	.text._ntoa_long,"ax",%progbits
  70              		.align	1
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	_ntoa_long:
  76              	.LVL2:
  77              	.LFB9:
 146:lib/printf/printf.c **** 
 147:lib/printf/printf.c **** 
 148:lib/printf/printf.c **** // internal _putchar wrapper
 149:lib/printf/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 150:lib/printf/printf.c **** {
 151:lib/printf/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 152:lib/printf/printf.c ****   if (character) {
 153:lib/printf/printf.c ****     _putchar(character);
 154:lib/printf/printf.c ****   }
 155:lib/printf/printf.c **** }
 156:lib/printf/printf.c **** 
 157:lib/printf/printf.c **** 
 158:lib/printf/printf.c **** // internal output function wrapper
 159:lib/printf/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 160:lib/printf/printf.c **** {
 161:lib/printf/printf.c ****   (void)idx; (void)maxlen;
 162:lib/printf/printf.c ****   if (character) {
 163:lib/printf/printf.c ****     // buffer is the output fct pointer
 164:lib/printf/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
 165:lib/printf/printf.c ****   }
 166:lib/printf/printf.c **** }
 167:lib/printf/printf.c **** 
 168:lib/printf/printf.c **** 
 169:lib/printf/printf.c **** // internal secure strlen
 170:lib/printf/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 171:lib/printf/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 172:lib/printf/printf.c **** {
 173:lib/printf/printf.c ****   const char* s;
 174:lib/printf/printf.c ****   for (s = str; *s && maxsize--; ++s);
 175:lib/printf/printf.c ****   return (unsigned int)(s - str);
 176:lib/printf/printf.c **** }
 177:lib/printf/printf.c **** 
 178:lib/printf/printf.c **** 
 179:lib/printf/printf.c **** // internal test if char is a digit (0-9)
 180:lib/printf/printf.c **** // \return true if char is a digit
 181:lib/printf/printf.c **** static inline bool _is_digit(char ch)
 182:lib/printf/printf.c **** {
 183:lib/printf/printf.c ****   return (ch >= '0') && (ch <= '9');
 184:lib/printf/printf.c **** }
 185:lib/printf/printf.c **** 
 186:lib/printf/printf.c **** 
 187:lib/printf/printf.c **** // internal ASCII string to unsigned int conversion
 188:lib/printf/printf.c **** static unsigned int _atoi(const char** str)
 189:lib/printf/printf.c **** {
 190:lib/printf/printf.c ****   unsigned int i = 0U;
 191:lib/printf/printf.c ****   while (_is_digit(**str)) {
 192:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 193:lib/printf/printf.c ****   }
 194:lib/printf/printf.c ****   return i;
 195:lib/printf/printf.c **** }
 196:lib/printf/printf.c **** 
 197:lib/printf/printf.c **** 
 198:lib/printf/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 199:lib/printf/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 200:lib/printf/printf.c **** {
 201:lib/printf/printf.c ****   const size_t start_idx = idx;
 202:lib/printf/printf.c **** 
 203:lib/printf/printf.c ****   // pad spaces up to given width
 204:lib/printf/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 205:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 206:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 207:lib/printf/printf.c ****     }
 208:lib/printf/printf.c ****   }
 209:lib/printf/printf.c **** 
 210:lib/printf/printf.c ****   // reverse string
 211:lib/printf/printf.c ****   while (len) {
 212:lib/printf/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 213:lib/printf/printf.c ****   }
 214:lib/printf/printf.c **** 
 215:lib/printf/printf.c ****   // append pad spaces up to given width
 216:lib/printf/printf.c ****   if (flags & FLAGS_LEFT) {
 217:lib/printf/printf.c ****     while (idx - start_idx < width) {
 218:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 219:lib/printf/printf.c ****     }
 220:lib/printf/printf.c ****   }
 221:lib/printf/printf.c **** 
 222:lib/printf/printf.c ****   return idx;
 223:lib/printf/printf.c **** }
 224:lib/printf/printf.c **** 
 225:lib/printf/printf.c **** 
 226:lib/printf/printf.c **** // internal itoa format
 227:lib/printf/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 228:lib/printf/printf.c **** {
 229:lib/printf/printf.c ****   // pad leading zeros
 230:lib/printf/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 231:lib/printf/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 232:lib/printf/printf.c ****       width--;
 233:lib/printf/printf.c ****     }
 234:lib/printf/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 235:lib/printf/printf.c ****       buf[len++] = '0';
 236:lib/printf/printf.c ****     }
 237:lib/printf/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 238:lib/printf/printf.c ****       buf[len++] = '0';
 239:lib/printf/printf.c ****     }
 240:lib/printf/printf.c ****   }
 241:lib/printf/printf.c **** 
 242:lib/printf/printf.c ****   // handle hash
 243:lib/printf/printf.c ****   if (flags & FLAGS_HASH) {
 244:lib/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 245:lib/printf/printf.c ****       len--;
 246:lib/printf/printf.c ****       if (len && (base == 16U)) {
 247:lib/printf/printf.c ****         len--;
 248:lib/printf/printf.c ****       }
 249:lib/printf/printf.c ****     }
 250:lib/printf/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 251:lib/printf/printf.c ****       buf[len++] = 'x';
 252:lib/printf/printf.c ****     }
 253:lib/printf/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 254:lib/printf/printf.c ****       buf[len++] = 'X';
 255:lib/printf/printf.c ****     }
 256:lib/printf/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 257:lib/printf/printf.c ****       buf[len++] = 'b';
 258:lib/printf/printf.c ****     }
 259:lib/printf/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 260:lib/printf/printf.c ****       buf[len++] = '0';
 261:lib/printf/printf.c ****     }
 262:lib/printf/printf.c ****   }
 263:lib/printf/printf.c **** 
 264:lib/printf/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 265:lib/printf/printf.c ****     if (negative) {
 266:lib/printf/printf.c ****       buf[len++] = '-';
 267:lib/printf/printf.c ****     }
 268:lib/printf/printf.c ****     else if (flags & FLAGS_PLUS) {
 269:lib/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 270:lib/printf/printf.c ****     }
 271:lib/printf/printf.c ****     else if (flags & FLAGS_SPACE) {
 272:lib/printf/printf.c ****       buf[len++] = ' ';
 273:lib/printf/printf.c ****     }
 274:lib/printf/printf.c ****   }
 275:lib/printf/printf.c **** 
 276:lib/printf/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 277:lib/printf/printf.c **** }
 278:lib/printf/printf.c **** 
 279:lib/printf/printf.c **** 
 280:lib/printf/printf.c **** // internal itoa for 'long' type
 281:lib/printf/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 282:lib/printf/printf.c **** {
  78              		.loc 1 282 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 24, pretend = 0, frame = 40
  81              		@ frame_needed = 0, uses_anonymous_args = 0
 283:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
  82              		.loc 1 283 3 view .LVU13
 284:lib/printf/printf.c ****   size_t len = 0U;
  83              		.loc 1 284 3 view .LVU14
 285:lib/printf/printf.c **** 
 286:lib/printf/printf.c ****   // no hash for 0 values
 287:lib/printf/printf.c ****   if (!value) {
  84              		.loc 1 287 3 view .LVU15
 282:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
  85              		.loc 1 282 1 is_stmt 0 view .LVU16
  86 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  87              		.cfi_def_cfa_offset 36
  88              		.cfi_offset 4, -36
  89              		.cfi_offset 5, -32
  90              		.cfi_offset 6, -28
  91              		.cfi_offset 7, -24
  92              		.cfi_offset 8, -20
  93              		.cfi_offset 9, -16
  94              		.cfi_offset 10, -12
  95              		.cfi_offset 11, -8
  96              		.cfi_offset 14, -4
  97 0004 8BB0     		sub	sp, sp, #44
  98              		.cfi_def_cfa_offset 80
 282:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
  99              		.loc 1 282 1 view .LVU17
 100 0006 9846     		mov	r8, r3
 101 0008 DDE91853 		ldrd	r5, r3, [sp, #96]
 102              	.LVL3:
 282:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 103              		.loc 1 282 1 view .LVU18
 104 000c 149C     		ldr	r4, [sp, #80]
 105 000e 9DF854E0 		ldrb	lr, [sp, #84]	@ zero_extendqisi2
 106 0012 0191     		str	r1, [sp, #4]
 107 0014 1646     		mov	r6, r2
 108 0016 0746     		mov	r7, r0
 109 0018 169A     		ldr	r2, [sp, #88]
 110              	.LVL4:
 288:lib/printf/printf.c ****     flags &= ~FLAGS_HASH;
 289:lib/printf/printf.c ****   }
 290:lib/printf/printf.c **** 
 291:lib/printf/printf.c ****   // write if precision != 0 and value is != 0
 292:lib/printf/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 111              		.loc 1 292 15 view .LVU19
 112 001a 03F48069 		and	r9, r3, #1024
 287:lib/printf/printf.c ****     flags &= ~FLAGS_HASH;
 113              		.loc 1 287 6 view .LVU20
 114 001e 24B9     		cbnz	r4, .L5
 288:lib/printf/printf.c ****     flags &= ~FLAGS_HASH;
 115              		.loc 1 288 5 is_stmt 1 view .LVU21
 288:lib/printf/printf.c ****     flags &= ~FLAGS_HASH;
 116              		.loc 1 288 11 is_stmt 0 view .LVU22
 117 0020 23F01003 		bic	r3, r3, #16
 118              	.LVL5:
 119              		.loc 1 292 3 is_stmt 1 view .LVU23
 120              		.loc 1 292 6 is_stmt 0 view .LVU24
 121 0024 B9F1000F 		cmp	r9, #0
 122 0028 20D1     		bne	.L6
 123              	.LVL6:
 124              	.L5:
 125              		.loc 1 292 6 view .LVU25
 126 002a 13F0200F 		tst	r3, #32
 127 002e 14BF     		ite	ne
 128 0030 4121     		movne	r1, #65
 129              	.LVL7:
 130              		.loc 1 292 6 view .LVU26
 131 0032 6121     		moveq	r1, #97
 132              	.LBB22:
 293:lib/printf/printf.c ****     do {
 294:lib/printf/printf.c ****       const char digit = (char)(value % base);
 295:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 133              		.loc 1 295 54 view .LVU27
 134 0034 2046     		mov	r0, r4
 135              	.LVL8:
 136              		.loc 1 295 54 view .LVU28
 137 0036 0DF1080A 		add	r10, sp, #8
 138 003a 0024     		movs	r4, #0
 139              		.loc 1 295 18 view .LVU29
 140 003c A1F10A0B 		sub	fp, r1, #10
 141              	.LVL9:
 142              	.L9:
 143              		.loc 1 295 18 view .LVU30
 144              	.LBE22:
 293:lib/printf/printf.c ****     do {
 145              		.loc 1 293 5 is_stmt 1 view .LVU31
 146              	.LBB23:
 294:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 147              		.loc 1 294 7 view .LVU32
 294:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 148              		.loc 1 294 39 is_stmt 0 view .LVU33
 149 0040 B0FBF2FC 		udiv	ip, r0, r2
 150 0044 02FB1C0C 		mls	ip, r2, ip, r0
 294:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 151              		.loc 1 294 18 view .LVU34
 152 0048 5FFA8CF1 		uxtb	r1, ip
 153              	.LVL10:
 154              		.loc 1 295 7 is_stmt 1 view .LVU35
 155              		.loc 1 295 18 is_stmt 0 view .LVU36
 156 004c BCF1090F 		cmp	ip, #9
 157              		.loc 1 295 18 view .LVU37
 158 0050 94BF     		ite	ls
 159 0052 3031     		addls	r1, r1, #48
 160              	.LVL11:
 161              		.loc 1 295 18 view .LVU38
 162 0054 5944     		addhi	r1, r1, fp
 163 0056 C9B2     		uxtb	r1, r1
 164              	.LBE23:
 296:lib/printf/printf.c ****       value /= base;
 297:lib/printf/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 165              		.loc 1 297 20 view .LVU39
 166 0058 9042     		cmp	r0, r2
 167              	.LBB24:
 295:lib/printf/printf.c ****       value /= base;
 168              		.loc 1 295 18 view .LVU40
 169 005a 0AF8011B 		strb	r1, [r10], #1
 296:lib/printf/printf.c ****       value /= base;
 170              		.loc 1 296 13 view .LVU41
 171 005e B0FBF2F1 		udiv	r1, r0, r2
 295:lib/printf/printf.c ****       value /= base;
 172              		.loc 1 295 14 view .LVU42
 173 0062 04F10104 		add	r4, r4, #1
 174              	.LVL12:
 296:lib/printf/printf.c ****       value /= base;
 175              		.loc 1 296 7 is_stmt 1 view .LVU43
 296:lib/printf/printf.c ****       value /= base;
 176              		.loc 1 296 7 is_stmt 0 view .LVU44
 177              	.LBE24:
 178              		.loc 1 297 20 is_stmt 1 view .LVU45
 179 0066 01D3     		bcc	.L6
 180              		.loc 1 297 20 is_stmt 0 discriminator 1 view .LVU46
 181 0068 202C     		cmp	r4, #32
 182 006a 10D1     		bne	.L50
 183              	.LVL13:
 184              	.L6:
 298:lib/printf/printf.c ****   }
 299:lib/printf/printf.c **** 
 300:lib/printf/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 185              		.loc 1 300 3 is_stmt 1 view .LVU47
 186              	.LBB25:
 187              	.LBI25:
 227:lib/printf/printf.c **** {
 188              		.loc 1 227 15 view .LVU48
 189              	.LBB26:
 230:lib/printf/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 190              		.loc 1 230 3 view .LVU49
 230:lib/printf/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 191              		.loc 1 230 6 is_stmt 0 view .LVU50
 192 006c 13F0020A 		ands	r10, r3, #2
 193 0070 1ED1     		bne	.L10
 231:lib/printf/printf.c ****       width--;
 194              		.loc 1 231 5 is_stmt 1 view .LVU51
 231:lib/printf/printf.c ****       width--;
 195              		.loc 1 231 25 is_stmt 0 view .LVU52
 196 0072 03F00101 		and	r1, r3, #1
 231:lib/printf/printf.c ****       width--;
 197              		.loc 1 231 8 view .LVU53
 198 0076 3DB1     		cbz	r5, .L11
 231:lib/printf/printf.c ****       width--;
 199              		.loc 1 231 15 view .LVU54
 200 0078 31B1     		cbz	r1, .L11
 231:lib/printf/printf.c ****       width--;
 201              		.loc 1 231 42 view .LVU55
 202 007a BEF1000F 		cmp	lr, #0
 203 007e 02D1     		bne	.L12
 231:lib/printf/printf.c ****       width--;
 204              		.loc 1 231 55 view .LVU56
 205 0080 13F00C0F 		tst	r3, #12
 206 0084 00D0     		beq	.L11
 207              	.L12:
 232:lib/printf/printf.c ****     }
 208              		.loc 1 232 7 is_stmt 1 view .LVU57
 232:lib/printf/printf.c ****     }
 209              		.loc 1 232 12 is_stmt 0 view .LVU58
 210 0086 013D     		subs	r5, r5, #1
 211              	.LVL14:
 212              	.L11:
 235:lib/printf/printf.c ****     }
 213              		.loc 1 235 18 view .LVU59
 214 0088 4FF0300C 		mov	ip, #48
 215 008c 05E0     		b	.L13
 216              	.LVL15:
 217              	.L50:
 235:lib/printf/printf.c ****     }
 218              		.loc 1 235 18 view .LVU60
 219              	.LBE26:
 220              	.LBE25:
 221              	.LBB35:
 296:lib/printf/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 222              		.loc 1 296 13 view .LVU61
 223 008e 0846     		mov	r0, r1
 224 0090 D6E7     		b	.L9
 225              	.LVL16:
 226              	.L15:
 296:lib/printf/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 227              		.loc 1 296 13 view .LVU62
 228              	.LBE35:
 229              	.LBB36:
 230              	.LBB33:
 235:lib/printf/printf.c ****     }
 231              		.loc 1 235 7 is_stmt 1 view .LVU63
 235:lib/printf/printf.c ****     }
 232              		.loc 1 235 18 is_stmt 0 view .LVU64
 233 0092 02A8     		add	r0, sp, #8
 234              	.LVL17:
 235:lib/printf/printf.c ****     }
 235              		.loc 1 235 18 view .LVU65
 236 0094 00F804C0 		strb	ip, [r0, r4]
 237 0098 0134     		adds	r4, r4, #1
 238              	.LVL18:
 239              	.L13:
 234:lib/printf/printf.c ****       buf[len++] = '0';
 240              		.loc 1 234 25 is_stmt 1 view .LVU66
 241 009a 1798     		ldr	r0, [sp, #92]
 242 009c A042     		cmp	r0, r4
 243 009e 01D9     		bls	.L14
 234:lib/printf/printf.c ****       buf[len++] = '0';
 244              		.loc 1 234 25 is_stmt 0 view .LVU67
 245 00a0 202C     		cmp	r4, #32
 246 00a2 F6D1     		bne	.L15
 247              	.L14:
 237:lib/printf/printf.c ****       buf[len++] = '0';
 248              		.loc 1 237 53 is_stmt 1 view .LVU68
 249 00a4 21B1     		cbz	r1, .L10
 238:lib/printf/printf.c ****     }
 250              		.loc 1 238 18 is_stmt 0 view .LVU69
 251 00a6 3021     		movs	r1, #48
 252              	.L16:
 237:lib/printf/printf.c ****       buf[len++] = '0';
 253              		.loc 1 237 36 view .LVU70
 254 00a8 A542     		cmp	r5, r4
 255 00aa 01D9     		bls	.L10
 237:lib/printf/printf.c ****       buf[len++] = '0';
 256              		.loc 1 237 53 view .LVU71
 257 00ac 1F2C     		cmp	r4, #31
 258 00ae 19D9     		bls	.L17
 259              	.L10:
 260              	.LVL19:
 243:lib/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 261              		.loc 1 243 3 is_stmt 1 view .LVU72
 243:lib/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 262              		.loc 1 243 6 is_stmt 0 view .LVU73
 263 00b0 D906     		lsls	r1, r3, #27
 264 00b2 6AD5     		bpl	.L18
 244:lib/printf/printf.c ****       len--;
 265              		.loc 1 244 5 is_stmt 1 view .LVU74
 244:lib/printf/printf.c ****       len--;
 266              		.loc 1 244 8 is_stmt 0 view .LVU75
 267 00b4 B9F1000F 		cmp	r9, #0
 268 00b8 39D1     		bne	.L19
 244:lib/printf/printf.c ****       len--;
 269              		.loc 1 244 36 view .LVU76
 270 00ba 94B3     		cbz	r4, .L20
 244:lib/printf/printf.c ****       len--;
 271              		.loc 1 244 43 view .LVU77
 272 00bc 1799     		ldr	r1, [sp, #92]
 273 00be A142     		cmp	r1, r4
 274 00c0 01D0     		beq	.L21
 244:lib/printf/printf.c ****       len--;
 275              		.loc 1 244 61 view .LVU78
 276 00c2 AC42     		cmp	r4, r5
 277 00c4 33D1     		bne	.L19
 278              	.L21:
 245:lib/printf/printf.c ****       if (len && (base == 16U)) {
 279              		.loc 1 245 7 is_stmt 1 view .LVU79
 280              	.LVL20:
 246:lib/printf/printf.c ****         len--;
 281              		.loc 1 246 7 view .LVU80
 246:lib/printf/printf.c ****         len--;
 282              		.loc 1 246 10 is_stmt 0 view .LVU81
 283 00c6 611E     		subs	r1, r4, #1
 284              	.LVL21:
 246:lib/printf/printf.c ****         len--;
 285              		.loc 1 246 10 view .LVU82
 286 00c8 2BD0     		beq	.L20
 246:lib/printf/printf.c ****         len--;
 287              		.loc 1 246 15 view .LVU83
 288 00ca 102A     		cmp	r2, #16
 289 00cc 53D1     		bne	.L23
 247:lib/printf/printf.c ****       }
 290              		.loc 1 247 9 is_stmt 1 view .LVU84
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 291              		.loc 1 250 23 is_stmt 0 view .LVU85
 292 00ce 9A06     		lsls	r2, r3, #26
 293              	.LVL22:
 247:lib/printf/printf.c ****       }
 294              		.loc 1 247 12 view .LVU86
 295 00d0 A4F10204 		sub	r4, r4, #2
 296              	.LVL23:
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 297              		.loc 1 250 5 is_stmt 1 view .LVU87
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 298              		.loc 1 250 23 is_stmt 0 view .LVU88
 299 00d4 31D5     		bpl	.L24
 300              	.L25:
 301              	.LVL24:
 253:lib/printf/printf.c ****       buf[len++] = 'X';
 302              		.loc 1 253 10 is_stmt 1 view .LVU89
 253:lib/printf/printf.c ****       buf[len++] = 'X';
 303              		.loc 1 253 57 is_stmt 0 view .LVU90
 304 00d6 1F2C     		cmp	r4, #31
 305 00d8 38D8     		bhi	.L33
 254:lib/printf/printf.c ****     }
 306              		.loc 1 254 7 is_stmt 1 view .LVU91
 307              	.LVL25:
 254:lib/printf/printf.c ****     }
 308              		.loc 1 254 18 is_stmt 0 view .LVU92
 309 00da 04F12802 		add	r2, r4, #40
 310 00de 6A44     		add	r2, sp, r2
 311 00e0 5821     		movs	r1, #88
 312 00e2 2EE0     		b	.L85
 313              	.LVL26:
 314              	.L17:
 238:lib/printf/printf.c ****     }
 315              		.loc 1 238 7 is_stmt 1 view .LVU93
 238:lib/printf/printf.c ****     }
 316              		.loc 1 238 18 is_stmt 0 view .LVU94
 317 00e4 02A8     		add	r0, sp, #8
 318              	.LVL27:
 238:lib/printf/printf.c ****     }
 319              		.loc 1 238 18 view .LVU95
 320 00e6 0155     		strb	r1, [r0, r4]
 321 00e8 0134     		adds	r4, r4, #1
 322              	.LVL28:
 237:lib/printf/printf.c ****       buf[len++] = '0';
 323              		.loc 1 237 53 is_stmt 1 view .LVU96
 324 00ea DDE7     		b	.L16
 325              	.LVL29:
 326              	.L26:
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 327              		.loc 1 256 10 view .LVU97
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 328              		.loc 1 256 13 is_stmt 0 view .LVU98
 329 00ec 022A     		cmp	r2, #2
 330 00ee 13D1     		bne	.L29
 331 00f0 6222     		movs	r2, #98
 332              	.LVL30:
 333              	.L27:
 257:lib/printf/printf.c ****     }
 334              		.loc 1 257 18 view .LVU99
 335 00f2 8DF80820 		strb	r2, [sp, #8]
 260:lib/printf/printf.c ****     }
 336              		.loc 1 260 7 is_stmt 1 view .LVU100
 337              	.LVL31:
 264:lib/printf/printf.c ****     if (negative) {
 338              		.loc 1 264 3 view .LVU101
 260:lib/printf/printf.c ****     }
 339              		.loc 1 260 18 is_stmt 0 view .LVU102
 340 00f6 3022     		movs	r2, #48
 341 00f8 8DF80920 		strb	r2, [sp, #9]
 260:lib/printf/printf.c ****     }
 342              		.loc 1 260 14 view .LVU103
 343 00fc 0224     		movs	r4, #2
 344              	.LVL32:
 345              	.L30:
 265:lib/printf/printf.c ****       buf[len++] = '-';
 346              		.loc 1 265 5 is_stmt 1 view .LVU104
 265:lib/printf/printf.c ****       buf[len++] = '-';
 347              		.loc 1 265 8 is_stmt 0 view .LVU105
 348 00fe BEF1000F 		cmp	lr, #0
 349 0102 53D0     		beq	.L38
 266:lib/printf/printf.c ****     }
 350              		.loc 1 266 7 is_stmt 1 view .LVU106
 351              	.LVL33:
 266:lib/printf/printf.c ****     }
 352              		.loc 1 266 18 is_stmt 0 view .LVU107
 353 0104 04F12802 		add	r2, r4, #40
 354 0108 6A44     		add	r2, sp, r2
 355 010a 2D21     		movs	r1, #45
 356              	.LVL34:
 357              	.L86:
 272:lib/printf/printf.c ****     }
 358              		.loc 1 272 18 view .LVU108
 359 010c 02F8201C 		strb	r1, [r2, #-32]
 272:lib/printf/printf.c ****     }
 360              		.loc 1 272 14 view .LVU109
 361 0110 0134     		adds	r4, r4, #1
 362 0112 1BE0     		b	.L33
 363              	.LVL35:
 364              	.L52:
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 365              		.loc 1 250 23 view .LVU110
 366 0114 7822     		movs	r2, #120
 367              	.LVL36:
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 368              		.loc 1 250 23 view .LVU111
 369 0116 ECE7     		b	.L27
 370              	.LVL37:
 371              	.L29:
 260:lib/printf/printf.c ****     }
 372              		.loc 1 260 7 is_stmt 1 view .LVU112
 260:lib/printf/printf.c ****     }
 373              		.loc 1 260 18 is_stmt 0 view .LVU113
 374 0118 3022     		movs	r2, #48
 375              	.LVL38:
 260:lib/printf/printf.c ****     }
 376              		.loc 1 260 18 view .LVU114
 377 011a 8DF80820 		strb	r2, [sp, #8]
 264:lib/printf/printf.c ****     if (negative) {
 378              		.loc 1 264 3 is_stmt 1 view .LVU115
 260:lib/printf/printf.c ****     }
 379              		.loc 1 260 14 is_stmt 0 view .LVU116
 380 011e 0124     		movs	r4, #1
 381 0120 EDE7     		b	.L30
 382              	.LVL39:
 383              	.L20:
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 384              		.loc 1 250 5 is_stmt 1 view .LVU117
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 385              		.loc 1 250 8 is_stmt 0 view .LVU118
 386 0122 102A     		cmp	r2, #16
 387 0124 E2D1     		bne	.L26
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 388              		.loc 1 250 23 view .LVU119
 389 0126 9C06     		lsls	r4, r3, #26
 390 0128 F4D5     		bpl	.L52
 391              	.LVL40:
 254:lib/printf/printf.c ****     }
 392              		.loc 1 254 7 is_stmt 1 view .LVU120
 254:lib/printf/printf.c ****     }
 393              		.loc 1 254 18 is_stmt 0 view .LVU121
 394 012a 5822     		movs	r2, #88
 395              	.LVL41:
 254:lib/printf/printf.c ****     }
 396              		.loc 1 254 18 view .LVU122
 397 012c E1E7     		b	.L27
 398              	.LVL42:
 399              	.L19:
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 400              		.loc 1 250 5 is_stmt 1 view .LVU123
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 401              		.loc 1 250 8 is_stmt 0 view .LVU124
 402 012e 102A     		cmp	r2, #16
 403 0130 2ED1     		bne	.L32
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 404              		.loc 1 250 23 view .LVU125
 405 0132 9806     		lsls	r0, r3, #26
 406 0134 CFD4     		bmi	.L25
 250:lib/printf/printf.c ****       buf[len++] = 'x';
 407              		.loc 1 250 53 view .LVU126
 408 0136 1F2C     		cmp	r4, #31
 409 0138 08D8     		bhi	.L33
 410              	.LVL43:
 411              	.L24:
 251:lib/printf/printf.c ****     }
 412              		.loc 1 251 7 is_stmt 1 view .LVU127
 251:lib/printf/printf.c ****     }
 413              		.loc 1 251 18 is_stmt 0 view .LVU128
 414 013a 04F12802 		add	r2, r4, #40
 415 013e 6A44     		add	r2, sp, r2
 416 0140 7821     		movs	r1, #120
 417              	.LVL44:
 418              	.L85:
 254:lib/printf/printf.c ****     }
 419              		.loc 1 254 18 view .LVU129
 420 0142 02F8201C 		strb	r1, [r2, #-32]
 421              	.LVL45:
 254:lib/printf/printf.c ****     }
 422              		.loc 1 254 14 view .LVU130
 423 0146 0134     		adds	r4, r4, #1
 424              	.L34:
 425              	.LVL46:
 259:lib/printf/printf.c ****       buf[len++] = '0';
 426              		.loc 1 259 5 is_stmt 1 view .LVU131
 259:lib/printf/printf.c ****       buf[len++] = '0';
 427              		.loc 1 259 8 is_stmt 0 view .LVU132
 428 0148 1F2C     		cmp	r4, #31
 429 014a 17D9     		bls	.L36
 430              	.LVL47:
 431              	.L33:
 276:lib/printf/printf.c **** }
 432              		.loc 1 276 3 is_stmt 1 view .LVU133
 433              	.LBB27:
 434              	.LBI27:
 199:lib/printf/printf.c **** {
 435              		.loc 1 199 15 view .LVU134
 436              	.LBB28:
 201:lib/printf/printf.c **** 
 437              		.loc 1 201 3 view .LVU135
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 438              		.loc 1 204 3 view .LVU136
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 439              		.loc 1 204 6 is_stmt 0 view .LVU137
 440 014c 9B07     		lsls	r3, r3, #30
 441              	.LVL48:
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 442              		.loc 1 204 6 view .LVU138
 443 014e 4DD0     		beq	.L53
 444              	.LBB29:
 445 0150 B146     		mov	r9, r6
 446              	.LVL49:
 447              	.L41:
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 448              		.loc 1 204 6 view .LVU139
 449 0152 A144     		add	r9, r9, r4
 450              	.LVL50:
 451              	.L42:
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 452              		.loc 1 204 6 view .LVU140
 453 0154 4846     		mov	r0, r9
 454 0156 A9EB0402 		sub	r2, r9, r4
 455              	.LVL51:
 204:lib/printf/printf.c ****     for (size_t i = len; i < width; i++) {
 456              		.loc 1 204 6 view .LVU141
 457              	.LBE29:
 211:lib/printf/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 458              		.loc 1 211 10 is_stmt 1 view .LVU142
 459 015a 002C     		cmp	r4, #0
 460 015c 4AD1     		bne	.L45
 216:lib/printf/printf.c ****     while (idx - start_idx < width) {
 461              		.loc 1 216 3 view .LVU143
 216:lib/printf/printf.c ****     while (idx - start_idx < width) {
 462              		.loc 1 216 6 is_stmt 0 view .LVU144
 463 015e BAF1000F 		cmp	r10, #0
 464 0162 05D0     		beq	.L4
 465 0164 A9EB0609 		sub	r9, r9, r6
 466              	.LVL52:
 467              	.L47:
 217:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 468              		.loc 1 217 28 view .LVU145
 469 0168 4D45     		cmp	r5, r9
 470 016a 06EB0900 		add	r0, r6, r9
 471              	.LVL53:
 217:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 472              		.loc 1 217 28 is_stmt 1 view .LVU146
 473 016e 48D8     		bhi	.L48
 474              	.LVL54:
 475              	.L4:
 217:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 476              		.loc 1 217 28 is_stmt 0 view .LVU147
 477              	.LBE28:
 478              	.LBE27:
 479              	.LBE33:
 480              	.LBE36:
 301:lib/printf/printf.c **** }
 481              		.loc 1 301 1 view .LVU148
 482 0170 0BB0     		add	sp, sp, #44
 483              		.cfi_remember_state
 484              		.cfi_def_cfa_offset 36
 485              		@ sp needed
 486 0172 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 487              	.LVL55:
 488              	.L23:
 489              		.cfi_restore_state
 490              	.LBB37:
 491              	.LBB34:
 253:lib/printf/printf.c ****       buf[len++] = 'X';
 492              		.loc 1 253 10 is_stmt 1 view .LVU149
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 493              		.loc 1 256 10 view .LVU150
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 494              		.loc 1 256 13 is_stmt 0 view .LVU151
 495 0176 022A     		cmp	r2, #2
 496 0178 0FD0     		beq	.L35
 245:lib/printf/printf.c ****       if (len && (base == 16U)) {
 497              		.loc 1 245 10 view .LVU152
 498 017a 0C46     		mov	r4, r1
 499              	.LVL56:
 500              	.L36:
 260:lib/printf/printf.c ****     }
 501              		.loc 1 260 7 is_stmt 1 view .LVU153
 260:lib/printf/printf.c ****     }
 502              		.loc 1 260 18 is_stmt 0 view .LVU154
 503 017c 04F12802 		add	r2, r4, #40
 504 0180 6A44     		add	r2, sp, r2
 505 0182 3021     		movs	r1, #48
 506 0184 02F8201C 		strb	r1, [r2, #-32]
 260:lib/printf/printf.c ****     }
 507              		.loc 1 260 14 view .LVU155
 508 0188 0134     		adds	r4, r4, #1
 509              	.LVL57:
 510              	.L18:
 264:lib/printf/printf.c ****     if (negative) {
 511              		.loc 1 264 3 is_stmt 1 view .LVU156
 264:lib/printf/printf.c ****     if (negative) {
 512              		.loc 1 264 6 is_stmt 0 view .LVU157
 513 018a 1F2C     		cmp	r4, #31
 514 018c DED8     		bhi	.L33
 264:lib/printf/printf.c ****     if (negative) {
 515              		.loc 1 264 6 view .LVU158
 516 018e B6E7     		b	.L30
 517              	.LVL58:
 518              	.L32:
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 519              		.loc 1 256 10 is_stmt 1 view .LVU159
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 520              		.loc 1 256 13 is_stmt 0 view .LVU160
 521 0190 022A     		cmp	r2, #2
 522 0192 D9D1     		bne	.L34
 256:lib/printf/printf.c ****       buf[len++] = 'b';
 523              		.loc 1 256 27 view .LVU161
 524 0194 1F2C     		cmp	r4, #31
 525 0196 D9D8     		bhi	.L33
 526 0198 2146     		mov	r1, r4
 527              	.LVL59:
 528              	.L35:
 257:lib/printf/printf.c ****     }
 529              		.loc 1 257 7 is_stmt 1 view .LVU162
 257:lib/printf/printf.c ****     }
 530              		.loc 1 257 18 is_stmt 0 view .LVU163
 531 019a 01F12802 		add	r2, r1, #40
 532              	.LVL60:
 257:lib/printf/printf.c ****     }
 533              		.loc 1 257 14 view .LVU164
 534 019e 4C1C     		adds	r4, r1, #1
 535              	.LVL61:
 257:lib/printf/printf.c ****     }
 536              		.loc 1 257 18 view .LVU165
 537 01a0 0DEB0201 		add	r1, sp, r2
 538 01a4 6222     		movs	r2, #98
 539 01a6 01F8202C 		strb	r2, [r1, #-32]
 540 01aa CDE7     		b	.L34
 541              	.LVL62:
 542              	.L38:
 268:lib/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 543              		.loc 1 268 10 is_stmt 1 view .LVU166
 268:lib/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 544              		.loc 1 268 13 is_stmt 0 view .LVU167
 545 01ac 5907     		lsls	r1, r3, #29
 546 01ae 04D5     		bpl	.L39
 269:lib/printf/printf.c ****     }
 547              		.loc 1 269 7 is_stmt 1 view .LVU168
 548              	.LVL63:
 269:lib/printf/printf.c ****     }
 549              		.loc 1 269 18 is_stmt 0 view .LVU169
 550 01b0 04F12802 		add	r2, r4, #40
 551 01b4 6A44     		add	r2, sp, r2
 552 01b6 2B21     		movs	r1, #43
 553 01b8 A8E7     		b	.L86
 554              	.LVL64:
 555              	.L39:
 271:lib/printf/printf.c ****       buf[len++] = ' ';
 556              		.loc 1 271 10 is_stmt 1 view .LVU170
 271:lib/printf/printf.c ****       buf[len++] = ' ';
 557              		.loc 1 271 13 is_stmt 0 view .LVU171
 558 01ba 1A07     		lsls	r2, r3, #28
 559 01bc C6D5     		bpl	.L33
 272:lib/printf/printf.c ****     }
 560              		.loc 1 272 7 is_stmt 1 view .LVU172
 561              	.LVL65:
 272:lib/printf/printf.c ****     }
 562              		.loc 1 272 18 is_stmt 0 view .LVU173
 563 01be 04F12802 		add	r2, r4, #40
 564 01c2 6A44     		add	r2, sp, r2
 565 01c4 2021     		movs	r1, #32
 566 01c6 A1E7     		b	.L86
 567              	.LVL66:
 568              	.L43:
 569              	.LBB32:
 570              	.LBB31:
 571              	.LBB30:
 206:lib/printf/printf.c ****     }
 572              		.loc 1 206 7 is_stmt 1 view .LVU174
 206:lib/printf/printf.c ****     }
 573              		.loc 1 206 7 is_stmt 0 view .LVU175
 574 01c8 0199     		ldr	r1, [sp, #4]
 575 01ca 4346     		mov	r3, r8
 576 01cc 2020     		movs	r0, #32
 577 01ce B847     		blx	r7
 578              	.LVL67:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 579              		.loc 1 205 38 is_stmt 1 view .LVU176
 580 01d0 09F10109 		add	r9, r9, #1
 581              	.LVL68:
 582              	.L40:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 583              		.loc 1 205 28 is_stmt 0 view .LVU177
 584 01d4 4D45     		cmp	r5, r9
 585 01d6 0BEB0902 		add	r2, fp, r9
 586              	.LVL69:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 587              		.loc 1 205 28 is_stmt 1 view .LVU178
 588 01da F5D8     		bhi	.L43
 589 01dc A5EB0409 		sub	r9, r5, r4
 590              	.LVL70:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 591              		.loc 1 205 28 is_stmt 0 view .LVU179
 592 01e0 A542     		cmp	r5, r4
 593 01e2 38BF     		it	cc
 594 01e4 4FF00009 		movcc	r9, #0
 595 01e8 B144     		add	r9, r9, r6
 596 01ea B2E7     		b	.L41
 597              	.LVL71:
 598              	.L53:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 599              		.loc 1 205 17 view .LVU180
 600 01ec A146     		mov	r9, r4
 601 01ee A6EB040B 		sub	fp, r6, r4
 602 01f2 EFE7     		b	.L40
 603              	.LVL72:
 604              	.L45:
 205:lib/printf/printf.c ****       out(' ', buffer, idx++, maxlen);
 605              		.loc 1 205 17 view .LVU181
 606              	.LBE30:
 212:lib/printf/printf.c ****   }
 607              		.loc 1 212 5 is_stmt 1 view .LVU182
 608 01f4 013C     		subs	r4, r4, #1
 609              	.LVL73:
 212:lib/printf/printf.c ****   }
 610              		.loc 1 212 5 is_stmt 0 view .LVU183
 611 01f6 02A8     		add	r0, sp, #8
 612              	.LVL74:
 212:lib/printf/printf.c ****   }
 613              		.loc 1 212 5 view .LVU184
 614 01f8 0199     		ldr	r1, [sp, #4]
 615 01fa 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 616              	.LVL75:
 212:lib/printf/printf.c ****   }
 617              		.loc 1 212 5 view .LVU185
 618 01fc 4346     		mov	r3, r8
 619 01fe B847     		blx	r7
 620              	.LVL76:
 621 0200 A8E7     		b	.L42
 622              	.LVL77:
 623              	.L48:
 218:lib/printf/printf.c ****     }
 624              		.loc 1 218 7 is_stmt 1 view .LVU186
 218:lib/printf/printf.c ****     }
 625              		.loc 1 218 7 is_stmt 0 view .LVU187
 626 0202 0246     		mov	r2, r0
 627 0204 0199     		ldr	r1, [sp, #4]
 628 0206 4346     		mov	r3, r8
 629 0208 2020     		movs	r0, #32
 630 020a B847     		blx	r7
 631              	.LVL78:
 632 020c 09F10109 		add	r9, r9, #1
 633 0210 AAE7     		b	.L47
 634              	.LBE31:
 635              	.LBE32:
 636              	.LBE34:
 637              	.LBE37:
 638              		.cfi_endproc
 639              	.LFE9:
 641              		.section	.text._out_char,"ax",%progbits
 642              		.align	1
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	_out_char:
 648              	.LVL79:
 649              	.LFB2:
 150:lib/printf/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 650              		.loc 1 150 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 151:lib/printf/printf.c ****   if (character) {
 655              		.loc 1 151 3 view .LVU189
 151:lib/printf/printf.c ****   if (character) {
 656              		.loc 1 151 17 view .LVU190
 151:lib/printf/printf.c ****   if (character) {
 657              		.loc 1 151 28 view .LVU191
 152:lib/printf/printf.c ****     _putchar(character);
 658              		.loc 1 152 3 view .LVU192
 152:lib/printf/printf.c ****     _putchar(character);
 659              		.loc 1 152 6 is_stmt 0 view .LVU193
 660 0000 08B1     		cbz	r0, .L90
 153:lib/printf/printf.c ****   }
 661              		.loc 1 153 5 is_stmt 1 view .LVU194
 662 0002 FFF7FEBF 		b	_putchar
 663              	.LVL80:
 664              	.L90:
 155:lib/printf/printf.c **** 
 665              		.loc 1 155 1 is_stmt 0 view .LVU195
 666 0006 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE2:
 670              		.section	.text._out_fct,"ax",%progbits
 671              		.align	1
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 676              	_out_fct:
 677              	.LVL81:
 678              	.LFB3:
 160:lib/printf/printf.c ****   (void)idx; (void)maxlen;
 679              		.loc 1 160 1 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 161:lib/printf/printf.c ****   if (character) {
 684              		.loc 1 161 3 view .LVU197
 161:lib/printf/printf.c ****   if (character) {
 685              		.loc 1 161 14 view .LVU198
 162:lib/printf/printf.c ****     // buffer is the output fct pointer
 686              		.loc 1 162 3 view .LVU199
 162:lib/printf/printf.c ****     // buffer is the output fct pointer
 687              		.loc 1 162 6 is_stmt 0 view .LVU200
 688 0000 10B1     		cbz	r0, .L92
 689              	.LVL82:
 690              	.LBB40:
 691              	.LBI40:
 159:lib/printf/printf.c **** {
 692              		.loc 1 159 20 is_stmt 1 view .LVU201
 693              	.LBB41:
 164:lib/printf/printf.c ****   }
 694              		.loc 1 164 5 view .LVU202
 164:lib/printf/printf.c ****   }
 695              		.loc 1 164 6 is_stmt 0 view .LVU203
 696 0002 D1E90031 		ldrd	r3, r1, [r1]
 697              	.LVL83:
 164:lib/printf/printf.c ****   }
 698              		.loc 1 164 6 view .LVU204
 699 0006 1847     		bx	r3	@ indirect register sibling call
 700              	.LVL84:
 701              	.L92:
 164:lib/printf/printf.c ****   }
 702              		.loc 1 164 6 view .LVU205
 703              	.LBE41:
 704              	.LBE40:
 166:lib/printf/printf.c **** 
 705              		.loc 1 166 1 view .LVU206
 706 0008 7047     		bx	lr
 707              		.cfi_endproc
 708              	.LFE3:
 710              		.section	.text._vsnprintf,"ax",%progbits
 711              		.align	1
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 716              	_vsnprintf:
 717              	.LVL85:
 718              	.LFB10:
 302:lib/printf/printf.c **** 
 303:lib/printf/printf.c **** 
 304:lib/printf/printf.c **** // internal itoa for 'long long' type
 305:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 306:lib/printf/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 307:lib/printf/printf.c **** {
 308:lib/printf/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 309:lib/printf/printf.c ****   size_t len = 0U;
 310:lib/printf/printf.c **** 
 311:lib/printf/printf.c ****   // no hash for 0 values
 312:lib/printf/printf.c ****   if (!value) {
 313:lib/printf/printf.c ****     flags &= ~FLAGS_HASH;
 314:lib/printf/printf.c ****   }
 315:lib/printf/printf.c **** 
 316:lib/printf/printf.c ****   // write if precision != 0 and value is != 0
 317:lib/printf/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 318:lib/printf/printf.c ****     do {
 319:lib/printf/printf.c ****       const char digit = (char)(value % base);
 320:lib/printf/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 321:lib/printf/printf.c ****       value /= base;
 322:lib/printf/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 323:lib/printf/printf.c ****   }
 324:lib/printf/printf.c **** 
 325:lib/printf/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 326:lib/printf/printf.c **** }
 327:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 328:lib/printf/printf.c **** 
 329:lib/printf/printf.c **** 
 330:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 331:lib/printf/printf.c **** 
 332:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 333:lib/printf/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 334:lib/printf/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 335:lib/printf/printf.c **** #endif
 336:lib/printf/printf.c **** 
 337:lib/printf/printf.c **** 
 338:lib/printf/printf.c **** // internal ftoa for fixed decimal floating point
 339:lib/printf/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 340:lib/printf/printf.c **** {
 341:lib/printf/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 342:lib/printf/printf.c ****   size_t len  = 0U;
 343:lib/printf/printf.c ****   double diff = 0.0;
 344:lib/printf/printf.c **** 
 345:lib/printf/printf.c ****   // powers of 10
 346:lib/printf/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 347:lib/printf/printf.c **** 
 348:lib/printf/printf.c ****   // test for special values
 349:lib/printf/printf.c ****   if (value != value)
 350:lib/printf/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 351:lib/printf/printf.c ****   if (value < -DBL_MAX)
 352:lib/printf/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 353:lib/printf/printf.c ****   if (value > DBL_MAX)
 354:lib/printf/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 355:lib/printf/printf.c **** 
 356:lib/printf/printf.c ****   // test for very large values
 357:lib/printf/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 358:lib/printf/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 359:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 360:lib/printf/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 361:lib/printf/printf.c **** #else
 362:lib/printf/printf.c ****     return 0U;
 363:lib/printf/printf.c **** #endif
 364:lib/printf/printf.c ****   }
 365:lib/printf/printf.c **** 
 366:lib/printf/printf.c ****   // test for negative
 367:lib/printf/printf.c ****   bool negative = false;
 368:lib/printf/printf.c ****   if (value < 0) {
 369:lib/printf/printf.c ****     negative = true;
 370:lib/printf/printf.c ****     value = 0 - value;
 371:lib/printf/printf.c ****   }
 372:lib/printf/printf.c **** 
 373:lib/printf/printf.c ****   // set default precision, if not set explicitly
 374:lib/printf/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 375:lib/printf/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 376:lib/printf/printf.c ****   }
 377:lib/printf/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 378:lib/printf/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 379:lib/printf/printf.c ****     buf[len++] = '0';
 380:lib/printf/printf.c ****     prec--;
 381:lib/printf/printf.c ****   }
 382:lib/printf/printf.c **** 
 383:lib/printf/printf.c ****   int whole = (int)value;
 384:lib/printf/printf.c ****   double tmp = (value - whole) * pow10[prec];
 385:lib/printf/printf.c ****   unsigned long frac = (unsigned long)tmp;
 386:lib/printf/printf.c ****   diff = tmp - frac;
 387:lib/printf/printf.c **** 
 388:lib/printf/printf.c ****   if (diff > 0.5) {
 389:lib/printf/printf.c ****     ++frac;
 390:lib/printf/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 391:lib/printf/printf.c ****     if (frac >= pow10[prec]) {
 392:lib/printf/printf.c ****       frac = 0;
 393:lib/printf/printf.c ****       ++whole;
 394:lib/printf/printf.c ****     }
 395:lib/printf/printf.c ****   }
 396:lib/printf/printf.c ****   else if (diff < 0.5) {
 397:lib/printf/printf.c ****   }
 398:lib/printf/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 399:lib/printf/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 400:lib/printf/printf.c ****     ++frac;
 401:lib/printf/printf.c ****   }
 402:lib/printf/printf.c **** 
 403:lib/printf/printf.c ****   if (prec == 0U) {
 404:lib/printf/printf.c ****     diff = value - (double)whole;
 405:lib/printf/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 406:lib/printf/printf.c ****       // exactly 0.5 and ODD, then round up
 407:lib/printf/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 408:lib/printf/printf.c ****       ++whole;
 409:lib/printf/printf.c ****     }
 410:lib/printf/printf.c ****   }
 411:lib/printf/printf.c ****   else {
 412:lib/printf/printf.c ****     unsigned int count = prec;
 413:lib/printf/printf.c ****     // now do fractional part, as an unsigned number
 414:lib/printf/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 415:lib/printf/printf.c ****       --count;
 416:lib/printf/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 417:lib/printf/printf.c ****       if (!(frac /= 10U)) {
 418:lib/printf/printf.c ****         break;
 419:lib/printf/printf.c ****       }
 420:lib/printf/printf.c ****     }
 421:lib/printf/printf.c ****     // add extra 0s
 422:lib/printf/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 423:lib/printf/printf.c ****       buf[len++] = '0';
 424:lib/printf/printf.c ****     }
 425:lib/printf/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 426:lib/printf/printf.c ****       // add decimal
 427:lib/printf/printf.c ****       buf[len++] = '.';
 428:lib/printf/printf.c ****     }
 429:lib/printf/printf.c ****   }
 430:lib/printf/printf.c **** 
 431:lib/printf/printf.c ****   // do whole part, number is reversed
 432:lib/printf/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 433:lib/printf/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 434:lib/printf/printf.c ****     if (!(whole /= 10)) {
 435:lib/printf/printf.c ****       break;
 436:lib/printf/printf.c ****     }
 437:lib/printf/printf.c ****   }
 438:lib/printf/printf.c **** 
 439:lib/printf/printf.c ****   // pad leading zeros
 440:lib/printf/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 441:lib/printf/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 442:lib/printf/printf.c ****       width--;
 443:lib/printf/printf.c ****     }
 444:lib/printf/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 445:lib/printf/printf.c ****       buf[len++] = '0';
 446:lib/printf/printf.c ****     }
 447:lib/printf/printf.c ****   }
 448:lib/printf/printf.c **** 
 449:lib/printf/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 450:lib/printf/printf.c ****     if (negative) {
 451:lib/printf/printf.c ****       buf[len++] = '-';
 452:lib/printf/printf.c ****     }
 453:lib/printf/printf.c ****     else if (flags & FLAGS_PLUS) {
 454:lib/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 455:lib/printf/printf.c ****     }
 456:lib/printf/printf.c ****     else if (flags & FLAGS_SPACE) {
 457:lib/printf/printf.c ****       buf[len++] = ' ';
 458:lib/printf/printf.c ****     }
 459:lib/printf/printf.c ****   }
 460:lib/printf/printf.c **** 
 461:lib/printf/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 462:lib/printf/printf.c **** }
 463:lib/printf/printf.c **** 
 464:lib/printf/printf.c **** 
 465:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 466:lib/printf/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 467:lib/printf/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 468:lib/printf/printf.c **** {
 469:lib/printf/printf.c ****   // check for NaN and special values
 470:lib/printf/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 471:lib/printf/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 472:lib/printf/printf.c ****   }
 473:lib/printf/printf.c **** 
 474:lib/printf/printf.c ****   // determine the sign
 475:lib/printf/printf.c ****   const bool negative = value < 0;
 476:lib/printf/printf.c ****   if (negative) {
 477:lib/printf/printf.c ****     value = -value;
 478:lib/printf/printf.c ****   }
 479:lib/printf/printf.c **** 
 480:lib/printf/printf.c ****   // default precision
 481:lib/printf/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 482:lib/printf/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 483:lib/printf/printf.c ****   }
 484:lib/printf/printf.c **** 
 485:lib/printf/printf.c ****   // determine the decimal exponent
 486:lib/printf/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 487:lib/printf/printf.c ****   union {
 488:lib/printf/printf.c ****     uint64_t U;
 489:lib/printf/printf.c ****     double   F;
 490:lib/printf/printf.c ****   } conv;
 491:lib/printf/printf.c **** 
 492:lib/printf/printf.c ****   conv.F = value;
 493:lib/printf/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 494:lib/printf/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 495:lib/printf/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 496:lib/printf/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 497:lib/printf/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 498:lib/printf/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 499:lib/printf/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 500:lib/printf/printf.c ****   const double z2 = z * z;
 501:lib/printf/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 502:lib/printf/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 503:lib/printf/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 504:lib/printf/printf.c ****   // correct for rounding errors
 505:lib/printf/printf.c ****   if (value < conv.F) {
 506:lib/printf/printf.c ****     expval--;
 507:lib/printf/printf.c ****     conv.F /= 10;
 508:lib/printf/printf.c ****   }
 509:lib/printf/printf.c **** 
 510:lib/printf/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 511:lib/printf/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 512:lib/printf/printf.c **** 
 513:lib/printf/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 514:lib/printf/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 515:lib/printf/printf.c ****     // do we want to fall-back to "%f" mode?
 516:lib/printf/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 517:lib/printf/printf.c ****       if ((int)prec > expval) {
 518:lib/printf/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 519:lib/printf/printf.c ****       }
 520:lib/printf/printf.c ****       else {
 521:lib/printf/printf.c ****         prec = 0;
 522:lib/printf/printf.c ****       }
 523:lib/printf/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 524:lib/printf/printf.c ****       // no characters in exponent
 525:lib/printf/printf.c ****       minwidth = 0U;
 526:lib/printf/printf.c ****       expval   = 0;
 527:lib/printf/printf.c ****     }
 528:lib/printf/printf.c ****     else {
 529:lib/printf/printf.c ****       // we use one sigfig for the whole part
 530:lib/printf/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 531:lib/printf/printf.c ****         --prec;
 532:lib/printf/printf.c ****       }
 533:lib/printf/printf.c ****     }
 534:lib/printf/printf.c ****   }
 535:lib/printf/printf.c **** 
 536:lib/printf/printf.c ****   // will everything fit?
 537:lib/printf/printf.c ****   unsigned int fwidth = width;
 538:lib/printf/printf.c ****   if (width > minwidth) {
 539:lib/printf/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 540:lib/printf/printf.c ****     fwidth -= minwidth;
 541:lib/printf/printf.c ****   } else {
 542:lib/printf/printf.c ****     // not enough characters, so go back to default sizing
 543:lib/printf/printf.c ****     fwidth = 0U;
 544:lib/printf/printf.c ****   }
 545:lib/printf/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 546:lib/printf/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 547:lib/printf/printf.c ****     fwidth = 0U;
 548:lib/printf/printf.c ****   }
 549:lib/printf/printf.c **** 
 550:lib/printf/printf.c ****   // rescale the float value
 551:lib/printf/printf.c ****   if (expval) {
 552:lib/printf/printf.c ****     value /= conv.F;
 553:lib/printf/printf.c ****   }
 554:lib/printf/printf.c **** 
 555:lib/printf/printf.c ****   // output the floating part
 556:lib/printf/printf.c ****   const size_t start_idx = idx;
 557:lib/printf/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 558:lib/printf/printf.c **** 
 559:lib/printf/printf.c ****   // output the exponent part
 560:lib/printf/printf.c ****   if (minwidth) {
 561:lib/printf/printf.c ****     // output the exponential symbol
 562:lib/printf/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 563:lib/printf/printf.c ****     // output the exponent value
 564:lib/printf/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 565:lib/printf/printf.c ****     // might need to right-pad spaces
 566:lib/printf/printf.c ****     if (flags & FLAGS_LEFT) {
 567:lib/printf/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 568:lib/printf/printf.c ****     }
 569:lib/printf/printf.c ****   }
 570:lib/printf/printf.c ****   return idx;
 571:lib/printf/printf.c **** }
 572:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 573:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 574:lib/printf/printf.c **** 
 575:lib/printf/printf.c **** 
 576:lib/printf/printf.c **** // internal vsnprintf
 577:lib/printf/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 578:lib/printf/printf.c **** {
 719              		.loc 1 578 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 4, pretend = 0, frame = 24
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		.loc 1 578 1 is_stmt 0 view .LVU208
 724 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 725              		.cfi_def_cfa_offset 36
 726              		.cfi_offset 4, -36
 727              		.cfi_offset 5, -32
 728              		.cfi_offset 6, -28
 729              		.cfi_offset 7, -24
 730              		.cfi_offset 8, -20
 731              		.cfi_offset 9, -16
 732              		.cfi_offset 10, -12
 733              		.cfi_offset 11, -8
 734              		.cfi_offset 14, -4
 735 0004 8DB0     		sub	sp, sp, #52
 736              		.cfi_def_cfa_offset 88
 737              		.loc 1 578 1 view .LVU209
 738 0006 1F46     		mov	r7, r3
 579:lib/printf/printf.c ****   unsigned int flags, width, precision, n;
 580:lib/printf/printf.c ****   size_t idx = 0U;
 581:lib/printf/printf.c **** 
 582:lib/printf/printf.c ****   if (!buffer) {
 583:lib/printf/printf.c ****     // use null output function
 584:lib/printf/printf.c ****     out = _out_null;
 739              		.loc 1 584 9 view .LVU210
 740 0008 0B1E     		subs	r3, r1, #0
 741              	.LVL86:
 742              		.loc 1 584 9 view .LVU211
 743 000a 0693     		str	r3, [sp, #24]
 744 000c AC4B     		ldr	r3, .L218
 745 000e 169E     		ldr	r6, [sp, #88]
 578:lib/printf/printf.c ****   unsigned int flags, width, precision, n;
 746              		.loc 1 578 1 view .LVU212
 747 0010 9146     		mov	r9, r2
 748              	.LVL87:
 579:lib/printf/printf.c ****   unsigned int flags, width, precision, n;
 749              		.loc 1 579 3 is_stmt 1 view .LVU213
 580:lib/printf/printf.c **** 
 750              		.loc 1 580 3 view .LVU214
 582:lib/printf/printf.c ****     // use null output function
 751              		.loc 1 582 3 view .LVU215
 752              		.loc 1 584 9 is_stmt 0 view .LVU216
 753 0012 14BF     		ite	ne
 754 0014 8346     		movne	fp, r0
 755 0016 9B46     		moveq	fp, r3
 756              	.LVL88:
 585:lib/printf/printf.c ****   }
 586:lib/printf/printf.c **** 
 587:lib/printf/printf.c ****   while (*format)
 588:lib/printf/printf.c ****   {
 589:lib/printf/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 590:lib/printf/printf.c ****     if (*format != '%') {
 591:lib/printf/printf.c ****       // no
 592:lib/printf/printf.c ****       out(*format, buffer, idx++, maxlen);
 593:lib/printf/printf.c ****       format++;
 594:lib/printf/printf.c ****       continue;
 595:lib/printf/printf.c ****     }
 596:lib/printf/printf.c ****     else {
 597:lib/printf/printf.c ****       // yes, evaluate it
 598:lib/printf/printf.c ****       format++;
 599:lib/printf/printf.c ****     }
 600:lib/printf/printf.c **** 
 601:lib/printf/printf.c ****     // evaluate flags
 602:lib/printf/printf.c ****     flags = 0U;
 603:lib/printf/printf.c ****     do {
 604:lib/printf/printf.c ****       switch (*format) {
 605:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 606:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 607:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 608:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 609:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 610:lib/printf/printf.c ****         default :                                   n = 0U; break;
 611:lib/printf/printf.c ****       }
 612:lib/printf/printf.c ****     } while (n);
 613:lib/printf/printf.c **** 
 614:lib/printf/printf.c ****     // evaluate width field
 615:lib/printf/printf.c ****     width = 0U;
 616:lib/printf/printf.c ****     if (_is_digit(*format)) {
 617:lib/printf/printf.c ****       width = _atoi(&format);
 618:lib/printf/printf.c ****     }
 619:lib/printf/printf.c ****     else if (*format == '*') {
 620:lib/printf/printf.c ****       const int w = va_arg(va, int);
 621:lib/printf/printf.c ****       if (w < 0) {
 622:lib/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 623:lib/printf/printf.c ****         width = (unsigned int)-w;
 624:lib/printf/printf.c ****       }
 625:lib/printf/printf.c ****       else {
 626:lib/printf/printf.c ****         width = (unsigned int)w;
 627:lib/printf/printf.c ****       }
 628:lib/printf/printf.c ****       format++;
 629:lib/printf/printf.c ****     }
 630:lib/printf/printf.c **** 
 631:lib/printf/printf.c ****     // evaluate precision field
 632:lib/printf/printf.c ****     precision = 0U;
 633:lib/printf/printf.c ****     if (*format == '.') {
 634:lib/printf/printf.c ****       flags |= FLAGS_PRECISION;
 635:lib/printf/printf.c ****       format++;
 636:lib/printf/printf.c ****       if (_is_digit(*format)) {
 637:lib/printf/printf.c ****         precision = _atoi(&format);
 638:lib/printf/printf.c ****       }
 639:lib/printf/printf.c ****       else if (*format == '*') {
 640:lib/printf/printf.c ****         const int prec = (int)va_arg(va, int);
 641:lib/printf/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 642:lib/printf/printf.c ****         format++;
 643:lib/printf/printf.c ****       }
 644:lib/printf/printf.c ****     }
 645:lib/printf/printf.c **** 
 646:lib/printf/printf.c ****     // evaluate length field
 647:lib/printf/printf.c ****     switch (*format) {
 648:lib/printf/printf.c ****       case 'l' :
 649:lib/printf/printf.c ****         flags |= FLAGS_LONG;
 650:lib/printf/printf.c ****         format++;
 651:lib/printf/printf.c ****         if (*format == 'l') {
 652:lib/printf/printf.c ****           flags |= FLAGS_LONG_LONG;
 653:lib/printf/printf.c ****           format++;
 654:lib/printf/printf.c ****         }
 655:lib/printf/printf.c ****         break;
 656:lib/printf/printf.c ****       case 'h' :
 657:lib/printf/printf.c ****         flags |= FLAGS_SHORT;
 658:lib/printf/printf.c ****         format++;
 659:lib/printf/printf.c ****         if (*format == 'h') {
 660:lib/printf/printf.c ****           flags |= FLAGS_CHAR;
 661:lib/printf/printf.c ****           format++;
 662:lib/printf/printf.c ****         }
 663:lib/printf/printf.c ****         break;
 664:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 665:lib/printf/printf.c ****       case 't' :
 666:lib/printf/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 667:lib/printf/printf.c ****         format++;
 668:lib/printf/printf.c ****         break;
 669:lib/printf/printf.c **** #endif
 670:lib/printf/printf.c ****       case 'j' :
 671:lib/printf/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 672:lib/printf/printf.c ****         format++;
 673:lib/printf/printf.c ****         break;
 674:lib/printf/printf.c ****       case 'z' :
 675:lib/printf/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 676:lib/printf/printf.c ****         format++;
 677:lib/printf/printf.c ****         break;
 678:lib/printf/printf.c ****       default :
 679:lib/printf/printf.c ****         break;
 680:lib/printf/printf.c ****     }
 681:lib/printf/printf.c **** 
 682:lib/printf/printf.c ****     // evaluate specifier
 683:lib/printf/printf.c ****     switch (*format) {
 684:lib/printf/printf.c ****       case 'd' :
 685:lib/printf/printf.c ****       case 'i' :
 686:lib/printf/printf.c ****       case 'u' :
 687:lib/printf/printf.c ****       case 'x' :
 688:lib/printf/printf.c ****       case 'X' :
 689:lib/printf/printf.c ****       case 'o' :
 690:lib/printf/printf.c ****       case 'b' : {
 691:lib/printf/printf.c ****         // set the base
 692:lib/printf/printf.c ****         unsigned int base;
 693:lib/printf/printf.c ****         if (*format == 'x' || *format == 'X') {
 694:lib/printf/printf.c ****           base = 16U;
 695:lib/printf/printf.c ****         }
 696:lib/printf/printf.c ****         else if (*format == 'o') {
 697:lib/printf/printf.c ****           base =  8U;
 698:lib/printf/printf.c ****         }
 699:lib/printf/printf.c ****         else if (*format == 'b') {
 700:lib/printf/printf.c ****           base =  2U;
 701:lib/printf/printf.c ****         }
 702:lib/printf/printf.c ****         else {
 703:lib/printf/printf.c ****           base = 10U;
 704:lib/printf/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 705:lib/printf/printf.c ****         }
 706:lib/printf/printf.c ****         // uppercase
 707:lib/printf/printf.c ****         if (*format == 'X') {
 708:lib/printf/printf.c ****           flags |= FLAGS_UPPERCASE;
 709:lib/printf/printf.c ****         }
 710:lib/printf/printf.c **** 
 711:lib/printf/printf.c ****         // no plus or space flag for u, x, X, o, b
 712:lib/printf/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 713:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 714:lib/printf/printf.c ****         }
 715:lib/printf/printf.c **** 
 716:lib/printf/printf.c ****         // ignore '0' flag when precision is given
 717:lib/printf/printf.c ****         if (flags & FLAGS_PRECISION) {
 718:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 719:lib/printf/printf.c ****         }
 720:lib/printf/printf.c **** 
 721:lib/printf/printf.c ****         // convert the integer
 722:lib/printf/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 723:lib/printf/printf.c ****           // signed
 724:lib/printf/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 725:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 726:lib/printf/printf.c ****             const long long value = va_arg(va, long long);
 727:lib/printf/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 728:lib/printf/printf.c **** #endif
 729:lib/printf/printf.c ****           }
 730:lib/printf/printf.c ****           else if (flags & FLAGS_LONG) {
 731:lib/printf/printf.c ****             const long value = va_arg(va, long);
 732:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 733:lib/printf/printf.c ****           }
 734:lib/printf/printf.c ****           else {
 735:lib/printf/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 736:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 737:lib/printf/printf.c ****           }
 738:lib/printf/printf.c ****         }
 739:lib/printf/printf.c ****         else {
 740:lib/printf/printf.c ****           // unsigned
 741:lib/printf/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 742:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 743:lib/printf/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 744:lib/printf/printf.c **** #endif
 745:lib/printf/printf.c ****           }
 746:lib/printf/printf.c ****           else if (flags & FLAGS_LONG) {
 747:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 748:lib/printf/printf.c ****           }
 749:lib/printf/printf.c ****           else {
 750:lib/printf/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 751:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 752:lib/printf/printf.c ****           }
 753:lib/printf/printf.c ****         }
 754:lib/printf/printf.c ****         format++;
 755:lib/printf/printf.c ****         break;
 756:lib/printf/printf.c ****       }
 757:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 758:lib/printf/printf.c ****       case 'f' :
 759:lib/printf/printf.c ****       case 'F' :
 760:lib/printf/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 761:lib/printf/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 762:lib/printf/printf.c ****         format++;
 763:lib/printf/printf.c ****         break;
 764:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 765:lib/printf/printf.c ****       case 'e':
 766:lib/printf/printf.c ****       case 'E':
 767:lib/printf/printf.c ****       case 'g':
 768:lib/printf/printf.c ****       case 'G':
 769:lib/printf/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 770:lib/printf/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 771:lib/printf/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 772:lib/printf/printf.c ****         format++;
 773:lib/printf/printf.c ****         break;
 774:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 775:lib/printf/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 776:lib/printf/printf.c ****       case 'c' : {
 777:lib/printf/printf.c ****         unsigned int l = 1U;
 778:lib/printf/printf.c ****         // pre padding
 779:lib/printf/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 780:lib/printf/printf.c ****           while (l++ < width) {
 781:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 782:lib/printf/printf.c ****           }
 783:lib/printf/printf.c ****         }
 784:lib/printf/printf.c ****         // char output
 785:lib/printf/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 786:lib/printf/printf.c ****         // post padding
 787:lib/printf/printf.c ****         if (flags & FLAGS_LEFT) {
 788:lib/printf/printf.c ****           while (l++ < width) {
 789:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 790:lib/printf/printf.c ****           }
 791:lib/printf/printf.c ****         }
 792:lib/printf/printf.c ****         format++;
 793:lib/printf/printf.c ****         break;
 794:lib/printf/printf.c ****       }
 795:lib/printf/printf.c **** 
 796:lib/printf/printf.c ****       case 's' : {
 797:lib/printf/printf.c ****         const char* p = va_arg(va, char*);
 798:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 799:lib/printf/printf.c ****         // pre padding
 800:lib/printf/printf.c ****         if (flags & FLAGS_PRECISION) {
 801:lib/printf/printf.c ****           l = (l < precision ? l : precision);
 802:lib/printf/printf.c ****         }
 803:lib/printf/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 804:lib/printf/printf.c ****           while (l++ < width) {
 805:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 806:lib/printf/printf.c ****           }
 807:lib/printf/printf.c ****         }
 808:lib/printf/printf.c ****         // string output
 809:lib/printf/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 810:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 811:lib/printf/printf.c ****         }
 812:lib/printf/printf.c ****         // post padding
 813:lib/printf/printf.c ****         if (flags & FLAGS_LEFT) {
 814:lib/printf/printf.c ****           while (l++ < width) {
 815:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 816:lib/printf/printf.c ****           }
 817:lib/printf/printf.c ****         }
 818:lib/printf/printf.c ****         format++;
 819:lib/printf/printf.c ****         break;
 820:lib/printf/printf.c ****       }
 821:lib/printf/printf.c **** 
 822:lib/printf/printf.c ****       case 'p' : {
 823:lib/printf/printf.c ****         width = sizeof(void*) * 2U;
 824:lib/printf/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 825:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 826:lib/printf/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 827:lib/printf/printf.c ****         if (is_ll) {
 828:lib/printf/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 829:lib/printf/printf.c ****         }
 830:lib/printf/printf.c ****         else {
 831:lib/printf/printf.c **** #endif
 832:lib/printf/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 833:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 834:lib/printf/printf.c ****         }
 835:lib/printf/printf.c **** #endif
 836:lib/printf/printf.c ****         format++;
 837:lib/printf/printf.c ****         break;
 838:lib/printf/printf.c ****       }
 839:lib/printf/printf.c **** 
 840:lib/printf/printf.c ****       case '%' :
 841:lib/printf/printf.c ****         out('%', buffer, idx++, maxlen);
 842:lib/printf/printf.c ****         format++;
 843:lib/printf/printf.c ****         break;
 844:lib/printf/printf.c **** 
 845:lib/printf/printf.c ****       default :
 846:lib/printf/printf.c ****         out(*format, buffer, idx++, maxlen);
 757              		.loc 1 846 9 view .LVU217
 758 0018 0025     		movs	r5, #0
 759              	.LVL89:
 760              	.L171:
 587:lib/printf/printf.c ****   {
 761              		.loc 1 587 10 is_stmt 1 view .LVU218
 762 001a 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 763 001c 60B9     		cbnz	r0, .L172
 847:lib/printf/printf.c ****         format++;
 848:lib/printf/printf.c ****         break;
 849:lib/printf/printf.c ****     }
 850:lib/printf/printf.c ****   }
 851:lib/printf/printf.c **** 
 852:lib/printf/printf.c ****   // termination
 853:lib/printf/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 764              		.loc 1 853 3 view .LVU219
 765 001e 4D45     		cmp	r5, r9
 766 0020 0699     		ldr	r1, [sp, #24]
 767 0022 2CBF     		ite	cs
 768 0024 09F1FF32 		addcs	r2, r9, #-1
 769 0028 2A46     		movcc	r2, r5
 770 002a 4B46     		mov	r3, r9
 771 002c 0020     		movs	r0, #0
 772 002e D847     		blx	fp
 773              	.LVL90:
 854:lib/printf/printf.c **** 
 855:lib/printf/printf.c ****   // return written chars without terminating \0
 856:lib/printf/printf.c ****   return (int)idx;
 774              		.loc 1 856 3 view .LVU220
 857:lib/printf/printf.c **** }
 775              		.loc 1 857 1 is_stmt 0 view .LVU221
 776 0030 2846     		mov	r0, r5
 777 0032 0DB0     		add	sp, sp, #52
 778              		.cfi_remember_state
 779              		.cfi_def_cfa_offset 36
 780              		@ sp needed
 781 0034 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 782              	.LVL91:
 783              	.L172:
 784              		.cfi_restore_state
 590:lib/printf/printf.c ****       // no
 785              		.loc 1 590 5 is_stmt 1 view .LVU222
 590:lib/printf/printf.c ****       // no
 786              		.loc 1 590 8 is_stmt 0 view .LVU223
 787 0038 2528     		cmp	r0, #37
 593:lib/printf/printf.c ****       continue;
 788              		.loc 1 593 13 view .LVU224
 789 003a 07F10107 		add	r7, r7, #1
 790              	.LVL92:
 590:lib/printf/printf.c ****       // no
 791              		.loc 1 590 8 view .LVU225
 792 003e 06D0     		beq	.L174
 793              	.LVL93:
 794              	.L123:
 846:lib/printf/printf.c ****         format++;
 795              		.loc 1 846 9 is_stmt 1 view .LVU226
 796 0040 2A46     		mov	r2, r5
 797 0042 0699     		ldr	r1, [sp, #24]
 798 0044 6C1C     		adds	r4, r5, #1
 799              	.LVL94:
 846:lib/printf/printf.c ****         format++;
 800              		.loc 1 846 9 is_stmt 0 view .LVU227
 801 0046 4B46     		mov	r3, r9
 802 0048 D847     		blx	fp
 803              	.LVL95:
 847:lib/printf/printf.c ****         break;
 804              		.loc 1 847 9 is_stmt 1 view .LVU228
 848:lib/printf/printf.c ****     }
 805              		.loc 1 848 9 view .LVU229
 846:lib/printf/printf.c ****         format++;
 806              		.loc 1 846 9 is_stmt 0 view .LVU230
 807 004a 2546     		mov	r5, r4
 848:lib/printf/printf.c ****     }
 808              		.loc 1 848 9 view .LVU231
 809 004c E5E7     		b	.L171
 810              	.LVL96:
 811              	.L174:
 602:lib/printf/printf.c ****     do {
 812              		.loc 1 602 11 view .LVU232
 813 004e 0023     		movs	r3, #0
 814 0050 0DE0     		b	.L96
 815              	.LVL97:
 816              	.L99:
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 817              		.loc 1 604 7 view .LVU233
 818 0052 2D2A     		cmp	r2, #45
 819 0054 28D0     		beq	.L104
 820 0056 302A     		cmp	r2, #48
 821 0058 06D0     		beq	.L105
 822              	.LVL98:
 612:lib/printf/printf.c **** 
 823              		.loc 1 612 14 is_stmt 1 view .LVU234
 615:lib/printf/printf.c ****     if (_is_digit(*format)) {
 824              		.loc 1 615 5 view .LVU235
 616:lib/printf/printf.c ****       width = _atoi(&format);
 825              		.loc 1 616 5 view .LVU236
 826              	.LBB64:
 827              	.LBI64:
 181:lib/printf/printf.c **** {
 828              		.loc 1 181 20 view .LVU237
 829              	.LBB65:
 183:lib/printf/printf.c **** }
 830              		.loc 1 183 3 view .LVU238
 183:lib/printf/printf.c **** }
 831              		.loc 1 183 3 is_stmt 0 view .LVU239
 832              	.LBE65:
 833              	.LBE64:
 616:lib/printf/printf.c ****       width = _atoi(&format);
 834              		.loc 1 616 8 view .LVU240
 835 005a 303A     		subs	r2, r2, #48
 836 005c 092A     		cmp	r2, #9
 837              	.LBB67:
 838              	.LBB68:
 190:lib/printf/printf.c ****   while (_is_digit(**str)) {
 839              		.loc 1 190 16 view .LVU241
 840 005e 4FF00008 		mov	r8, #0
 841              	.LBE68:
 842              	.LBE67:
 616:lib/printf/printf.c ****       width = _atoi(&format);
 843              		.loc 1 616 8 view .LVU242
 844 0062 12D8     		bhi	.L103
 845              	.LBB73:
 846              	.LBB71:
 192:lib/printf/printf.c ****   }
 847              		.loc 1 192 11 view .LVU243
 848 0064 0A24     		movs	r4, #10
 849 0066 30E0     		b	.L106
 850              	.LVL99:
 851              	.L105:
 192:lib/printf/printf.c ****   }
 852              		.loc 1 192 11 view .LVU244
 853              	.LBE71:
 854              	.LBE73:
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 855              		.loc 1 605 19 is_stmt 1 view .LVU245
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 856              		.loc 1 605 25 is_stmt 0 view .LVU246
 857 0068 43F00103 		orr	r3, r3, #1
 858              	.LVL100:
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 859              		.loc 1 605 43 is_stmt 1 view .LVU247
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 860              		.loc 1 605 53 view .LVU248
 605:lib/printf/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 861              		.loc 1 605 61 view .LVU249
 862              	.L107:
 863              	.LBB74:
 628:lib/printf/printf.c ****     }
 864              		.loc 1 628 13 is_stmt 0 view .LVU250
 865 006c 0F46     		mov	r7, r1
 866              	.LVL101:
 867              	.L96:
 628:lib/printf/printf.c ****     }
 868              		.loc 1 628 13 view .LVU251
 869              	.LBE74:
 603:lib/printf/printf.c ****       switch (*format) {
 870              		.loc 1 603 5 is_stmt 1 view .LVU252
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 871              		.loc 1 604 7 view .LVU253
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 872              		.loc 1 604 15 is_stmt 0 view .LVU254
 873 006e 3946     		mov	r1, r7
 874 0070 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 875              		.loc 1 604 7 view .LVU255
 876 0074 2B2A     		cmp	r2, #43
 877 0076 1AD0     		beq	.L98
 604:lib/printf/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 878              		.loc 1 604 7 view .LVU256
 879 0078 EBD8     		bhi	.L99
 880 007a 202A     		cmp	r2, #32
 881 007c 1AD0     		beq	.L100
 882 007e 232A     		cmp	r2, #35
 883 0080 1BD0     		beq	.L101
 884              	.LVL102:
 612:lib/printf/printf.c **** 
 885              		.loc 1 612 14 is_stmt 1 view .LVU257
 615:lib/printf/printf.c ****     if (_is_digit(*format)) {
 886              		.loc 1 615 5 view .LVU258
 616:lib/printf/printf.c ****       width = _atoi(&format);
 887              		.loc 1 616 5 view .LVU259
 888              	.LBB75:
 181:lib/printf/printf.c **** {
 889              		.loc 1 181 20 view .LVU260
 890              	.LBB66:
 183:lib/printf/printf.c **** }
 891              		.loc 1 183 3 view .LVU261
 183:lib/printf/printf.c **** }
 892              		.loc 1 183 3 is_stmt 0 view .LVU262
 893              	.LBE66:
 894              	.LBE75:
 619:lib/printf/printf.c ****       const int w = va_arg(va, int);
 895              		.loc 1 619 10 is_stmt 1 view .LVU263
 619:lib/printf/printf.c ****       const int w = va_arg(va, int);
 896              		.loc 1 619 13 is_stmt 0 view .LVU264
 897 0082 2A2A     		cmp	r2, #42
 898 0084 29D0     		beq	.L102
 615:lib/printf/printf.c ****     if (_is_digit(*format)) {
 899              		.loc 1 615 11 view .LVU265
 900 0086 4FF00008 		mov	r8, #0
 901              	.LVL103:
 902              	.L103:
 632:lib/printf/printf.c ****     if (*format == '.') {
 903              		.loc 1 632 5 is_stmt 1 view .LVU266
 633:lib/printf/printf.c ****       flags |= FLAGS_PRECISION;
 904              		.loc 1 633 5 view .LVU267
 633:lib/printf/printf.c ****       flags |= FLAGS_PRECISION;
 905              		.loc 1 633 8 is_stmt 0 view .LVU268
 906 008a 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 907 008c 2E2A     		cmp	r2, #46
 908 008e 6AD1     		bne	.L208
 636:lib/printf/printf.c ****         precision = _atoi(&format);
 909              		.loc 1 636 11 view .LVU269
 910 0090 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 636:lib/printf/printf.c ****         precision = _atoi(&format);
 911              		.loc 1 636 10 view .LVU270
 912 0092 A1F13000 		sub	r0, r1, #48
 913 0096 0928     		cmp	r0, #9
 635:lib/printf/printf.c ****       if (_is_digit(*format)) {
 914              		.loc 1 635 13 view .LVU271
 915 0098 07F10102 		add	r2, r7, #1
 634:lib/printf/printf.c ****       format++;
 916              		.loc 1 634 7 is_stmt 1 view .LVU272
 634:lib/printf/printf.c ****       format++;
 917              		.loc 1 634 13 is_stmt 0 view .LVU273
 918 009c 43F48063 		orr	r3, r3, #1024
 919              	.LVL104:
 635:lib/printf/printf.c ****       if (_is_digit(*format)) {
 920              		.loc 1 635 7 is_stmt 1 view .LVU274
 636:lib/printf/printf.c ****         precision = _atoi(&format);
 921              		.loc 1 636 7 view .LVU275
 922              	.LBB76:
 923              	.LBI76:
 181:lib/printf/printf.c **** {
 924              		.loc 1 181 20 view .LVU276
 925              	.LBB77:
 183:lib/printf/printf.c **** }
 926              		.loc 1 183 3 view .LVU277
 183:lib/printf/printf.c **** }
 927              		.loc 1 183 3 is_stmt 0 view .LVU278
 928              	.LBE77:
 929              	.LBE76:
 636:lib/printf/printf.c ****         precision = _atoi(&format);
 930              		.loc 1 636 10 view .LVU279
 931 00a0 58D8     		bhi	.L206
 932              	.LBB78:
 933              	.LBB79:
 190:lib/printf/printf.c ****   while (_is_digit(**str)) {
 934              		.loc 1 190 16 view .LVU280
 935 00a2 0024     		movs	r4, #0
 192:lib/printf/printf.c ****   }
 936              		.loc 1 192 11 view .LVU281
 937 00a4 0A27     		movs	r7, #10
 938              	.LVL105:
 192:lib/printf/printf.c ****   }
 939              		.loc 1 192 11 view .LVU282
 940 00a6 28E0     		b	.L112
 941              	.LVL106:
 942              	.L104:
 192:lib/printf/printf.c ****   }
 943              		.loc 1 192 11 view .LVU283
 944              	.LBE79:
 945              	.LBE78:
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 946              		.loc 1 606 19 is_stmt 1 view .LVU284
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 947              		.loc 1 606 25 is_stmt 0 view .LVU285
 948 00a8 43F00203 		orr	r3, r3, #2
 949              	.LVL107:
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 950              		.loc 1 606 43 is_stmt 1 view .LVU286
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 951              		.loc 1 606 53 view .LVU287
 606:lib/printf/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 952              		.loc 1 606 61 view .LVU288
 953 00ac DEE7     		b	.L107
 954              	.LVL108:
 955              	.L98:
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 956              		.loc 1 607 19 view .LVU289
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 957              		.loc 1 607 25 is_stmt 0 view .LVU290
 958 00ae 43F00403 		orr	r3, r3, #4
 959              	.LVL109:
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 960              		.loc 1 607 43 is_stmt 1 view .LVU291
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 961              		.loc 1 607 53 view .LVU292
 607:lib/printf/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 962              		.loc 1 607 61 view .LVU293
 963 00b2 DBE7     		b	.L107
 964              	.LVL110:
 965              	.L100:
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 966              		.loc 1 608 19 view .LVU294
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 967              		.loc 1 608 25 is_stmt 0 view .LVU295
 968 00b4 43F00803 		orr	r3, r3, #8
 969              	.LVL111:
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 970              		.loc 1 608 43 is_stmt 1 view .LVU296
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 971              		.loc 1 608 53 view .LVU297
 608:lib/printf/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 972              		.loc 1 608 61 view .LVU298
 973 00b8 D8E7     		b	.L107
 974              	.LVL112:
 975              	.L101:
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 976              		.loc 1 609 19 view .LVU299
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 977              		.loc 1 609 25 is_stmt 0 view .LVU300
 978 00ba 43F01003 		orr	r3, r3, #16
 979              	.LVL113:
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 980              		.loc 1 609 43 is_stmt 1 view .LVU301
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 981              		.loc 1 609 53 view .LVU302
 609:lib/printf/printf.c ****         default :                                   n = 0U; break;
 982              		.loc 1 609 61 view .LVU303
 983 00be D5E7     		b	.L107
 984              	.LVL114:
 985              	.L108:
 986              	.LBB83:
 987              	.LBB72:
 192:lib/printf/printf.c ****   }
 988              		.loc 1 192 5 view .LVU304
 192:lib/printf/printf.c ****   }
 989              		.loc 1 192 5 is_stmt 0 view .LVU305
 990 00c0 04FB0822 		mla	r2, r4, r8, r2
 192:lib/printf/printf.c ****   }
 991              		.loc 1 192 7 view .LVU306
 992 00c4 A2F13008 		sub	r8, r2, #48
 993              	.LVL115:
 192:lib/printf/printf.c ****   }
 994              		.loc 1 192 42 view .LVU307
 995 00c8 0F46     		mov	r7, r1
 996              	.LVL116:
 997              	.L106:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 998              		.loc 1 191 10 is_stmt 1 view .LVU308
 999 00ca 3946     		mov	r1, r7
 1000 00cc 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 1001              	.LVL117:
 1002              	.LBB69:
 1003              	.LBI69:
 181:lib/printf/printf.c **** {
 1004              		.loc 1 181 20 view .LVU309
 1005              	.LBB70:
 183:lib/printf/printf.c **** }
 1006              		.loc 1 183 3 view .LVU310
 183:lib/printf/printf.c **** }
 1007              		.loc 1 183 3 is_stmt 0 view .LVU311
 1008              	.LBE70:
 1009              	.LBE69:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 1010              		.loc 1 191 10 view .LVU312
 1011 00d0 A2F13000 		sub	r0, r2, #48
 1012 00d4 0928     		cmp	r0, #9
 1013 00d6 F3D9     		bls	.L108
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 1014              		.loc 1 191 10 view .LVU313
 1015 00d8 D7E7     		b	.L103
 1016              	.LVL118:
 1017              	.L102:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 1018              		.loc 1 191 10 view .LVU314
 1019              	.LBE72:
 1020              	.LBE83:
 1021              	.LBB84:
 620:lib/printf/printf.c ****       if (w < 0) {
 1022              		.loc 1 620 7 is_stmt 1 view .LVU315
 620:lib/printf/printf.c ****       if (w < 0) {
 1023              		.loc 1 620 17 is_stmt 0 view .LVU316
 1024 00da 56F8048B 		ldr	r8, [r6], #4
 1025              	.LVL119:
 621:lib/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 1026              		.loc 1 621 7 is_stmt 1 view .LVU317
 621:lib/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 1027              		.loc 1 621 10 is_stmt 0 view .LVU318
 1028 00de B8F1000F 		cmp	r8, #0
 622:lib/printf/printf.c ****         width = (unsigned int)-w;
 1029              		.loc 1 622 9 is_stmt 1 view .LVU319
 622:lib/printf/printf.c ****         width = (unsigned int)-w;
 1030              		.loc 1 622 15 is_stmt 0 view .LVU320
 1031 00e2 BCBF     		itt	lt
 1032 00e4 43F00203 		orrlt	r3, r3, #2
 1033              	.LVL120:
 623:lib/printf/printf.c ****       }
 1034              		.loc 1 623 9 is_stmt 1 view .LVU321
 623:lib/printf/printf.c ****       }
 1035              		.loc 1 623 31 is_stmt 0 view .LVU322
 1036 00e8 C8F10008 		rsblt	r8, r8, #0
 1037              	.LVL121:
 628:lib/printf/printf.c ****     }
 1038              		.loc 1 628 7 is_stmt 1 view .LVU323
 628:lib/printf/printf.c ****     }
 1039              		.loc 1 628 13 is_stmt 0 view .LVU324
 1040 00ec 0F46     		mov	r7, r1
 1041 00ee CCE7     		b	.L103
 1042              	.LVL122:
 1043              	.L114:
 628:lib/printf/printf.c ****     }
 1044              		.loc 1 628 13 view .LVU325
 1045              	.LBE84:
 1046              	.LBB85:
 1047              	.LBB82:
 192:lib/printf/printf.c ****   }
 1048              		.loc 1 192 5 is_stmt 1 view .LVU326
 192:lib/printf/printf.c ****   }
 1049              		.loc 1 192 5 is_stmt 0 view .LVU327
 1050 00f0 07FB0411 		mla	r1, r7, r4, r1
 192:lib/printf/printf.c ****   }
 1051              		.loc 1 192 7 view .LVU328
 1052 00f4 A1F13004 		sub	r4, r1, #48
 1053              	.LVL123:
 192:lib/printf/printf.c ****   }
 1054              		.loc 1 192 42 view .LVU329
 1055 00f8 0246     		mov	r2, r0
 1056              	.LVL124:
 1057              	.L112:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 1058              		.loc 1 191 10 is_stmt 1 view .LVU330
 1059 00fa 1046     		mov	r0, r2
 1060 00fc 10F8011B 		ldrb	r1, [r0], #1	@ zero_extendqisi2
 1061              	.LVL125:
 1062              	.LBB80:
 1063              	.LBI80:
 181:lib/printf/printf.c **** {
 1064              		.loc 1 181 20 view .LVU331
 1065              	.LBB81:
 183:lib/printf/printf.c **** }
 1066              		.loc 1 183 3 view .LVU332
 183:lib/printf/printf.c **** }
 1067              		.loc 1 183 3 is_stmt 0 view .LVU333
 1068              	.LBE81:
 1069              	.LBE80:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 1070              		.loc 1 191 10 view .LVU334
 1071 0100 A1F1300C 		sub	ip, r1, #48
 1072 0104 BCF1090F 		cmp	ip, #9
 1073 0108 F2D9     		bls	.L114
 1074 010a 1746     		mov	r7, r2
 1075              	.LVL126:
 1076              	.L111:
 191:lib/printf/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 1077              		.loc 1 191 10 view .LVU335
 1078              	.LBE82:
 1079              	.LBE85:
 647:lib/printf/printf.c ****       case 'l' :
 1080              		.loc 1 647 5 is_stmt 1 view .LVU336
 647:lib/printf/printf.c ****       case 'l' :
 1081              		.loc 1 647 13 is_stmt 0 view .LVU337
 1082 010c 3A46     		mov	r2, r7
 1083 010e 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 647:lib/printf/printf.c ****       case 'l' :
 1084              		.loc 1 647 5 view .LVU338
 1085 0112 6C29     		cmp	r1, #108
 1086 0114 2ED0     		beq	.L115
 647:lib/printf/printf.c ****       case 'l' :
 1087              		.loc 1 647 5 view .LVU339
 1088 0116 28D8     		bhi	.L116
 1089 0118 6829     		cmp	r1, #104
 1090 011a 32D0     		beq	.L117
 1091 011c 6A29     		cmp	r1, #106
 1092 011e 39D0     		beq	.L118
 1093              	.L209:
 1094 0120 3A46     		mov	r2, r7
 1095              	.LVL127:
 1096              	.L119:
 683:lib/printf/printf.c ****       case 'd' :
 1097              		.loc 1 683 5 is_stmt 1 view .LVU340
 683:lib/printf/printf.c ****       case 'd' :
 1098              		.loc 1 683 13 is_stmt 0 view .LVU341
 1099 0122 1746     		mov	r7, r2
 1100 0124 17F8010B 		ldrb	r0, [r7], #1	@ zero_extendqisi2
 683:lib/printf/printf.c ****       case 'd' :
 1101              		.loc 1 683 5 view .LVU342
 1102 0128 7828     		cmp	r0, #120
 1103 012a 89D8     		bhi	.L123
 683:lib/printf/printf.c ****       case 'd' :
 1104              		.loc 1 683 5 view .LVU343
 1105 012c 6328     		cmp	r0, #99
 1106 012e 34D8     		bhi	.L124
 1107 0130 6228     		cmp	r0, #98
 1108 0132 68D0     		beq	.L125
 1109 0134 6328     		cmp	r0, #99
 1110 0136 00F0CD80 		beq	.L126
 1111 013a 2528     		cmp	r0, #37
 1112 013c 80D0     		beq	.L123
 1113 013e 5828     		cmp	r0, #88
 1114 0140 7FF47EAF 		bne	.L123
 1115              	.LVL128:
 1116              	.LBB86:
 707:lib/printf/printf.c ****           flags |= FLAGS_UPPERCASE;
 1117              		.loc 1 707 9 is_stmt 1 view .LVU344
 708:lib/printf/printf.c ****         }
 1118              		.loc 1 708 11 view .LVU345
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1119              		.loc 1 712 9 view .LVU346
 713:lib/printf/printf.c ****         }
 1120              		.loc 1 713 11 view .LVU347
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1121              		.loc 1 717 9 view .LVU348
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1122              		.loc 1 717 12 is_stmt 0 view .LVU349
 1123 0144 5A05     		lsls	r2, r3, #21
 1124 0146 00F18180 		bmi	.L139
 1125 014a 23F00C02 		bic	r2, r3, #12
 1126              	.LVL129:
 1127              	.L217:
 718:lib/printf/printf.c ****         }
 1128              		.loc 1 718 17 view .LVU350
 1129 014e 42F02002 		orr	r2, r2, #32
 1130              	.LVL130:
 722:lib/printf/printf.c ****           // signed
 1131              		.loc 1 722 9 is_stmt 1 view .LVU351
 1132 0152 4DE0     		b	.L213
 1133              	.LVL131:
 1134              	.L206:
 722:lib/printf/printf.c ****           // signed
 1135              		.loc 1 722 9 is_stmt 0 view .LVU352
 1136              	.LBE86:
 639:lib/printf/printf.c ****         const int prec = (int)va_arg(va, int);
 1137              		.loc 1 639 12 is_stmt 1 view .LVU353
 639:lib/printf/printf.c ****         const int prec = (int)va_arg(va, int);
 1138              		.loc 1 639 15 is_stmt 0 view .LVU354
 1139 0154 2A29     		cmp	r1, #42
 1140 0156 05D1     		bne	.L178
 1141              	.LBB92:
 640:lib/printf/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 1142              		.loc 1 640 9 is_stmt 1 view .LVU355
 1143              	.LVL132:
 641:lib/printf/printf.c ****         format++;
 1144              		.loc 1 641 9 view .LVU356
 641:lib/printf/printf.c ****         format++;
 1145              		.loc 1 641 51 is_stmt 0 view .LVU357
 1146 0158 56F8044B 		ldr	r4, [r6], #4
 1147              	.LVL133:
 642:lib/printf/printf.c ****       }
 1148              		.loc 1 642 15 view .LVU358
 1149 015c 0237     		adds	r7, r7, #2
 1150              	.LVL134:
 641:lib/printf/printf.c ****         format++;
 1151              		.loc 1 641 51 view .LVU359
 1152 015e 24EAE474 		bic	r4, r4, r4, asr #31
 1153              	.LVL135:
 642:lib/printf/printf.c ****       }
 1154              		.loc 1 642 9 is_stmt 1 view .LVU360
 642:lib/printf/printf.c ****       }
 1155              		.loc 1 642 9 is_stmt 0 view .LVU361
 1156 0162 D3E7     		b	.L111
 1157              	.LVL136:
 1158              	.L178:
 642:lib/printf/printf.c ****       }
 1159              		.loc 1 642 9 view .LVU362
 1160              	.LBE92:
 635:lib/printf/printf.c ****       if (_is_digit(*format)) {
 1161              		.loc 1 635 13 view .LVU363
 1162 0164 1746     		mov	r7, r2
 1163              	.LVL137:
 1164              	.L208:
 632:lib/printf/printf.c ****     if (*format == '.') {
 1165              		.loc 1 632 15 view .LVU364
 1166 0166 0024     		movs	r4, #0
 1167 0168 D0E7     		b	.L111
 1168              	.LVL138:
 1169              	.L116:
 647:lib/printf/printf.c ****       case 'l' :
 1170              		.loc 1 647 5 view .LVU365
 1171 016a 7A29     		cmp	r1, #122
 1172 016c D8D1     		bne	.L209
 1173              	.LVL139:
 1174              	.L120:
 675:lib/printf/printf.c ****         format++;
 1175              		.loc 1 675 9 is_stmt 1 view .LVU366
 675:lib/printf/printf.c ****         format++;
 1176              		.loc 1 675 15 is_stmt 0 view .LVU367
 1177 016e 43F48073 		orr	r3, r3, #256
 1178              	.LVL140:
 676:lib/printf/printf.c ****         break;
 1179              		.loc 1 676 9 is_stmt 1 view .LVU368
 677:lib/printf/printf.c ****       default :
 1180              		.loc 1 677 9 view .LVU369
 1181 0172 D6E7     		b	.L119
 1182              	.L115:
 649:lib/printf/printf.c ****         format++;
 1183              		.loc 1 649 9 view .LVU370
 1184              	.LVL141:
 650:lib/printf/printf.c ****         if (*format == 'l') {
 1185              		.loc 1 650 9 view .LVU371
 651:lib/printf/printf.c ****           flags |= FLAGS_LONG_LONG;
 1186              		.loc 1 651 9 view .LVU372
 651:lib/printf/printf.c ****           flags |= FLAGS_LONG_LONG;
 1187              		.loc 1 651 12 is_stmt 0 view .LVU373
 1188 0174 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1189 0176 6C29     		cmp	r1, #108
 1190 0178 F9D1     		bne	.L120
 652:lib/printf/printf.c ****           format++;
 1191              		.loc 1 652 11 is_stmt 1 view .LVU374
 652:lib/printf/printf.c ****           format++;
 1192              		.loc 1 652 17 is_stmt 0 view .LVU375
 1193 017a 43F44073 		orr	r3, r3, #768
 1194              	.LVL142:
 653:lib/printf/printf.c ****         }
 1195              		.loc 1 653 11 is_stmt 1 view .LVU376
 1196              	.L210:
 661:lib/printf/printf.c ****         }
 1197              		.loc 1 661 11 view .LVU377
 661:lib/printf/printf.c ****         }
 1198              		.loc 1 661 17 is_stmt 0 view .LVU378
 1199 017e BA1C     		adds	r2, r7, #2
 1200              	.LVL143:
 661:lib/printf/printf.c ****         }
 1201              		.loc 1 661 17 view .LVU379
 1202 0180 CFE7     		b	.L119
 1203              	.L117:
 657:lib/printf/printf.c ****         format++;
 1204              		.loc 1 657 9 is_stmt 1 view .LVU380
 1205              	.LVL144:
 658:lib/printf/printf.c ****         if (*format == 'h') {
 1206              		.loc 1 658 9 view .LVU381
 659:lib/printf/printf.c ****           flags |= FLAGS_CHAR;
 1207              		.loc 1 659 9 view .LVU382
 659:lib/printf/printf.c ****           flags |= FLAGS_CHAR;
 1208              		.loc 1 659 12 is_stmt 0 view .LVU383
 1209 0182 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1210 0184 6829     		cmp	r1, #104
 1211 0186 02D0     		beq	.L122
 657:lib/printf/printf.c ****         format++;
 1212              		.loc 1 657 15 view .LVU384
 1213 0188 43F08003 		orr	r3, r3, #128
 1214              	.LVL145:
 657:lib/printf/printf.c ****         format++;
 1215              		.loc 1 657 15 view .LVU385
 1216 018c C9E7     		b	.L119
 1217              	.LVL146:
 1218              	.L122:
 660:lib/printf/printf.c ****           format++;
 1219              		.loc 1 660 11 is_stmt 1 view .LVU386
 660:lib/printf/printf.c ****           format++;
 1220              		.loc 1 660 17 is_stmt 0 view .LVU387
 1221 018e 43F0C003 		orr	r3, r3, #192
 1222              	.LVL147:
 660:lib/printf/printf.c ****           format++;
 1223              		.loc 1 660 17 view .LVU388
 1224 0192 F4E7     		b	.L210
 1225              	.LVL148:
 1226              	.L118:
 671:lib/printf/printf.c ****         format++;
 1227              		.loc 1 671 9 is_stmt 1 view .LVU389
 671:lib/printf/printf.c ****         format++;
 1228              		.loc 1 671 15 is_stmt 0 view .LVU390
 1229 0194 43F40073 		orr	r3, r3, #512
 1230              	.LVL149:
 672:lib/printf/printf.c ****         break;
 1231              		.loc 1 672 9 is_stmt 1 view .LVU391
 673:lib/printf/printf.c ****       case 'z' :
 1232              		.loc 1 673 9 view .LVU392
 1233 0198 C3E7     		b	.L119
 1234              	.L124:
 683:lib/printf/printf.c ****       case 'd' :
 1235              		.loc 1 683 5 is_stmt 0 view .LVU393
 1236 019a A0F16402 		sub	r2, r0, #100
 1237 019e 0121     		movs	r1, #1
 1238 01a0 D2B2     		uxtb	r2, r2
 1239 01a2 01FA02F2 		lsl	r2, r1, r2
 1240 01a6 4749     		ldr	r1, .L218+4
 1241 01a8 0A40     		ands	r2, r2, r1
 1242 01aa 19D1     		bne	.L129
 1243 01ac 7328     		cmp	r0, #115
 1244 01ae 00F0CE80 		beq	.L130
 1245 01b2 7028     		cmp	r0, #112
 1246 01b4 7FF444AF 		bne	.L123
 823:lib/printf/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 1247              		.loc 1 823 9 is_stmt 1 view .LVU394
 1248              	.LVL150:
 824:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1249              		.loc 1 824 9 view .LVU395
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1250              		.loc 1 832 11 view .LVU396
 824:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1251              		.loc 1 824 15 is_stmt 0 view .LVU397
 1252 01b8 43F02103 		orr	r3, r3, #33
 1253              	.LVL151:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1254              		.loc 1 832 17 view .LVU398
 1255 01bc 0593     		str	r3, [sp, #20]
 1256 01be 0823     		movs	r3, #8
 1257              	.LVL152:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1258              		.loc 1 832 17 view .LVU399
 1259 01c0 CDE90343 		strd	r4, r3, [sp, #12]
 1260 01c4 1023     		movs	r3, #16
 1261 01c6 CDE90123 		strd	r2, r3, [sp, #4]
 1262 01ca 56F8043B 		ldr	r3, [r6], #4
 1263              	.LVL153:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1264              		.loc 1 832 17 view .LVU400
 1265 01ce 0093     		str	r3, [sp]
 1266 01d0 2A46     		mov	r2, r5
 1267 01d2 0699     		ldr	r1, [sp, #24]
 1268 01d4 4B46     		mov	r3, r9
 1269 01d6 5846     		mov	r0, fp
 1270 01d8 FFF7FEFF 		bl	_ntoa_long
 1271              	.LVL154:
 832:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1272              		.loc 1 832 17 view .LVU401
 1273 01dc 0546     		mov	r5, r0
 1274              	.LVL155:
 836:lib/printf/printf.c ****         break;
 1275              		.loc 1 836 9 is_stmt 1 view .LVU402
 837:lib/printf/printf.c ****       }
 1276              		.loc 1 837 9 view .LVU403
 1277 01de 1CE7     		b	.L171
 1278              	.LVL156:
 1279              	.L129:
 1280              	.LBB93:
 692:lib/printf/printf.c ****         if (*format == 'x' || *format == 'X') {
 1281              		.loc 1 692 9 view .LVU404
 693:lib/printf/printf.c ****           base = 16U;
 1282              		.loc 1 693 9 view .LVU405
 693:lib/printf/printf.c ****           base = 16U;
 1283              		.loc 1 693 12 is_stmt 0 view .LVU406
 1284 01e0 7828     		cmp	r0, #120
 1285 01e2 03F48061 		and	r1, r3, #1024
 1286 01e6 05D1     		bne	.L132
 1287              	.LVL157:
 713:lib/printf/printf.c ****         }
 1288              		.loc 1 713 11 is_stmt 1 view .LVU407
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1289              		.loc 1 717 9 view .LVU408
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1290              		.loc 1 717 12 is_stmt 0 view .LVU409
 1291 01e8 0029     		cmp	r1, #0
 1292 01ea 5BD0     		beq	.L133
 718:lib/printf/printf.c ****         }
 1293              		.loc 1 718 11 is_stmt 1 view .LVU410
 718:lib/printf/printf.c ****         }
 1294              		.loc 1 718 17 is_stmt 0 view .LVU411
 1295 01ec 23F00D02 		bic	r2, r3, #13
 1296              	.LVL158:
 722:lib/printf/printf.c ****           // signed
 1297              		.loc 1 722 9 is_stmt 1 view .LVU412
 1298              	.L213:
 713:lib/printf/printf.c ****         }
 1299              		.loc 1 713 17 is_stmt 0 view .LVU413
 1300 01f0 1023     		movs	r3, #16
 1301 01f2 0FE0     		b	.L134
 1302              	.LVL159:
 1303              	.L132:
 713:lib/printf/printf.c ****         }
 1304              		.loc 1 713 17 view .LVU414
 1305 01f4 6F28     		cmp	r0, #111
 1306 01f6 1CD1     		bne	.L135
 1307              	.LVL160:
 713:lib/printf/printf.c ****         }
 1308              		.loc 1 713 11 is_stmt 1 view .LVU415
 713:lib/printf/printf.c ****         }
 1309              		.loc 1 713 17 is_stmt 0 view .LVU416
 1310 01f8 23F00C02 		bic	r2, r3, #12
 1311              	.LVL161:
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1312              		.loc 1 717 9 is_stmt 1 view .LVU417
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1313              		.loc 1 717 12 is_stmt 0 view .LVU418
 1314 01fc 09B1     		cbz	r1, .L179
 718:lib/printf/printf.c ****         }
 1315              		.loc 1 718 11 is_stmt 1 view .LVU419
 718:lib/printf/printf.c ****         }
 1316              		.loc 1 718 17 is_stmt 0 view .LVU420
 1317 01fe 23F00D02 		bic	r2, r3, #13
 1318              	.LVL162:
 722:lib/printf/printf.c ****           // signed
 1319              		.loc 1 722 9 is_stmt 1 view .LVU421
 1320              	.L179:
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1321              		.loc 1 717 12 is_stmt 0 view .LVU422
 1322 0202 0823     		movs	r3, #8
 1323 0204 06E0     		b	.L134
 1324              	.LVL163:
 1325              	.L125:
 713:lib/printf/printf.c ****         }
 1326              		.loc 1 713 11 is_stmt 1 view .LVU423
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1327              		.loc 1 717 9 view .LVU424
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1328              		.loc 1 717 12 is_stmt 0 view .LVU425
 1329 0206 5905     		lsls	r1, r3, #21
 713:lib/printf/printf.c ****         }
 1330              		.loc 1 713 17 view .LVU426
 1331 0208 54BF     		ite	pl
 1332 020a 23F00C02 		bicpl	r2, r3, #12
 718:lib/printf/printf.c ****         }
 1333              		.loc 1 718 11 is_stmt 1 view .LVU427
 718:lib/printf/printf.c ****         }
 1334              		.loc 1 718 17 is_stmt 0 view .LVU428
 1335 020e 23F00D02 		bicmi	r2, r3, #13
 1336              	.LVL164:
 722:lib/printf/printf.c ****           // signed
 1337              		.loc 1 722 9 is_stmt 1 view .LVU429
 718:lib/printf/printf.c ****         }
 1338              		.loc 1 718 17 is_stmt 0 view .LVU430
 1339 0212 0223     		movs	r3, #2
 1340              	.LVL165:
 1341              	.L134:
 741:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1342              		.loc 1 741 11 is_stmt 1 view .LVU431
 741:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1343              		.loc 1 741 14 is_stmt 0 view .LVU432
 1344 0214 12F40071 		ands	r1, r2, #512
 1345 0218 7FF4FFAE 		bne	.L171
 746:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 1346              		.loc 1 746 16 is_stmt 1 view .LVU433
 746:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 1347              		.loc 1 746 19 is_stmt 0 view .LVU434
 1348 021c D005     		lsls	r0, r2, #23
 1349              	.LBB87:
 731:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 1350              		.loc 1 731 24 view .LVU435
 1351 021e 06F1040A 		add	r10, r6, #4
 1352              	.LBE87:
 746:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 1353              		.loc 1 746 19 view .LVU436
 1354 0222 42D5     		bpl	.L147
 747:lib/printf/printf.c ****           }
 1355              		.loc 1 747 13 is_stmt 1 view .LVU437
 1356              	.LVL166:
 747:lib/printf/printf.c ****           }
 1357              		.loc 1 747 19 is_stmt 0 view .LVU438
 1358 0224 CDE90482 		strd	r8, r2, [sp, #16]
 1359 0228 CDE90234 		strd	r3, r4, [sp, #8]
 1360 022c 0191     		str	r1, [sp, #4]
 1361 022e 3368     		ldr	r3, [r6]
 1362 0230 29E0     		b	.L214
 1363              	.LVL167:
 1364              	.L135:
 703:lib/printf/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 1365              		.loc 1 703 11 is_stmt 1 view .LVU439
 704:lib/printf/printf.c ****         }
 1366              		.loc 1 704 11 view .LVU440
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1367              		.loc 1 712 12 is_stmt 0 view .LVU441
 1368 0232 6928     		cmp	r0, #105
 704:lib/printf/printf.c ****         }
 1369              		.loc 1 704 17 view .LVU442
 1370 0234 23F01002 		bic	r2, r3, #16
 1371              	.LVL168:
 707:lib/printf/printf.c ****           flags |= FLAGS_UPPERCASE;
 1372              		.loc 1 707 9 is_stmt 1 view .LVU443
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1373              		.loc 1 712 9 view .LVU444
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1374              		.loc 1 712 12 is_stmt 0 view .LVU445
 1375 0238 0BD0     		beq	.L140
 1376              	.LVL169:
 712:lib/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1377              		.loc 1 712 30 discriminator 1 view .LVU446
 1378 023a 6428     		cmp	r0, #100
 1379 023c 09D0     		beq	.L140
 713:lib/printf/printf.c ****         }
 1380              		.loc 1 713 11 is_stmt 1 view .LVU447
 713:lib/printf/printf.c ****         }
 1381              		.loc 1 713 17 is_stmt 0 view .LVU448
 1382 023e 23F01C02 		bic	r2, r3, #28
 1383              	.LVL170:
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1384              		.loc 1 717 9 is_stmt 1 view .LVU449
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1385              		.loc 1 717 12 is_stmt 0 view .LVU450
 1386 0242 09B1     		cbz	r1, .L180
 718:lib/printf/printf.c ****         }
 1387              		.loc 1 718 11 is_stmt 1 view .LVU451
 718:lib/printf/printf.c ****         }
 1388              		.loc 1 718 17 is_stmt 0 view .LVU452
 1389 0244 23F01D02 		bic	r2, r3, #29
 1390              	.LVL171:
 722:lib/printf/printf.c ****           // signed
 1391              		.loc 1 722 9 is_stmt 1 view .LVU453
 1392              	.L180:
 703:lib/printf/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 1393              		.loc 1 703 16 is_stmt 0 view .LVU454
 1394 0248 0A23     		movs	r3, #10
 1395 024a E3E7     		b	.L134
 1396              	.LVL172:
 1397              	.L139:
 718:lib/printf/printf.c ****         }
 1398              		.loc 1 718 11 is_stmt 1 view .LVU455
 1399 024c 23F00D02 		bic	r2, r3, #13
 1400 0250 7DE7     		b	.L217
 1401              	.LVL173:
 1402              	.L140:
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1403              		.loc 1 717 9 view .LVU456
 717:lib/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 1404              		.loc 1 717 12 is_stmt 0 view .LVU457
 1405 0252 09B1     		cbz	r1, .L141
 718:lib/printf/printf.c ****         }
 1406              		.loc 1 718 11 is_stmt 1 view .LVU458
 718:lib/printf/printf.c ****         }
 1407              		.loc 1 718 17 is_stmt 0 view .LVU459
 1408 0254 23F01102 		bic	r2, r3, #17
 1409              	.LVL174:
 722:lib/printf/printf.c ****           // signed
 1410              		.loc 1 722 9 is_stmt 1 view .LVU460
 1411              	.L141:
 724:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1412              		.loc 1 724 11 view .LVU461
 724:lib/printf/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1413              		.loc 1 724 14 is_stmt 0 view .LVU462
 1414 0258 9305     		lsls	r3, r2, #22
 1415 025a 3FF5DEAE 		bmi	.L171
 730:lib/printf/printf.c ****             const long value = va_arg(va, long);
 1416              		.loc 1 730 16 is_stmt 1 view .LVU463
 730:lib/printf/printf.c ****             const long value = va_arg(va, long);
 1417              		.loc 1 730 19 is_stmt 0 view .LVU464
 1418 025e D005     		lsls	r0, r2, #23
 1419              	.LBB88:
 731:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 1420              		.loc 1 731 24 view .LVU465
 1421 0260 06F1040A 		add	r10, r6, #4
 1422              	.LBE88:
 730:lib/printf/printf.c ****             const long value = va_arg(va, long);
 1423              		.loc 1 730 19 view .LVU466
 1424 0264 01D5     		bpl	.L143
 1425              	.L146:
 1426              	.LVL175:
 1427              	.LBB89:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1428              		.loc 1 735 129 view .LVU467
 1429 0266 3368     		ldr	r3, [r6]
 1430 0268 02E0     		b	.L145
 1431              	.LVL176:
 1432              	.L143:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1433              		.loc 1 735 13 is_stmt 1 view .LVU468
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1434              		.loc 1 735 76 is_stmt 0 view .LVU469
 1435 026a 5106     		lsls	r1, r2, #25
 1436 026c 15D5     		bpl	.L144
 1437              	.LVL177:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1438              		.loc 1 735 76 view .LVU470
 1439 026e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1440              	.LVL178:
 1441              	.L145:
 736:lib/printf/printf.c ****           }
 1442              		.loc 1 736 13 is_stmt 1 discriminator 8 view .LVU471
 736:lib/printf/printf.c ****           }
 1443              		.loc 1 736 19 is_stmt 0 discriminator 8 view .LVU472
 1444 0270 0394     		str	r4, [sp, #12]
 1445 0272 CDE90482 		strd	r8, r2, [sp, #16]
 1446 0276 0A22     		movs	r2, #10
 1447 0278 0292     		str	r2, [sp, #8]
 736:lib/printf/printf.c ****           }
 1448              		.loc 1 736 56 discriminator 8 view .LVU473
 1449 027a 002B     		cmp	r3, #0
 736:lib/printf/printf.c ****           }
 1450              		.loc 1 736 19 discriminator 8 view .LVU474
 1451 027c 4FEAD372 		lsr	r2, r3, #31
 1452 0280 0192     		str	r2, [sp, #4]
 736:lib/printf/printf.c ****           }
 1453              		.loc 1 736 56 discriminator 8 view .LVU475
 1454 0282 B8BF     		it	lt
 1455 0284 5B42     		rsblt	r3, r3, #0
 1456              	.LVL179:
 1457              	.L214:
 736:lib/printf/printf.c ****           }
 1458              		.loc 1 736 56 discriminator 8 view .LVU476
 1459              	.LBE89:
 747:lib/printf/printf.c ****           }
 1460              		.loc 1 747 19 view .LVU477
 1461 0286 0093     		str	r3, [sp]
 1462              	.L215:
 1463 0288 2A46     		mov	r2, r5
 1464 028a 0699     		ldr	r1, [sp, #24]
 1465 028c 4B46     		mov	r3, r9
 1466 028e 5846     		mov	r0, fp
 1467 0290 FFF7FEFF 		bl	_ntoa_long
 1468              	.LVL180:
 1469 0294 5646     		mov	r6, r10
 1470 0296 0546     		mov	r5, r0
 1471              	.LVL181:
 747:lib/printf/printf.c ****           }
 1472              		.loc 1 747 19 view .LVU478
 1473 0298 BFE6     		b	.L171
 1474              	.LVL182:
 1475              	.L144:
 1476              	.LBB90:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1477              		.loc 1 735 129 discriminator 2 view .LVU479
 1478 029a 1306     		lsls	r3, r2, #24
 1479 029c E3D5     		bpl	.L146
 1480              	.LVL183:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1481              		.loc 1 735 129 view .LVU480
 1482 029e B6F90030 		ldrsh	r3, [r6]
 1483 02a2 E5E7     		b	.L145
 1484              	.LVL184:
 1485              	.L133:
 735:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 1486              		.loc 1 735 129 view .LVU481
 1487              	.LBE90:
 713:lib/printf/printf.c ****         }
 1488              		.loc 1 713 17 view .LVU482
 1489 02a4 23F00C02 		bic	r2, r3, #12
 1490 02a8 A2E7     		b	.L213
 1491              	.LVL185:
 1492              	.L147:
 1493              	.LBB91:
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1494              		.loc 1 750 13 is_stmt 1 view .LVU483
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1495              		.loc 1 750 103 is_stmt 0 view .LVU484
 1496 02aa 5106     		lsls	r1, r2, #25
 1497 02ac 0CD5     		bpl	.L148
 1498              	.LVL186:
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1499              		.loc 1 750 103 view .LVU485
 1500 02ae 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1501              	.LVL187:
 1502              	.L149:
 751:lib/printf/printf.c ****           }
 1503              		.loc 1 751 13 is_stmt 1 discriminator 8 view .LVU486
 751:lib/printf/printf.c ****           }
 1504              		.loc 1 751 19 is_stmt 0 discriminator 8 view .LVU487
 1505 02b0 CDE90234 		strd	r3, r4, [sp, #8]
 1506 02b4 0023     		movs	r3, #0
 1507 02b6 CDE90482 		strd	r8, r2, [sp, #16]
 1508 02ba CDE90013 		strd	r1, r3, [sp]
 1509 02be E3E7     		b	.L215
 1510              	.L219:
 1511              		.align	2
 1512              	.L218:
 1513 02c0 00000000 		.word	_out_null
 1514 02c4 21081200 		.word	1181729
 1515              	.LVL188:
 1516              	.L148:
 751:lib/printf/printf.c ****           }
 1517              		.loc 1 751 19 discriminator 8 view .LVU488
 1518 02c8 3168     		ldr	r1, [r6]
 1519              	.LVL189:
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1520              		.loc 1 750 174 discriminator 2 view .LVU489
 1521 02ca 12F0800F 		tst	r2, #128
 1522 02ce 18BF     		it	ne
 1523 02d0 89B2     		uxthne	r1, r1
 1524 02d2 EDE7     		b	.L149
 1525              	.LVL190:
 1526              	.L126:
 750:lib/printf/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 1527              		.loc 1 750 174 discriminator 2 view .LVU490
 1528              	.LBE91:
 1529              	.LBE93:
 1530              	.LBB94:
 777:lib/printf/printf.c ****         // pre padding
 1531              		.loc 1 777 9 is_stmt 1 view .LVU491
 779:lib/printf/printf.c ****           while (l++ < width) {
 1532              		.loc 1 779 9 view .LVU492
 779:lib/printf/printf.c ****           while (l++ < width) {
 1533              		.loc 1 779 12 is_stmt 0 view .LVU493
 1534 02d4 13F00204 		ands	r4, r3, #2
 1535              	.LVL191:
 779:lib/printf/printf.c ****           while (l++ < width) {
 1536              		.loc 1 779 12 view .LVU494
 1537 02d8 24D0     		beq	.L181
 777:lib/printf/printf.c ****         // pre padding
 1538              		.loc 1 777 22 view .LVU495
 1539 02da 4FF0010A 		mov	r10, #1
 1540              	.LVL192:
 1541              	.L152:
 785:lib/printf/printf.c ****         // post padding
 1542              		.loc 1 785 9 is_stmt 1 view .LVU496
 785:lib/printf/printf.c ****         // post padding
 1543              		.loc 1 785 9 is_stmt 0 view .LVU497
 1544 02de 6B1C     		adds	r3, r5, #1
 1545 02e0 0793     		str	r3, [sp, #28]
 1546              	.LVL193:
 785:lib/printf/printf.c ****         // post padding
 1547              		.loc 1 785 9 view .LVU498
 1548 02e2 0699     		ldr	r1, [sp, #24]
 1549 02e4 16F8040B 		ldrb	r0, [r6], #4	@ zero_extendqisi2
 1550              	.LVL194:
 785:lib/printf/printf.c ****         // post padding
 1551              		.loc 1 785 9 view .LVU499
 1552 02e8 4B46     		mov	r3, r9
 1553              	.LVL195:
 785:lib/printf/printf.c ****         // post padding
 1554              		.loc 1 785 9 view .LVU500
 1555 02ea 2A46     		mov	r2, r5
 1556 02ec D847     		blx	fp
 1557              	.LVL196:
 787:lib/printf/printf.c ****           while (l++ < width) {
 1558              		.loc 1 787 9 is_stmt 1 view .LVU501
 787:lib/printf/printf.c ****           while (l++ < width) {
 1559              		.loc 1 787 12 is_stmt 0 view .LVU502
 1560 02ee 64B3     		cbz	r4, .L155
 785:lib/printf/printf.c ****         // post padding
 1561              		.loc 1 785 9 view .LVU503
 1562 02f0 079A     		ldr	r2, [sp, #28]
 1563 02f2 5446     		mov	r4, r10
 1564 02f4 1FE0     		b	.L154
 1565              	.LVL197:
 1566              	.L153:
 781:lib/printf/printf.c ****           }
 1567              		.loc 1 781 13 is_stmt 1 view .LVU504
 781:lib/printf/printf.c ****           }
 1568              		.loc 1 781 13 is_stmt 0 view .LVU505
 1569 02f6 0699     		ldr	r1, [sp, #24]
 1570 02f8 4B46     		mov	r3, r9
 1571 02fa 2020     		movs	r0, #32
 1572 02fc D847     		blx	fp
 1573              	.LVL198:
 1574              	.L151:
 781:lib/printf/printf.c ****           }
 1575              		.loc 1 781 13 view .LVU506
 1576 02fe 05EB0A02 		add	r2, r5, r10
 1577              	.LVL199:
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1578              		.loc 1 780 22 is_stmt 1 view .LVU507
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1579              		.loc 1 780 22 is_stmt 0 view .LVU508
 1580 0302 0AF1010A 		add	r10, r10, #1
 1581              	.LVL200:
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1582              		.loc 1 780 22 view .LVU509
 1583 0306 D045     		cmp	r8, r10
 1584 0308 F5D8     		bhi	.L153
 1585 030a B8F1000F 		cmp	r8, #0
 1586 030e 08F1FF33 		add	r3, r8, #-1
 1587 0312 08BF     		it	eq
 1588 0314 0023     		moveq	r3, #0
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1589              		.loc 1 780 19 view .LVU510
 1590 0316 08F1010A 		add	r10, r8, #1
 1591              	.LVL201:
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1592              		.loc 1 780 19 view .LVU511
 1593 031a 1D44     		add	r5, r5, r3
 1594 031c 08BF     		it	eq
 1595 031e 4FF0020A 		moveq	r10, #2
 1596 0322 DCE7     		b	.L152
 1597              	.LVL202:
 1598              	.L181:
 780:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1599              		.loc 1 780 19 view .LVU512
 1600 0324 A246     		mov	r10, r4
 1601 0326 EAE7     		b	.L151
 1602              	.LVL203:
 1603              	.L156:
 789:lib/printf/printf.c ****           }
 1604              		.loc 1 789 13 is_stmt 1 view .LVU513
 1605 0328 551C     		adds	r5, r2, #1
 1606              	.LVL204:
 789:lib/printf/printf.c ****           }
 1607              		.loc 1 789 13 is_stmt 0 view .LVU514
 1608 032a 0699     		ldr	r1, [sp, #24]
 1609 032c 4B46     		mov	r3, r9
 1610 032e 2020     		movs	r0, #32
 1611 0330 D847     		blx	fp
 1612              	.LVL205:
 1613 0332 0134     		adds	r4, r4, #1
 1614              	.LVL206:
 789:lib/printf/printf.c ****           }
 1615              		.loc 1 789 13 view .LVU515
 1616 0334 2A46     		mov	r2, r5
 1617              	.LVL207:
 1618              	.L154:
 788:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1619              		.loc 1 788 22 is_stmt 1 view .LVU516
 788:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1620              		.loc 1 788 22 is_stmt 0 view .LVU517
 1621 0336 4445     		cmp	r4, r8
 1622 0338 F6D3     		bcc	.L156
 1623 033a 079A     		ldr	r2, [sp, #28]
 1624              	.LVL208:
 788:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1625              		.loc 1 788 22 view .LVU518
 1626 033c A8EB0A03 		sub	r3, r8, r10
 1627 0340 D045     		cmp	r8, r10
 1628 0342 38BF     		it	cc
 1629 0344 0023     		movcc	r3, #0
 1630 0346 1A44     		add	r2, r2, r3
 1631 0348 0792     		str	r2, [sp, #28]
 1632              	.LVL209:
 1633              	.L155:
 792:lib/printf/printf.c ****         break;
 1634              		.loc 1 792 9 is_stmt 1 view .LVU519
 793:lib/printf/printf.c ****       }
 1635              		.loc 1 793 9 view .LVU520
 1636 034a 079D     		ldr	r5, [sp, #28]
 1637 034c 65E6     		b	.L171
 1638              	.LVL210:
 1639              	.L130:
 793:lib/printf/printf.c ****       }
 1640              		.loc 1 793 9 is_stmt 0 view .LVU521
 1641              	.LBE94:
 1642              	.LBB95:
 797:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 1643              		.loc 1 797 9 is_stmt 1 view .LVU522
 797:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 1644              		.loc 1 797 21 is_stmt 0 view .LVU523
 1645 034e 3246     		mov	r2, r6
 798:lib/printf/printf.c ****         // pre padding
 1646              		.loc 1 798 26 view .LVU524
 1647 0350 002C     		cmp	r4, #0
 797:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 1648              		.loc 1 797 21 view .LVU525
 1649 0352 52F8046B 		ldr	r6, [r2], #4
 1650 0356 0792     		str	r2, [sp, #28]
 1651              	.LVL211:
 798:lib/printf/printf.c ****         // pre padding
 1652              		.loc 1 798 9 is_stmt 1 view .LVU526
 798:lib/printf/printf.c ****         // pre padding
 1653              		.loc 1 798 26 is_stmt 0 view .LVU527
 1654 0358 14BF     		ite	ne
 1655 035a 2146     		movne	r1, r4
 1656 035c 4FF0FF31 		moveq	r1, #-1
 1657 0360 3144     		add	r1, r1, r6
 1658 0362 3246     		mov	r2, r6
 1659              	.L158:
 1660              	.LVL212:
 1661              	.LBB96:
 1662              	.LBB97:
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1663              		.loc 1 174 20 is_stmt 1 view .LVU528
 1664 0364 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1665 0366 08B1     		cbz	r0, .L159
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1666              		.loc 1 174 20 is_stmt 0 view .LVU529
 1667 0368 9142     		cmp	r1, r2
 1668 036a 11D1     		bne	.L160
 1669              	.LVL213:
 1670              	.L159:
 175:lib/printf/printf.c **** }
 1671              		.loc 1 175 3 is_stmt 1 view .LVU530
 175:lib/printf/printf.c **** }
 1672              		.loc 1 175 27 is_stmt 0 view .LVU531
 1673 036c A2EB060A 		sub	r10, r2, r6
 1674              	.LVL214:
 175:lib/printf/printf.c **** }
 1675              		.loc 1 175 27 view .LVU532
 1676              	.LBE97:
 1677              	.LBE96:
 800:lib/printf/printf.c ****           l = (l < precision ? l : precision);
 1678              		.loc 1 800 9 is_stmt 1 view .LVU533
 800:lib/printf/printf.c ****           l = (l < precision ? l : precision);
 1679              		.loc 1 800 12 is_stmt 0 view .LVU534
 1680 0370 13F48062 		ands	r2, r3, #1024
 1681 0374 0892     		str	r2, [sp, #32]
 1682 0376 02D0     		beq	.L161
 801:lib/printf/printf.c ****         }
 1683              		.loc 1 801 11 is_stmt 1 view .LVU535
 801:lib/printf/printf.c ****         }
 1684              		.loc 1 801 13 is_stmt 0 view .LVU536
 1685 0378 A245     		cmp	r10, r4
 1686 037a 28BF     		it	cs
 1687 037c A246     		movcs	r10, r4
 1688              	.LVL215:
 1689              	.L161:
 803:lib/printf/printf.c ****           while (l++ < width) {
 1690              		.loc 1 803 9 is_stmt 1 view .LVU537
 803:lib/printf/printf.c ****           while (l++ < width) {
 1691              		.loc 1 803 12 is_stmt 0 view .LVU538
 1692 037e 13F00203 		ands	r3, r3, #2
 1693              	.LVL216:
 803:lib/printf/printf.c ****           while (l++ < width) {
 1694              		.loc 1 803 12 view .LVU539
 1695 0382 0993     		str	r3, [sp, #36]
 1696 0384 1BD1     		bne	.L163
 803:lib/printf/printf.c ****           while (l++ < width) {
 1697              		.loc 1 803 12 view .LVU540
 1698 0386 AAEB0503 		sub	r3, r10, r5
 1699 038a 2A46     		mov	r2, r5
 1700 038c 0B93     		str	r3, [sp, #44]
 1701 038e 08E0     		b	.L162
 1702              	.LVL217:
 1703              	.L160:
 1704              	.LBB99:
 1705              	.LBB98:
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1706              		.loc 1 174 34 is_stmt 1 view .LVU541
 1707 0390 0132     		adds	r2, r2, #1
 1708              	.LVL218:
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1709              		.loc 1 174 34 is_stmt 0 view .LVU542
 1710 0392 E7E7     		b	.L158
 1711              	.LVL219:
 1712              	.L164:
 174:lib/printf/printf.c ****   return (unsigned int)(s - str);
 1713              		.loc 1 174 34 view .LVU543
 1714              	.LBE98:
 1715              	.LBE99:
 805:lib/printf/printf.c ****           }
 1716              		.loc 1 805 13 is_stmt 1 view .LVU544
 1717 0394 531C     		adds	r3, r2, #1
 1718 0396 0A93     		str	r3, [sp, #40]
 1719              	.LVL220:
 805:lib/printf/printf.c ****           }
 1720              		.loc 1 805 13 is_stmt 0 view .LVU545
 1721 0398 0699     		ldr	r1, [sp, #24]
 1722 039a 4B46     		mov	r3, r9
 1723              	.LVL221:
 805:lib/printf/printf.c ****           }
 1724              		.loc 1 805 13 view .LVU546
 1725 039c 2020     		movs	r0, #32
 1726 039e D847     		blx	fp
 1727              	.LVL222:
 1728 03a0 0A9A     		ldr	r2, [sp, #40]
 1729              	.LVL223:
 1730              	.L162:
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1731              		.loc 1 804 22 is_stmt 1 view .LVU547
 1732 03a2 0B9B     		ldr	r3, [sp, #44]
 1733 03a4 D318     		adds	r3, r2, r3
 1734 03a6 9845     		cmp	r8, r3
 1735 03a8 F4D8     		bhi	.L164
 1736 03aa A8EB0A03 		sub	r3, r8, r10
 1737 03ae D045     		cmp	r8, r10
 1738 03b0 38BF     		it	cc
 1739 03b2 0023     		movcc	r3, #0
 1740 03b4 0AF10102 		add	r2, r10, #1
 1741              	.LVL224:
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1742              		.loc 1 804 22 is_stmt 0 view .LVU548
 1743 03b8 1D44     		add	r5, r5, r3
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1744              		.loc 1 804 19 view .LVU549
 1745 03ba 03EB020A 		add	r10, r3, r2
 1746              	.LVL225:
 1747              	.L163:
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1748              		.loc 1 804 19 view .LVU550
 1749 03be AB1B     		subs	r3, r5, r6
 1750 03c0 0A93     		str	r3, [sp, #40]
 1751 03c2 04E0     		b	.L165
 1752              	.LVL226:
 1753              	.L185:
 804:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1754              		.loc 1 804 19 view .LVU551
 1755 03c4 1C46     		mov	r4, r3
 1756              	.LVL227:
 1757              	.L167:
 810:lib/printf/printf.c ****         }
 1758              		.loc 1 810 11 is_stmt 1 view .LVU552
 810:lib/printf/printf.c ****         }
 1759              		.loc 1 810 11 is_stmt 0 view .LVU553
 1760 03c6 0699     		ldr	r1, [sp, #24]
 1761 03c8 4B46     		mov	r3, r9
 1762 03ca 2A46     		mov	r2, r5
 1763 03cc D847     		blx	fp
 1764              	.LVL228:
 1765              	.L165:
 810:lib/printf/printf.c ****         }
 1766              		.loc 1 810 11 view .LVU554
 1767 03ce 0A9B     		ldr	r3, [sp, #40]
 1768 03d0 9D19     		adds	r5, r3, r6
 1769              	.LVL229:
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1770              		.loc 1 809 26 is_stmt 1 view .LVU555
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1771              		.loc 1 809 17 is_stmt 0 view .LVU556
 1772 03d2 16F8010B 		ldrb	r0, [r6], #1	@ zero_extendqisi2
 1773              	.LVL230:
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1774              		.loc 1 809 26 view .LVU557
 1775 03d6 28B1     		cbz	r0, .L166
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1776              		.loc 1 809 26 discriminator 1 view .LVU558
 1777 03d8 089B     		ldr	r3, [sp, #32]
 1778 03da 002B     		cmp	r3, #0
 1779 03dc F3D0     		beq	.L167
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1780              		.loc 1 809 69 discriminator 2 view .LVU559
 1781 03de 631E     		subs	r3, r4, #1
 1782              	.LVL231:
 809:lib/printf/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 1783              		.loc 1 809 57 discriminator 2 view .LVU560
 1784 03e0 002C     		cmp	r4, #0
 1785 03e2 EFD1     		bne	.L185
 1786              	.LVL232:
 1787              	.L166:
 813:lib/printf/printf.c ****           while (l++ < width) {
 1788              		.loc 1 813 9 is_stmt 1 view .LVU561
 813:lib/printf/printf.c ****           while (l++ < width) {
 1789              		.loc 1 813 12 is_stmt 0 view .LVU562
 1790 03e4 099B     		ldr	r3, [sp, #36]
 1791 03e6 93B1     		cbz	r3, .L169
 1792 03e8 2A46     		mov	r2, r5
 1793 03ea AAEB0504 		sub	r4, r10, r5
 1794 03ee 05E0     		b	.L168
 1795              	.LVL233:
 1796              	.L170:
 815:lib/printf/printf.c ****           }
 1797              		.loc 1 815 13 is_stmt 1 view .LVU563
 1798 03f0 561C     		adds	r6, r2, #1
 1799              	.LVL234:
 815:lib/printf/printf.c ****           }
 1800              		.loc 1 815 13 is_stmt 0 view .LVU564
 1801 03f2 0699     		ldr	r1, [sp, #24]
 1802 03f4 4B46     		mov	r3, r9
 1803 03f6 2020     		movs	r0, #32
 1804 03f8 D847     		blx	fp
 1805              	.LVL235:
 1806 03fa 3246     		mov	r2, r6
 1807              	.LVL236:
 1808              	.L168:
 814:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1809              		.loc 1 814 22 is_stmt 1 view .LVU565
 1810 03fc A318     		adds	r3, r4, r2
 1811 03fe 9845     		cmp	r8, r3
 1812 0400 F6D8     		bhi	.L170
 814:lib/printf/printf.c ****             out(' ', buffer, idx++, maxlen);
 1813              		.loc 1 814 22 is_stmt 0 view .LVU566
 1814 0402 A8EB0A03 		sub	r3, r8, r10
 1815 0406 D045     		cmp	r8, r10
 1816 0408 38BF     		it	cc
 1817 040a 0023     		movcc	r3, #0
 1818 040c 1D44     		add	r5, r5, r3
 1819              	.LVL237:
 1820              	.L169:
 818:lib/printf/printf.c ****         break;
 1821              		.loc 1 818 9 is_stmt 1 view .LVU567
 819:lib/printf/printf.c ****       }
 1822              		.loc 1 819 9 view .LVU568
 797:lib/printf/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 1823              		.loc 1 797 21 is_stmt 0 view .LVU569
 1824 040e 079E     		ldr	r6, [sp, #28]
 819:lib/printf/printf.c ****       }
 1825              		.loc 1 819 9 view .LVU570
 1826 0410 03E6     		b	.L171
 1827              	.LBE95:
 1828              		.cfi_endproc
 1829              	.LFE10:
 1831 0412 00BF     		.section	.text.printf_,"ax",%progbits
 1832              		.align	1
 1833              		.global	printf_
 1834              		.syntax unified
 1835              		.thumb
 1836              		.thumb_func
 1838              	printf_:
 1839              	.LVL238:
 1840              	.LFB11:
 858:lib/printf/printf.c **** 
 859:lib/printf/printf.c **** 
 860:lib/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 861:lib/printf/printf.c **** 
 862:lib/printf/printf.c **** int printf_(const char* format, ...)
 863:lib/printf/printf.c **** {
 1841              		.loc 1 863 1 is_stmt 1 view -0
 1842              		.cfi_startproc
 1843              		@ args = 4, pretend = 16, frame = 8
 1844              		@ frame_needed = 0, uses_anonymous_args = 1
 864:lib/printf/printf.c ****   va_list va;
 1845              		.loc 1 864 3 view .LVU572
 865:lib/printf/printf.c ****   va_start(va, format);
 1846              		.loc 1 865 3 view .LVU573
 863:lib/printf/printf.c ****   va_list va;
 1847              		.loc 1 863 1 is_stmt 0 view .LVU574
 1848 0000 0FB4     		push	{r0, r1, r2, r3}
 1849              		.cfi_def_cfa_offset 16
 1850              		.cfi_offset 0, -16
 1851              		.cfi_offset 1, -12
 1852              		.cfi_offset 2, -8
 1853              		.cfi_offset 3, -4
 1854 0002 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1855              		.cfi_def_cfa_offset 40
 1856              		.cfi_offset 14, -20
 863:lib/printf/printf.c ****   va_list va;
 1857              		.loc 1 863 1 view .LVU575
 1858 0004 06AA     		add	r2, sp, #24
 866:lib/printf/printf.c ****   char buffer[1];
 867:lib/printf/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 1859              		.loc 1 867 19 view .LVU576
 1860 0006 02A9     		add	r1, sp, #8
 863:lib/printf/printf.c ****   va_list va;
 1861              		.loc 1 863 1 view .LVU577
 1862 0008 52F8043B 		ldr	r3, [r2], #4
 865:lib/printf/printf.c ****   char buffer[1];
 1863              		.loc 1 865 3 view .LVU578
 1864 000c 0392     		str	r2, [sp, #12]
 866:lib/printf/printf.c ****   char buffer[1];
 1865              		.loc 1 866 3 is_stmt 1 view .LVU579
 1866              		.loc 1 867 3 view .LVU580
 1867              		.loc 1 867 19 is_stmt 0 view .LVU581
 1868 000e 0092     		str	r2, [sp]
 1869 0010 0448     		ldr	r0, .L221
 1870 0012 4FF0FF32 		mov	r2, #-1
 1871 0016 FFF7FEFF 		bl	_vsnprintf
 1872              	.LVL239:
 868:lib/printf/printf.c ****   va_end(va);
 1873              		.loc 1 868 3 is_stmt 1 view .LVU582
 869:lib/printf/printf.c ****   return ret;
 1874              		.loc 1 869 3 view .LVU583
 870:lib/printf/printf.c **** }
 1875              		.loc 1 870 1 is_stmt 0 view .LVU584
 1876 001a 05B0     		add	sp, sp, #20
 1877              		.cfi_def_cfa_offset 20
 1878              		@ sp needed
 1879 001c 5DF804EB 		ldr	lr, [sp], #4
 1880              		.cfi_restore 14
 1881              		.cfi_def_cfa_offset 16
 1882 0020 04B0     		add	sp, sp, #16
 1883              		.cfi_restore 3
 1884              		.cfi_restore 2
 1885              		.cfi_restore 1
 1886              		.cfi_restore 0
 1887              		.cfi_def_cfa_offset 0
 1888 0022 7047     		bx	lr
 1889              	.L222:
 1890              		.align	2
 1891              	.L221:
 1892 0024 00000000 		.word	_out_char
 1893              		.cfi_endproc
 1894              	.LFE11:
 1896              		.section	.text.sprintf_,"ax",%progbits
 1897              		.align	1
 1898              		.global	sprintf_
 1899              		.syntax unified
 1900              		.thumb
 1901              		.thumb_func
 1903              	sprintf_:
 1904              	.LVL240:
 1905              	.LFB12:
 871:lib/printf/printf.c **** 
 872:lib/printf/printf.c **** 
 873:lib/printf/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 874:lib/printf/printf.c **** {
 1906              		.loc 1 874 1 is_stmt 1 view -0
 1907              		.cfi_startproc
 1908              		@ args = 4, pretend = 12, frame = 8
 1909              		@ frame_needed = 0, uses_anonymous_args = 1
 875:lib/printf/printf.c ****   va_list va;
 1910              		.loc 1 875 3 view .LVU586
 876:lib/printf/printf.c ****   va_start(va, format);
 1911              		.loc 1 876 3 view .LVU587
 874:lib/printf/printf.c ****   va_list va;
 1912              		.loc 1 874 1 is_stmt 0 view .LVU588
 1913 0000 0EB4     		push	{r1, r2, r3}
 1914              		.cfi_def_cfa_offset 12
 1915              		.cfi_offset 1, -12
 1916              		.cfi_offset 2, -8
 1917              		.cfi_offset 3, -4
 1918 0002 0FB5     		push	{r0, r1, r2, r3, lr}
 1919              		.cfi_def_cfa_offset 32
 1920              		.cfi_offset 14, -16
 874:lib/printf/printf.c ****   va_list va;
 1921              		.loc 1 874 1 view .LVU589
 1922 0004 05AA     		add	r2, sp, #20
 1923 0006 0146     		mov	r1, r0
 1924 0008 52F8043B 		ldr	r3, [r2], #4
 1925              		.loc 1 876 3 view .LVU590
 1926 000c 0392     		str	r2, [sp, #12]
 877:lib/printf/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 1927              		.loc 1 877 3 is_stmt 1 view .LVU591
 1928              		.loc 1 877 19 is_stmt 0 view .LVU592
 1929 000e 0092     		str	r2, [sp]
 1930 0010 0448     		ldr	r0, .L224
 1931              	.LVL241:
 1932              		.loc 1 877 19 view .LVU593
 1933 0012 4FF0FF32 		mov	r2, #-1
 1934 0016 FFF7FEFF 		bl	_vsnprintf
 1935              	.LVL242:
 878:lib/printf/printf.c ****   va_end(va);
 1936              		.loc 1 878 3 is_stmt 1 view .LVU594
 879:lib/printf/printf.c ****   return ret;
 1937              		.loc 1 879 3 view .LVU595
 880:lib/printf/printf.c **** }
 1938              		.loc 1 880 1 is_stmt 0 view .LVU596
 1939 001a 04B0     		add	sp, sp, #16
 1940              		.cfi_def_cfa_offset 16
 1941              		@ sp needed
 1942 001c 5DF804EB 		ldr	lr, [sp], #4
 1943              		.cfi_restore 14
 1944              		.cfi_def_cfa_offset 12
 1945 0020 03B0     		add	sp, sp, #12
 1946              		.cfi_restore 3
 1947              		.cfi_restore 2
 1948              		.cfi_restore 1
 1949              		.cfi_def_cfa_offset 0
 1950 0022 7047     		bx	lr
 1951              	.L225:
 1952              		.align	2
 1953              	.L224:
 1954 0024 00000000 		.word	_out_buffer
 1955              		.cfi_endproc
 1956              	.LFE12:
 1958              		.section	.text.snprintf_,"ax",%progbits
 1959              		.align	1
 1960              		.global	snprintf_
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1965              	snprintf_:
 1966              	.LVL243:
 1967              	.LFB13:
 881:lib/printf/printf.c **** 
 882:lib/printf/printf.c **** 
 883:lib/printf/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
 884:lib/printf/printf.c **** {
 1968              		.loc 1 884 1 is_stmt 1 view -0
 1969              		.cfi_startproc
 1970              		@ args = 4, pretend = 8, frame = 8
 1971              		@ frame_needed = 0, uses_anonymous_args = 1
 885:lib/printf/printf.c ****   va_list va;
 1972              		.loc 1 885 3 view .LVU598
 886:lib/printf/printf.c ****   va_start(va, format);
 1973              		.loc 1 886 3 view .LVU599
 884:lib/printf/printf.c ****   va_list va;
 1974              		.loc 1 884 1 is_stmt 0 view .LVU600
 1975 0000 0CB4     		push	{r2, r3}
 1976              		.cfi_def_cfa_offset 8
 1977              		.cfi_offset 2, -8
 1978              		.cfi_offset 3, -4
 1979 0002 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1980              		.cfi_def_cfa_offset 32
 1981              		.cfi_offset 4, -16
 1982              		.cfi_offset 14, -12
 884:lib/printf/printf.c ****   va_list va;
 1983              		.loc 1 884 1 view .LVU601
 1984 0004 06AC     		add	r4, sp, #24
 1985 0006 0A46     		mov	r2, r1
 1986 0008 54F8043B 		ldr	r3, [r4], #4
 887:lib/printf/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 1987              		.loc 1 887 19 view .LVU602
 1988 000c 0094     		str	r4, [sp]
 1989 000e 0146     		mov	r1, r0
 1990              	.LVL244:
 1991              		.loc 1 887 19 view .LVU603
 1992 0010 0448     		ldr	r0, .L227
 1993              	.LVL245:
 886:lib/printf/printf.c ****   va_start(va, format);
 1994              		.loc 1 886 3 view .LVU604
 1995 0012 0394     		str	r4, [sp, #12]
 1996              		.loc 1 887 3 is_stmt 1 view .LVU605
 1997              		.loc 1 887 19 is_stmt 0 view .LVU606
 1998 0014 FFF7FEFF 		bl	_vsnprintf
 1999              	.LVL246:
 888:lib/printf/printf.c ****   va_end(va);
 2000              		.loc 1 888 3 is_stmt 1 view .LVU607
 889:lib/printf/printf.c ****   return ret;
 2001              		.loc 1 889 3 view .LVU608
 890:lib/printf/printf.c **** }
 2002              		.loc 1 890 1 is_stmt 0 view .LVU609
 2003 0018 04B0     		add	sp, sp, #16
 2004              		.cfi_def_cfa_offset 16
 2005              		@ sp needed
 2006 001a BDE81040 		pop	{r4, lr}
 2007              		.cfi_restore 14
 2008              		.cfi_restore 4
 2009              		.cfi_def_cfa_offset 8
 2010 001e 02B0     		add	sp, sp, #8
 2011              		.cfi_restore 3
 2012              		.cfi_restore 2
 2013              		.cfi_def_cfa_offset 0
 2014 0020 7047     		bx	lr
 2015              	.L228:
 2016 0022 00BF     		.align	2
 2017              	.L227:
 2018 0024 00000000 		.word	_out_buffer
 2019              		.cfi_endproc
 2020              	.LFE13:
 2022              		.section	.text.vprintf_,"ax",%progbits
 2023              		.align	1
 2024              		.global	vprintf_
 2025              		.syntax unified
 2026              		.thumb
 2027              		.thumb_func
 2029              	vprintf_:
 2030              	.LVL247:
 2031              	.LFB14:
 891:lib/printf/printf.c **** 
 892:lib/printf/printf.c **** 
 893:lib/printf/printf.c **** int vprintf_(const char* format, va_list va)
 894:lib/printf/printf.c **** {
 2032              		.loc 1 894 1 is_stmt 1 view -0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 8
 2035              		@ frame_needed = 0, uses_anonymous_args = 0
 895:lib/printf/printf.c ****   char buffer[1];
 2036              		.loc 1 895 3 view .LVU611
 896:lib/printf/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 2037              		.loc 1 896 3 view .LVU612
 894:lib/printf/printf.c ****   char buffer[1];
 2038              		.loc 1 894 1 is_stmt 0 view .LVU613
 2039 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 2040              		.cfi_def_cfa_offset 24
 2041              		.cfi_offset 14, -4
 2042              	.LVL248:
 894:lib/printf/printf.c ****   char buffer[1];
 2043              		.loc 1 894 1 view .LVU614
 2044 0002 0346     		mov	r3, r0
 2045              		.loc 1 896 10 view .LVU615
 2046 0004 0091     		str	r1, [sp]
 2047 0006 4FF0FF32 		mov	r2, #-1
 2048 000a 03A9     		add	r1, sp, #12
 2049 000c 0248     		ldr	r0, .L230
 2050              	.LVL249:
 2051              		.loc 1 896 10 view .LVU616
 2052 000e FFF7FEFF 		bl	_vsnprintf
 2053              	.LVL250:
 897:lib/printf/printf.c **** }
 2054              		.loc 1 897 1 view .LVU617
 2055 0012 05B0     		add	sp, sp, #20
 2056              		.cfi_def_cfa_offset 4
 2057              		@ sp needed
 2058 0014 5DF804FB 		ldr	pc, [sp], #4
 2059              	.L231:
 2060              		.align	2
 2061              	.L230:
 2062 0018 00000000 		.word	_out_char
 2063              		.cfi_endproc
 2064              	.LFE14:
 2066              		.section	.text.vsnprintf_,"ax",%progbits
 2067              		.align	1
 2068              		.global	vsnprintf_
 2069              		.syntax unified
 2070              		.thumb
 2071              		.thumb_func
 2073              	vsnprintf_:
 2074              	.LVL251:
 2075              	.LFB15:
 898:lib/printf/printf.c **** 
 899:lib/printf/printf.c **** 
 900:lib/printf/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 901:lib/printf/printf.c **** {
 2076              		.loc 1 901 1 is_stmt 1 view -0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 902:lib/printf/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 2080              		.loc 1 902 3 view .LVU619
 901:lib/printf/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 2081              		.loc 1 901 1 is_stmt 0 view .LVU620
 2082 0000 07B5     		push	{r0, r1, r2, lr}
 2083              		.cfi_def_cfa_offset 16
 2084              		.cfi_offset 14, -4
 2085              		.loc 1 902 10 view .LVU621
 2086 0002 0093     		str	r3, [sp]
 2087 0004 1346     		mov	r3, r2
 2088              	.LVL252:
 2089              		.loc 1 902 10 view .LVU622
 2090 0006 0A46     		mov	r2, r1
 2091              	.LVL253:
 2092              		.loc 1 902 10 view .LVU623
 2093 0008 0146     		mov	r1, r0
 2094              	.LVL254:
 2095              		.loc 1 902 10 view .LVU624
 2096 000a 0348     		ldr	r0, .L233
 2097              	.LVL255:
 2098              		.loc 1 902 10 view .LVU625
 2099 000c FFF7FEFF 		bl	_vsnprintf
 2100              	.LVL256:
 903:lib/printf/printf.c **** }
 2101              		.loc 1 903 1 view .LVU626
 2102 0010 03B0     		add	sp, sp, #12
 2103              		.cfi_def_cfa_offset 4
 2104              		@ sp needed
 2105 0012 5DF804FB 		ldr	pc, [sp], #4
 2106              	.L234:
 2107 0016 00BF     		.align	2
 2108              	.L233:
 2109 0018 00000000 		.word	_out_buffer
 2110              		.cfi_endproc
 2111              	.LFE15:
 2113              		.section	.text.fctprintf,"ax",%progbits
 2114              		.align	1
 2115              		.global	fctprintf
 2116              		.syntax unified
 2117              		.thumb
 2118              		.thumb_func
 2120              	fctprintf:
 2121              	.LVL257:
 2122              	.LFB16:
 904:lib/printf/printf.c **** 
 905:lib/printf/printf.c **** 
 906:lib/printf/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 907:lib/printf/printf.c **** {
 2123              		.loc 1 907 1 is_stmt 1 view -0
 2124              		.cfi_startproc
 2125              		@ args = 4, pretend = 8, frame = 16
 2126              		@ frame_needed = 0, uses_anonymous_args = 1
 908:lib/printf/printf.c ****   va_list va;
 2127              		.loc 1 908 3 view .LVU628
 909:lib/printf/printf.c ****   va_start(va, format);
 2128              		.loc 1 909 3 view .LVU629
 907:lib/printf/printf.c ****   va_list va;
 2129              		.loc 1 907 1 is_stmt 0 view .LVU630
 2130 0000 0CB4     		push	{r2, r3}
 2131              		.cfi_def_cfa_offset 8
 2132              		.cfi_offset 2, -8
 2133              		.cfi_offset 3, -4
 2134 0002 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 2135              		.cfi_def_cfa_offset 40
 2136              		.cfi_offset 14, -12
 907:lib/printf/printf.c ****   va_list va;
 2137              		.loc 1 907 1 view .LVU631
 2138 0004 08AA     		add	r2, sp, #32
 910:lib/printf/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 2139              		.loc 1 910 27 view .LVU632
 2140 0006 0591     		str	r1, [sp, #20]
 911:lib/printf/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 2141              		.loc 1 911 3 is_stmt 1 view .LVU633
 907:lib/printf/printf.c ****   va_list va;
 2142              		.loc 1 907 1 is_stmt 0 view .LVU634
 2143 0008 52F8043B 		ldr	r3, [r2], #4
 2144              		.loc 1 911 19 view .LVU635
 2145 000c 0092     		str	r2, [sp]
 910:lib/printf/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 2146              		.loc 1 910 27 view .LVU636
 2147 000e CDE90320 		strd	r2, r0, [sp, #12]
 2148              		.loc 1 911 19 view .LVU637
 2149 0012 04A9     		add	r1, sp, #16
 2150              	.LVL258:
 2151              		.loc 1 911 19 view .LVU638
 2152 0014 4FF0FF32 		mov	r2, #-1
 2153 0018 0348     		ldr	r0, .L236
 2154              	.LVL259:
 2155              		.loc 1 911 19 view .LVU639
 2156 001a FFF7FEFF 		bl	_vsnprintf
 2157              	.LVL260:
 912:lib/printf/printf.c ****   va_end(va);
 2158              		.loc 1 912 3 is_stmt 1 view .LVU640
 913:lib/printf/printf.c ****   return ret;
 2159              		.loc 1 913 3 view .LVU641
 914:lib/printf/printf.c **** }
 2160              		.loc 1 914 1 is_stmt 0 view .LVU642
 2161 001e 07B0     		add	sp, sp, #28
 2162              		.cfi_def_cfa_offset 12
 2163              		@ sp needed
 2164 0020 5DF804EB 		ldr	lr, [sp], #4
 2165              		.cfi_restore 14
 2166              		.cfi_def_cfa_offset 8
 2167 0024 02B0     		add	sp, sp, #8
 2168              		.cfi_restore 3
 2169              		.cfi_restore 2
 2170              		.cfi_def_cfa_offset 0
 2171 0026 7047     		bx	lr
 2172              	.L237:
 2173              		.align	2
 2174              	.L236:
 2175 0028 00000000 		.word	_out_fct
 2176              		.cfi_endproc
 2177              	.LFE16:
 2179              		.text
 2180              	.Letext0:
 2181              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2182              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2183              		.file 4 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stdarg.h"
 2184              		.file 5 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 2185              		.file 6 "<built-in>"
 2186              		.file 7 "lib/printf/printf.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 printf.c
     /tmp/ccXpEF2D.s:21     .text._out_buffer:0000000000000000 $t
     /tmp/ccXpEF2D.s:26     .text._out_buffer:0000000000000000 _out_buffer
     /tmp/ccXpEF2D.s:47     .text._out_null:0000000000000000 $t
     /tmp/ccXpEF2D.s:52     .text._out_null:0000000000000000 _out_null
     /tmp/ccXpEF2D.s:70     .text._ntoa_long:0000000000000000 $t
     /tmp/ccXpEF2D.s:75     .text._ntoa_long:0000000000000000 _ntoa_long
     /tmp/ccXpEF2D.s:642    .text._out_char:0000000000000000 $t
     /tmp/ccXpEF2D.s:647    .text._out_char:0000000000000000 _out_char
     /tmp/ccXpEF2D.s:671    .text._out_fct:0000000000000000 $t
     /tmp/ccXpEF2D.s:676    .text._out_fct:0000000000000000 _out_fct
     /tmp/ccXpEF2D.s:711    .text._vsnprintf:0000000000000000 $t
     /tmp/ccXpEF2D.s:716    .text._vsnprintf:0000000000000000 _vsnprintf
     /tmp/ccXpEF2D.s:1513   .text._vsnprintf:00000000000002c0 $d
     /tmp/ccXpEF2D.s:1518   .text._vsnprintf:00000000000002c8 $t
     /tmp/ccXpEF2D.s:1832   .text.printf_:0000000000000000 $t
     /tmp/ccXpEF2D.s:1838   .text.printf_:0000000000000000 printf_
     /tmp/ccXpEF2D.s:1892   .text.printf_:0000000000000024 $d
     /tmp/ccXpEF2D.s:1897   .text.sprintf_:0000000000000000 $t
     /tmp/ccXpEF2D.s:1903   .text.sprintf_:0000000000000000 sprintf_
     /tmp/ccXpEF2D.s:1954   .text.sprintf_:0000000000000024 $d
     /tmp/ccXpEF2D.s:1959   .text.snprintf_:0000000000000000 $t
     /tmp/ccXpEF2D.s:1965   .text.snprintf_:0000000000000000 snprintf_
     /tmp/ccXpEF2D.s:2018   .text.snprintf_:0000000000000024 $d
     /tmp/ccXpEF2D.s:2023   .text.vprintf_:0000000000000000 $t
     /tmp/ccXpEF2D.s:2029   .text.vprintf_:0000000000000000 vprintf_
     /tmp/ccXpEF2D.s:2062   .text.vprintf_:0000000000000018 $d
     /tmp/ccXpEF2D.s:2067   .text.vsnprintf_:0000000000000000 $t
     /tmp/ccXpEF2D.s:2073   .text.vsnprintf_:0000000000000000 vsnprintf_
     /tmp/ccXpEF2D.s:2109   .text.vsnprintf_:0000000000000018 $d
     /tmp/ccXpEF2D.s:2114   .text.fctprintf:0000000000000000 $t
     /tmp/ccXpEF2D.s:2120   .text.fctprintf:0000000000000000 fctprintf
     /tmp/ccXpEF2D.s:2175   .text.fctprintf:0000000000000028 $d

UNDEFINED SYMBOLS
_putchar
