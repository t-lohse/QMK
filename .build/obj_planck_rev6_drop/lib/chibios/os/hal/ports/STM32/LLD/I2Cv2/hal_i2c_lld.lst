   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"hal_i2c_lld.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c"
  20              		.section	.text.i2c_lld_setup_rx_transfer,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	i2c_lld_setup_rx_transfer:
  27              	.LVL0:
  28              	.LFB283:
   1:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*
   2:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
   4:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
   8:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  10:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** */
  16:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  17:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
  18:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @file    I2Cv2/hal_i2c_lld.c
  19:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   STM32 I2C subsystem low level driver source.
  20:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
  21:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @addtogroup I2C
  22:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @{
  23:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
  24:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  25:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #include "hal.h"
  26:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  27:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if HAL_USE_I2C || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  29:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  33:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
  34:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define DMAMODE_COMMON                                                      \
  35:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   (STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE |                      \
  36:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****    STM32_DMA_CR_MINC       | STM32_DMA_CR_DMEIE      |                      \
  37:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****    STM32_DMA_CR_TEIE       | STM32_DMA_CR_TCIE)
  38:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  39:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C1_RX_DMA_CHANNEL                                                 \
  40:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C1_RX_DMA_STREAM,                        \
  41:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C1_RX_DMA_CHN)
  42:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  43:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C1_TX_DMA_CHANNEL                                                 \
  44:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C1_TX_DMA_STREAM,                        \
  45:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C1_TX_DMA_CHN)
  46:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  47:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C2_RX_DMA_CHANNEL                                                 \
  48:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C2_RX_DMA_STREAM,                        \
  49:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C2_RX_DMA_CHN)
  50:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  51:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C2_TX_DMA_CHANNEL                                                 \
  52:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C2_TX_DMA_STREAM,                        \
  53:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C2_TX_DMA_CHN)
  54:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  55:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C3_RX_DMA_CHANNEL                                                 \
  56:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C3_RX_DMA_STREAM,                        \
  57:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C3_RX_DMA_CHN)
  58:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  59:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C3_TX_DMA_CHANNEL                                                 \
  60:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C3_TX_DMA_STREAM,                        \
  61:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C3_TX_DMA_CHN)
  62:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  63:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C4_RX_DMA_CHANNEL                                                 \
  64:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C4_RX_DMA_STREAM,                        \
  65:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C4_RX_DMA_CHN)
  66:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  67:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C4_TX_DMA_CHANNEL                                                 \
  68:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C4_TX_DMA_STREAM,                        \
  69:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C4_TX_DMA_CHN)
  70:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_DMA == TRUE */
  71:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  72:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
  73:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define i2c_lld_get_rxbytes(i2cp) dmaStreamGetTransactionSize((i2cp)->dmarx)
  74:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define i2c_lld_get_txbytes(i2cp) dmaStreamGetTransactionSize((i2cp)->dmatx)
  75:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
  76:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define i2c_lld_get_rxbytes(i2cp) (i2cp)->rxbytes
  77:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define i2c_lld_get_txbytes(i2cp) (i2cp)->txbytes
  78:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
  79:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  80:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  81:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver constants.                                                         */
  82:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  83:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  84:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C_ERROR_MASK                                                      \
  85:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   ((uint32_t)(I2C_ISR_BERR | I2C_ISR_ARLO | I2C_ISR_OVR | I2C_ISR_PECERR |  \
  86:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****               I2C_ISR_TIMEOUT | I2C_ISR_ALERT))
  87:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  88:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C_INT_MASK                                                        \
  89:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   ((uint32_t)(I2C_ISR_TCR | I2C_ISR_TC | I2C_ISR_STOPF | I2C_ISR_NACKF |    \
  90:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****               I2C_ISR_ADDR | I2C_ISR_RXNE | I2C_ISR_TXIS))
  91:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  92:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  93:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver exported variables.                                                */
  94:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  95:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  96:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /** @brief I2C1 driver identifier.*/
  97:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1 || defined(__DOXYGEN__)
  98:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** I2CDriver I2CD1;
  99:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 101:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /** @brief I2C2 driver identifier.*/
 102:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2 || defined(__DOXYGEN__)
 103:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** I2CDriver I2CD2;
 104:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 105:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 106:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /** @brief I2C3 driver identifier.*/
 107:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3 || defined(__DOXYGEN__)
 108:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** I2CDriver I2CD3;
 109:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 110:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 111:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /** @brief I2C4 driver identifier.*/
 112:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4 || defined(__DOXYGEN__)
 113:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** I2CDriver I2CD4;
 114:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 115:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 116:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 117:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver local variables and types.                                         */
 118:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 119:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 120:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 121:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver local functions.                                                   */
 122:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 123:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 124:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 125:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Slave address setup.
 126:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @note    The RW bit is set to zero internally.
 127:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 128:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 129:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] addr      slave device address
 130:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 131:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 132:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 133:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_set_address(I2CDriver *i2cp, i2caddr_t addr) {
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 135:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 136:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Address alignment depends on the addressing mode selected.*/
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if ((i2cp->config->cr2 & I2C_CR2_ADD10) == 0U)
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 139:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr;
 141:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 142:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 143:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 144:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C RX transfer setup.
 145:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 146:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 147:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 148:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 149:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 150:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_setup_rx_transfer(I2CDriver *i2cp) {
  29              		.loc 1 150 56 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 151:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
  33              		.loc 1 151 3 view .LVU1
 152:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t reload;
 153:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   size_t n;
 154:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 155:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* The unit can transfer 255 bytes maximum in a single operation.*/
 156:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   n = i2c_lld_get_rxbytes(i2cp);
  34              		.loc 1 156 7 is_stmt 0 view .LVU2
  35 0000 836A     		ldr	r3, [r0, #40]
  36 0002 5B68     		ldr	r3, [r3, #4]
 150:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
  37              		.loc 1 150 56 view .LVU3
  38 0004 30B5     		push	{r4, r5, lr}
  39              		.cfi_def_cfa_offset 12
  40              		.cfi_offset 4, -12
  41              		.cfi_offset 5, -8
  42              		.cfi_offset 14, -4
 151:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
  43              		.loc 1 151 16 view .LVU4
  44 0006 046B     		ldr	r4, [r0, #48]
  45              	.LVL1:
 152:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t reload;
  46              		.loc 1 152 3 is_stmt 1 view .LVU5
 153:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  47              		.loc 1 153 3 view .LVU6
  48              		.loc 1 156 3 view .LVU7
  49              		.loc 1 156 5 is_stmt 0 view .LVU8
  50 0008 5968     		ldr	r1, [r3, #4]
  51              	.LVL2:
 157:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
  52              		.loc 1 157 3 is_stmt 1 view .LVU9
 158:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     n = 255U;
 159:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = I2C_CR2_RELOAD;
 160:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 161:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else {
 162:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = 0U;
 163:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 164:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 165:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Configures the CR2 registers with both the calculated and static
 166:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      settings.*/
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR2 = (dp->CR2 & ~(I2C_CR2_NBYTES | I2C_CR2_RELOAD)) | i2cp->config->cr2 |
  53              		.loc 1 167 74 is_stmt 0 view .LVU10
  54 000a 4368     		ldr	r3, [r0, #4]
  55              		.loc 1 167 16 view .LVU11
  56 000c 6268     		ldr	r2, [r4, #4]
 168:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  57              		.loc 1 168 28 view .LVU12
  58 000e 9B68     		ldr	r3, [r3, #8]
 157:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
  59              		.loc 1 157 6 view .LVU13
  60 0010 FF29     		cmp	r1, #255
 158:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     n = 255U;
  61              		.loc 1 158 7 view .LVU14
  62 0012 88BF     		it	hi
  63 0014 FF21     		movhi	r1, #255
  64              	.LVL3:
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  65              		.loc 1 167 22 view .LVU15
  66 0016 22F0FF72 		bic	r2, r2, #33423360
  67              		.loc 1 168 28 view .LVU16
  68 001a 43EA0143 		orr	r3, r3, r1, lsl #16
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  69              		.loc 1 167 22 view .LVU17
  70 001e 22F48032 		bic	r2, r2, #65536
 162:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
  71              		.loc 1 162 12 view .LVU18
  72 0022 94BF     		ite	ls
  73 0024 0025     		movls	r5, #0
 159:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
  74              		.loc 1 159 12 view .LVU19
  75 0026 4FF08075 		movhi	r5, #16777216
  76              	.LVL4:
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  77              		.loc 1 167 3 is_stmt 1 view .LVU20
  78              		.loc 1 168 28 is_stmt 0 view .LVU21
  79 002a 1343     		orrs	r3, r3, r2
  80              		.loc 1 168 41 view .LVU22
  81 002c 2B43     		orrs	r3, r3, r5
  82 002e 43F48063 		orr	r3, r3, #1024
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  83              		.loc 1 167 11 view .LVU23
  84 0032 6360     		str	r3, [r4, #4]
 169:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
  85              		.loc 1 169 1 view .LVU24
  86 0034 30BD     		pop	{r4, r5, pc}
  87              		.loc 1 169 1 view .LVU25
  88              		.cfi_endproc
  89              	.LFE283:
  91              		.section	.text.i2c_lld_setup_tx_transfer,"ax",%progbits
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	i2c_lld_setup_tx_transfer:
  98              	.LVL5:
  99              	.LFB284:
 170:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 171:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 172:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C TX transfer setup.
 173:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 174:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 175:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 176:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 177:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 178:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_setup_tx_transfer(I2CDriver *i2cp) {
 100              		.loc 1 178 56 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 179:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 104              		.loc 1 179 3 view .LVU27
 180:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t reload;
 181:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   size_t n;
 182:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 183:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* The unit can transfer 255 bytes maximum in a single operation.*/
 184:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   n = i2c_lld_get_txbytes(i2cp);
 105              		.loc 1 184 7 is_stmt 0 view .LVU28
 106 0000 D0E90B31 		ldrd	r3, r1, [r0, #44]
 107 0004 5B68     		ldr	r3, [r3, #4]
 185:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
 186:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     n = 255U;
 187:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = I2C_CR2_RELOAD;
 188:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 189:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else {
 190:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = 0U;
 191:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 192:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 193:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Configures the CR2 registers with both the calculated and static
 194:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      settings.*/
 195:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR2 = (dp->CR2 & ~(I2C_CR2_NBYTES | I2C_CR2_RELOAD)) | i2cp->config->cr2 |
 108              		.loc 1 195 74 view .LVU29
 109 0006 4068     		ldr	r0, [r0, #4]
 110              	.LVL6:
 184:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
 111              		.loc 1 184 5 view .LVU30
 112 0008 5A68     		ldr	r2, [r3, #4]
 113              	.LVL7:
 185:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
 114              		.loc 1 185 3 is_stmt 1 view .LVU31
 115              		.loc 1 195 16 is_stmt 0 view .LVU32
 116 000a 4B68     		ldr	r3, [r1, #4]
 117              		.loc 1 195 60 view .LVU33
 118 000c 8068     		ldr	r0, [r0, #8]
 178:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 119              		.loc 1 178 56 view .LVU34
 120 000e 10B5     		push	{r4, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 124              		.loc 1 195 22 view .LVU35
 125 0010 23F0FF73 		bic	r3, r3, #33423360
 185:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
 126              		.loc 1 185 6 view .LVU36
 127 0014 FF2A     		cmp	r2, #255
 128              		.loc 1 195 22 view .LVU37
 129 0016 23F48033 		bic	r3, r3, #65536
 190:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 130              		.loc 1 190 12 view .LVU38
 131 001a 94BF     		ite	ls
 132 001c 0024     		movls	r4, #0
 187:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 133              		.loc 1 187 12 view .LVU39
 134 001e 4FF08074 		movhi	r4, #16777216
 135              		.loc 1 195 60 view .LVU40
 136 0022 43EA0003 		orr	r3, r3, r0
 186:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = I2C_CR2_RELOAD;
 137              		.loc 1 186 7 view .LVU41
 138 0026 88BF     		it	hi
 139 0028 FF22     		movhi	r2, #255
 140              	.LVL8:
 141              		.loc 1 195 3 is_stmt 1 view .LVU42
 196:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             (n << 16U) | reload;
 142              		.loc 1 196 24 is_stmt 0 view .LVU43
 143 002a 2343     		orrs	r3, r3, r4
 144 002c 43EA0243 		orr	r3, r3, r2, lsl #16
 195:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             (n << 16U) | reload;
 145              		.loc 1 195 11 view .LVU44
 146 0030 4B60     		str	r3, [r1, #4]
 197:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 147              		.loc 1 197 1 view .LVU45
 148 0032 10BD     		pop	{r4, pc}
 149              		.loc 1 197 1 view .LVU46
 150              		.cfi_endproc
 151              	.LFE284:
 153              		.section	.text.VectorBC,"ax",%progbits
 154              		.align	1
 155              		.global	VectorBC
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	VectorBC:
 161              	.LFB288:
 198:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 199:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 200:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Aborts an I2C transaction.
 201:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 202:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 203:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 204:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 205:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 206:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_abort_operation(I2CDriver *i2cp) {
 207:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 208:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (dp->CR1 & I2C_CR1_PE) {
 210:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 211:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 &= ~I2C_CR1_PE;
 212:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     while (dp->CR1 & I2C_CR1_PE)
 213:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dp->CR1 &= ~I2C_CR1_PE;
 214:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 |= I2C_CR1_PE;
 215:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 216:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 217:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 218:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Stops the associated DMA streams.*/
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmatx);
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 221:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 222:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 &= ~(I2C_CR1_TXIE | I2C_CR1_RXIE);
 223:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 224:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 225:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 226:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 227:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C shared ISR code.
 228:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 229:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 230:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] isr       content of the ISR register to be decoded
 231:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 232:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 233:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 234:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_serve_interrupt(I2CDriver *i2cp, uint32_t isr) {
 235:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 236:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 237:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Special case of a received NACK, the transfer is aborted.*/
 238:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if ((isr & I2C_ISR_NACKF) != 0U) {
 239:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 240:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the associated DMA streams.*/
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmatx);
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 243:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 244:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 245:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Error flag.*/
 246:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_ACK_FAILURE;
 247:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 248:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Transaction finished sending the STOP.*/
 249:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 |= I2C_CR2_STOP;
 250:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 251:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Make sure no more interrupts.*/
 252:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 &= ~(I2C_CR1_TCIE | I2C_CR1_TXIE | I2C_CR1_RXIE);
 253:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 254:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Errors are signaled to the upper layer.*/
 255:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 256:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 257:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     return;
 258:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 259:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 260:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == FALSE
 261:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Handling of data transfer if the DMA mode is disabled.*/
 262:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   {
 263:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     uint32_t cr1 = dp->CR1;
 264:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 265:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 266:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Transmission phase.*/
 267:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       if (((cr1 &I2C_CR1_TXIE) != 0U) && ((isr & I2C_ISR_TXIS) != 0U)) {
 268:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dp->TXDR = (uint32_t)*i2cp->txptr;
 269:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txptr++;
 270:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txbytes--;
 271:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         if (i2cp->txbytes == 0U) {
 272:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****           dp->CR1 &= ~I2C_CR1_TXIE;
 273:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         }
 274:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 275:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 276:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     else {
 277:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Receive phase.*/
 278:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       if (((cr1 & I2C_CR1_RXIE) != 0U) && ((isr & I2C_ISR_RXNE) != 0U)) {
 279:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         *i2cp->rxptr = (uint8_t)dp->RXDR;
 280:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxptr++;
 281:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxbytes--;
 282:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         if (i2cp->rxbytes == 0U) {
 283:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****           dp->CR1 &= ~I2C_CR1_RXIE;
 284:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         }
 285:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 286:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 287:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 288:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 289:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 290:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Partial transfer handling, restarting the transfer and returning.*/
 291:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if ((isr & I2C_ISR_TCR) != 0U) {
 292:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 293:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_tx_transfer(i2cp);
 294:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 295:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     else {
 296:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_rx_transfer(i2cp);
 297:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 298:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     return;
 299:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 300:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 301:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* The following condition is true if a transfer phase has been completed.*/
 302:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if ((isr & I2C_ISR_TC) != 0U) {
 303:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 304:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the transmit phase.*/
 305:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 306:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 307:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Disabling TX DMA channel.*/
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dmaStreamDisable(i2cp->dmatx);
 309:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 310:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 311:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Starting receive phase if necessary.*/
 312:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       if (i2c_lld_get_rxbytes(i2cp) > 0U) {
 313:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Setting up the peripheral.*/
 314:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2c_lld_setup_rx_transfer(i2cp);
 315:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 316:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 317:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Enabling RX DMA.*/
 318:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaStreamEnable(i2cp->dmarx);
 319:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 320:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* RX interrupt enabled.*/
 321:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dp->CR1 |= I2C_CR1_RXIE;
 322:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 323:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 324:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Starts the read operation.*/
 325:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dp->CR2 |= I2C_CR2_START;
 326:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 327:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* State change.*/
 328:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->state = I2C_ACTIVE_RX;
 329:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 330:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Note, returning because the transaction is not over yet.*/
 331:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         return;
 332:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 333:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 334:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     else {
 335:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the receive phase.*/
 336:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 337:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Disabling RX DMA channel.*/
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dmaStreamDisable(i2cp->dmarx);
 339:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 340:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 341:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 342:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Transaction finished sending the STOP.*/
 343:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 |= I2C_CR2_STOP;
 344:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 345:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Make sure no more 'Transfer Complete' interrupts.*/
 346:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 &= ~I2C_CR1_TCIE;
 347:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 348:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Normal transaction end.*/
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_isr(i2cp);
 350:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 351:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 352:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 353:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 354:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C error handler.
 355:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 356:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 357:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] isr       content of the ISR register to be decoded
 358:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 359:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 360:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 361:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_serve_error_interrupt(I2CDriver *i2cp, uint32_t isr) {
 362:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 363:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 364:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clears DMA interrupt flags just to be safe.*/
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmatx);
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 367:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 368:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Disabling RX and TX interrupts.*/
 369:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->i2c->CR1 &= ~(I2C_CR1_TXIE | I2C_CR1_RXIE);
 370:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 371:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 372:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ISR_BERR)
 373:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_BUS_ERROR;
 374:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 375:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ISR_ARLO)
 376:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_ARBITRATION_LOST;
 377:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 378:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ISR_OVR)
 379:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_OVERRUN;
 380:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 381:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ISR_TIMEOUT)
 382:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_TIMEOUT;
 383:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 384:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* If some error has been identified then sends wakes the waiting thread.*/
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (i2cp->errors != I2C_NO_ERROR)
 386:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 387:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 388:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 389:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 390:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver interrupt handlers.                                                */
 391:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 392:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 393:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1 || defined(__DOXYGEN__)
 394:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C1_GLOBAL_HANDLER) || defined(__DOXYGEN__)
 395:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 396:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C1 event interrupt handler.
 397:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 398:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 399:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 400:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C1_GLOBAL_HANDLER) {
 401:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 402:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 404:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 405:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 406:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c->ICR = isr;
 407:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 408:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ERROR_MASK)
 409:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_error_interrupt(&I2CD1, isr);
 410:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 411:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_interrupt(&I2CD1, isr);
 412:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 413:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 414:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 415:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 416:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C1_EVENT_HANDLER) && defined(STM32_I2C1_ERROR_HANDLER)
 417:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C1_EVENT_HANDLER) {
 162              		.loc 1 417 44 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 418:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 166              		.loc 1 418 3 view .LVU48
 167              		.loc 1 418 23 is_stmt 0 view .LVU49
 168 0000 3E48     		ldr	r0, .L21
 417:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 169              		.loc 1 417 44 view .LVU50
 170 0002 38B5     		push	{r3, r4, r5, lr}
 171              		.cfi_def_cfa_offset 16
 172              		.cfi_offset 3, -16
 173              		.cfi_offset 4, -12
 174              		.cfi_offset 5, -8
 175              		.cfi_offset 14, -4
 176              		.loc 1 418 23 view .LVU51
 177 0004 046B     		ldr	r4, [r0, #48]
 178              		.loc 1 418 12 view .LVU52
 179 0006 A369     		ldr	r3, [r4, #24]
 180              	.LVL9:
 419:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 420:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 181              		.loc 1 420 3 is_stmt 1 view .LVU53
 182              		.loc 1 420 3 view .LVU54
 183              		.loc 1 420 3 view .LVU55
 184              		.loc 1 420 3 view .LVU56
 185              		.loc 1 420 3 view .LVU57
 186              		.loc 1 420 22 view .LVU58
 421:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 422:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 423:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c->ICR = isr & I2C_INT_MASK;
 187              		.loc 1 423 3 view .LVU59
 188              		.loc 1 423 24 is_stmt 0 view .LVU60
 189 0008 03F0FE02 		and	r2, r3, #254
 190              	.LBB252:
 191              	.LBB253:
 238:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 192              		.loc 1 238 6 view .LVU61
 193 000c D906     		lsls	r1, r3, #27
 194              	.LBE253:
 195              	.LBE252:
 196              		.loc 1 423 18 view .LVU62
 197 000e E261     		str	r2, [r4, #28]
 424:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 425:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_interrupt(&I2CD1, isr);
 198              		.loc 1 425 3 is_stmt 1 view .LVU63
 199              	.LVL10:
 200              	.LBB281:
 201              	.LBI252:
 234:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 202              		.loc 1 234 13 view .LVU64
 203              	.LBB279:
 235:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 204              		.loc 1 235 3 view .LVU65
 238:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 205              		.loc 1 238 3 view .LVU66
 238:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 206              		.loc 1 238 6 is_stmt 0 view .LVU67
 207 0010 2DD5     		bpl	.L8
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 208              		.loc 1 241 5 is_stmt 1 view .LVU68
 209 0012 C36A     		ldr	r3, [r0, #44]
 210              	.LVL11:
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 211              		.loc 1 241 5 is_stmt 0 view .LVU69
 212 0014 5968     		ldr	r1, [r3, #4]
 213 0016 0A68     		ldr	r2, [r1]
 214 0018 22F00F02 		bic	r2, r2, #15
 215 001c 0A60     		str	r2, [r1]
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 216              		.loc 1 241 5 is_stmt 1 view .LVU70
 217 001e 5A7B     		ldrb	r2, [r3, #13]	@ zero_extendqisi2
 218 0020 1968     		ldr	r1, [r3]
 219 0022 0E23     		movs	r3, #14
 220 0024 03FA02F2 		lsl	r2, r3, r2
 221 0028 4A60     		str	r2, [r1, #4]
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 222              		.loc 1 241 5 view .LVU71
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 223              		.loc 1 241 34 view .LVU72
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 224              		.loc 1 242 5 view .LVU73
 225 002a 826A     		ldr	r2, [r0, #40]
 226 002c 5568     		ldr	r5, [r2, #4]
 227 002e 2968     		ldr	r1, [r5]
 228 0030 21F00F01 		bic	r1, r1, #15
 229 0034 2960     		str	r1, [r5]
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 230              		.loc 1 242 5 view .LVU74
 231 0036 1168     		ldr	r1, [r2]
 232 0038 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 233 003a 9340     		lsls	r3, r3, r2
 234 003c 4B60     		str	r3, [r1, #4]
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 235              		.loc 1 242 5 view .LVU75
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 236              		.loc 1 242 34 view .LVU76
 246:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 237              		.loc 1 246 5 view .LVU77
 246:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 238              		.loc 1 246 18 is_stmt 0 view .LVU78
 239 003e 8368     		ldr	r3, [r0, #8]
 240 0040 43F00403 		orr	r3, r3, #4
 241 0044 8360     		str	r3, [r0, #8]
 249:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 242              		.loc 1 249 5 is_stmt 1 view .LVU79
 249:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 243              		.loc 1 249 7 is_stmt 0 view .LVU80
 244 0046 6368     		ldr	r3, [r4, #4]
 249:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 245              		.loc 1 249 13 view .LVU81
 246 0048 43F48043 		orr	r3, r3, #16384
 247 004c 6360     		str	r3, [r4, #4]
 252:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 248              		.loc 1 252 5 is_stmt 1 view .LVU82
 252:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 249              		.loc 1 252 7 is_stmt 0 view .LVU83
 250 004e 2368     		ldr	r3, [r4]
 252:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 251              		.loc 1 252 13 view .LVU84
 252 0050 23F04603 		bic	r3, r3, #70
 253 0054 2360     		str	r3, [r4]
 255:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 254              		.loc 1 255 5 is_stmt 1 view .LVU85
 255:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 255              		.loc 1 255 5 view .LVU86
 256              	.LBB254:
 257              	.LBI254:
 258              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
 259              		.loc 2 595 20 view .LVU87
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
 260              		.loc 2 597 3 view .LVU88
 261              	.LBB255:
 262              	.LBI255:
 263              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 381:./lib/chibios/os/rt/include/chsys.h **** }
 382:./lib/chibios/os/rt/include/chsys.h **** 
 383:./lib/chibios/os/rt/include/chsys.h **** /**
 384:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 385:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 386:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 387:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 388:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 389:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 390:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 391:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 392:./lib/chibios/os/rt/include/chsys.h ****  *
 393:./lib/chibios/os/rt/include/chsys.h ****  * @special
 394:./lib/chibios/os/rt/include/chsys.h ****  */
 395:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 264              		.loc 3 395 20 view .LVU89
 396:./lib/chibios/os/rt/include/chsys.h **** 
 397:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 265              		.loc 3 397 3 view .LVU90
 266              	.LBB256:
 267              	.LBI256:
 268              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 697:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 698:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 699:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 700:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 701:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 702:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 703:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 704:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 705:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 706:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_lock() in this port.
 707:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock_from_isr(void) {
 269              		.loc 4 708 27 view .LVU91
 709:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_lock();
 270              		.loc 4 710 3 view .LVU92
 271              	.LBB257:
 272              	.LBI257:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273              		.loc 4 669 27 view .LVU93
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 274              		.loc 4 677 3 view .LVU94
 275              	.LVL12:
 276              	.LBB258:
 277              	.LBI258:
 278              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 279              		.loc 5 491 27 view .LVU95
 280              	.LBB259:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 281              		.loc 5 493 3 view .LVU96
 282 0056 2023     		movs	r3, #32
 283              		.syntax unified
 284              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 285 0058 83F31188 		MSR basepri, r3
 286              	@ 0 "" 2
 287              	.LVL13:
 288              		.loc 5 493 3 is_stmt 0 view .LVU97
 289              		.thumb
 290              		.syntax unified
 291              	.LBE259:
 292              	.LBE258:
 293              	.LBE257:
 294              	.LBE256:
 398:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 295              		.loc 3 398 34 is_stmt 1 view .LVU98
 399:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 296              		.loc 3 399 29 view .LVU99
 297              	.LBE255:
 298              	.LBE254:
 255:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 299              		.loc 1 255 5 view .LVU100
 300              	.LBB260:
 301              	.LBI260:
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 761:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 762:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 763:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 764:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 765:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 766:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 767:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 768:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 769:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 770:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 771:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 772:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 774:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 775:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 776:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 777:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 778:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 779:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 780:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 781:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 782:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 783:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 784:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 785:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 786:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 787:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 788:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 789:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 790:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 791:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 792:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 793:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 794:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 795:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 796:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 797:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 798:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 799:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 800:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 801:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 803:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 804:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 805:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 806:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 807:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 808:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 809:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 810:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 811:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 812:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 813:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 814:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 815:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 816:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 817:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 818:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 819:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 820:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 822:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 823:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 825:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 826:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 827:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 828:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 829:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must not reschedule because it can be called from
 830:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          ISR context.
 831:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 832:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 833:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 834:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 835:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 836:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 837:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 302              		.loc 2 837 20 view .LVU101
 303              	.LBB261:
 838:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 839:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeI(trp, msg);
 304              		.loc 2 839 3 view .LVU102
 305 005c 6FF00101 		mvn	r1, #1
 306 0060 1C30     		adds	r0, r0, #28
 307              	.LVL14:
 308              	.L20:
 309              		.loc 2 839 3 is_stmt 0 view .LVU103
 310              	.LBE261:
 311              	.LBE260:
 312              	.LBB262:
 313              	.LBB263:
 314 0062 FFF7FEFF 		bl	chThdResumeI
 315              	.LVL15:
 316              	.LBE263:
 317              	.LBE262:
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 318              		.loc 1 349 5 is_stmt 1 view .LVU104
 319              	.LBB265:
 320              	.LBI265:
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 321              		.loc 2 606 20 view .LVU105
 322              	.LBB266:
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 323              		.loc 2 608 3 view .LVU106
 324              	.LBB267:
 325              	.LBI267:
 400:./lib/chibios/os/rt/include/chsys.h **** }
 401:./lib/chibios/os/rt/include/chsys.h **** 
 402:./lib/chibios/os/rt/include/chsys.h **** /**
 403:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 404:./lib/chibios/os/rt/include/chsys.h ****  *
 405:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 406:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 407:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 408:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 409:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 410:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 411:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 412:./lib/chibios/os/rt/include/chsys.h ****  *
 413:./lib/chibios/os/rt/include/chsys.h ****  * @special
 414:./lib/chibios/os/rt/include/chsys.h ****  */
 415:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 326              		.loc 3 415 20 view .LVU107
 416:./lib/chibios/os/rt/include/chsys.h **** 
 417:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 327              		.loc 3 417 31 view .LVU108
 418:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 328              		.loc 3 418 33 view .LVU109
 419:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 329              		.loc 3 419 3 view .LVU110
 330              	.LBB268:
 331              	.LBI268:
 711:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 712:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 713:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 714:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 715:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 716:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 717:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_unlock() in this port.
 718:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock_from_isr(void) {
 332              		.loc 4 719 27 view .LVU111
 720:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 721:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_unlock();
 333              		.loc 4 721 3 view .LVU112
 334              	.LBB269:
 335              	.LBI269:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 336              		.loc 4 693 27 view .LVU113
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 337              		.loc 4 696 3 view .LVU114
 338              	.LBB270:
 339              	.LBI270:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 340              		.loc 5 491 27 view .LVU115
 341              	.LBB271:
 342              		.loc 5 493 3 view .LVU116
 343 0066 0023     		movs	r3, #0
 344              		.syntax unified
 345              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 346 0068 83F31188 		MSR basepri, r3
 347              	@ 0 "" 2
 348              	.LVL16:
 349              		.loc 5 493 3 is_stmt 0 view .LVU117
 350              		.thumb
 351              		.syntax unified
 352              	.LBE271:
 353              	.LBE270:
 354              	.LBE269:
 355              	.LBE268:
 356              	.LBE267:
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 357              		.loc 2 609 1 view .LVU118
 358 006c 06E0     		b	.L9
 359              	.LVL17:
 360              	.L8:
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 361              		.loc 2 609 1 view .LVU119
 362              	.LBE266:
 363              	.LBE265:
 291:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 364              		.loc 1 291 3 is_stmt 1 view .LVU120
 291:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 365              		.loc 1 291 6 is_stmt 0 view .LVU121
 366 006e 1A06     		lsls	r2, r3, #24
 367 0070 0BD5     		bpl	.L10
 292:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_tx_transfer(i2cp);
 368              		.loc 1 292 5 is_stmt 1 view .LVU122
 292:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_tx_transfer(i2cp);
 369              		.loc 1 292 8 is_stmt 0 view .LVU123
 370 0072 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 371              	.LVL18:
 292:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_tx_transfer(i2cp);
 372              		.loc 1 292 8 view .LVU124
 373 0074 032B     		cmp	r3, #3
 374 0076 05D1     		bne	.L11
 293:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 375              		.loc 1 293 7 is_stmt 1 view .LVU125
 376 0078 FFF7FEFF 		bl	i2c_lld_setup_tx_transfer
 377              	.LVL19:
 378              	.L9:
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 379              		.loc 1 349 5 view .LVU126
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 380              		.loc 1 349 5 is_stmt 0 view .LVU127
 381              	.LBE279:
 382              	.LBE281:
 426:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 427:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 383              		.loc 1 427 3 is_stmt 1 view .LVU128
 384              		.loc 1 427 3 view .LVU129
 385              		.loc 1 427 3 view .LVU130
 386              		.loc 1 427 3 view .LVU131
 387              		.loc 1 427 3 view .LVU132
 428:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 388              		.loc 1 428 1 is_stmt 0 view .LVU133
 389 007c BDE83840 		pop	{r3, r4, r5, lr}
 390              		.cfi_remember_state
 391              		.cfi_restore 14
 392              		.cfi_restore 5
 393              		.cfi_restore 4
 394              		.cfi_restore 3
 395              		.cfi_def_cfa_offset 0
 427:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 396              		.loc 1 427 3 view .LVU134
 397 0080 FFF7FEBF 		b	_port_irq_epilogue
 398              	.LVL20:
 399              	.L11:
 400              		.cfi_restore_state
 401              	.LBB282:
 402              	.LBB280:
 296:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 403              		.loc 1 296 7 is_stmt 1 view .LVU135
 404 0084 FFF7FEFF 		bl	i2c_lld_setup_rx_transfer
 405              	.LVL21:
 406 0088 F8E7     		b	.L9
 407              	.LVL22:
 408              	.L10:
 302:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 409              		.loc 1 302 3 view .LVU136
 302:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 410              		.loc 1 302 6 is_stmt 0 view .LVU137
 411 008a 5B06     		lsls	r3, r3, #25
 412              	.LVL23:
 302:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 413              		.loc 1 302 6 view .LVU138
 414 008c F6D5     		bpl	.L9
 303:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the transmit phase.*/
 415              		.loc 1 303 5 is_stmt 1 view .LVU139
 303:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the transmit phase.*/
 416              		.loc 1 303 8 is_stmt 0 view .LVU140
 417 008e 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 418              		.loc 1 242 5 view .LVU141
 419 0090 836A     		ldr	r3, [r0, #40]
 303:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the transmit phase.*/
 420              		.loc 1 303 8 view .LVU142
 421 0092 032A     		cmp	r2, #3
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 422              		.loc 1 242 5 view .LVU143
 423 0094 5D68     		ldr	r5, [r3, #4]
 303:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the transmit phase.*/
 424              		.loc 1 303 8 view .LVU144
 425 0096 19D1     		bne	.L12
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 426              		.loc 1 308 7 is_stmt 1 view .LVU145
 427 0098 C36A     		ldr	r3, [r0, #44]
 428 009a 5968     		ldr	r1, [r3, #4]
 429 009c 0A68     		ldr	r2, [r1]
 430 009e 22F00F02 		bic	r2, r2, #15
 431 00a2 0A60     		str	r2, [r1]
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 432              		.loc 1 308 7 view .LVU146
 433 00a4 597B     		ldrb	r1, [r3, #13]	@ zero_extendqisi2
 434 00a6 1A68     		ldr	r2, [r3]
 435 00a8 0E23     		movs	r3, #14
 436 00aa 8B40     		lsls	r3, r3, r1
 437 00ac 5360     		str	r3, [r2, #4]
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 438              		.loc 1 308 7 view .LVU147
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 439              		.loc 1 308 36 view .LVU148
 312:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Setting up the peripheral.*/
 440              		.loc 1 312 7 view .LVU149
 312:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Setting up the peripheral.*/
 441              		.loc 1 312 11 is_stmt 0 view .LVU150
 442 00ae 6B68     		ldr	r3, [r5, #4]
 312:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Setting up the peripheral.*/
 443              		.loc 1 312 10 view .LVU151
 444 00b0 ABB1     		cbz	r3, .L13
 314:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 445              		.loc 1 314 9 is_stmt 1 view .LVU152
 446 00b2 FFF7FEFF 		bl	i2c_lld_setup_rx_transfer
 447              	.LVL24:
 318:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 448              		.loc 1 318 9 view .LVU153
 449 00b6 2B68     		ldr	r3, [r5]
 450 00b8 43F00103 		orr	r3, r3, #1
 451 00bc 2B60     		str	r3, [r5]
 318:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 452              		.loc 1 318 37 view .LVU154
 325:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 453              		.loc 1 325 9 view .LVU155
 325:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 454              		.loc 1 325 11 is_stmt 0 view .LVU156
 455 00be 6368     		ldr	r3, [r4, #4]
 325:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 456              		.loc 1 325 17 view .LVU157
 457 00c0 43F40053 		orr	r3, r3, #8192
 458 00c4 6360     		str	r3, [r4, #4]
 328:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 459              		.loc 1 328 9 is_stmt 1 view .LVU158
 328:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 460              		.loc 1 328 21 is_stmt 0 view .LVU159
 461 00c6 0423     		movs	r3, #4
 462 00c8 0370     		strb	r3, [r0]
 331:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 463              		.loc 1 331 9 is_stmt 1 view .LVU160
 464 00ca D7E7     		b	.L9
 465              	.L12:
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 466              		.loc 1 338 7 view .LVU161
 467 00cc 2A68     		ldr	r2, [r5]
 468 00ce 22F00F02 		bic	r2, r2, #15
 469 00d2 2A60     		str	r2, [r5]
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 470              		.loc 1 338 7 view .LVU162
 471 00d4 597B     		ldrb	r1, [r3, #13]	@ zero_extendqisi2
 472 00d6 1A68     		ldr	r2, [r3]
 473 00d8 0E23     		movs	r3, #14
 474 00da 8B40     		lsls	r3, r3, r1
 475 00dc 5360     		str	r3, [r2, #4]
 476              	.L13:
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 477              		.loc 1 338 7 view .LVU163
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 478              		.loc 1 338 36 view .LVU164
 343:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 479              		.loc 1 343 5 view .LVU165
 343:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 480              		.loc 1 343 7 is_stmt 0 view .LVU166
 481 00de 6368     		ldr	r3, [r4, #4]
 343:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 482              		.loc 1 343 13 view .LVU167
 483 00e0 43F48043 		orr	r3, r3, #16384
 484 00e4 6360     		str	r3, [r4, #4]
 346:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 485              		.loc 1 346 5 is_stmt 1 view .LVU168
 346:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 486              		.loc 1 346 7 is_stmt 0 view .LVU169
 487 00e6 2368     		ldr	r3, [r4]
 346:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 488              		.loc 1 346 13 view .LVU170
 489 00e8 23F04003 		bic	r3, r3, #64
 490 00ec 2360     		str	r3, [r4]
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 491              		.loc 1 349 5 is_stmt 1 view .LVU171
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 492              		.loc 1 349 5 view .LVU172
 493              	.LBB272:
 494              	.LBI272:
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 495              		.loc 2 595 20 view .LVU173
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 496              		.loc 2 597 3 view .LVU174
 497              	.LBB273:
 498              	.LBI273:
 395:./lib/chibios/os/rt/include/chsys.h **** 
 499              		.loc 3 395 20 view .LVU175
 397:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 500              		.loc 3 397 3 view .LVU176
 501              	.LBB274:
 502              	.LBI274:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 503              		.loc 4 708 27 view .LVU177
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 504              		.loc 4 710 3 view .LVU178
 505              	.LBB275:
 506              	.LBI275:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 507              		.loc 4 669 27 view .LVU179
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 508              		.loc 4 677 3 view .LVU180
 509              	.LVL25:
 510              	.LBB276:
 511              	.LBI276:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 512              		.loc 5 491 27 view .LVU181
 513              	.LBB277:
 514              		.loc 5 493 3 view .LVU182
 515 00ee 2023     		movs	r3, #32
 516              		.syntax unified
 517              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 518 00f0 83F31188 		MSR basepri, r3
 519              	@ 0 "" 2
 520              	.LVL26:
 521              		.loc 5 493 3 is_stmt 0 view .LVU183
 522              		.thumb
 523              		.syntax unified
 524              	.LBE277:
 525              	.LBE276:
 526              	.LBE275:
 527              	.LBE274:
 398:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 528              		.loc 3 398 34 is_stmt 1 view .LVU184
 399:./lib/chibios/os/rt/include/chsys.h **** }
 529              		.loc 3 399 29 view .LVU185
 530              	.LBE273:
 531              	.LBE272:
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 532              		.loc 1 349 5 view .LVU186
 533              	.LBB278:
 534              	.LBI262:
 837:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535              		.loc 2 837 20 view .LVU187
 536              	.LBB264:
 537              		.loc 2 839 3 view .LVU188
 538 00f4 0248     		ldr	r0, .L21+4
 539              	.LVL27:
 540              		.loc 2 839 3 is_stmt 0 view .LVU189
 541 00f6 0021     		movs	r1, #0
 542 00f8 B3E7     		b	.L20
 543              	.L22:
 544 00fa 00BF     		.align	2
 545              	.L21:
 546 00fc 00000000 		.word	I2CD1
 547 0100 1C000000 		.word	I2CD1+28
 548              	.LBE264:
 549              	.LBE278:
 550              	.LBE280:
 551              	.LBE282:
 552              		.cfi_endproc
 553              	.LFE288:
 555              		.section	.text.VectorC0,"ax",%progbits
 556              		.align	1
 557              		.global	VectorC0
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 562              	VectorC0:
 563              	.LFB289:
 429:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 430:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C1_ERROR_HANDLER) {
 564              		.loc 1 430 44 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 431:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 568              		.loc 1 431 3 view .LVU191
 430:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 569              		.loc 1 430 44 is_stmt 0 view .LVU192
 570 0000 38B5     		push	{r3, r4, r5, lr}
 571              		.cfi_def_cfa_offset 16
 572              		.cfi_offset 3, -16
 573              		.cfi_offset 4, -12
 574              		.cfi_offset 5, -8
 575              		.cfi_offset 14, -4
 576              		.loc 1 431 23 view .LVU193
 577 0002 234B     		ldr	r3, .L42
 578 0004 196B     		ldr	r1, [r3, #48]
 579              		.loc 1 431 12 view .LVU194
 580 0006 8A69     		ldr	r2, [r1, #24]
 581              	.LVL28:
 432:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 433:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 582              		.loc 1 433 3 is_stmt 1 view .LVU195
 583              		.loc 1 433 3 view .LVU196
 584              		.loc 1 433 3 view .LVU197
 585              		.loc 1 433 3 view .LVU198
 586              		.loc 1 433 3 view .LVU199
 587              		.loc 1 433 22 view .LVU200
 434:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 435:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 436:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c->ICR = isr & I2C_ERROR_MASK;
 588              		.loc 1 436 3 view .LVU201
 589              		.loc 1 436 24 is_stmt 0 view .LVU202
 590 0008 02F47C50 		and	r0, r2, #16128
 591              		.loc 1 436 18 view .LVU203
 592 000c C861     		str	r0, [r1, #28]
 437:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 438:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_error_interrupt(&I2CD1, isr);
 593              		.loc 1 438 3 is_stmt 1 view .LVU204
 594              	.LVL29:
 595              	.LBB315:
 596              	.LBI315:
 361:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 597              		.loc 1 361 13 view .LVU205
 598              	.LBB316:
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 599              		.loc 1 365 3 view .LVU206
 600 000e D96A     		ldr	r1, [r3, #44]
 601 0010 4C68     		ldr	r4, [r1, #4]
 602 0012 2068     		ldr	r0, [r4]
 603 0014 20F00F00 		bic	r0, r0, #15
 604 0018 2060     		str	r0, [r4]
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 605              		.loc 1 365 3 view .LVU207
 606 001a 487B     		ldrb	r0, [r1, #13]	@ zero_extendqisi2
 607 001c 0C68     		ldr	r4, [r1]
 608 001e 0E21     		movs	r1, #14
 609 0020 01FA00F0 		lsl	r0, r1, r0
 610 0024 6060     		str	r0, [r4, #4]
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 611              		.loc 1 365 3 view .LVU208
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 612              		.loc 1 365 32 view .LVU209
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 613              		.loc 1 366 3 view .LVU210
 614 0026 986A     		ldr	r0, [r3, #40]
 615 0028 4568     		ldr	r5, [r0, #4]
 616 002a 2C68     		ldr	r4, [r5]
 617 002c 24F00F04 		bic	r4, r4, #15
 618 0030 2C60     		str	r4, [r5]
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 619              		.loc 1 366 3 view .LVU211
 620 0032 0468     		ldr	r4, [r0]
 621 0034 407B     		ldrb	r0, [r0, #13]	@ zero_extendqisi2
 622 0036 8140     		lsls	r1, r1, r0
 623 0038 6160     		str	r1, [r4, #4]
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 624              		.loc 1 366 3 view .LVU212
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 625              		.loc 1 366 32 view .LVU213
 372:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_BUS_ERROR;
 626              		.loc 1 372 3 view .LVU214
 372:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_BUS_ERROR;
 627              		.loc 1 372 6 is_stmt 0 view .LVU215
 628 003a D405     		lsls	r4, r2, #23
 373:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 629              		.loc 1 373 5 is_stmt 1 view .LVU216
 373:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 630              		.loc 1 373 18 is_stmt 0 view .LVU217
 631 003c 42BF     		ittt	mi
 632 003e 9968     		ldrmi	r1, [r3, #8]
 633 0040 41F00101 		orrmi	r1, r1, #1
 634 0044 9960     		strmi	r1, [r3, #8]
 375:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_ARBITRATION_LOST;
 635              		.loc 1 375 3 is_stmt 1 view .LVU218
 375:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_ARBITRATION_LOST;
 636              		.loc 1 375 6 is_stmt 0 view .LVU219
 637 0046 9005     		lsls	r0, r2, #22
 376:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 638              		.loc 1 376 5 is_stmt 1 view .LVU220
 376:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 639              		.loc 1 376 18 is_stmt 0 view .LVU221
 640 0048 42BF     		ittt	mi
 641 004a 9968     		ldrmi	r1, [r3, #8]
 642 004c 41F00201 		orrmi	r1, r1, #2
 643 0050 9960     		strmi	r1, [r3, #8]
 378:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_OVERRUN;
 644              		.loc 1 378 3 is_stmt 1 view .LVU222
 378:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_OVERRUN;
 645              		.loc 1 378 6 is_stmt 0 view .LVU223
 646 0052 5105     		lsls	r1, r2, #21
 379:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 647              		.loc 1 379 5 is_stmt 1 view .LVU224
 379:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 648              		.loc 1 379 18 is_stmt 0 view .LVU225
 649 0054 42BF     		ittt	mi
 650 0056 9968     		ldrmi	r1, [r3, #8]
 651 0058 41F00801 		orrmi	r1, r1, #8
 652 005c 9960     		strmi	r1, [r3, #8]
 381:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_TIMEOUT;
 653              		.loc 1 381 3 is_stmt 1 view .LVU226
 381:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_TIMEOUT;
 654              		.loc 1 381 6 is_stmt 0 view .LVU227
 655 005e D204     		lsls	r2, r2, #19
 656              	.LVL30:
 382:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 657              		.loc 1 382 9 view .LVU228
 658 0060 9968     		ldr	r1, [r3, #8]
 381:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_TIMEOUT;
 659              		.loc 1 381 6 view .LVU229
 660 0062 0ED5     		bpl	.L27
 382:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 661              		.loc 1 382 5 is_stmt 1 view .LVU230
 382:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 662              		.loc 1 382 18 is_stmt 0 view .LVU231
 663 0064 41F02001 		orr	r1, r1, #32
 664 0068 9960     		str	r1, [r3, #8]
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 665              		.loc 1 385 3 is_stmt 1 view .LVU232
 666              	.L28:
 386:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 667              		.loc 1 386 5 view .LVU233
 386:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 668              		.loc 1 386 5 view .LVU234
 669              	.LBB317:
 670              	.LBI317:
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 671              		.loc 2 595 20 view .LVU235
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 672              		.loc 2 597 3 view .LVU236
 673              	.LBB318:
 674              	.LBI318:
 395:./lib/chibios/os/rt/include/chsys.h **** 
 675              		.loc 3 395 20 view .LVU237
 397:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 676              		.loc 3 397 3 view .LVU238
 677              	.LBB319:
 678              	.LBI319:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 679              		.loc 4 708 27 view .LVU239
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 680              		.loc 4 710 3 view .LVU240
 681              	.LBB320:
 682              	.LBI320:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 683              		.loc 4 669 27 view .LVU241
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 684              		.loc 4 677 3 view .LVU242
 685              	.LVL31:
 686              	.LBB321:
 687              	.LBI321:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 688              		.loc 5 491 27 view .LVU243
 689              	.LBB322:
 690              		.loc 5 493 3 view .LVU244
 691 006a 2023     		movs	r3, #32
 692              		.syntax unified
 693              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 694 006c 83F31188 		MSR basepri, r3
 695              	@ 0 "" 2
 696              	.LVL32:
 697              		.loc 5 493 3 is_stmt 0 view .LVU245
 698              		.thumb
 699              		.syntax unified
 700              	.LBE322:
 701              	.LBE321:
 702              	.LBE320:
 703              	.LBE319:
 398:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 704              		.loc 3 398 34 is_stmt 1 view .LVU246
 399:./lib/chibios/os/rt/include/chsys.h **** }
 705              		.loc 3 399 29 view .LVU247
 706              	.LBE318:
 707              	.LBE317:
 386:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 708              		.loc 1 386 5 view .LVU248
 709              	.LBB323:
 710              	.LBI323:
 837:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 711              		.loc 2 837 20 view .LVU249
 712              	.LBB324:
 713              		.loc 2 839 3 view .LVU250
 714 0070 0848     		ldr	r0, .L42+4
 715              	.LVL33:
 716              		.loc 2 839 3 is_stmt 0 view .LVU251
 717 0072 6FF00101 		mvn	r1, #1
 718 0076 FFF7FEFF 		bl	chThdResumeI
 719              	.LVL34:
 720              		.loc 2 839 3 view .LVU252
 721              	.LBE324:
 722              	.LBE323:
 386:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 723              		.loc 1 386 5 is_stmt 1 view .LVU253
 724              	.LBB325:
 725              	.LBI325:
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 726              		.loc 2 606 20 view .LVU254
 727              	.LBB326:
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 728              		.loc 2 608 3 view .LVU255
 729              	.LBB327:
 730              	.LBI327:
 415:./lib/chibios/os/rt/include/chsys.h **** 
 731              		.loc 3 415 20 view .LVU256
 417:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 732              		.loc 3 417 31 view .LVU257
 418:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 733              		.loc 3 418 33 view .LVU258
 734              		.loc 3 419 3 view .LVU259
 735              	.LBB328:
 736              	.LBI328:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 737              		.loc 4 719 27 view .LVU260
 738              		.loc 4 721 3 view .LVU261
 739              	.LBB329:
 740              	.LBI329:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 741              		.loc 4 693 27 view .LVU262
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 742              		.loc 4 696 3 view .LVU263
 743              	.LBB330:
 744              	.LBI330:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 745              		.loc 5 491 27 view .LVU264
 746              	.LBB331:
 747              		.loc 5 493 3 view .LVU265
 748 007a 0023     		movs	r3, #0
 749              		.syntax unified
 750              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 751 007c 83F31188 		MSR basepri, r3
 752              	@ 0 "" 2
 753              	.LVL35:
 754              		.loc 5 493 3 is_stmt 0 view .LVU266
 755              		.thumb
 756              		.syntax unified
 757              	.LBE331:
 758              	.LBE330:
 759              	.LBE329:
 760              	.LBE328:
 761              	.LBE327:
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 762              		.loc 2 609 1 view .LVU267
 763 0080 01E0     		b	.L29
 764              	.L27:
 765              	.LBE326:
 766              	.LBE325:
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 767              		.loc 1 385 3 is_stmt 1 view .LVU268
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 768              		.loc 1 385 6 is_stmt 0 view .LVU269
 769 0082 0029     		cmp	r1, #0
 770 0084 F1D1     		bne	.L28
 771              	.L29:
 386:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 772              		.loc 1 386 5 is_stmt 1 view .LVU270
 773              	.LVL36:
 386:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 774              		.loc 1 386 5 is_stmt 0 view .LVU271
 775              	.LBE316:
 776              	.LBE315:
 439:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 440:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 777              		.loc 1 440 3 is_stmt 1 view .LVU272
 778              		.loc 1 440 3 view .LVU273
 779              		.loc 1 440 3 view .LVU274
 780              		.loc 1 440 3 view .LVU275
 781              		.loc 1 440 3 view .LVU276
 441:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 782              		.loc 1 441 1 is_stmt 0 view .LVU277
 783 0086 BDE83840 		pop	{r3, r4, r5, lr}
 784              		.cfi_restore 14
 785              		.cfi_restore 5
 786              		.cfi_restore 4
 787              		.cfi_restore 3
 788              		.cfi_def_cfa_offset 0
 440:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 789              		.loc 1 440 3 view .LVU278
 790 008a FFF7FEBF 		b	_port_irq_epilogue
 791              	.LVL37:
 792              	.L43:
 793 008e 00BF     		.align	2
 794              	.L42:
 795 0090 00000000 		.word	I2CD1
 796 0094 1C000000 		.word	I2CD1+28
 797              		.cfi_endproc
 798              	.LFE289:
 800              		.section	.text.i2c_lld_init,"ax",%progbits
 801              		.align	1
 802              		.global	i2c_lld_init
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 807              	i2c_lld_init:
 808              	.LFB290:
 442:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 443:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 444:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C1 interrupt handlers not defined"
 445:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 446:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C1 */
 447:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 448:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2 || defined(__DOXYGEN__)
 449:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C2_GLOBAL_HANDLER) || defined(__DOXYGEN__)
 450:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 451:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C2 event interrupt handler.
 452:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 453:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 454:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 455:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C2_GLOBAL_HANDLER) {
 456:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD2.i2c->ISR;
 457:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 458:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 459:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 460:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 461:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.i2c->ICR = isr;
 462:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 463:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ERROR_MASK)
 464:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_error_interrupt(&I2CD2, isr);
 465:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 466:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_interrupt(&I2CD2, isr);
 467:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 468:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 469:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 470:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 471:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C2_EVENT_HANDLER) && defined(STM32_I2C2_ERROR_HANDLER)
 472:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C2_EVENT_HANDLER) {
 473:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD2.i2c->ISR;
 474:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 475:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 476:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 477:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 478:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.i2c->ICR = isr & I2C_INT_MASK;
 479:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 480:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_interrupt(&I2CD2, isr);
 481:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 482:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 483:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 484:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 485:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C2_ERROR_HANDLER) {
 486:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD2.i2c->ISR;
 487:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 488:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 489:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 490:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 491:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.i2c->ICR = isr & I2C_ERROR_MASK;
 492:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 493:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_error_interrupt(&I2CD2, isr);
 494:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 495:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 496:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 497:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 498:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 499:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C2 interrupt handlers not defined"
 500:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 501:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C2 */
 502:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 503:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3 || defined(__DOXYGEN__)
 504:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C3_GLOBAL_HANDLER) || defined(__DOXYGEN__)
 505:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 506:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C3 event interrupt handler.
 507:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 508:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 509:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 510:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C3_GLOBAL_HANDLER) {
 511:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD3.i2c->ISR;
 512:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 513:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 514:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 515:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 516:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.i2c->ICR = isr;
 517:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 518:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ERROR_MASK)
 519:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_error_interrupt(&I2CD3, isr);
 520:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 521:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_interrupt(&I2CD3, isr);
 522:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 523:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 524:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 525:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 526:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C3_EVENT_HANDLER) && defined(STM32_I2C3_ERROR_HANDLER)
 527:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C3_EVENT_HANDLER) {
 528:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD3.i2c->ISR;
 529:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 530:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 531:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 532:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 533:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.i2c->ICR = isr & I2C_INT_MASK;
 534:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 535:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_interrupt(&I2CD3, isr);
 536:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 537:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 538:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 539:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 540:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C3_ERROR_HANDLER) {
 541:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD3.i2c->ISR;
 542:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 543:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 544:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 545:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 546:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.i2c->ICR = isr & I2C_ERROR_MASK;
 547:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 548:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_error_interrupt(&I2CD3, isr);
 549:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 550:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 551:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 552:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 553:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 554:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C3 interrupt handlers not defined"
 555:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 556:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C3 */
 557:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 558:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4 || defined(__DOXYGEN__)
 559:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C4_GLOBAL_HANDLER) || defined(__DOXYGEN__)
 560:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 561:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C4 event interrupt handler.
 562:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 563:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 564:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 565:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C4_GLOBAL_HANDLER) {
 566:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD4.i2c->ISR;
 567:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 568:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 569:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 570:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 571:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.i2c->ICR = isr;
 572:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 573:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ERROR_MASK)
 574:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_error_interrupt(&I2CD4, isr);
 575:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 576:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_interrupt(&I2CD4, isr);
 577:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 578:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 579:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 580:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 581:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C4_EVENT_HANDLER) && defined(STM32_I2C4_ERROR_HANDLER)
 582:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C4_EVENT_HANDLER) {
 583:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD4.i2c->ISR;
 584:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 585:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 586:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 587:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 588:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.i2c->ICR = isr & I2C_INT_MASK;
 589:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 590:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_interrupt(&I2CD4, isr);
 591:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 592:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 593:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 594:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 595:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C4_ERROR_HANDLER) {
 596:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD4.i2c->ISR;
 597:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 598:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 599:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 600:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 601:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.i2c->ICR = isr & I2C_ERROR_MASK;
 602:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 603:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_error_interrupt(&I2CD4, isr);
 604:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 605:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 606:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 607:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 608:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 609:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C4 interrupt handlers not defined"
 610:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 611:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C4 */
 612:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 613:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 614:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver exported functions.                                                */
 615:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 616:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 617:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 618:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Low level I2C driver initialization.
 619:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 620:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 621:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 622:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** void i2c_lld_init(void) {
 809              		.loc 1 622 25 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 623:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 624:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1
 625:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cObjectInit(&I2CD1);
 813              		.loc 1 625 3 view .LVU280
 622:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 814              		.loc 1 622 25 is_stmt 0 view .LVU281
 815 0000 10B5     		push	{r4, lr}
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 4, -8
 818              		.cfi_offset 14, -4
 819              		.loc 1 625 3 view .LVU282
 820 0002 054C     		ldr	r4, .L45
 821 0004 2046     		mov	r0, r4
 822 0006 FFF7FEFF 		bl	i2cObjectInit
 823              	.LVL38:
 626:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 824              		.loc 1 626 3 is_stmt 1 view .LVU283
 825              		.loc 1 626 16 is_stmt 0 view .LVU284
 826 000a 0023     		movs	r3, #0
 627:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c    = I2C1;
 827              		.loc 1 627 16 view .LVU285
 828 000c 034A     		ldr	r2, .L45+4
 626:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 829              		.loc 1 626 16 view .LVU286
 830 000e E361     		str	r3, [r4, #28]
 831              		.loc 1 627 3 is_stmt 1 view .LVU287
 628:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 629:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.dmarx  = NULL;
 630:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.dmatx  = NULL;
 832              		.loc 1 630 16 is_stmt 0 view .LVU288
 833 0010 C4E90A33 		strd	r3, r3, [r4, #40]
 627:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c    = I2C1;
 834              		.loc 1 627 16 view .LVU289
 835 0014 2263     		str	r2, [r4, #48]
 629:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.dmatx  = NULL;
 836              		.loc 1 629 3 is_stmt 1 view .LVU290
 631:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 632:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C1 */
 633:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 634:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2
 635:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cObjectInit(&I2CD2);
 636:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.thread = NULL;
 637:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.i2c    = I2C2;
 638:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 639:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.dmarx  = NULL;
 640:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.dmatx  = NULL;
 641:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 642:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C2 */
 643:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 644:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3
 645:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cObjectInit(&I2CD3);
 646:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.thread = NULL;
 647:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.i2c    = I2C3;
 648:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 649:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.dmarx  = NULL;
 650:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.dmatx  = NULL;
 651:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 652:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C3 */
 653:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 654:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4
 655:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cObjectInit(&I2CD4);
 656:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.thread = NULL;
 657:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.i2c    = I2C4;
 658:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 659:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.dmarx  = NULL;
 660:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.dmatx  = NULL;
 661:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 662:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C4 */
 663:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 837              		.loc 1 663 1 is_stmt 0 view .LVU291
 838 0016 10BD     		pop	{r4, pc}
 839              	.L46:
 840              		.align	2
 841              	.L45:
 842 0018 00000000 		.word	I2CD1
 843 001c 00540040 		.word	1073763328
 844              		.cfi_endproc
 845              	.LFE290:
 847              		.section	.text.i2c_lld_start,"ax",%progbits
 848              		.align	1
 849              		.global	i2c_lld_start
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
 854              	i2c_lld_start:
 855              	.LVL39:
 856              	.LFB291:
 664:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 665:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 666:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Configures and activates the I2C peripheral.
 667:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 668:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 669:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 670:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 671:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 672:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** void i2c_lld_start(I2CDriver *i2cp) {
 857              		.loc 1 672 37 is_stmt 1 view -0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 673:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 861              		.loc 1 673 3 view .LVU293
 672:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 862              		.loc 1 672 37 is_stmt 0 view .LVU294
 863 0000 38B5     		push	{r3, r4, r5, lr}
 864              		.cfi_def_cfa_offset 16
 865              		.cfi_offset 3, -16
 866              		.cfi_offset 4, -12
 867              		.cfi_offset 5, -8
 868              		.cfi_offset 14, -4
 869              		.loc 1 673 16 view .LVU295
 870 0002 056B     		ldr	r5, [r0, #48]
 871              	.LVL40:
 674:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 675:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Make sure I2C peripheral is disabled */
 676:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 &= ~I2C_CR1_PE;
 872              		.loc 1 676 3 is_stmt 1 view .LVU296
 873              		.loc 1 676 5 is_stmt 0 view .LVU297
 874 0004 2B68     		ldr	r3, [r5]
 875              		.loc 1 676 11 view .LVU298
 876 0006 23F00103 		bic	r3, r3, #1
 877 000a 2B60     		str	r3, [r5]
 677:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 678:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* If in stopped state then enables the I2C and DMA clocks.*/
 679:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (i2cp->state == I2C_STOP) {
 878              		.loc 1 679 3 is_stmt 1 view .LVU299
 879              		.loc 1 679 6 is_stmt 0 view .LVU300
 880 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 881 000e 012B     		cmp	r3, #1
 672:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 882              		.loc 1 672 37 view .LVU301
 883 0010 0446     		mov	r4, r0
 884              		.loc 1 679 6 view .LVU302
 885 0012 33D1     		bne	.L49
 680:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 681:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 682:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Common DMA modes.*/
 683:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->txdmamode = DMAMODE_COMMON | STM32_DMA_CR_DIR_M2P;
 886              		.loc 1 683 5 is_stmt 1 view .LVU303
 684:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->rxdmamode = DMAMODE_COMMON | STM32_DMA_CR_DIR_P2M;
 887              		.loc 1 684 21 is_stmt 0 view .LVU304
 888 0014 8A23     		movs	r3, #138
 889 0016 9A22     		movs	r2, #154
 890 0018 C0E90832 		strd	r3, r2, [r0, #32]
 685:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 686:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 687:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1
 688:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD1 == i2cp) {
 891              		.loc 1 688 5 is_stmt 1 view .LVU305
 892              		.loc 1 688 8 is_stmt 0 view .LVU306
 893 001c 234B     		ldr	r3, .L51
 894 001e 9842     		cmp	r0, r3
 895 0020 2CD1     		bne	.L49
 689:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 690:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccResetI2C1();
 896              		.loc 1 690 7 is_stmt 1 view .LVU307
 897 0022 234B     		ldr	r3, .L51+4
 898 0024 1A69     		ldr	r2, [r3, #16]
 899 0026 42F40012 		orr	r2, r2, #2097152
 900 002a 1A61     		str	r2, [r3, #16]
 901              		.loc 1 690 7 view .LVU308
 902 002c 1A69     		ldr	r2, [r3, #16]
 903 002e 22F40012 		bic	r2, r2, #2097152
 904 0032 1A61     		str	r2, [r3, #16]
 905              		.loc 1 690 7 view .LVU309
 906 0034 1A69     		ldr	r2, [r3, #16]
 907              		.loc 1 690 21 view .LVU310
 691:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C1(true);
 908              		.loc 1 691 7 view .LVU311
 909 0036 DA69     		ldr	r2, [r3, #28]
 910 0038 42F40012 		orr	r2, r2, #2097152
 911 003c DA61     		str	r2, [r3, #28]
 912              		.loc 1 691 7 view .LVU312
 913 003e DB69     		ldr	r3, [r3, #28]
 914              		.loc 1 691 26 view .LVU313
 692:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 693:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       {
 694:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmarx = dmaStreamAllocI(STM32_I2C_I2C1_RX_DMA_STREAM,
 915              		.loc 1 694 9 view .LVU314
 916              		.loc 1 694 23 is_stmt 0 view .LVU315
 917 0040 0022     		movs	r2, #0
 918 0042 0346     		mov	r3, r0
 919 0044 0A21     		movs	r1, #10
 920 0046 0620     		movs	r0, #6
 921              	.LVL41:
 922              		.loc 1 694 23 view .LVU316
 923 0048 FFF7FEFF 		bl	dmaStreamAllocI
 924              	.LVL42:
 695:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C1_IRQ_PRIORITY,
 696:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 697:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 698:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmarx != NULL, "unable to allocate stream");
 699:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C1_TX_DMA_STREAM,
 925              		.loc 1 699 23 view .LVU317
 926 004c 2346     		mov	r3, r4
 694:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C1_IRQ_PRIORITY,
 927              		.loc 1 694 21 view .LVU318
 928 004e A062     		str	r0, [r4, #40]
 698:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C1_TX_DMA_STREAM,
 929              		.loc 1 698 9 is_stmt 1 view .LVU319
 698:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C1_TX_DMA_STREAM,
 930              		.loc 1 698 9 view .LVU320
 698:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C1_TX_DMA_STREAM,
 931              		.loc 1 698 9 view .LVU321
 932              		.loc 1 699 9 view .LVU322
 933              		.loc 1 699 23 is_stmt 0 view .LVU323
 934 0050 0022     		movs	r2, #0
 935 0052 0A21     		movs	r1, #10
 936 0054 0520     		movs	r0, #5
 937 0056 FFF7FEFF 		bl	dmaStreamAllocI
 938              	.LVL43:
 700:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C1_IRQ_PRIORITY,
 701:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 702:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 703:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmatx != NULL, "unable to allocate stream");
 704:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 705:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxdmamode |= STM32_DMA_CR_CHSEL(I2C1_RX_DMA_CHANNEL) |
 939              		.loc 1 705 25 view .LVU324
 940 005a 236A     		ldr	r3, [r4, #32]
 699:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C1_IRQ_PRIORITY,
 941              		.loc 1 699 21 view .LVU325
 942 005c E062     		str	r0, [r4, #44]
 703:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 943              		.loc 1 703 9 is_stmt 1 view .LVU326
 703:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 944              		.loc 1 703 9 view .LVU327
 703:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 945              		.loc 1 703 9 view .LVU328
 946              		.loc 1 705 9 view .LVU329
 947              		.loc 1 705 25 is_stmt 0 view .LVU330
 948 005e 43F48053 		orr	r3, r3, #4096
 949 0062 2362     		str	r3, [r4, #32]
 706:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C1_DMA_PRIORITY);
 707:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txdmamode |= STM32_DMA_CR_CHSEL(I2C1_TX_DMA_CHANNEL) |
 950              		.loc 1 707 9 is_stmt 1 view .LVU331
 951              		.loc 1 707 25 is_stmt 0 view .LVU332
 952 0064 636A     		ldr	r3, [r4, #36]
 708:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C1_DMA_PRIORITY);
 709:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 710:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaSetRequestSource(i2cp->dmarx, STM32_DMAMUX1_I2C1_RX);
 711:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaSetRequestSource(i2cp->dmatx, STM32_DMAMUX1_I2C1_TX);
 712:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 713:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 714:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_DMA == TRUE */
 715:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 716:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C1_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 717:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C1_GLOBAL_NUMBER, STM32_I2C_I2C1_IRQ_PRIORITY);
 718:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C1_EVENT_NUMBER) && defined(STM32_I2C1_ERROR_NUMBER)
 719:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C1_EVENT_NUMBER, STM32_I2C_I2C1_IRQ_PRIORITY);
 953              		.loc 1 719 7 view .LVU333
 954 0066 0A21     		movs	r1, #10
 707:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C1_DMA_PRIORITY);
 955              		.loc 1 707 25 view .LVU334
 956 0068 43F48053 		orr	r3, r3, #4096
 957              		.loc 1 719 7 view .LVU335
 958 006c 1F20     		movs	r0, #31
 707:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C1_DMA_PRIORITY);
 959              		.loc 1 707 25 view .LVU336
 960 006e 6362     		str	r3, [r4, #36]
 961              		.loc 1 719 7 is_stmt 1 view .LVU337
 962 0070 FFF7FEFF 		bl	nvicEnableVector
 963              	.LVL44:
 720:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C1_ERROR_NUMBER, STM32_I2C_I2C1_IRQ_PRIORITY);
 964              		.loc 1 720 7 view .LVU338
 965 0074 0A21     		movs	r1, #10
 966 0076 2020     		movs	r0, #32
 967 0078 FFF7FEFF 		bl	nvicEnableVector
 968              	.LVL45:
 969              	.L49:
 721:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 722:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C1 interrupt numbers not defined"
 723:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 724:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 725:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C1 */
 726:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 727:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2
 728:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD2 == i2cp) {
 729:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 730:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccResetI2C2();
 731:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C2(true);
 732:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 733:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       {
 734:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmarx = dmaStreamAllocI(STM32_I2C_I2C2_RX_DMA_STREAM,
 735:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C2_IRQ_PRIORITY,
 736:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 737:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 738:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmarx != NULL, "unable to allocate stream");
 739:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C2_TX_DMA_STREAM,
 740:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C2_IRQ_PRIORITY,
 741:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 742:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 743:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmatx != NULL, "unable to allocate stream");
 744:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 745:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxdmamode |= STM32_DMA_CR_CHSEL(I2C2_RX_DMA_CHANNEL) |
 746:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C2_DMA_PRIORITY);
 747:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txdmamode |= STM32_DMA_CR_CHSEL(I2C2_TX_DMA_CHANNEL) |
 748:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C2_DMA_PRIORITY);
 749:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 750:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaSetRequestSource(i2cp->dmarx, STM32_DMAMUX1_I2C2_RX);
 751:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaSetRequestSource(i2cp->dmatx, STM32_DMAMUX1_I2C2_TX);
 752:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 753:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 754:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_DMA == TRUE */
 755:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 756:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C2_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 757:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C2_GLOBAL_NUMBER, STM32_I2C_I2C2_IRQ_PRIORITY);
 758:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C2_EVENT_NUMBER) && defined(STM32_I2C2_ERROR_NUMBER)
 759:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C2_EVENT_NUMBER, STM32_I2C_I2C2_IRQ_PRIORITY);
 760:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C2_ERROR_NUMBER, STM32_I2C_I2C2_IRQ_PRIORITY);
 761:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 762:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C2 interrupt numbers not defined"
 763:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 764:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 765:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C2 */
 766:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 767:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3
 768:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD3 == i2cp) {
 769:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 770:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccResetI2C3();
 771:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C3(true);
 772:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 773:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       {
 774:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmarx = dmaStreamAllocI(STM32_I2C_I2C3_RX_DMA_STREAM,
 775:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C3_IRQ_PRIORITY,
 776:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 777:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 778:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmarx != NULL, "unable to allocate stream");
 779:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C3_TX_DMA_STREAM,
 780:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C3_IRQ_PRIORITY,
 781:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 782:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 783:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmatx != NULL, "unable to allocate stream");
 784:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 785:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxdmamode |= STM32_DMA_CR_CHSEL(I2C3_RX_DMA_CHANNEL) |
 786:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C3_DMA_PRIORITY);
 787:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txdmamode |= STM32_DMA_CR_CHSEL(I2C3_TX_DMA_CHANNEL) |
 788:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C3_DMA_PRIORITY);
 789:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 790:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaSetRequestSource(i2cp->dmarx, STM32_DMAMUX1_I2C3_RX);
 791:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaSetRequestSource(i2cp->dmatx, STM32_DMAMUX1_I2C3_TX);
 792:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 793:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 794:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_DMA == TRUE */
 795:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 796:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C3_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 797:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C3_GLOBAL_NUMBER, STM32_I2C_I2C3_IRQ_PRIORITY);
 798:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C3_EVENT_NUMBER) && defined(STM32_I2C3_ERROR_NUMBER)
 799:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C3_EVENT_NUMBER, STM32_I2C_I2C3_IRQ_PRIORITY);
 800:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C3_ERROR_NUMBER, STM32_I2C_I2C3_IRQ_PRIORITY);
 801:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 802:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C3 interrupt numbers not defined"
 803:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 804:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 805:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C3 */
 806:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 807:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4
 808:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD4 == i2cp) {
 809:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 810:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccResetI2C4();
 811:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C4(true);
 812:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 813:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       {
 814:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmarx = dmaStreamAllocI(STM32_I2C_I2C4_RX_DMA_STREAM,
 815:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C4_IRQ_PRIORITY,
 816:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 817:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 818:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmarx != NULL, "unable to allocate stream");
 819:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C4_TX_DMA_STREAM,
 820:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C4_IRQ_PRIORITY,
 821:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 822:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 823:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmatx != NULL, "unable to allocate stream");
 824:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 825:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxdmamode |= STM32_DMA_CR_CHSEL(I2C4_RX_DMA_CHANNEL) |
 826:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C4_DMA_PRIORITY);
 827:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txdmamode |= STM32_DMA_CR_CHSEL(I2C4_TX_DMA_CHANNEL) |
 828:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C4_DMA_PRIORITY);
 829:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 830:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaSetRequestSource(i2cp->dmarx, STM32_DMAMUX1_I2C4_RX);
 831:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaSetRequestSource(i2cp->dmatx, STM32_DMAMUX1_I2C4_TX);
 832:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 833:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 834:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_DMA == TRUE */
 835:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 836:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C4_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 837:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C4_GLOBAL_NUMBER, STM32_I2C_I2C4_IRQ_PRIORITY);
 838:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C4_EVENT_NUMBER) && defined(STM32_I2C4_ERROR_NUMBER)
 839:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C4_EVENT_NUMBER, STM32_I2C_I2C4_IRQ_PRIORITY);
 840:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C4_ERROR_NUMBER, STM32_I2C_I2C4_IRQ_PRIORITY);
 841:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 842:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C4 interrupt numbers not defined"
 843:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 844:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 845:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C4 */
 846:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 847:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 848:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 849:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* I2C registers pointed by the DMA.*/
 850:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetPeripheral(i2cp->dmarx, &dp->RXDR);
 970              		.loc 1 850 3 view .LVU339
 971 007c A36A     		ldr	r3, [r4, #40]
 972 007e 5B68     		ldr	r3, [r3, #4]
 973 0080 05F12402 		add	r2, r5, #36
 974 0084 9A60     		str	r2, [r3, #8]
 975              		.loc 1 850 49 view .LVU340
 851:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetPeripheral(i2cp->dmatx, &dp->TXDR);
 976              		.loc 1 851 3 view .LVU341
 977 0086 E36A     		ldr	r3, [r4, #44]
 978 0088 5B68     		ldr	r3, [r3, #4]
 979 008a 05F12802 		add	r2, r5, #40
 980 008e 9A60     		str	r2, [r3, #8]
 981              		.loc 1 851 49 view .LVU342
 852:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 853:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 854:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Reset i2c peripheral, the TCIE bit will be handled separately.*/
 855:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 = i2cp->config->cr1 |
 982              		.loc 1 855 3 view .LVU343
 983              		.loc 1 855 17 is_stmt 0 view .LVU344
 984 0090 6268     		ldr	r2, [r4, #4]
 856:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 857:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR1_TXDMAEN | I2C_CR1_RXDMAEN | /* Enable only if using DMA */
 858:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 859:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR1_ERRIE | I2C_CR1_NACKIE;
 985              		.loc 1 859 27 view .LVU345
 986 0092 5368     		ldr	r3, [r2, #4]
 987 0094 43F44043 		orr	r3, r3, #49152
 988 0098 43F09003 		orr	r3, r3, #144
 855:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 989              		.loc 1 855 11 view .LVU346
 990 009c 2B60     		str	r3, [r5]
 860:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 861:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Setup I2C parameters.*/
 862:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->TIMINGR = i2cp->config->timingr;
 991              		.loc 1 862 3 is_stmt 1 view .LVU347
 992              		.loc 1 862 29 is_stmt 0 view .LVU348
 993 009e 1368     		ldr	r3, [r2]
 994              		.loc 1 862 15 view .LVU349
 995 00a0 2B61     		str	r3, [r5, #16]
 863:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 864:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Ready to go.*/
 865:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_PE;
 996              		.loc 1 865 3 is_stmt 1 view .LVU350
 997              		.loc 1 865 5 is_stmt 0 view .LVU351
 998 00a2 2B68     		ldr	r3, [r5]
 999              		.loc 1 865 11 view .LVU352
 1000 00a4 43F00103 		orr	r3, r3, #1
 1001 00a8 2B60     		str	r3, [r5]
 866:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1002              		.loc 1 866 1 view .LVU353
 1003 00aa 38BD     		pop	{r3, r4, r5, pc}
 1004              	.LVL46:
 1005              	.L52:
 1006              		.loc 1 866 1 view .LVU354
 1007              		.align	2
 1008              	.L51:
 1009 00ac 00000000 		.word	I2CD1
 1010 00b0 00100240 		.word	1073876992
 1011              		.cfi_endproc
 1012              	.LFE291:
 1014              		.section	.text.i2c_lld_stop,"ax",%progbits
 1015              		.align	1
 1016              		.global	i2c_lld_stop
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1021              	i2c_lld_stop:
 1022              	.LVL47:
 1023              	.LFB292:
 867:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 868:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 869:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Deactivates the I2C peripheral.
 870:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 871:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 872:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 873:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 874:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 875:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** void i2c_lld_stop(I2CDriver *i2cp) {
 1024              		.loc 1 875 36 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 876:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 877:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* If not in stopped state then disables the I2C clock.*/
 878:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (i2cp->state != I2C_STOP) {
 1028              		.loc 1 878 3 view .LVU356
 875:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1029              		.loc 1 875 36 is_stmt 0 view .LVU357
 1030 0000 38B5     		push	{r3, r4, r5, lr}
 1031              		.cfi_def_cfa_offset 16
 1032              		.cfi_offset 3, -16
 1033              		.cfi_offset 4, -12
 1034              		.cfi_offset 5, -8
 1035              		.cfi_offset 14, -4
 1036              		.loc 1 878 6 view .LVU358
 1037 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1038 0004 012B     		cmp	r3, #1
 875:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1039              		.loc 1 875 36 view .LVU359
 1040 0006 0446     		mov	r4, r0
 1041              		.loc 1 878 6 view .LVU360
 1042 0008 3BD0     		beq	.L53
 879:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 880:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* I2C disable.*/
 881:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_abort_operation(i2cp);
 1043              		.loc 1 881 5 is_stmt 1 view .LVU361
 1044              	.LVL48:
 1045              	.LBB334:
 1046              	.LBI334:
 206:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1047              		.loc 1 206 13 view .LVU362
 1048              	.LBB335:
 207:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1049              		.loc 1 207 3 view .LVU363
 207:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1050              		.loc 1 207 16 is_stmt 0 view .LVU364
 1051 000a 036B     		ldr	r3, [r0, #48]
 1052              	.LVL49:
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 1053              		.loc 1 209 3 is_stmt 1 view .LVU365
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 1054              		.loc 1 209 9 is_stmt 0 view .LVU366
 1055 000c 1A68     		ldr	r2, [r3]
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 1056              		.loc 1 209 6 view .LVU367
 1057 000e D107     		lsls	r1, r2, #31
 1058 0010 0AD5     		bpl	.L56
 1059              	.L58:
 213:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 |= I2C_CR1_PE;
 1060              		.loc 1 213 7 is_stmt 1 view .LVU368
 213:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 |= I2C_CR1_PE;
 1061              		.loc 1 213 9 is_stmt 0 view .LVU369
 1062 0012 1A68     		ldr	r2, [r3]
 213:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 |= I2C_CR1_PE;
 1063              		.loc 1 213 15 view .LVU370
 1064 0014 22F00102 		bic	r2, r2, #1
 1065 0018 1A60     		str	r2, [r3]
 212:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dp->CR1 &= ~I2C_CR1_PE;
 1066              		.loc 1 212 12 is_stmt 1 view .LVU371
 212:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dp->CR1 &= ~I2C_CR1_PE;
 1067              		.loc 1 212 14 is_stmt 0 view .LVU372
 1068 001a 1A68     		ldr	r2, [r3]
 212:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dp->CR1 &= ~I2C_CR1_PE;
 1069              		.loc 1 212 12 view .LVU373
 1070 001c D207     		lsls	r2, r2, #31
 1071 001e F8D4     		bmi	.L58
 214:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 1072              		.loc 1 214 5 is_stmt 1 view .LVU374
 214:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 1073              		.loc 1 214 7 is_stmt 0 view .LVU375
 1074 0020 1A68     		ldr	r2, [r3]
 214:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 1075              		.loc 1 214 13 view .LVU376
 1076 0022 42F00102 		orr	r2, r2, #1
 1077 0026 1A60     		str	r2, [r3]
 1078              	.L56:
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1079              		.loc 1 219 3 is_stmt 1 view .LVU377
 1080 0028 E06A     		ldr	r0, [r4, #44]
 1081              	.LVL50:
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1082              		.loc 1 219 3 is_stmt 0 view .LVU378
 1083 002a 4268     		ldr	r2, [r0, #4]
 1084 002c 0168     		ldr	r1, [r0]
 1085 002e 1368     		ldr	r3, [r2]
 1086              	.LVL51:
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1087              		.loc 1 219 3 view .LVU379
 1088 0030 23F00F03 		bic	r3, r3, #15
 1089 0034 1360     		str	r3, [r2]
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1090              		.loc 1 219 3 is_stmt 1 view .LVU380
 1091 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 1092 0038 0E23     		movs	r3, #14
 1093 003a 03FA02F2 		lsl	r2, r3, r2
 1094 003e 4A60     		str	r2, [r1, #4]
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1095              		.loc 1 219 3 view .LVU381
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1096              		.loc 1 219 32 view .LVU382
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1097              		.loc 1 220 3 view .LVU383
 1098 0040 A26A     		ldr	r2, [r4, #40]
 1099 0042 5568     		ldr	r5, [r2, #4]
 1100 0044 2968     		ldr	r1, [r5]
 1101 0046 21F00F01 		bic	r1, r1, #15
 1102 004a 2960     		str	r1, [r5]
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1103              		.loc 1 220 3 view .LVU384
 1104 004c 1168     		ldr	r1, [r2]
 1105 004e 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1106 0050 9340     		lsls	r3, r3, r2
 1107 0052 4B60     		str	r3, [r1, #4]
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1108              		.loc 1 220 3 view .LVU385
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1109              		.loc 1 220 32 view .LVU386
 1110              	.LVL52:
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1111              		.loc 1 220 32 is_stmt 0 view .LVU387
 1112              	.LBE335:
 1113              	.LBE334:
 882:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 883:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamFreeI(i2cp->dmatx);
 1114              		.loc 1 883 5 is_stmt 1 view .LVU388
 1115 0054 FFF7FEFF 		bl	dmaStreamFreeI
 1116              	.LVL53:
 884:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamFreeI(i2cp->dmarx);
 1117              		.loc 1 884 5 view .LVU389
 1118 0058 A06A     		ldr	r0, [r4, #40]
 1119 005a FFF7FEFF 		bl	dmaStreamFreeI
 1120              	.LVL54:
 885:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->dmatx = NULL;
 1121              		.loc 1 885 5 view .LVU390
 1122              		.loc 1 885 17 is_stmt 0 view .LVU391
 1123 005e 0023     		movs	r3, #0
 886:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->dmarx = NULL;
 1124              		.loc 1 886 17 view .LVU392
 1125 0060 C4E90A33 		strd	r3, r3, [r4, #40]
 887:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 888:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 889:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1
 890:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD1 == i2cp) {
 1126              		.loc 1 890 5 is_stmt 1 view .LVU393
 1127              		.loc 1 890 8 is_stmt 0 view .LVU394
 1128 0064 074B     		ldr	r3, .L63
 1129 0066 9C42     		cmp	r4, r3
 1130 0068 0BD1     		bne	.L53
 891:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C1_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 892:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C1_GLOBAL_NUMBER);
 893:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C1_EVENT_NUMBER) && defined(STM32_I2C1_ERROR_NUMBER)
 894:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C1_EVENT_NUMBER);
 1131              		.loc 1 894 7 is_stmt 1 view .LVU395
 1132 006a 1F20     		movs	r0, #31
 1133 006c FFF7FEFF 		bl	nvicDisableVector
 1134              	.LVL55:
 895:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C1_ERROR_NUMBER);
 1135              		.loc 1 895 7 view .LVU396
 1136 0070 2020     		movs	r0, #32
 1137 0072 FFF7FEFF 		bl	nvicDisableVector
 1138              	.LVL56:
 896:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 897:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C1 interrupt numbers not defined"
 898:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 899:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 900:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccDisableI2C1();
 1139              		.loc 1 900 7 view .LVU397
 1140 0076 044B     		ldr	r3, .L63+4
 1141 0078 DA69     		ldr	r2, [r3, #28]
 1142 007a 22F40012 		bic	r2, r2, #2097152
 1143 007e DA61     		str	r2, [r3, #28]
 1144              		.loc 1 900 7 view .LVU398
 1145 0080 DB69     		ldr	r3, [r3, #28]
 1146              		.loc 1 900 23 view .LVU399
 1147              	.L53:
 901:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 902:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 903:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 904:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2
 905:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD2 == i2cp) {
 906:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C2_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 907:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C2_GLOBAL_NUMBER);
 908:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C2_EVENT_NUMBER) && defined(STM32_I2C2_ERROR_NUMBER)
 909:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C2_EVENT_NUMBER);
 910:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C2_ERROR_NUMBER);
 911:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 912:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C2 interrupt numbers not defined"
 913:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 914:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 915:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccDisableI2C2();
 916:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 917:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 918:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 919:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3
 920:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD3 == i2cp) {
 921:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C3_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 922:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C3_GLOBAL_NUMBER);
 923:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C3_EVENT_NUMBER) && defined(STM32_I2C3_ERROR_NUMBER)
 924:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C3_EVENT_NUMBER);
 925:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C3_ERROR_NUMBER);
 926:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 927:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C3 interrupt numbers not defined"
 928:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 929:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 930:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccDisableI2C3();
 931:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 932:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 933:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 934:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4
 935:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD4 == i2cp) {
 936:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C4_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 937:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C4_GLOBAL_NUMBER);
 938:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C4_EVENT_NUMBER) && defined(STM32_I2C4_ERROR_NUMBER)
 939:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C4_EVENT_NUMBER);
 940:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C4_ERROR_NUMBER);
 941:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 942:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C4 interrupt numbers not defined"
 943:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 944:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 945:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccDisableI2C4();
 946:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 947:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 948:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 949:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1148              		.loc 1 949 1 is_stmt 0 view .LVU400
 1149 0082 38BD     		pop	{r3, r4, r5, pc}
 1150              	.LVL57:
 1151              	.L64:
 1152              		.loc 1 949 1 view .LVU401
 1153              		.align	2
 1154              	.L63:
 1155 0084 00000000 		.word	I2CD1
 1156 0088 00100240 		.word	1073876992
 1157              		.cfi_endproc
 1158              	.LFE292:
 1160              		.section	.text.i2c_lld_master_receive_timeout,"ax",%progbits
 1161              		.align	1
 1162              		.global	i2c_lld_master_receive_timeout
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1167              	i2c_lld_master_receive_timeout:
 1168              	.LVL58:
 1169              	.LFB293:
 950:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 951:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 952:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Receives data via the I2C bus as master.
 953:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 954:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 955:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] addr      slave device address
 956:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[out] rxbuf    pointer to the receive buffer
 957:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] rxbytes   number of bytes to be received
 958:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 959:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      the following special values are allowed:
 960:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      - @a TIME_INFINITE no timeout.
 961:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      .
 962:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @return              The operation status.
 963:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_OK       if the function succeeded.
 964:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
 965:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      be retrieved using @p i2cGetErrors().
 966:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end. <b>After a
 967:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      timeout the driver must be stopped and restarted
 968:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      because the bus is in an uncertain state</b>.
 969:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 970:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 971:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 972:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** msg_t i2c_lld_master_receive_timeout(I2CDriver *i2cp, i2caddr_t addr,
 973:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                      uint8_t *rxbuf, size_t rxbytes,
 974:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                      sysinterval_t timeout) {
 1170              		.loc 1 974 61 is_stmt 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 4, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 975:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1174              		.loc 1 975 3 view .LVU403
 976:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1175              		.loc 1 976 3 view .LVU404
 974:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1176              		.loc 1 974 61 is_stmt 0 view .LVU405
 1177 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1178              		.cfi_def_cfa_offset 32
 1179              		.cfi_offset 3, -32
 1180              		.cfi_offset 4, -28
 1181              		.cfi_offset 5, -24
 1182              		.cfi_offset 6, -20
 1183              		.cfi_offset 7, -16
 1184              		.cfi_offset 8, -12
 1185              		.cfi_offset 9, -8
 1186              		.cfi_offset 14, -4
 977:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   systime_t start, end;
 978:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 979:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Resetting error flags for this transfer.*/
 980:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 1187              		.loc 1 980 16 view .LVU406
 1188 0004 0027     		movs	r7, #0
 974:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1189              		.loc 1 974 61 view .LVU407
 1190 0006 0446     		mov	r4, r0
 1191 0008 0E46     		mov	r6, r1
 976:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   systime_t start, end;
 1192              		.loc 1 976 16 view .LVU408
 1193 000a 056B     		ldr	r5, [r0, #48]
 1194              	.LVL59:
 977:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   systime_t start, end;
 1195              		.loc 1 977 3 is_stmt 1 view .LVU409
 1196              		.loc 1 980 3 view .LVU410
 1197              		.loc 1 980 16 is_stmt 0 view .LVU411
 1198 000c 8760     		str	r7, [r0, #8]
 981:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 982:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Releases the lock from high level driver.*/
 983:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   osalSysUnlock();
 1199              		.loc 1 983 3 is_stmt 1 view .LVU412
 1200              	.LBB369:
 1201              	.LBI369:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1202              		.loc 2 584 20 view .LVU413
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1203              		.loc 2 586 3 view .LVU414
 1204              	.LBB370:
 1205              	.LBI370:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1206              		.loc 3 367 20 view .LVU415
 1207              	.LBB371:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1208              		.loc 3 369 22 view .LVU416
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1209              		.loc 3 370 33 view .LVU417
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1210              		.loc 3 376 3 view .LVU418
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1211              		.loc 3 376 3 view .LVU419
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1212              		.loc 3 376 3 view .LVU420
 380:./lib/chibios/os/rt/include/chsys.h **** }
 1213              		.loc 3 380 3 view .LVU421
 1214              	.LBB372:
 1215              	.LBI372:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1216              		.loc 4 693 27 view .LVU422
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1217              		.loc 4 696 3 view .LVU423
 1218              	.LVL60:
 1219              	.LBB373:
 1220              	.LBI373:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1221              		.loc 5 491 27 view .LVU424
 1222              	.LBB374:
 1223              		.loc 5 493 3 view .LVU425
 1224              		.syntax unified
 1225              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1226 000e 87F31188 		MSR basepri, r7
 1227              	@ 0 "" 2
 1228              	.LVL61:
 1229              		.loc 5 493 3 is_stmt 0 view .LVU426
 1230              		.thumb
 1231              		.syntax unified
 1232              	.LBE374:
 1233              	.LBE373:
 1234              	.LBE372:
 1235              	.LBE371:
 1236              	.LBE370:
 1237              	.LBE369:
 984:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 985:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 986:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* RX DMA setup.*/
 987:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMode(i2cp->dmarx, i2cp->rxdmamode);
 1238              		.loc 1 987 3 is_stmt 1 view .LVU427
 1239 0012 816A     		ldr	r1, [r0, #40]
 1240              	.LVL62:
 1241              		.loc 1 987 3 is_stmt 0 view .LVU428
 1242 0014 006A     		ldr	r0, [r0, #32]
 1243              	.LVL63:
 1244              		.loc 1 987 3 view .LVU429
 1245 0016 4968     		ldr	r1, [r1, #4]
 1246 0018 0860     		str	r0, [r1]
 1247              		.loc 1 987 49 is_stmt 1 view .LVU430
 988:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1248              		.loc 1 988 3 view .LVU431
 1249 001a CA60     		str	r2, [r1, #12]
 1250              		.loc 1 988 42 view .LVU432
 989:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmarx, rxbytes);
 1251              		.loc 1 989 3 view .LVU433
 1252 001c 4B60     		str	r3, [r1, #4]
 1253              		.loc 1 989 52 view .LVU434
 990:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 991:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->rxptr   = rxbuf;
 992:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
 993:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 994:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 995:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Calculating the time window for the timeout on the busy bus condition.*/
 996:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   start = osalOsGetSystemTimeX();
 1254              		.loc 1 996 3 view .LVU435
 1255              	.LBB375:
 1256              	.LBI375:
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1257              		.loc 2 698 25 view .LVU436
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1258              		.loc 2 700 3 view .LVU437
 1259              	.LBB376:
 1260              	.LBI376:
 1261              		.file 6 "./lib/chibios/os/rt/include/chvt.h"
   1:./lib/chibios/os/rt/include/chvt.h **** /*
   2:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chvt.h **** 
   4:./lib/chibios/os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chvt.h **** 
   6:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chvt.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chvt.h **** 
  11:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chvt.h **** 
  16:./lib/chibios/os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chvt.h **** */
  19:./lib/chibios/os/rt/include/chvt.h **** 
  20:./lib/chibios/os/rt/include/chvt.h **** /**
  21:./lib/chibios/os/rt/include/chvt.h ****  * @file    rt/include/chvt.h
  22:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:./lib/chibios/os/rt/include/chvt.h ****  *
  24:./lib/chibios/os/rt/include/chvt.h ****  * @addtogroup time
  25:./lib/chibios/os/rt/include/chvt.h ****  * @{
  26:./lib/chibios/os/rt/include/chvt.h ****  */
  27:./lib/chibios/os/rt/include/chvt.h **** 
  28:./lib/chibios/os/rt/include/chvt.h **** #ifndef CHVT_H
  29:./lib/chibios/os/rt/include/chvt.h **** #define CHVT_H
  30:./lib/chibios/os/rt/include/chvt.h **** 
  31:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chvt.h **** 
  35:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chvt.h **** 
  39:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chvt.h **** 
  43:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  44:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  45:./lib/chibios/os/rt/include/chvt.h ****        "be zero or greater than one"
  46:./lib/chibios/os/rt/include/chvt.h **** #endif
  47:./lib/chibios/os/rt/include/chvt.h **** 
  48:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  49:./lib/chibios/os/rt/include/chvt.h **** #error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  50:./lib/chibios/os/rt/include/chvt.h **** #endif
  51:./lib/chibios/os/rt/include/chvt.h **** 
  52:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  53:./lib/chibios/os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  54:./lib/chibios/os/rt/include/chvt.h **** #endif
  55:./lib/chibios/os/rt/include/chvt.h **** 
  56:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  57:./lib/chibios/os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  58:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  59:./lib/chibios/os/rt/include/chvt.h **** 
  60:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  61:./lib/chibios/os/rt/include/chvt.h **** /* Module macros.                                                            */
  62:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  63:./lib/chibios/os/rt/include/chvt.h **** 
  64:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  65:./lib/chibios/os/rt/include/chvt.h **** /* External declarations.                                                    */
  66:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  67:./lib/chibios/os/rt/include/chvt.h **** 
  68:./lib/chibios/os/rt/include/chvt.h **** /*
  69:./lib/chibios/os/rt/include/chvt.h ****  * Virtual Timers APIs.
  70:./lib/chibios/os/rt/include/chvt.h ****  */
  71:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  72:./lib/chibios/os/rt/include/chvt.h **** extern "C" {
  73:./lib/chibios/os/rt/include/chvt.h **** #endif
  74:./lib/chibios/os/rt/include/chvt.h ****   void _vt_init(void);
  75:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
  76:./lib/chibios/os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
  77:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
  78:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoTickI(void);
  79:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  80:./lib/chibios/os/rt/include/chvt.h **** }
  81:./lib/chibios/os/rt/include/chvt.h **** #endif
  82:./lib/chibios/os/rt/include/chvt.h **** 
  83:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  84:./lib/chibios/os/rt/include/chvt.h **** /* Module inline functions.                                                  */
  85:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chvt.h **** 
  87:./lib/chibios/os/rt/include/chvt.h **** /**
  88:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
  89:./lib/chibios/os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
  90:./lib/chibios/os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
  91:./lib/chibios/os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
  92:./lib/chibios/os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
  93:./lib/chibios/os/rt/include/chvt.h ****  *
  94:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
  95:./lib/chibios/os/rt/include/chvt.h ****  *
  96:./lib/chibios/os/rt/include/chvt.h ****  * @init
  97:./lib/chibios/os/rt/include/chvt.h ****  */
  98:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
  99:./lib/chibios/os/rt/include/chvt.h **** 
 100:./lib/chibios/os/rt/include/chvt.h ****   vtp->func = NULL;
 101:./lib/chibios/os/rt/include/chvt.h **** }
 102:./lib/chibios/os/rt/include/chvt.h **** 
 103:./lib/chibios/os/rt/include/chvt.h **** /**
 104:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 105:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 106:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 107:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 108:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 109:./lib/chibios/os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 110:./lib/chibios/os/rt/include/chvt.h ****  *          @p systime_t size.
 111:./lib/chibios/os/rt/include/chvt.h ****  *
 112:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 113:./lib/chibios/os/rt/include/chvt.h ****  *
 114:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 115:./lib/chibios/os/rt/include/chvt.h ****  */
 116:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 1262              		.loc 6 116 25 view .LVU438
 117:./lib/chibios/os/rt/include/chvt.h **** 
 118:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 119:./lib/chibios/os/rt/include/chvt.h ****   return ch.vtlist.systime;
 120:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 121:./lib/chibios/os/rt/include/chvt.h ****   return port_timer_get_time();
 1263              		.loc 6 121 3 view .LVU439
 1264              	.LBB377:
 1265              	.LBI377:
 1266              		.file 7 "./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @file    chcore_timer.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   System timer header file.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @addtogroup ARMCMx_TIMER
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifndef CHCORE_TIMER_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #define CHCORE_TIMER_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module data structures and types.                                         */
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module macros.                                                            */
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* External declarations.                                                    */
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifdef __cplusplus
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** extern "C" {
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #endif
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   void stStartAlarm(systime_t time);
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   void stStopAlarm(void);
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   void stSetAlarm(systime_t time);
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   systime_t stGetCounter(void);
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   systime_t stGetAlarm(void);
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifdef __cplusplus
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #endif
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module inline functions.                                                  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Starts the alarm.
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @note    Makes sure that no spurious alarms are triggered after
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *          this call.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the first alarm
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_start_alarm(systime_t time) {
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStartAlarm(time);
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Stops the alarm interrupt.
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_stop_alarm(void) {
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStopAlarm();
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Sets the alarm time.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the next alarm
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_set_alarm(systime_t time) {
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stSetAlarm(time);
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Returns the system time.
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @return              The system time.
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline systime_t port_timer_get_time(void) {
 1267              		.loc 7 114 25 view .LVU440
 1268              	.LBB378:
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   return stGetCounter();
 1269              		.loc 7 116 3 view .LVU441
 1270              		.loc 7 116 10 is_stmt 0 view .LVU442
 1271 001e FFF7FEFF 		bl	stGetCounter
 1272              	.LVL64:
 1273              		.loc 7 116 10 view .LVU443
 1274              	.LBE378:
 1275              	.LBE377:
 1276              	.LBE376:
 1277              	.LBE375:
 1278              	.LBB382:
 1279              	.LBB383:
 1280              	.LBB384:
 1281              	.LBB385:
 1282              	.LBB386:
 1283              		.loc 5 493 3 view .LVU444
 1284 0022 4FF02009 		mov	r9, #32
 1285              	.LBE386:
 1286              	.LBE385:
 1287              	.LBE384:
 1288              	.LBE383:
 1289              	.LBE382:
 1290              	.LBB391:
 1291              	.LBB381:
 1292              	.LBB380:
 1293              	.LBB379:
 1294              		.loc 7 116 10 view .LVU445
 1295 0026 8046     		mov	r8, r0
 1296              	.LVL65:
 1297              		.loc 7 116 10 view .LVU446
 1298              	.LBE379:
 1299              	.LBE380:
 1300              	.LBE381:
 1301              	.LBE391:
 997:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   end = osalTimeAddX(start, OSAL_MS2I(STM32_I2C_BUSY_TIMEOUT));
 1302              		.loc 1 997 3 is_stmt 1 view .LVU447
 1303              	.L68:
 998:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 999:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Waits until BUSY flag is reset or, alternatively, for a timeout
1000:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      condition.*/
1001:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   while (true) {
 1304              		.loc 1 1001 3 view .LVU448
1002:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysLock();
 1305              		.loc 1 1002 5 view .LVU449
 1306              	.LBB392:
 1307              	.LBI382:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1308              		.loc 2 573 20 view .LVU450
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1309              		.loc 2 575 3 view .LVU451
 1310              	.LBB390:
 1311              	.LBI383:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1312              		.loc 3 355 20 view .LVU452
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1313              		.loc 3 357 3 view .LVU453
 1314              	.LBB389:
 1315              	.LBI384:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1316              		.loc 4 669 27 view .LVU454
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1317              		.loc 4 677 3 view .LVU455
 1318              	.LBB388:
 1319              	.LBI385:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1320              		.loc 5 491 27 view .LVU456
 1321              	.LBB387:
 1322              		.loc 5 493 3 view .LVU457
 1323              		.syntax unified
 1324              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1325 0028 89F31188 		MSR basepri, r9
 1326              	@ 0 "" 2
 1327              	.LVL66:
 1328              		.loc 5 493 3 is_stmt 0 view .LVU458
 1329              		.thumb
 1330              		.syntax unified
 1331              	.LBE387:
 1332              	.LBE388:
 1333              	.LBE389:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1334              		.loc 3 358 34 is_stmt 1 view .LVU459
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1335              		.loc 3 359 20 view .LVU460
 1336              	.LBE390:
 1337              	.LBE392:
1003:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1004:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* If the bus is not busy then the operation can continue, note, the
1005:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****        loop is exited in the locked state.*/
1006:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if ((dp->ISR & I2C_ISR_BUSY) == 0)
 1338              		.loc 1 1006 5 view .LVU461
 1339              		.loc 1 1006 12 is_stmt 0 view .LVU462
 1340 002c AB69     		ldr	r3, [r5, #24]
 1341              		.loc 1 1006 8 view .LVU463
 1342 002e 1904     		lsls	r1, r3, #16
 1343 0030 0AD5     		bpl	.L66
1007:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
1008:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1009:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* If the system time went outside the allowed window then a timeout
1010:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****        condition is returned.*/
1011:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (!osalTimeIsInRangeX(osalOsGetSystemTimeX(), start, end)) {
 1344              		.loc 1 1011 5 is_stmt 1 view .LVU464
 1345              	.LBB393:
 1346              	.LBI393:
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1347              		.loc 2 698 25 view .LVU465
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1348              		.loc 2 700 3 view .LVU466
 1349              	.LBB394:
 1350              	.LBI394:
 116:./lib/chibios/os/rt/include/chvt.h **** 
 1351              		.loc 6 116 25 view .LVU467
 1352              		.loc 6 121 3 view .LVU468
 1353              	.LBB395:
 1354              	.LBI395:
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 1355              		.loc 7 114 25 view .LVU469
 1356              	.LBB396:
 1357              		.loc 7 116 3 view .LVU470
 1358              		.loc 7 116 10 is_stmt 0 view .LVU471
 1359 0032 FFF7FEFF 		bl	stGetCounter
 1360              	.LVL67:
 1361              		.loc 7 116 10 view .LVU472
 1362              	.LBE396:
 1363              	.LBE395:
 1364              	.LBE394:
 1365              	.LBE393:
 1366              	.LBB397:
 1367              	.LBI397:
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 1368              		.loc 2 746 20 is_stmt 1 view .LVU473
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1369              		.loc 2 750 3 view .LVU474
 1370              	.LBB398:
 1371              	.LBI398:
 1372              		.file 8 "./lib/chibios/os/rt/include/chtime.h"
   1:./lib/chibios/os/rt/include/chtime.h **** /*
   2:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chtime.h **** 
   4:./lib/chibios/os/rt/include/chtime.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chtime.h **** 
   6:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chtime.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chtime.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chtime.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chtime.h **** 
  11:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chtime.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chtime.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chtime.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chtime.h **** 
  16:./lib/chibios/os/rt/include/chtime.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chtime.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chtime.h **** */
  19:./lib/chibios/os/rt/include/chtime.h **** 
  20:./lib/chibios/os/rt/include/chtime.h **** /**
  21:./lib/chibios/os/rt/include/chtime.h ****  * @file    rt/include/chtime.h
  22:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time and intervals macros and structures.
  23:./lib/chibios/os/rt/include/chtime.h ****  *
  24:./lib/chibios/os/rt/include/chtime.h ****  * @addtogroup time_intervals
  25:./lib/chibios/os/rt/include/chtime.h ****  * @details This module is responsible for handling of system time and time
  26:./lib/chibios/os/rt/include/chtime.h ****  *          intervals.
  27:./lib/chibios/os/rt/include/chtime.h ****  * @{
  28:./lib/chibios/os/rt/include/chtime.h ****  */
  29:./lib/chibios/os/rt/include/chtime.h **** 
  30:./lib/chibios/os/rt/include/chtime.h **** #ifndef CHTIME_H
  31:./lib/chibios/os/rt/include/chtime.h **** #define CHTIME_H
  32:./lib/chibios/os/rt/include/chtime.h **** 
  33:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chtime.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chtime.h **** 
  37:./lib/chibios/os/rt/include/chtime.h **** /**
  38:./lib/chibios/os/rt/include/chtime.h ****  * @name    Special time constants
  39:./lib/chibios/os/rt/include/chtime.h ****  * @{
  40:./lib/chibios/os/rt/include/chtime.h ****  */
  41:./lib/chibios/os/rt/include/chtime.h **** /**
  42:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Zero interval specification for some functions with a timeout
  43:./lib/chibios/os/rt/include/chtime.h ****  *          specification.
  44:./lib/chibios/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_IMMEDIATE as timeout parameter,
  45:./lib/chibios/os/rt/include/chtime.h ****  *          see the specific function documentation.
  46:./lib/chibios/os/rt/include/chtime.h ****  */
  47:./lib/chibios/os/rt/include/chtime.h **** #define TIME_IMMEDIATE      ((sysinterval_t)0)
  48:./lib/chibios/os/rt/include/chtime.h **** 
  49:./lib/chibios/os/rt/include/chtime.h **** /**
  50:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Infinite interval specification for all functions with a timeout
  51:./lib/chibios/os/rt/include/chtime.h ****  *          specification.
  52:./lib/chibios/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_INFINITE as timeout parameter,
  53:./lib/chibios/os/rt/include/chtime.h ****  *          see the specific function documentation.
  54:./lib/chibios/os/rt/include/chtime.h ****  */
  55:./lib/chibios/os/rt/include/chtime.h **** #define TIME_INFINITE       ((sysinterval_t)-1)
  56:./lib/chibios/os/rt/include/chtime.h **** 
  57:./lib/chibios/os/rt/include/chtime.h **** /**
  58:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Maximum interval constant usable as timeout.
  59:./lib/chibios/os/rt/include/chtime.h ****  */
  60:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MAX_INTERVAL   ((sysinterval_t)-2)
  61:./lib/chibios/os/rt/include/chtime.h **** 
  62:./lib/chibios/os/rt/include/chtime.h **** /**
  63:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Maximum system of system time before it wraps.
  64:./lib/chibios/os/rt/include/chtime.h ****  */
  65:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MAX_SYSTIME    ((systime_t)-1)
  66:./lib/chibios/os/rt/include/chtime.h **** /** @} */
  67:./lib/chibios/os/rt/include/chtime.h **** 
  68:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  69:./lib/chibios/os/rt/include/chtime.h **** /* Module pre-compile time settings.                                         */
  70:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  71:./lib/chibios/os/rt/include/chtime.h **** 
  72:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  73:./lib/chibios/os/rt/include/chtime.h **** /* Derived constants and error checks.                                       */
  74:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  75:./lib/chibios/os/rt/include/chtime.h **** 
  76:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION != 16) && (CH_CFG_ST_RESOLUTION != 32) &&         \
  77:./lib/chibios/os/rt/include/chtime.h ****     (CH_CFG_ST_RESOLUTION != 64)
  78:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_RESOLUTION specified, must be 16, 32 or 64"
  79:./lib/chibios/os/rt/include/chtime.h **** #endif
  80:./lib/chibios/os/rt/include/chtime.h **** 
  81:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_ST_FREQUENCY < 10
  82:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_FREQUENCY specified, must be >= 10"
  83:./lib/chibios/os/rt/include/chtime.h **** #endif
  84:./lib/chibios/os/rt/include/chtime.h **** 
  85:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE != 16) && (CH_CFG_INTERVALS_SIZE != 32) &&       \
  86:./lib/chibios/os/rt/include/chtime.h ****     (CH_CFG_INTERVALS_SIZE != 64)
  87:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_INTERVALS_SIZE specified, must be 16, 32 or 64"
  88:./lib/chibios/os/rt/include/chtime.h **** #endif
  89:./lib/chibios/os/rt/include/chtime.h **** 
  90:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE != 16) && (CH_CFG_TIME_TYPES_SIZE != 32)
  91:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_TIME_TYPES_SIZE specified, must be 16 or 32"
  92:./lib/chibios/os/rt/include/chtime.h **** #endif
  93:./lib/chibios/os/rt/include/chtime.h **** 
  94:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_INTERVALS_SIZE < CH_CFG_ST_RESOLUTION
  95:./lib/chibios/os/rt/include/chtime.h **** #error "CH_CFG_INTERVALS_SIZE must be >= CH_CFG_ST_RESOLUTION"
  96:./lib/chibios/os/rt/include/chtime.h **** #endif
  97:./lib/chibios/os/rt/include/chtime.h **** 
  98:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  99:./lib/chibios/os/rt/include/chtime.h **** /* Module data structures and types.                                         */
 100:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 101:./lib/chibios/os/rt/include/chtime.h **** 
 102:./lib/chibios/os/rt/include/chtime.h **** /**
 103:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of system time.
 104:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 105:./lib/chibios/os/rt/include/chtime.h ****  */
 106:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION == 64) || defined(__DOXYGEN__)
 107:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t systime_t;
 108:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 32
 109:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t systime_t;
 110:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 16
 111:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t systime_t;
 112:./lib/chibios/os/rt/include/chtime.h **** #endif
 113:./lib/chibios/os/rt/include/chtime.h **** 
 114:./lib/chibios/os/rt/include/chtime.h **** /**
 115:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of time interval.
 116:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 117:./lib/chibios/os/rt/include/chtime.h ****  */
 118:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE == 64) || defined(__DOXYGEN__)
 119:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t sysinterval_t;
 120:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 32
 121:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t sysinterval_t;
 122:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 16
 123:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t sysinterval_t;
 124:./lib/chibios/os/rt/include/chtime.h **** #endif
 125:./lib/chibios/os/rt/include/chtime.h **** 
 126:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE == 32) || defined(__DOXYGEN__)
 127:./lib/chibios/os/rt/include/chtime.h **** /**
 128:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of seconds.
 129:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 130:./lib/chibios/os/rt/include/chtime.h ****  */
 131:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_secs_t;
 132:./lib/chibios/os/rt/include/chtime.h **** 
 133:./lib/chibios/os/rt/include/chtime.h **** /**
 134:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of milliseconds.
 135:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 136:./lib/chibios/os/rt/include/chtime.h ****  */
 137:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_msecs_t;
 138:./lib/chibios/os/rt/include/chtime.h **** 
 139:./lib/chibios/os/rt/include/chtime.h **** /**
 140:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of microseconds.
 141:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 142:./lib/chibios/os/rt/include/chtime.h ****  */
 143:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_usecs_t;
 144:./lib/chibios/os/rt/include/chtime.h **** 
 145:./lib/chibios/os/rt/include/chtime.h **** /**
 146:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of time conversion variable.
 147:./lib/chibios/os/rt/include/chtime.h ****  * @note    This type must have double width than other time types, it is
 148:./lib/chibios/os/rt/include/chtime.h ****  *          only used internally for conversions.
 149:./lib/chibios/os/rt/include/chtime.h ****  */
 150:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t time_conv_t;
 151:./lib/chibios/os/rt/include/chtime.h **** 
 152:./lib/chibios/os/rt/include/chtime.h **** #else
 153:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_secs_t;
 154:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_msecs_t;
 155:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_usecs_t;
 156:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_conv_t;
 157:./lib/chibios/os/rt/include/chtime.h **** #endif
 158:./lib/chibios/os/rt/include/chtime.h **** 
 159:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 160:./lib/chibios/os/rt/include/chtime.h **** /* Module macros.                                                            */
 161:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 162:./lib/chibios/os/rt/include/chtime.h **** 
 163:./lib/chibios/os/rt/include/chtime.h **** /**
 164:./lib/chibios/os/rt/include/chtime.h ****  * @name    Fast time conversion utilities
 165:./lib/chibios/os/rt/include/chtime.h ****  * @{
 166:./lib/chibios/os/rt/include/chtime.h ****  */
 167:./lib/chibios/os/rt/include/chtime.h **** /**
 168:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 169:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 170:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 171:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 172:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 173:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 174:./lib/chibios/os/rt/include/chtime.h ****  *
 175:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 176:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 177:./lib/chibios/os/rt/include/chtime.h ****  *
 178:./lib/chibios/os/rt/include/chtime.h ****  * @api
 179:./lib/chibios/os/rt/include/chtime.h ****  */
 180:./lib/chibios/os/rt/include/chtime.h **** #define TIME_S2I(secs)                                                      \
 181:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((time_conv_t)(secs) * (time_conv_t)CH_CFG_ST_FREQUENCY))
 182:./lib/chibios/os/rt/include/chtime.h **** 
 183:./lib/chibios/os/rt/include/chtime.h **** /**
 184:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 185:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 186:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 187:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 188:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 189:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 190:./lib/chibios/os/rt/include/chtime.h ****  *
 191:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] msecs     number of milliseconds
 192:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 193:./lib/chibios/os/rt/include/chtime.h ****  *
 194:./lib/chibios/os/rt/include/chtime.h ****  * @api
 195:./lib/chibios/os/rt/include/chtime.h ****  */
 196:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MS2I(msecs)                                                    \
 197:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(msecs) *                                 \
 198:./lib/chibios/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 199:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)999) / (time_conv_t)1000))
 200:./lib/chibios/os/rt/include/chtime.h **** 
 201:./lib/chibios/os/rt/include/chtime.h **** /**
 202:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 203:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 204:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 205:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 206:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 207:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 208:./lib/chibios/os/rt/include/chtime.h ****  *
 209:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] usecs     number of microseconds
 210:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 211:./lib/chibios/os/rt/include/chtime.h ****  *
 212:./lib/chibios/os/rt/include/chtime.h ****  * @api
 213:./lib/chibios/os/rt/include/chtime.h ****  */
 214:./lib/chibios/os/rt/include/chtime.h **** #define TIME_US2I(usecs)                                                    \
 215:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(usecs) *                                 \
 216:./lib/chibios/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 217:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)999999) / (time_conv_t)1000000))
 218:./lib/chibios/os/rt/include/chtime.h **** 
 219:./lib/chibios/os/rt/include/chtime.h **** /**
 220:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 221:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to seconds.
 222:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 223:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 224:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 225:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 226:./lib/chibios/os/rt/include/chtime.h ****  *
 227:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 228:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of seconds.
 229:./lib/chibios/os/rt/include/chtime.h ****  *
 230:./lib/chibios/os/rt/include/chtime.h ****  * @api
 231:./lib/chibios/os/rt/include/chtime.h ****  */
 232:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2S(interval)                                                  \
 233:./lib/chibios/os/rt/include/chtime.h ****   (time_secs_t)(((time_conv_t)(interval) +                                  \
 234:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY -                         \
 235:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY)
 236:./lib/chibios/os/rt/include/chtime.h **** 
 237:./lib/chibios/os/rt/include/chtime.h **** /**
 238:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 239:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to milliseconds.
 240:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 241:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 242:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 243:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 244:./lib/chibios/os/rt/include/chtime.h ****  *
 245:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 246:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 247:./lib/chibios/os/rt/include/chtime.h ****  *
 248:./lib/chibios/os/rt/include/chtime.h ****  * @api
 249:./lib/chibios/os/rt/include/chtime.h ****  */
 250:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2MS(interval)                                                 \
 251:./lib/chibios/os/rt/include/chtime.h ****   (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000) +           \
 252:./lib/chibios/os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 253:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 254:./lib/chibios/os/rt/include/chtime.h **** 
 255:./lib/chibios/os/rt/include/chtime.h **** /**
 256:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 257:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to microseconds.
 258:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 259:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 260:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 261:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 262:./lib/chibios/os/rt/include/chtime.h ****  *
 263:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 264:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 265:./lib/chibios/os/rt/include/chtime.h ****  *
 266:./lib/chibios/os/rt/include/chtime.h ****  * @api
 267:./lib/chibios/os/rt/include/chtime.h ****  */
 268:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2US(interval)                                                 \
 269:./lib/chibios/os/rt/include/chtime.h ****   (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000000) +        \
 270:./lib/chibios/os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 271:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 272:./lib/chibios/os/rt/include/chtime.h **** /** @} */
 273:./lib/chibios/os/rt/include/chtime.h **** 
 274:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chtime.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chtime.h **** 
 278:./lib/chibios/os/rt/include/chtime.h **** /*
 279:./lib/chibios/os/rt/include/chtime.h ****  * Virtual Timers APIs.
 280:./lib/chibios/os/rt/include/chtime.h ****  */
 281:./lib/chibios/os/rt/include/chtime.h **** #ifdef __cplusplus
 282:./lib/chibios/os/rt/include/chtime.h **** extern "C" {
 283:./lib/chibios/os/rt/include/chtime.h **** #endif
 284:./lib/chibios/os/rt/include/chtime.h **** 
 285:./lib/chibios/os/rt/include/chtime.h **** #ifdef __cplusplus
 286:./lib/chibios/os/rt/include/chtime.h **** }
 287:./lib/chibios/os/rt/include/chtime.h **** #endif
 288:./lib/chibios/os/rt/include/chtime.h **** 
 289:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 290:./lib/chibios/os/rt/include/chtime.h **** /* Module inline functions.                                                  */
 291:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 292:./lib/chibios/os/rt/include/chtime.h **** 
 293:./lib/chibios/os/rt/include/chtime.h **** /**
 294:./lib/chibios/os/rt/include/chtime.h ****  * @name    Secure time conversion utilities
 295:./lib/chibios/os/rt/include/chtime.h ****  * @{
 296:./lib/chibios/os/rt/include/chtime.h ****  */
 297:./lib/chibios/os/rt/include/chtime.h **** /**
 298:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 299:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 300:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 301:./lib/chibios/os/rt/include/chtime.h ****  *
 302:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 303:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 304:./lib/chibios/os/rt/include/chtime.h ****  *
 305:./lib/chibios/os/rt/include/chtime.h ****  * @special
 306:./lib/chibios/os/rt/include/chtime.h ****  */
 307:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeS2I(time_secs_t secs) {
 308:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 309:./lib/chibios/os/rt/include/chtime.h **** 
 310:./lib/chibios/os/rt/include/chtime.h ****   ticks = (time_conv_t)secs * (time_conv_t)CH_CFG_ST_FREQUENCY;
 311:./lib/chibios/os/rt/include/chtime.h **** 
 312:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 313:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 314:./lib/chibios/os/rt/include/chtime.h **** 
 315:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 316:./lib/chibios/os/rt/include/chtime.h **** }
 317:./lib/chibios/os/rt/include/chtime.h **** 
 318:./lib/chibios/os/rt/include/chtime.h **** /**
 319:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 320:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 321:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 322:./lib/chibios/os/rt/include/chtime.h ****  *
 323:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] msec      number of milliseconds
 324:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 325:./lib/chibios/os/rt/include/chtime.h ****  *
 326:./lib/chibios/os/rt/include/chtime.h ****  * @special
 327:./lib/chibios/os/rt/include/chtime.h ****  */
 328:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeMS2I(time_msecs_t msec) {
 329:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 330:./lib/chibios/os/rt/include/chtime.h **** 
 331:./lib/chibios/os/rt/include/chtime.h ****   ticks = (((time_conv_t)msec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 332:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)999) / (time_conv_t)1000;
 333:./lib/chibios/os/rt/include/chtime.h **** 
 334:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 335:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 336:./lib/chibios/os/rt/include/chtime.h **** 
 337:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 338:./lib/chibios/os/rt/include/chtime.h **** }
 339:./lib/chibios/os/rt/include/chtime.h **** 
 340:./lib/chibios/os/rt/include/chtime.h **** /**
 341:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 342:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 343:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 344:./lib/chibios/os/rt/include/chtime.h ****  *
 345:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] usec      number of microseconds
 346:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 347:./lib/chibios/os/rt/include/chtime.h ****  *
 348:./lib/chibios/os/rt/include/chtime.h ****  * @special
 349:./lib/chibios/os/rt/include/chtime.h ****  */
 350:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeUS2I(time_usecs_t usec) {
 351:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 352:./lib/chibios/os/rt/include/chtime.h **** 
 353:./lib/chibios/os/rt/include/chtime.h ****   ticks = (((time_conv_t)usec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 354:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)999999) / (time_conv_t)1000000;
 355:./lib/chibios/os/rt/include/chtime.h **** 
 356:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 357:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 358:./lib/chibios/os/rt/include/chtime.h **** 
 359:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 360:./lib/chibios/os/rt/include/chtime.h **** }
 361:./lib/chibios/os/rt/include/chtime.h **** 
 362:./lib/chibios/os/rt/include/chtime.h **** /**
 363:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 364:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to seconds.
 365:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 366:./lib/chibios/os/rt/include/chtime.h ****  *
 367:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 368:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of seconds.
 369:./lib/chibios/os/rt/include/chtime.h ****  *
 370:./lib/chibios/os/rt/include/chtime.h ****  * @special
 371:./lib/chibios/os/rt/include/chtime.h ****  */
 372:./lib/chibios/os/rt/include/chtime.h **** static inline time_secs_t chTimeI2S(sysinterval_t interval) {
 373:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t secs;
 374:./lib/chibios/os/rt/include/chtime.h **** 
 375:./lib/chibios/os/rt/include/chtime.h ****   secs = ((time_conv_t)interval +
 376:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY -
 377:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY;
 378:./lib/chibios/os/rt/include/chtime.h **** 
 379:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(secs < (time_conv_t)((time_secs_t)-1),
 380:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 381:./lib/chibios/os/rt/include/chtime.h **** 
 382:./lib/chibios/os/rt/include/chtime.h ****   return (time_secs_t)secs;
 383:./lib/chibios/os/rt/include/chtime.h **** }
 384:./lib/chibios/os/rt/include/chtime.h **** 
 385:./lib/chibios/os/rt/include/chtime.h **** /**
 386:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 387:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to milliseconds.
 388:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 389:./lib/chibios/os/rt/include/chtime.h ****  *
 390:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 391:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 392:./lib/chibios/os/rt/include/chtime.h ****  *
 393:./lib/chibios/os/rt/include/chtime.h ****  * @special
 394:./lib/chibios/os/rt/include/chtime.h ****  */
 395:./lib/chibios/os/rt/include/chtime.h **** static inline time_msecs_t chTimeI2MS(sysinterval_t interval) {
 396:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t msecs;
 397:./lib/chibios/os/rt/include/chtime.h **** 
 398:./lib/chibios/os/rt/include/chtime.h ****   msecs = (((time_conv_t)interval * (time_conv_t)1000) +
 399:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 400:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 401:./lib/chibios/os/rt/include/chtime.h **** 
 402:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(msecs < (time_conv_t)((time_msecs_t)-1),
 403:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 404:./lib/chibios/os/rt/include/chtime.h **** 
 405:./lib/chibios/os/rt/include/chtime.h ****   return (time_msecs_t)msecs;
 406:./lib/chibios/os/rt/include/chtime.h **** }
 407:./lib/chibios/os/rt/include/chtime.h **** 
 408:./lib/chibios/os/rt/include/chtime.h **** /**
 409:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 410:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to microseconds.
 411:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 412:./lib/chibios/os/rt/include/chtime.h ****  *
 413:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/rt/include/chtime.h ****  *
 416:./lib/chibios/os/rt/include/chtime.h ****  * @special
 417:./lib/chibios/os/rt/include/chtime.h ****  */
 418:./lib/chibios/os/rt/include/chtime.h **** static inline time_usecs_t chTimeI2US(sysinterval_t interval) {
 419:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t usecs;
 420:./lib/chibios/os/rt/include/chtime.h **** 
 421:./lib/chibios/os/rt/include/chtime.h ****   usecs = (((time_conv_t)interval * (time_conv_t)1000000) +
 422:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 423:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 424:./lib/chibios/os/rt/include/chtime.h **** 
 425:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(usecs <= (time_conv_t)((time_usecs_t)-1),
 426:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 427:./lib/chibios/os/rt/include/chtime.h **** 
 428:./lib/chibios/os/rt/include/chtime.h ****   return (time_usecs_t)usecs;
 429:./lib/chibios/os/rt/include/chtime.h **** }
 430:./lib/chibios/os/rt/include/chtime.h **** 
 431:./lib/chibios/os/rt/include/chtime.h **** /**
 432:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Adds an interval to a system time returning a system time.
 433:./lib/chibios/os/rt/include/chtime.h ****  *
 434:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] systime   base system time
 435:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval to be added
 436:./lib/chibios/os/rt/include/chtime.h ****  * @return              The new system time.
 437:./lib/chibios/os/rt/include/chtime.h ****  *
 438:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 439:./lib/chibios/os/rt/include/chtime.h ****  */
 440:./lib/chibios/os/rt/include/chtime.h **** static inline systime_t chTimeAddX(systime_t systime,
 441:./lib/chibios/os/rt/include/chtime.h ****                                    sysinterval_t interval) {
 442:./lib/chibios/os/rt/include/chtime.h **** 
 443:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_ST_RESOLUTION != CH_CFG_INTERVALS_SIZE
 444:./lib/chibios/os/rt/include/chtime.h ****   chDbgCheck(interval <= (sysinterval_t)TIME_MAX_SYSTIME);
 445:./lib/chibios/os/rt/include/chtime.h **** #endif
 446:./lib/chibios/os/rt/include/chtime.h **** 
 447:./lib/chibios/os/rt/include/chtime.h ****   return systime + (systime_t)interval;
 448:./lib/chibios/os/rt/include/chtime.h **** }
 449:./lib/chibios/os/rt/include/chtime.h **** 
 450:./lib/chibios/os/rt/include/chtime.h **** /**
 451:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Subtracts two system times returning an interval.
 452:./lib/chibios/os/rt/include/chtime.h ****  *
 453:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] start     first system time
 454:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] end       second system time
 455:./lib/chibios/os/rt/include/chtime.h ****  * @return              The interval representing the time difference.
 456:./lib/chibios/os/rt/include/chtime.h ****  *
 457:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 458:./lib/chibios/os/rt/include/chtime.h ****  */
 459:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeDiffX(systime_t start, systime_t end) {
 460:./lib/chibios/os/rt/include/chtime.h **** 
 461:./lib/chibios/os/rt/include/chtime.h ****   /*lint -save -e9033 [10.8] This cast is required by the operation, it is
 462:./lib/chibios/os/rt/include/chtime.h ****     known that the destination type can be wider.*/
 463:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)((systime_t)(end - start));
 464:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 465:./lib/chibios/os/rt/include/chtime.h **** }
 466:./lib/chibios/os/rt/include/chtime.h **** 
 467:./lib/chibios/os/rt/include/chtime.h **** /**
 468:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Checks if the specified time is within the specified time range.
 469:./lib/chibios/os/rt/include/chtime.h ****  * @note    When start==end then the function returns always false because the
 470:./lib/chibios/os/rt/include/chtime.h ****  *          time window has zero size.
 471:./lib/chibios/os/rt/include/chtime.h ****  *
 472:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] time      the time to be verified
 473:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] start     the start of the time window (inclusive)
 474:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] end       the end of the time window (non inclusive)
 475:./lib/chibios/os/rt/include/chtime.h ****  * @retval true         current time within the specified time window.
 476:./lib/chibios/os/rt/include/chtime.h ****  * @retval false        current time not within the specified time window.
 477:./lib/chibios/os/rt/include/chtime.h ****  *
 478:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 479:./lib/chibios/os/rt/include/chtime.h ****  */
 480:./lib/chibios/os/rt/include/chtime.h **** static inline bool chTimeIsInRangeX(systime_t time,
 1373              		.loc 8 480 20 view .LVU475
 1374              	.LBB399:
 481:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t start,
 482:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t end) {
 483:./lib/chibios/os/rt/include/chtime.h **** 
 484:./lib/chibios/os/rt/include/chtime.h ****   return (bool)((systime_t)((systime_t)time - (systime_t)start) <
 1375              		.loc 8 484 3 view .LVU476
 1376              		.loc 8 484 17 is_stmt 0 view .LVU477
 1377 0036 A0EB0803 		sub	r3, r0, r8
 1378              	.LBE399:
 1379              	.LBE398:
 1380              	.LBE397:
 1381              		.loc 1 1011 8 view .LVU478
 1382 003a 9BB2     		uxth	r3, r3
 1383 003c B3F5FA7F 		cmp	r3, #500
 1384 0040 32D2     		bcs	.L73
1012:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       return MSG_TIMEOUT;
1013:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
1014:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1015:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysUnlock();
 1385              		.loc 1 1015 5 is_stmt 1 view .LVU479
 1386              	.LBB400:
 1387              	.LBI400:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1388              		.loc 2 584 20 view .LVU480
 1389              	.LBB401:
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1390              		.loc 2 586 3 view .LVU481
 1391              	.LBB402:
 1392              	.LBI402:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1393              		.loc 3 367 20 view .LVU482
 1394              	.LBB403:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1395              		.loc 3 369 22 view .LVU483
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1396              		.loc 3 370 33 view .LVU484
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1397              		.loc 3 376 3 view .LVU485
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1398              		.loc 3 376 3 view .LVU486
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1399              		.loc 3 376 3 view .LVU487
 380:./lib/chibios/os/rt/include/chsys.h **** }
 1400              		.loc 3 380 3 view .LVU488
 1401              	.LBB404:
 1402              	.LBI404:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1403              		.loc 4 693 27 view .LVU489
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1404              		.loc 4 696 3 view .LVU490
 1405              	.LVL68:
 1406              	.LBB405:
 1407              	.LBI405:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1408              		.loc 5 491 27 view .LVU491
 1409              	.LBB406:
 1410              		.loc 5 493 3 view .LVU492
 1411              		.syntax unified
 1412              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1413 0042 87F31188 		MSR basepri, r7
 1414              	@ 0 "" 2
 1415              	.LVL69:
 1416              		.loc 5 493 3 is_stmt 0 view .LVU493
 1417              		.thumb
 1418              		.syntax unified
 1419              	.LBE406:
 1420              	.LBE405:
 1421              	.LBE404:
 1422              	.LBE403:
 1423              	.LBE402:
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1424              		.loc 2 587 1 view .LVU494
 1425 0046 EFE7     		b	.L68
 1426              	.L66:
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1427              		.loc 2 587 1 view .LVU495
 1428              	.LBE401:
 1429              	.LBE400:
1016:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
1017:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1018:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Setting up the slave address.*/
1019:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_set_address(i2cp, addr);
 1430              		.loc 1 1019 3 is_stmt 1 view .LVU496
 1431              	.LVL70:
 1432              	.LBB407:
 1433              	.LBI407:
 133:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1434              		.loc 1 133 13 view .LVU497
 1435              	.LBB408:
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1436              		.loc 1 134 3 view .LVU498
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1437              		.loc 1 137 20 is_stmt 0 view .LVU499
 1438 0048 6268     		ldr	r2, [r4, #4]
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1439              		.loc 1 134 16 view .LVU500
 1440 004a 236B     		ldr	r3, [r4, #48]
 1441              	.LVL71:
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1442              		.loc 1 137 3 is_stmt 1 view .LVU501
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1443              		.loc 1 137 26 is_stmt 0 view .LVU502
 1444 004c 9268     		ldr	r2, [r2, #8]
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1445              		.loc 1 137 6 view .LVU503
 1446 004e 1205     		lsls	r2, r2, #20
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 1447              		.loc 1 138 5 is_stmt 1 view .LVU504
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 1448              		.loc 1 138 30 is_stmt 0 view .LVU505
 1449 0050 58BF     		it	pl
 1450 0052 7600     		lslpl	r6, r6, #1
 1451              	.LVL72:
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1452              		.loc 1 140 5 is_stmt 1 view .LVU506
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1453              		.loc 1 140 13 is_stmt 0 view .LVU507
 1454 0054 5E60     		str	r6, [r3, #4]
 1455              	.LVL73:
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1456              		.loc 1 140 13 view .LVU508
 1457              	.LBE408:
 1458              	.LBE407:
1020:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1021:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Setting up the peripheral.*/
1022:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_setup_rx_transfer(i2cp);
 1459              		.loc 1 1022 3 is_stmt 1 view .LVU509
 1460 0056 2046     		mov	r0, r4
 1461 0058 FFF7FEFF 		bl	i2c_lld_setup_rx_transfer
 1462              	.LVL74:
1023:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1024:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
1025:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Enabling RX DMA.*/
1026:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamEnable(i2cp->dmarx);
 1463              		.loc 1 1026 3 view .LVU510
 1464 005c A36A     		ldr	r3, [r4, #40]
 1465              	.LBB409:
 1466              	.LBB410:
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1467              		.loc 2 824 10 is_stmt 0 view .LVU511
 1468 005e 0899     		ldr	r1, [sp, #32]
 1469              	.LBE410:
 1470              	.LBE409:
 1471              		.loc 1 1026 3 view .LVU512
 1472 0060 5A68     		ldr	r2, [r3, #4]
 1473 0062 1368     		ldr	r3, [r2]
 1474 0064 43F00103 		orr	r3, r3, #1
 1475 0068 1360     		str	r3, [r2]
 1476              		.loc 1 1026 31 is_stmt 1 view .LVU513
1027:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1028:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Transfer complete interrupt enabled.*/
1029:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_TCIE;
 1477              		.loc 1 1029 3 view .LVU514
 1478              		.loc 1 1029 5 is_stmt 0 view .LVU515
 1479 006a 2B68     		ldr	r3, [r5]
 1480              		.loc 1 1029 11 view .LVU516
 1481 006c 43F04003 		orr	r3, r3, #64
 1482 0070 2B60     		str	r3, [r5]
1030:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
1031:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1032:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Transfer complete and RX interrupts enabled.*/
1033:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_TCIE | I2C_CR1_RXIE;
1034:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
1035:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1036:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Starts the operation.*/
1037:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR2 |= I2C_CR2_START;
 1483              		.loc 1 1037 3 is_stmt 1 view .LVU517
 1484              		.loc 1 1037 5 is_stmt 0 view .LVU518
 1485 0072 6B68     		ldr	r3, [r5, #4]
 1486              		.loc 1 1037 11 view .LVU519
 1487 0074 43F40053 		orr	r3, r3, #8192
 1488 0078 6B60     		str	r3, [r5, #4]
1038:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1039:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Waits for the operation completion or a timeout.*/
1040:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg = osalThreadSuspendTimeoutS(&i2cp->thread, timeout);
 1489              		.loc 1 1040 3 is_stmt 1 view .LVU520
 1490              	.LVL75:
 1491              	.LBB412:
 1492              	.LBI409:
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 1493              		.loc 2 821 21 view .LVU521
 1494              	.LBB411:
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1495              		.loc 2 824 3 view .LVU522
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1496              		.loc 2 824 10 is_stmt 0 view .LVU523
 1497 007a 04F11C00 		add	r0, r4, #28
 1498              	.LVL76:
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1499              		.loc 2 824 10 view .LVU524
 1500 007e FFF7FEFF 		bl	chThdSuspendTimeoutS
 1501              	.LVL77:
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1502              		.loc 2 824 10 view .LVU525
 1503              	.LBE411:
 1504              	.LBE412:
1041:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1042:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* In case of a software timeout a STOP is sent as an extreme attempt
1043:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      to release the bus and DMA is forcibly disabled.*/
1044:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (msg == MSG_TIMEOUT) {
 1505              		.loc 1 1044 3 is_stmt 1 view .LVU526
 1506              		.loc 1 1044 6 is_stmt 0 view .LVU527
 1507 0082 431C     		adds	r3, r0, #1
 1508 0084 0ED1     		bne	.L65
1045:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 |= I2C_CR2_STOP;
 1509              		.loc 1 1045 5 is_stmt 1 view .LVU528
 1510              		.loc 1 1045 7 is_stmt 0 view .LVU529
 1511 0086 6B68     		ldr	r3, [r5, #4]
 1512              		.loc 1 1045 13 view .LVU530
 1513 0088 43F48043 		orr	r3, r3, #16384
 1514 008c 6B60     		str	r3, [r5, #4]
1046:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
1047:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 1515              		.loc 1 1047 5 is_stmt 1 view .LVU531
 1516 008e A36A     		ldr	r3, [r4, #40]
 1517 0090 5968     		ldr	r1, [r3, #4]
 1518 0092 0A68     		ldr	r2, [r1]
 1519 0094 22F00F02 		bic	r2, r2, #15
 1520 0098 0A60     		str	r2, [r1]
 1521              		.loc 1 1047 5 view .LVU532
 1522 009a 597B     		ldrb	r1, [r3, #13]	@ zero_extendqisi2
 1523 009c 1A68     		ldr	r2, [r3]
 1524 009e 0E23     		movs	r3, #14
 1525 00a0 8B40     		lsls	r3, r3, r1
 1526 00a2 5360     		str	r3, [r2, #4]
 1527              	.LVL78:
 1528              	.L65:
1048:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
1049:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
1050:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1051:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   return msg;
1052:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1529              		.loc 1 1052 1 is_stmt 0 view .LVU533
 1530 00a4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1531              	.LVL79:
 1532              	.L73:
1012:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 1533              		.loc 1 1012 14 view .LVU534
 1534 00a8 4FF0FF30 		mov	r0, #-1
 1535 00ac FAE7     		b	.L65
 1536              		.cfi_endproc
 1537              	.LFE293:
 1539              		.section	.text.i2c_lld_master_transmit_timeout,"ax",%progbits
 1540              		.align	1
 1541              		.global	i2c_lld_master_transmit_timeout
 1542              		.syntax unified
 1543              		.thumb
 1544              		.thumb_func
 1546              	i2c_lld_master_transmit_timeout:
 1547              	.LVL80:
 1548              	.LFB294:
1053:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1054:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
1055:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Transmits data via the I2C bus as master.
1056:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
1057:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
1058:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] addr      slave device address
1059:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] txbuf     pointer to the transmit buffer
1060:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] txbytes   number of bytes to be transmitted
1061:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[out] rxbuf    pointer to the receive buffer
1062:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] rxbytes   number of bytes to be received
1063:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
1064:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      the following special values are allowed:
1065:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      - @a TIME_INFINITE no timeout.
1066:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      .
1067:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @return              The operation status.
1068:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_OK       if the function succeeded.
1069:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
1070:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      be retrieved using @p i2cGetErrors().
1071:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end. <b>After a
1072:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      timeout the driver must be stopped and restarted
1073:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      because the bus is in an uncertain state</b>.
1074:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
1075:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
1076:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
1077:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** msg_t i2c_lld_master_transmit_timeout(I2CDriver *i2cp, i2caddr_t addr,
1078:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       const uint8_t *txbuf, size_t txbytes,
1079:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       uint8_t *rxbuf, size_t rxbytes,
1080:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       sysinterval_t timeout) {
 1549              		.loc 1 1080 62 is_stmt 1 view -0
 1550              		.cfi_startproc
 1551              		@ args = 12, pretend = 0, frame = 0
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
1081:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1553              		.loc 1 1081 3 view .LVU536
1082:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1554              		.loc 1 1082 3 view .LVU537
1080:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1555              		.loc 1 1080 62 is_stmt 0 view .LVU538
 1556 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1557              		.cfi_def_cfa_offset 32
 1558              		.cfi_offset 3, -32
 1559              		.cfi_offset 4, -28
 1560              		.cfi_offset 5, -24
 1561              		.cfi_offset 6, -20
 1562              		.cfi_offset 7, -16
 1563              		.cfi_offset 8, -12
 1564              		.cfi_offset 9, -8
 1565              		.cfi_offset 14, -4
1083:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   systime_t start, end;
1084:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1085:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Resetting error flags for this transfer.*/
1086:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 1566              		.loc 1 1086 16 view .LVU539
 1567 0004 0027     		movs	r7, #0
1080:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1568              		.loc 1 1080 62 view .LVU540
 1569 0006 0446     		mov	r4, r0
 1570 0008 0E46     		mov	r6, r1
1082:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   systime_t start, end;
 1571              		.loc 1 1082 16 view .LVU541
 1572 000a 056B     		ldr	r5, [r0, #48]
 1573              	.LVL81:
1083:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   systime_t start, end;
 1574              		.loc 1 1083 3 is_stmt 1 view .LVU542
 1575              		.loc 1 1086 3 view .LVU543
 1576              		.loc 1 1086 16 is_stmt 0 view .LVU544
 1577 000c 8760     		str	r7, [r0, #8]
1087:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1088:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Releases the lock from high level driver.*/
1089:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   osalSysUnlock();
 1578              		.loc 1 1089 3 is_stmt 1 view .LVU545
 1579              	.LBB446:
 1580              	.LBI446:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1581              		.loc 2 584 20 view .LVU546
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1582              		.loc 2 586 3 view .LVU547
 1583              	.LBB447:
 1584              	.LBI447:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1585              		.loc 3 367 20 view .LVU548
 1586              	.LBB448:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1587              		.loc 3 369 22 view .LVU549
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1588              		.loc 3 370 33 view .LVU550
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1589              		.loc 3 376 3 view .LVU551
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1590              		.loc 3 376 3 view .LVU552
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1591              		.loc 3 376 3 view .LVU553
 380:./lib/chibios/os/rt/include/chsys.h **** }
 1592              		.loc 3 380 3 view .LVU554
 1593              	.LBB449:
 1594              	.LBI449:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1595              		.loc 4 693 27 view .LVU555
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1596              		.loc 4 696 3 view .LVU556
 1597              	.LVL82:
 1598              	.LBB450:
 1599              	.LBI450:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1600              		.loc 5 491 27 view .LVU557
 1601              	.LBB451:
 1602              		.loc 5 493 3 view .LVU558
 1603              		.syntax unified
 1604              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1605 000e 87F31188 		MSR basepri, r7
 1606              	@ 0 "" 2
 1607              	.LVL83:
 1608              		.loc 5 493 3 is_stmt 0 view .LVU559
 1609              		.thumb
 1610              		.syntax unified
 1611              	.LBE451:
 1612              	.LBE450:
 1613              	.LBE449:
 1614              	.LBE448:
 1615              	.LBE447:
 1616              	.LBE446:
1090:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1091:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
1092:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* TX DMA setup.*/
1093:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMode(i2cp->dmatx, i2cp->txdmamode);
 1617              		.loc 1 1093 3 is_stmt 1 view .LVU560
 1618 0012 C16A     		ldr	r1, [r0, #44]
 1619              	.LVL84:
 1620              		.loc 1 1093 3 is_stmt 0 view .LVU561
 1621 0014 406A     		ldr	r0, [r0, #36]
 1622              	.LVL85:
 1623              		.loc 1 1093 3 view .LVU562
 1624 0016 4968     		ldr	r1, [r1, #4]
 1625 0018 0860     		str	r0, [r1]
 1626              		.loc 1 1093 49 is_stmt 1 view .LVU563
1094:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmatx, txbuf);
 1627              		.loc 1 1094 3 view .LVU564
 1628 001a CA60     		str	r2, [r1, #12]
 1629              		.loc 1 1094 42 view .LVU565
1095:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmatx, txbytes);
 1630              		.loc 1 1095 3 view .LVU566
 1631 001c 4B60     		str	r3, [r1, #4]
 1632              		.loc 1 1095 52 view .LVU567
1096:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1097:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* RX DMA setup, note, rxbytes can be zero but we write the value anyway.*/
1098:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMode(i2cp->dmarx, i2cp->rxdmamode);
 1633              		.loc 1 1098 3 view .LVU568
 1634 001e A36A     		ldr	r3, [r4, #40]
 1635              	.LVL86:
 1636              		.loc 1 1098 3 is_stmt 0 view .LVU569
 1637 0020 226A     		ldr	r2, [r4, #32]
 1638              	.LVL87:
 1639              		.loc 1 1098 3 view .LVU570
 1640 0022 5B68     		ldr	r3, [r3, #4]
 1641 0024 1A60     		str	r2, [r3]
 1642              	.LVL88:
 1643              		.loc 1 1098 49 is_stmt 1 view .LVU571
1099:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1644              		.loc 1 1099 3 view .LVU572
 1645 0026 089A     		ldr	r2, [sp, #32]
 1646 0028 DA60     		str	r2, [r3, #12]
 1647              		.loc 1 1099 42 view .LVU573
1100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmarx, rxbytes);
 1648              		.loc 1 1100 3 view .LVU574
 1649 002a 099A     		ldr	r2, [sp, #36]
 1650 002c 5A60     		str	r2, [r3, #4]
 1651              		.loc 1 1100 52 view .LVU575
1101:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
1102:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->txptr   = txbuf;
1103:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->txbytes = txbytes;
1104:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->rxptr   = rxbuf;
1105:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
1106:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
1107:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1108:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Calculating the time window for the timeout on the busy bus condition.*/
1109:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   start = osalOsGetSystemTimeX();
 1652              		.loc 1 1109 3 view .LVU576
 1653              	.LBB452:
 1654              	.LBI452:
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1655              		.loc 2 698 25 view .LVU577
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1656              		.loc 2 700 3 view .LVU578
 1657              	.LBB453:
 1658              	.LBI453:
 116:./lib/chibios/os/rt/include/chvt.h **** 
 1659              		.loc 6 116 25 view .LVU579
 1660              		.loc 6 121 3 view .LVU580
 1661              	.LBB454:
 1662              	.LBI454:
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 1663              		.loc 7 114 25 view .LVU581
 1664              	.LBB455:
 1665              		.loc 7 116 3 view .LVU582
 1666              		.loc 7 116 10 is_stmt 0 view .LVU583
 1667 002e FFF7FEFF 		bl	stGetCounter
 1668              	.LVL89:
 1669              	.LBE455:
 1670              	.LBE454:
 1671              	.LBE453:
 1672              	.LBE452:
 1673              	.LBB459:
 1674              	.LBB460:
 1675              	.LBB461:
 1676              	.LBB462:
 1677              	.LBB463:
 1678              		.loc 5 493 3 view .LVU584
 1679 0032 4FF02009 		mov	r9, #32
 1680              	.LBE463:
 1681              	.LBE462:
 1682              	.LBE461:
 1683              	.LBE460:
 1684              	.LBE459:
 1685              	.LBB468:
 1686              	.LBB458:
 1687              	.LBB457:
 1688              	.LBB456:
 1689              		.loc 7 116 10 view .LVU585
 1690 0036 8046     		mov	r8, r0
 1691              	.LVL90:
 1692              		.loc 7 116 10 view .LVU586
 1693              	.LBE456:
 1694              	.LBE457:
 1695              	.LBE458:
 1696              	.LBE468:
1110:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   end = osalTimeAddX(start, OSAL_MS2I(STM32_I2C_BUSY_TIMEOUT));
 1697              		.loc 1 1110 3 is_stmt 1 view .LVU587
 1698              	.L77:
1111:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1112:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Waits until BUSY flag is reset or, alternatively, for a timeout
1113:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      condition.*/
1114:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   while (true) {
 1699              		.loc 1 1114 3 view .LVU588
1115:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysLock();
 1700              		.loc 1 1115 5 view .LVU589
 1701              	.LBB469:
 1702              	.LBI459:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1703              		.loc 2 573 20 view .LVU590
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1704              		.loc 2 575 3 view .LVU591
 1705              	.LBB467:
 1706              	.LBI460:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1707              		.loc 3 355 20 view .LVU592
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1708              		.loc 3 357 3 view .LVU593
 1709              	.LBB466:
 1710              	.LBI461:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1711              		.loc 4 669 27 view .LVU594
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1712              		.loc 4 677 3 view .LVU595
 1713              	.LBB465:
 1714              	.LBI462:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1715              		.loc 5 491 27 view .LVU596
 1716              	.LBB464:
 1717              		.loc 5 493 3 view .LVU597
 1718              		.syntax unified
 1719              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1720 0038 89F31188 		MSR basepri, r9
 1721              	@ 0 "" 2
 1722              	.LVL91:
 1723              		.loc 5 493 3 is_stmt 0 view .LVU598
 1724              		.thumb
 1725              		.syntax unified
 1726              	.LBE464:
 1727              	.LBE465:
 1728              	.LBE466:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1729              		.loc 3 358 34 is_stmt 1 view .LVU599
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1730              		.loc 3 359 20 view .LVU600
 1731              	.LBE467:
 1732              	.LBE469:
1116:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1117:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* If the bus is not busy then the operation can continue, note, the
1118:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****        loop is exited in the locked state.*/
1119:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if ((dp->ISR & I2C_ISR_BUSY) == 0)
 1733              		.loc 1 1119 5 view .LVU601
 1734              		.loc 1 1119 12 is_stmt 0 view .LVU602
 1735 003c AB69     		ldr	r3, [r5, #24]
 1736              		.loc 1 1119 8 view .LVU603
 1737 003e 1904     		lsls	r1, r3, #16
 1738 0040 0AD5     		bpl	.L75
1120:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
1121:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1122:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* If the system time went outside the allowed window then a timeout
1123:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****        condition is returned.*/
1124:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (!osalTimeIsInRangeX(osalOsGetSystemTimeX(), start, end)) {
 1739              		.loc 1 1124 5 is_stmt 1 view .LVU604
 1740              	.LBB470:
 1741              	.LBI470:
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1742              		.loc 2 698 25 view .LVU605
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1743              		.loc 2 700 3 view .LVU606
 1744              	.LBB471:
 1745              	.LBI471:
 116:./lib/chibios/os/rt/include/chvt.h **** 
 1746              		.loc 6 116 25 view .LVU607
 1747              		.loc 6 121 3 view .LVU608
 1748              	.LBB472:
 1749              	.LBI472:
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 1750              		.loc 7 114 25 view .LVU609
 1751              	.LBB473:
 1752              		.loc 7 116 3 view .LVU610
 1753              		.loc 7 116 10 is_stmt 0 view .LVU611
 1754 0042 FFF7FEFF 		bl	stGetCounter
 1755              	.LVL92:
 1756              		.loc 7 116 10 view .LVU612
 1757              	.LBE473:
 1758              	.LBE472:
 1759              	.LBE471:
 1760              	.LBE470:
 1761              	.LBB474:
 1762              	.LBI474:
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 1763              		.loc 2 746 20 is_stmt 1 view .LVU613
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1764              		.loc 2 750 3 view .LVU614
 1765              	.LBB475:
 1766              	.LBI475:
 480:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t start,
 1767              		.loc 8 480 20 view .LVU615
 1768              	.LBB476:
 1769              		.loc 8 484 3 view .LVU616
 1770              		.loc 8 484 17 is_stmt 0 view .LVU617
 1771 0046 A0EB0803 		sub	r3, r0, r8
 1772              	.LBE476:
 1773              	.LBE475:
 1774              	.LBE474:
 1775              		.loc 1 1124 8 view .LVU618
 1776 004a 9BB2     		uxth	r3, r3
 1777 004c B3F5FA7F 		cmp	r3, #500
 1778 0050 3DD2     		bcs	.L82
1125:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       return MSG_TIMEOUT;
1126:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
1127:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1128:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysUnlock();
 1779              		.loc 1 1128 5 is_stmt 1 view .LVU619
 1780              	.LBB477:
 1781              	.LBI477:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1782              		.loc 2 584 20 view .LVU620
 1783              	.LBB478:
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1784              		.loc 2 586 3 view .LVU621
 1785              	.LBB479:
 1786              	.LBI479:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1787              		.loc 3 367 20 view .LVU622
 1788              	.LBB480:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1789              		.loc 3 369 22 view .LVU623
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1790              		.loc 3 370 33 view .LVU624
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1791              		.loc 3 376 3 view .LVU625
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1792              		.loc 3 376 3 view .LVU626
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1793              		.loc 3 376 3 view .LVU627
 380:./lib/chibios/os/rt/include/chsys.h **** }
 1794              		.loc 3 380 3 view .LVU628
 1795              	.LBB481:
 1796              	.LBI481:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1797              		.loc 4 693 27 view .LVU629
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1798              		.loc 4 696 3 view .LVU630
 1799              	.LVL93:
 1800              	.LBB482:
 1801              	.LBI482:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1802              		.loc 5 491 27 view .LVU631
 1803              	.LBB483:
 1804              		.loc 5 493 3 view .LVU632
 1805              		.syntax unified
 1806              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1807 0052 87F31188 		MSR basepri, r7
 1808              	@ 0 "" 2
 1809              	.LVL94:
 1810              		.loc 5 493 3 is_stmt 0 view .LVU633
 1811              		.thumb
 1812              		.syntax unified
 1813              	.LBE483:
 1814              	.LBE482:
 1815              	.LBE481:
 1816              	.LBE480:
 1817              	.LBE479:
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1818              		.loc 2 587 1 view .LVU634
 1819 0056 EFE7     		b	.L77
 1820              	.L75:
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1821              		.loc 2 587 1 view .LVU635
 1822              	.LBE478:
 1823              	.LBE477:
1129:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
1130:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1131:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Setting up the slave address.*/
1132:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_set_address(i2cp, addr);
 1824              		.loc 1 1132 3 is_stmt 1 view .LVU636
 1825              	.LVL95:
 1826              	.LBB484:
 1827              	.LBI484:
 133:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1828              		.loc 1 133 13 view .LVU637
 1829              	.LBB485:
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1830              		.loc 1 134 3 view .LVU638
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1831              		.loc 1 137 20 is_stmt 0 view .LVU639
 1832 0058 6268     		ldr	r2, [r4, #4]
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1833              		.loc 1 134 16 view .LVU640
 1834 005a 236B     		ldr	r3, [r4, #48]
 1835              	.LVL96:
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1836              		.loc 1 137 3 is_stmt 1 view .LVU641
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1837              		.loc 1 137 26 is_stmt 0 view .LVU642
 1838 005c 9268     		ldr	r2, [r2, #8]
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1839              		.loc 1 137 6 view .LVU643
 1840 005e 1205     		lsls	r2, r2, #20
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 1841              		.loc 1 138 5 is_stmt 1 view .LVU644
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 1842              		.loc 1 138 30 is_stmt 0 view .LVU645
 1843 0060 58BF     		it	pl
 1844 0062 7600     		lslpl	r6, r6, #1
 1845              	.LVL97:
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1846              		.loc 1 140 5 is_stmt 1 view .LVU646
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1847              		.loc 1 140 13 is_stmt 0 view .LVU647
 1848 0064 5E60     		str	r6, [r3, #4]
 1849              	.LVL98:
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1850              		.loc 1 140 13 view .LVU648
 1851              	.LBE485:
 1852              	.LBE484:
1133:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Preparing the transfer.*/
1135:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_setup_tx_transfer(i2cp);
 1853              		.loc 1 1135 3 is_stmt 1 view .LVU649
 1854 0066 2046     		mov	r0, r4
 1855 0068 FFF7FEFF 		bl	i2c_lld_setup_tx_transfer
 1856              	.LVL99:
1136:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
1138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Enabling TX DMA.*/
1139:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamEnable(i2cp->dmatx);
 1857              		.loc 1 1139 3 view .LVU650
 1858 006c E36A     		ldr	r3, [r4, #44]
 1859              	.LBB486:
 1860              	.LBB487:
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1861              		.loc 2 824 10 is_stmt 0 view .LVU651
 1862 006e 0A99     		ldr	r1, [sp, #40]
 1863              	.LBE487:
 1864              	.LBE486:
 1865              		.loc 1 1139 3 view .LVU652
 1866 0070 5A68     		ldr	r2, [r3, #4]
 1867 0072 1368     		ldr	r3, [r2]
 1868 0074 43F00103 		orr	r3, r3, #1
 1869 0078 1360     		str	r3, [r2]
 1870              		.loc 1 1139 31 is_stmt 1 view .LVU653
1140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1141:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Transfer complete interrupt enabled.*/
1142:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_TCIE;
 1871              		.loc 1 1142 3 view .LVU654
 1872              		.loc 1 1142 5 is_stmt 0 view .LVU655
 1873 007a 2B68     		ldr	r3, [r5]
 1874              		.loc 1 1142 11 view .LVU656
 1875 007c 43F04003 		orr	r3, r3, #64
 1876 0080 2B60     		str	r3, [r5]
1143:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
1144:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Transfer complete and TX interrupts enabled.*/
1145:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_TCIE | I2C_CR1_TXIE;
1146:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
1147:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1148:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Starts the operation.*/
1149:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR2 |= I2C_CR2_START;
 1877              		.loc 1 1149 3 is_stmt 1 view .LVU657
 1878              		.loc 1 1149 5 is_stmt 0 view .LVU658
 1879 0082 6B68     		ldr	r3, [r5, #4]
 1880              		.loc 1 1149 11 view .LVU659
 1881 0084 43F40053 		orr	r3, r3, #8192
 1882 0088 6B60     		str	r3, [r5, #4]
1150:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1151:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Waits for the operation completion or a timeout.*/
1152:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg = osalThreadSuspendTimeoutS(&i2cp->thread, timeout);
 1883              		.loc 1 1152 3 is_stmt 1 view .LVU660
 1884              	.LVL100:
 1885              	.LBB489:
 1886              	.LBI486:
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 1887              		.loc 2 821 21 view .LVU661
 1888              	.LBB488:
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1889              		.loc 2 824 3 view .LVU662
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1890              		.loc 2 824 10 is_stmt 0 view .LVU663
 1891 008a 04F11C00 		add	r0, r4, #28
 1892              	.LVL101:
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1893              		.loc 2 824 10 view .LVU664
 1894 008e FFF7FEFF 		bl	chThdSuspendTimeoutS
 1895              	.LVL102:
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1896              		.loc 2 824 10 view .LVU665
 1897              	.LBE488:
 1898              	.LBE489:
1153:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1154:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* In case of a software timeout a STOP is sent as an extreme attempt
1155:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      to release the bus and DMA is forcibly disabled.*/
1156:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (msg == MSG_TIMEOUT) {
 1899              		.loc 1 1156 3 is_stmt 1 view .LVU666
 1900              		.loc 1 1156 6 is_stmt 0 view .LVU667
 1901 0092 431C     		adds	r3, r0, #1
 1902 0094 19D1     		bne	.L74
1157:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 |= I2C_CR2_STOP;
 1903              		.loc 1 1157 5 is_stmt 1 view .LVU668
 1904              		.loc 1 1157 7 is_stmt 0 view .LVU669
 1905 0096 6B68     		ldr	r3, [r5, #4]
 1906              		.loc 1 1157 13 view .LVU670
 1907 0098 43F48043 		orr	r3, r3, #16384
 1908 009c 6B60     		str	r3, [r5, #4]
1158:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
1159:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 1909              		.loc 1 1159 5 is_stmt 1 view .LVU671
 1910 009e A36A     		ldr	r3, [r4, #40]
 1911 00a0 5968     		ldr	r1, [r3, #4]
 1912 00a2 0A68     		ldr	r2, [r1]
 1913 00a4 22F00F02 		bic	r2, r2, #15
 1914 00a8 0A60     		str	r2, [r1]
 1915              		.loc 1 1159 5 view .LVU672
 1916 00aa 5A7B     		ldrb	r2, [r3, #13]	@ zero_extendqisi2
 1917 00ac 1968     		ldr	r1, [r3]
 1918 00ae 0E23     		movs	r3, #14
 1919 00b0 03FA02F2 		lsl	r2, r3, r2
 1920 00b4 4A60     		str	r2, [r1, #4]
 1921              		.loc 1 1159 5 view .LVU673
 1922              		.loc 1 1159 34 view .LVU674
1160:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmatx);
 1923              		.loc 1 1160 5 view .LVU675
 1924 00b6 E26A     		ldr	r2, [r4, #44]
 1925 00b8 5468     		ldr	r4, [r2, #4]
 1926              	.LVL103:
 1927              		.loc 1 1160 5 is_stmt 0 view .LVU676
 1928 00ba 2168     		ldr	r1, [r4]
 1929 00bc 21F00F01 		bic	r1, r1, #15
 1930 00c0 2160     		str	r1, [r4]
 1931              		.loc 1 1160 5 is_stmt 1 view .LVU677
 1932 00c2 1168     		ldr	r1, [r2]
 1933 00c4 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1934 00c6 9340     		lsls	r3, r3, r2
 1935 00c8 4B60     		str	r3, [r1, #4]
 1936              	.LVL104:
 1937              	.L74:
1161:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
1162:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
1163:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1164:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   return msg;
1165:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1938              		.loc 1 1165 1 is_stmt 0 view .LVU678
 1939 00ca BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1940              	.LVL105:
 1941              	.L82:
1125:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 1942              		.loc 1 1125 14 view .LVU679
 1943 00ce 4FF0FF30 		mov	r0, #-1
 1944 00d2 FAE7     		b	.L74
 1945              		.cfi_endproc
 1946              	.LFE294:
 1948              		.comm	I2CD1,52,4
 1949              		.text
 1950              	.Letext0:
 1951              		.file 9 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 1952              		.file 10 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1953              		.file 11 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1954              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1955              		.file 13 "./lib/chibios/os/rt/include/chsystypes.h"
 1956              		.file 14 "./lib/chibios/os/rt/include/chschd.h"
 1957              		.file 15 "./lib/chibios/os/rt/include/chlists.h"
 1958              		.file 16 "./lib/chibios/os/common/ext/ST/STM32F3xx/stm32f303xc.h"
 1959              		.file 17 "./lib/chibios/os/rt/include/chsem.h"
 1960              		.file 18 "./lib/chibios/os/rt/include/chmtx.h"
 1961              		.file 19 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1962              		.file 20 "./lib/chibios/os/hal/include/hal_i2c.h"
 1963              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 1964              		.file 22 "./lib/chibios/os/hal/ports/common/ARMCMx/nvic.h"
 1965              		.file 23 "./lib/chibios/os/rt/include/chthreads.h"
 1966              		.file 24 "./lib/chibios/os/hal/include/hal_st.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_i2c_lld.c
     /tmp/ccXODVva.s:21     .text.i2c_lld_setup_rx_transfer:0000000000000000 $t
     /tmp/ccXODVva.s:26     .text.i2c_lld_setup_rx_transfer:0000000000000000 i2c_lld_setup_rx_transfer
     /tmp/ccXODVva.s:92     .text.i2c_lld_setup_tx_transfer:0000000000000000 $t
     /tmp/ccXODVva.s:97     .text.i2c_lld_setup_tx_transfer:0000000000000000 i2c_lld_setup_tx_transfer
     /tmp/ccXODVva.s:154    .text.VectorBC:0000000000000000 $t
     /tmp/ccXODVva.s:160    .text.VectorBC:0000000000000000 VectorBC
     /tmp/ccXODVva.s:546    .text.VectorBC:00000000000000fc $d
                            *COM*:0000000000000034 I2CD1
     /tmp/ccXODVva.s:556    .text.VectorC0:0000000000000000 $t
     /tmp/ccXODVva.s:562    .text.VectorC0:0000000000000000 VectorC0
     /tmp/ccXODVva.s:795    .text.VectorC0:0000000000000090 $d
     /tmp/ccXODVva.s:801    .text.i2c_lld_init:0000000000000000 $t
     /tmp/ccXODVva.s:807    .text.i2c_lld_init:0000000000000000 i2c_lld_init
     /tmp/ccXODVva.s:842    .text.i2c_lld_init:0000000000000018 $d
     /tmp/ccXODVva.s:848    .text.i2c_lld_start:0000000000000000 $t
     /tmp/ccXODVva.s:854    .text.i2c_lld_start:0000000000000000 i2c_lld_start
     /tmp/ccXODVva.s:1009   .text.i2c_lld_start:00000000000000ac $d
     /tmp/ccXODVva.s:1015   .text.i2c_lld_stop:0000000000000000 $t
     /tmp/ccXODVva.s:1021   .text.i2c_lld_stop:0000000000000000 i2c_lld_stop
     /tmp/ccXODVva.s:1155   .text.i2c_lld_stop:0000000000000084 $d
     /tmp/ccXODVva.s:1161   .text.i2c_lld_master_receive_timeout:0000000000000000 $t
     /tmp/ccXODVva.s:1167   .text.i2c_lld_master_receive_timeout:0000000000000000 i2c_lld_master_receive_timeout
     /tmp/ccXODVva.s:1540   .text.i2c_lld_master_transmit_timeout:0000000000000000 $t
     /tmp/ccXODVva.s:1546   .text.i2c_lld_master_transmit_timeout:0000000000000000 i2c_lld_master_transmit_timeout

UNDEFINED SYMBOLS
chThdResumeI
_port_irq_epilogue
i2cObjectInit
dmaStreamAllocI
nvicEnableVector
dmaStreamFreeI
nvicDisableVector
stGetCounter
chThdSuspendTimeoutS
