   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"hal_pwm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/chibios/os/hal/src/hal_pwm.c"
  20              		.section	.text.pwmInit,"ax",%progbits
  21              		.align	1
  22              		.global	pwmInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	pwmInit:
  28              	.LFB282:
   1:lib/chibios/os/hal/src/hal_pwm.c **** /*
   2:lib/chibios/os/hal/src/hal_pwm.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_pwm.c **** 
   4:lib/chibios/os/hal/src/hal_pwm.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_pwm.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_pwm.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_pwm.c **** 
   8:lib/chibios/os/hal/src/hal_pwm.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_pwm.c **** 
  10:lib/chibios/os/hal/src/hal_pwm.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_pwm.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_pwm.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_pwm.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_pwm.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_pwm.c **** */
  16:lib/chibios/os/hal/src/hal_pwm.c **** 
  17:lib/chibios/os/hal/src/hal_pwm.c **** /**
  18:lib/chibios/os/hal/src/hal_pwm.c ****  * @file    hal_pwm.c
  19:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   PWM Driver code.
  20:lib/chibios/os/hal/src/hal_pwm.c ****  *
  21:lib/chibios/os/hal/src/hal_pwm.c ****  * @addtogroup PWM
  22:lib/chibios/os/hal/src/hal_pwm.c ****  * @{
  23:lib/chibios/os/hal/src/hal_pwm.c ****  */
  24:lib/chibios/os/hal/src/hal_pwm.c **** 
  25:lib/chibios/os/hal/src/hal_pwm.c **** #include "hal.h"
  26:lib/chibios/os/hal/src/hal_pwm.c **** 
  27:lib/chibios/os/hal/src/hal_pwm.c **** #if (HAL_USE_PWM == TRUE) || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/src/hal_pwm.c **** 
  29:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/src/hal_pwm.c **** 
  33:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  34:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver exported variables.                                                */
  35:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  36:lib/chibios/os/hal/src/hal_pwm.c **** 
  37:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  38:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver local variables and types.                                         */
  39:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  40:lib/chibios/os/hal/src/hal_pwm.c **** 
  41:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  42:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver local functions.                                                   */
  43:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  44:lib/chibios/os/hal/src/hal_pwm.c **** 
  45:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  46:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver exported functions.                                                */
  47:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  48:lib/chibios/os/hal/src/hal_pwm.c **** 
  49:lib/chibios/os/hal/src/hal_pwm.c **** /**
  50:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   PWM Driver initialization.
  51:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
  52:lib/chibios/os/hal/src/hal_pwm.c ****  *          no need to explicitly initialize the driver.
  53:lib/chibios/os/hal/src/hal_pwm.c ****  *
  54:lib/chibios/os/hal/src/hal_pwm.c ****  * @init
  55:lib/chibios/os/hal/src/hal_pwm.c ****  */
  56:lib/chibios/os/hal/src/hal_pwm.c **** void pwmInit(void) {
  29              		.loc 1 56 20 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  57:lib/chibios/os/hal/src/hal_pwm.c **** 
  58:lib/chibios/os/hal/src/hal_pwm.c ****   pwm_lld_init();
  34              		.loc 1 58 3 view .LVU1
  35 0000 FFF7FEBF 		b	pwm_lld_init
  36              	.LVL0:
  37              		.cfi_endproc
  38              	.LFE282:
  40              		.section	.text.pwmObjectInit,"ax",%progbits
  41              		.align	1
  42              		.global	pwmObjectInit
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	pwmObjectInit:
  48              	.LVL1:
  49              	.LFB283:
  59:lib/chibios/os/hal/src/hal_pwm.c **** }
  60:lib/chibios/os/hal/src/hal_pwm.c **** 
  61:lib/chibios/os/hal/src/hal_pwm.c **** /**
  62:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Initializes the standard part of a @p PWMDriver structure.
  63:lib/chibios/os/hal/src/hal_pwm.c ****  *
  64:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[out] pwmp     pointer to a @p PWMDriver object
  65:lib/chibios/os/hal/src/hal_pwm.c ****  *
  66:lib/chibios/os/hal/src/hal_pwm.c ****  * @init
  67:lib/chibios/os/hal/src/hal_pwm.c ****  */
  68:lib/chibios/os/hal/src/hal_pwm.c **** void pwmObjectInit(PWMDriver *pwmp) {
  50              		.loc 1 68 37 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  69:lib/chibios/os/hal/src/hal_pwm.c **** 
  70:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->state    = PWM_STOP;
  55              		.loc 1 70 3 view .LVU3
  56              		.loc 1 70 18 is_stmt 0 view .LVU4
  57 0000 0123     		movs	r3, #1
  58 0002 0370     		strb	r3, [r0]
  71:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config   = NULL;
  59              		.loc 1 71 3 is_stmt 1 view .LVU5
  60              		.loc 1 71 18 is_stmt 0 view .LVU6
  61 0004 0023     		movs	r3, #0
  62 0006 4360     		str	r3, [r0, #4]
  72:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled  = 0;
  63              		.loc 1 72 3 is_stmt 1 view .LVU7
  64              		.loc 1 72 18 is_stmt 0 view .LVU8
  65 0008 C360     		str	r3, [r0, #12]
  73:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->channels = 0;
  66              		.loc 1 73 3 is_stmt 1 view .LVU9
  67              		.loc 1 73 18 is_stmt 0 view .LVU10
  68 000a 0374     		strb	r3, [r0, #16]
  74:lib/chibios/os/hal/src/hal_pwm.c **** #if defined(PWM_DRIVER_EXT_INIT_HOOK)
  75:lib/chibios/os/hal/src/hal_pwm.c ****   PWM_DRIVER_EXT_INIT_HOOK(pwmp);
  76:lib/chibios/os/hal/src/hal_pwm.c **** #endif
  77:lib/chibios/os/hal/src/hal_pwm.c **** }
  69              		.loc 1 77 1 view .LVU11
  70 000c 7047     		bx	lr
  71              		.cfi_endproc
  72              	.LFE283:
  74              		.section	.text.pwmStart,"ax",%progbits
  75              		.align	1
  76              		.global	pwmStart
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	pwmStart:
  82              	.LVL2:
  83              	.LFB284:
  78:lib/chibios/os/hal/src/hal_pwm.c **** 
  79:lib/chibios/os/hal/src/hal_pwm.c **** /**
  80:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Configures and activates the PWM peripheral.
  81:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    Starting a driver that is already in the @p PWM_READY state
  82:lib/chibios/os/hal/src/hal_pwm.c ****  *          disables all the active channels.
  83:lib/chibios/os/hal/src/hal_pwm.c ****  *
  84:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
  85:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] config    pointer to a @p PWMConfig object
  86:lib/chibios/os/hal/src/hal_pwm.c ****  *
  87:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
  88:lib/chibios/os/hal/src/hal_pwm.c ****  */
  89:lib/chibios/os/hal/src/hal_pwm.c **** void pwmStart(PWMDriver *pwmp, const PWMConfig *config) {
  84              		.loc 1 89 57 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  90:lib/chibios/os/hal/src/hal_pwm.c **** 
  91:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (config != NULL));
  88              		.loc 1 91 3 view .LVU13
  89              		.loc 1 91 3 view .LVU14
  90              		.loc 1 91 3 view .LVU15
  92:lib/chibios/os/hal/src/hal_pwm.c **** 
  93:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
  91              		.loc 1 93 3 view .LVU16
  92              	.LBB141:
  93              	.LBI141:
  94              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
  95              		.loc 2 573 20 view .LVU17
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
  96              		.loc 2 575 3 view .LVU18
  97              	.LBB142:
  98              	.LBI142:
  99              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 100              		.loc 3 355 20 view .LVU19
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 101              		.loc 3 357 3 view .LVU20
 102              	.LBB143:
 103              	.LBI143:
 104              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 105              		.loc 4 669 27 view .LVU21
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 106              		.loc 4 677 3 view .LVU22
 107              	.LBB144:
 108              	.LBI144:
 109              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 110              		.loc 5 491 27 view .LVU23
 111              	.LBB145:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 112              		.loc 5 493 3 view .LVU24
 113              	.LBE145:
 114              	.LBE144:
 115              	.LBE143:
 116              	.LBE142:
 117              	.LBE141:
  89:lib/chibios/os/hal/src/hal_pwm.c **** 
 118              		.loc 1 89 57 is_stmt 0 view .LVU25
 119 0000 10B5     		push	{r4, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 123              	.LBB154:
 124              	.LBB152:
 125              	.LBB150:
 126              	.LBB148:
 127              	.LBB146:
 128              		.loc 5 493 3 view .LVU26
 129 0002 2023     		movs	r3, #32
 130              	.LBE146:
 131              	.LBE148:
 132              	.LBE150:
 133              	.LBE152:
 134              	.LBE154:
  89:lib/chibios/os/hal/src/hal_pwm.c **** 
 135              		.loc 1 89 57 view .LVU27
 136 0004 0446     		mov	r4, r0
 137              	.LBB155:
 138              	.LBB153:
 139              	.LBB151:
 140              	.LBB149:
 141              	.LBB147:
 142              		.loc 5 493 3 view .LVU28
 143              		.syntax unified
 144              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 145 0006 83F31188 		MSR basepri, r3
 146              	@ 0 "" 2
 147              	.LVL3:
 148              		.loc 5 493 3 view .LVU29
 149              		.thumb
 150              		.syntax unified
 151              	.LBE147:
 152              	.LBE149:
 153              	.LBE151:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 154              		.loc 3 358 34 is_stmt 1 view .LVU30
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 155              		.loc 3 359 20 view .LVU31
 156              	.LBE153:
 157              	.LBE155:
  94:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->state == PWM_STOP) || (pwmp->state == PWM_READY),
 158              		.loc 1 94 3 view .LVU32
 159              		.loc 1 94 3 view .LVU33
 160              		.loc 1 94 3 view .LVU34
  95:lib/chibios/os/hal/src/hal_pwm.c ****                 "invalid state");
  96:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config = config;
 161              		.loc 1 96 3 view .LVU35
  97:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->period = config->period;
 162              		.loc 1 97 16 is_stmt 0 view .LVU36
 163 000a 4B68     		ldr	r3, [r1, #4]
 164 000c 8360     		str	r3, [r0, #8]
  96:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->period = config->period;
 165              		.loc 1 96 16 view .LVU37
 166 000e 4160     		str	r1, [r0, #4]
 167              		.loc 1 97 3 is_stmt 1 view .LVU38
  98:lib/chibios/os/hal/src/hal_pwm.c ****   pwm_lld_start(pwmp);
 168              		.loc 1 98 3 view .LVU39
 169 0010 FFF7FEFF 		bl	pwm_lld_start
 170              	.LVL4:
  99:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled = 0;
 171              		.loc 1 99 3 view .LVU40
 172              		.loc 1 99 17 is_stmt 0 view .LVU41
 173 0014 0023     		movs	r3, #0
 100:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->state = PWM_READY;
 174              		.loc 1 100 15 view .LVU42
 175 0016 0222     		movs	r2, #2
  99:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled = 0;
 176              		.loc 1 99 17 view .LVU43
 177 0018 E360     		str	r3, [r4, #12]
 178              		.loc 1 100 3 is_stmt 1 view .LVU44
 179              		.loc 1 100 15 is_stmt 0 view .LVU45
 180 001a 2270     		strb	r2, [r4]
 101:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 181              		.loc 1 101 3 is_stmt 1 view .LVU46
 182              	.LBB156:
 183              	.LBI156:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 184              		.loc 2 584 20 view .LVU47
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 185              		.loc 2 586 3 view .LVU48
 186              	.LBB157:
 187              	.LBI157:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 188              		.loc 3 367 20 view .LVU49
 189              	.LBB158:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 190              		.loc 3 369 22 view .LVU50
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 191              		.loc 3 370 33 view .LVU51
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 192              		.loc 3 376 3 view .LVU52
 193              		.loc 3 376 3 view .LVU53
 194              		.loc 3 376 3 view .LVU54
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 195              		.loc 3 380 3 view .LVU55
 196              	.LBB159:
 197              	.LBI159:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 198              		.loc 4 693 27 view .LVU56
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 199              		.loc 4 696 3 view .LVU57
 200              	.LVL5:
 201              	.LBB160:
 202              	.LBI160:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 203              		.loc 5 491 27 view .LVU58
 204              	.LBB161:
 205              		.loc 5 493 3 view .LVU59
 206              		.syntax unified
 207              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 208 001c 83F31188 		MSR basepri, r3
 209              	@ 0 "" 2
 210              	.LVL6:
 211              		.loc 5 493 3 is_stmt 0 view .LVU60
 212              		.thumb
 213              		.syntax unified
 214              	.LBE161:
 215              	.LBE160:
 216              	.LBE159:
 217              	.LBE158:
 218              	.LBE157:
 219              	.LBE156:
 102:lib/chibios/os/hal/src/hal_pwm.c **** }
 220              		.loc 1 102 1 view .LVU61
 221 0020 10BD     		pop	{r4, pc}
 222              		.loc 1 102 1 view .LVU62
 223              		.cfi_endproc
 224              	.LFE284:
 226              		.section	.text.pwmStop,"ax",%progbits
 227              		.align	1
 228              		.global	pwmStop
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	pwmStop:
 234              	.LVL7:
 235              	.LFB285:
 103:lib/chibios/os/hal/src/hal_pwm.c **** 
 104:lib/chibios/os/hal/src/hal_pwm.c **** /**
 105:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Deactivates the PWM peripheral.
 106:lib/chibios/os/hal/src/hal_pwm.c ****  *
 107:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 108:lib/chibios/os/hal/src/hal_pwm.c ****  *
 109:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 110:lib/chibios/os/hal/src/hal_pwm.c ****  */
 111:lib/chibios/os/hal/src/hal_pwm.c **** void pwmStop(PWMDriver *pwmp) {
 236              		.loc 1 111 31 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 112:lib/chibios/os/hal/src/hal_pwm.c **** 
 113:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 240              		.loc 1 113 3 view .LVU64
 241              		.loc 1 113 3 view .LVU65
 242              		.loc 1 113 3 view .LVU66
 114:lib/chibios/os/hal/src/hal_pwm.c **** 
 115:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 243              		.loc 1 115 3 view .LVU67
 244              	.LBB162:
 245              	.LBI162:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 246              		.loc 2 573 20 view .LVU68
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 247              		.loc 2 575 3 view .LVU69
 248              	.LBB163:
 249              	.LBI163:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 250              		.loc 3 355 20 view .LVU70
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 251              		.loc 3 357 3 view .LVU71
 252              	.LBB164:
 253              	.LBI164:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 254              		.loc 4 669 27 view .LVU72
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 255              		.loc 4 677 3 view .LVU73
 256              	.LBB165:
 257              	.LBI165:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 258              		.loc 5 491 27 view .LVU74
 259              	.LBB166:
 260              		.loc 5 493 3 view .LVU75
 261              	.LBE166:
 262              	.LBE165:
 263              	.LBE164:
 264              	.LBE163:
 265              	.LBE162:
 111:lib/chibios/os/hal/src/hal_pwm.c **** 
 266              		.loc 1 111 31 is_stmt 0 view .LVU76
 267 0000 10B5     		push	{r4, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271              	.LBB175:
 272              	.LBB173:
 273              	.LBB171:
 274              	.LBB169:
 275              	.LBB167:
 276              		.loc 5 493 3 view .LVU77
 277 0002 2023     		movs	r3, #32
 278              	.LBE167:
 279              	.LBE169:
 280              	.LBE171:
 281              	.LBE173:
 282              	.LBE175:
 111:lib/chibios/os/hal/src/hal_pwm.c **** 
 283              		.loc 1 111 31 view .LVU78
 284 0004 0446     		mov	r4, r0
 285              	.LBB176:
 286              	.LBB174:
 287              	.LBB172:
 288              	.LBB170:
 289              	.LBB168:
 290              		.loc 5 493 3 view .LVU79
 291              		.syntax unified
 292              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 293 0006 83F31188 		MSR basepri, r3
 294              	@ 0 "" 2
 295              	.LVL8:
 296              		.loc 5 493 3 view .LVU80
 297              		.thumb
 298              		.syntax unified
 299              	.LBE168:
 300              	.LBE170:
 301              	.LBE172:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 302              		.loc 3 358 34 is_stmt 1 view .LVU81
 359:./lib/chibios/os/rt/include/chsys.h **** }
 303              		.loc 3 359 20 view .LVU82
 304              	.LBE174:
 305              	.LBE176:
 116:lib/chibios/os/hal/src/hal_pwm.c **** 
 117:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->state == PWM_STOP) || (pwmp->state == PWM_READY),
 306              		.loc 1 117 3 view .LVU83
 307              		.loc 1 117 3 view .LVU84
 308              		.loc 1 117 3 view .LVU85
 118:lib/chibios/os/hal/src/hal_pwm.c ****                 "invalid state");
 119:lib/chibios/os/hal/src/hal_pwm.c **** 
 120:lib/chibios/os/hal/src/hal_pwm.c ****   pwm_lld_stop(pwmp);
 309              		.loc 1 120 3 view .LVU86
 310 000a FFF7FEFF 		bl	pwm_lld_stop
 311              	.LVL9:
 121:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled = 0;
 312              		.loc 1 121 3 view .LVU87
 313              		.loc 1 121 17 is_stmt 0 view .LVU88
 314 000e 0023     		movs	r3, #0
 122:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config  = NULL;
 123:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->state   = PWM_STOP;
 315              		.loc 1 123 17 view .LVU89
 316 0010 0122     		movs	r2, #1
 121:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled = 0;
 317              		.loc 1 121 17 view .LVU90
 318 0012 E360     		str	r3, [r4, #12]
 122:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config  = NULL;
 319              		.loc 1 122 3 is_stmt 1 view .LVU91
 122:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config  = NULL;
 320              		.loc 1 122 17 is_stmt 0 view .LVU92
 321 0014 6360     		str	r3, [r4, #4]
 322              		.loc 1 123 3 is_stmt 1 view .LVU93
 323              		.loc 1 123 17 is_stmt 0 view .LVU94
 324 0016 2270     		strb	r2, [r4]
 124:lib/chibios/os/hal/src/hal_pwm.c **** 
 125:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 325              		.loc 1 125 3 is_stmt 1 view .LVU95
 326              	.LBB177:
 327              	.LBI177:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 328              		.loc 2 584 20 view .LVU96
 329              		.loc 2 586 3 view .LVU97
 330              	.LBB178:
 331              	.LBI178:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 332              		.loc 3 367 20 view .LVU98
 333              	.LBB179:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 334              		.loc 3 369 22 view .LVU99
 370:./lib/chibios/os/rt/include/chsys.h **** 
 335              		.loc 3 370 33 view .LVU100
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 336              		.loc 3 376 3 view .LVU101
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 337              		.loc 3 376 3 view .LVU102
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 338              		.loc 3 376 3 view .LVU103
 339              		.loc 3 380 3 view .LVU104
 340              	.LBB180:
 341              	.LBI180:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342              		.loc 4 693 27 view .LVU105
 343              		.loc 4 696 3 view .LVU106
 344              	.LVL10:
 345              	.LBB181:
 346              	.LBI181:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 347              		.loc 5 491 27 view .LVU107
 348              	.LBB182:
 349              		.loc 5 493 3 view .LVU108
 350              		.syntax unified
 351              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 352 0018 83F31188 		MSR basepri, r3
 353              	@ 0 "" 2
 354              	.LVL11:
 355              		.loc 5 493 3 is_stmt 0 view .LVU109
 356              		.thumb
 357              		.syntax unified
 358              	.LBE182:
 359              	.LBE181:
 360              	.LBE180:
 361              	.LBE179:
 362              	.LBE178:
 363              	.LBE177:
 126:lib/chibios/os/hal/src/hal_pwm.c **** }
 364              		.loc 1 126 1 view .LVU110
 365 001c 10BD     		pop	{r4, pc}
 366              		.loc 1 126 1 view .LVU111
 367              		.cfi_endproc
 368              	.LFE285:
 370              		.section	.text.pwmChangePeriod,"ax",%progbits
 371              		.align	1
 372              		.global	pwmChangePeriod
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	pwmChangePeriod:
 378              	.LVL12:
 379              	.LFB286:
 127:lib/chibios/os/hal/src/hal_pwm.c **** 
 128:lib/chibios/os/hal/src/hal_pwm.c **** /**
 129:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Changes the period the PWM peripheral.
 130:lib/chibios/os/hal/src/hal_pwm.c ****  * @details This function changes the period of a PWM unit that has already
 131:lib/chibios/os/hal/src/hal_pwm.c ****  *          been activated using @p pwmStart().
 132:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 133:lib/chibios/os/hal/src/hal_pwm.c ****  * @post    The PWM unit period is changed to the new value.
 134:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If a period is specified that is shorter than the pulse width
 135:lib/chibios/os/hal/src/hal_pwm.c ****  *          programmed in one of the channels then the behavior is not
 136:lib/chibios/os/hal/src/hal_pwm.c ****  *          guaranteed.
 137:lib/chibios/os/hal/src/hal_pwm.c ****  *
 138:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 139:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] period    new cycle time in ticks
 140:lib/chibios/os/hal/src/hal_pwm.c ****  *
 141:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 142:lib/chibios/os/hal/src/hal_pwm.c ****  */
 143:lib/chibios/os/hal/src/hal_pwm.c **** void pwmChangePeriod(PWMDriver *pwmp, pwmcnt_t period) {
 380              		.loc 1 143 56 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 144:lib/chibios/os/hal/src/hal_pwm.c **** 
 145:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 385              		.loc 1 145 3 view .LVU113
 386              		.loc 1 145 3 view .LVU114
 387              		.loc 1 145 3 view .LVU115
 146:lib/chibios/os/hal/src/hal_pwm.c **** 
 147:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 388              		.loc 1 147 3 view .LVU116
 389              	.LBB183:
 390              	.LBI183:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 391              		.loc 2 573 20 view .LVU117
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 392              		.loc 2 575 3 view .LVU118
 393              	.LBB184:
 394              	.LBI184:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 395              		.loc 3 355 20 view .LVU119
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 396              		.loc 3 357 3 view .LVU120
 397              	.LBB185:
 398              	.LBI185:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 399              		.loc 4 669 27 view .LVU121
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 400              		.loc 4 677 3 view .LVU122
 401              	.LBB186:
 402              	.LBI186:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 403              		.loc 5 491 27 view .LVU123
 404              	.LBB187:
 405              		.loc 5 493 3 view .LVU124
 406 0000 2023     		movs	r3, #32
 407              		.syntax unified
 408              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 409 0002 83F31188 		MSR basepri, r3
 410              	@ 0 "" 2
 411              	.LVL13:
 412              		.loc 5 493 3 is_stmt 0 view .LVU125
 413              		.thumb
 414              		.syntax unified
 415              	.LBE187:
 416              	.LBE186:
 417              	.LBE185:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 418              		.loc 3 358 34 is_stmt 1 view .LVU126
 359:./lib/chibios/os/rt/include/chsys.h **** }
 419              		.loc 3 359 20 view .LVU127
 420              	.LBE184:
 421              	.LBE183:
 148:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "invalid state");
 422              		.loc 1 148 3 view .LVU128
 423              		.loc 1 148 3 view .LVU129
 424              		.loc 1 148 3 view .LVU130
 149:lib/chibios/os/hal/src/hal_pwm.c ****   pwmChangePeriodI(pwmp, period);
 425              		.loc 1 149 3 view .LVU131
 426 0006 8369     		ldr	r3, [r0, #24]
 427 0008 8160     		str	r1, [r0, #8]
 428              		.loc 1 149 3 view .LVU132
 429 000a 0139     		subs	r1, r1, #1
 430              	.LVL14:
 431              		.loc 1 149 3 is_stmt 0 view .LVU133
 432 000c D962     		str	r1, [r3, #44]
 433              		.loc 1 149 33 is_stmt 1 view .LVU134
 150:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 434              		.loc 1 150 3 view .LVU135
 435              	.LBB188:
 436              	.LBI188:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 437              		.loc 2 584 20 view .LVU136
 438              		.loc 2 586 3 view .LVU137
 439              	.LBB189:
 440              	.LBI189:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 441              		.loc 3 367 20 view .LVU138
 442              	.LBB190:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 443              		.loc 3 369 22 view .LVU139
 370:./lib/chibios/os/rt/include/chsys.h **** 
 444              		.loc 3 370 33 view .LVU140
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 445              		.loc 3 376 3 view .LVU141
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 446              		.loc 3 376 3 view .LVU142
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 447              		.loc 3 376 3 view .LVU143
 448              		.loc 3 380 3 view .LVU144
 449              	.LBB191:
 450              	.LBI191:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 451              		.loc 4 693 27 view .LVU145
 452              		.loc 4 696 3 view .LVU146
 453              	.LVL15:
 454              	.LBB192:
 455              	.LBI192:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 456              		.loc 5 491 27 view .LVU147
 457              	.LBB193:
 458              		.loc 5 493 3 view .LVU148
 459 000e 0023     		movs	r3, #0
 460              		.syntax unified
 461              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 462 0010 83F31188 		MSR basepri, r3
 463              	@ 0 "" 2
 464              	.LVL16:
 465              		.loc 5 493 3 is_stmt 0 view .LVU149
 466              		.thumb
 467              		.syntax unified
 468              	.LBE193:
 469              	.LBE192:
 470              	.LBE191:
 471              	.LBE190:
 472              	.LBE189:
 473              	.LBE188:
 151:lib/chibios/os/hal/src/hal_pwm.c **** }
 474              		.loc 1 151 1 view .LVU150
 475 0014 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE286:
 479              		.section	.text.pwmEnableChannel,"ax",%progbits
 480              		.align	1
 481              		.global	pwmEnableChannel
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 486              	pwmEnableChannel:
 487              	.LVL17:
 488              	.LFB287:
 152:lib/chibios/os/hal/src/hal_pwm.c **** 
 153:lib/chibios/os/hal/src/hal_pwm.c **** /**
 154:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Enables a PWM channel.
 155:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 156:lib/chibios/os/hal/src/hal_pwm.c ****  * @post    The channel is active using the specified configuration.
 157:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    Depending on the hardware implementation this function has
 158:lib/chibios/os/hal/src/hal_pwm.c ****  *          effect starting on the next cycle (recommended implementation)
 159:lib/chibios/os/hal/src/hal_pwm.c ****  *          or immediately (fallback implementation).
 160:lib/chibios/os/hal/src/hal_pwm.c ****  *
 161:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 162:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 163:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] width     PWM pulse width as clock pulses number
 164:lib/chibios/os/hal/src/hal_pwm.c ****  *
 165:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 166:lib/chibios/os/hal/src/hal_pwm.c ****  */
 167:lib/chibios/os/hal/src/hal_pwm.c **** void pwmEnableChannel(PWMDriver *pwmp,
 168:lib/chibios/os/hal/src/hal_pwm.c ****                       pwmchannel_t channel,
 169:lib/chibios/os/hal/src/hal_pwm.c ****                       pwmcnt_t width) {
 489              		.loc 1 169 39 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 170:lib/chibios/os/hal/src/hal_pwm.c **** 
 171:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 493              		.loc 1 171 3 view .LVU152
 494              		.loc 1 171 3 view .LVU153
 495              		.loc 1 171 3 view .LVU154
 172:lib/chibios/os/hal/src/hal_pwm.c **** 
 173:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 496              		.loc 1 173 3 view .LVU155
 497              	.LBB194:
 498              	.LBI194:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 499              		.loc 2 573 20 view .LVU156
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 500              		.loc 2 575 3 view .LVU157
 501              	.LBB195:
 502              	.LBI195:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 503              		.loc 3 355 20 view .LVU158
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 504              		.loc 3 357 3 view .LVU159
 505              	.LBB196:
 506              	.LBI196:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 507              		.loc 4 669 27 view .LVU160
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 508              		.loc 4 677 3 view .LVU161
 509              	.LBB197:
 510              	.LBI197:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 511              		.loc 5 491 27 view .LVU162
 512              	.LBB198:
 513              		.loc 5 493 3 view .LVU163
 514              	.LBE198:
 515              	.LBE197:
 516              	.LBE196:
 517              	.LBE195:
 518              	.LBE194:
 169:lib/chibios/os/hal/src/hal_pwm.c **** 
 519              		.loc 1 169 39 is_stmt 0 view .LVU164
 520 0000 38B5     		push	{r3, r4, r5, lr}
 521              		.cfi_def_cfa_offset 16
 522              		.cfi_offset 3, -16
 523              		.cfi_offset 4, -12
 524              		.cfi_offset 5, -8
 525              		.cfi_offset 14, -4
 526              	.LBB203:
 527              	.LBB202:
 528              	.LBB201:
 529              	.LBB200:
 530              	.LBB199:
 531              		.loc 5 493 3 view .LVU165
 532 0002 2025     		movs	r5, #32
 533              		.syntax unified
 534              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 535 0004 85F31188 		MSR basepri, r5
 536              	@ 0 "" 2
 537              	.LVL18:
 538              		.loc 5 493 3 view .LVU166
 539              		.thumb
 540              		.syntax unified
 541              	.LBE199:
 542              	.LBE200:
 543              	.LBE201:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 544              		.loc 3 358 34 is_stmt 1 view .LVU167
 359:./lib/chibios/os/rt/include/chsys.h **** }
 545              		.loc 3 359 20 view .LVU168
 546              	.LBE202:
 547              	.LBE203:
 174:lib/chibios/os/hal/src/hal_pwm.c **** 
 175:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 548              		.loc 1 175 3 view .LVU169
 549              		.loc 1 175 3 view .LVU170
 550              		.loc 1 175 3 view .LVU171
 176:lib/chibios/os/hal/src/hal_pwm.c **** 
 177:lib/chibios/os/hal/src/hal_pwm.c ****   pwmEnableChannelI(pwmp, channel, width);
 551              		.loc 1 177 3 view .LVU172
 552              		.loc 1 177 3 view .LVU173
 553 0008 0125     		movs	r5, #1
 554 000a C468     		ldr	r4, [r0, #12]
 555 000c 8D40     		lsls	r5, r5, r1
 556 000e 2C43     		orrs	r4, r4, r5
 557 0010 C460     		str	r4, [r0, #12]
 558              		.loc 1 177 3 view .LVU174
 559 0012 FFF7FEFF 		bl	pwm_lld_enable_channel
 560              	.LVL19:
 561              		.loc 1 177 3 view .LVU175
 178:lib/chibios/os/hal/src/hal_pwm.c **** 
 179:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 562              		.loc 1 179 3 view .LVU176
 563              	.LBB204:
 564              	.LBI204:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 565              		.loc 2 584 20 view .LVU177
 566              		.loc 2 586 3 view .LVU178
 567              	.LBB205:
 568              	.LBI205:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 569              		.loc 3 367 20 view .LVU179
 570              	.LBB206:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 571              		.loc 3 369 22 view .LVU180
 370:./lib/chibios/os/rt/include/chsys.h **** 
 572              		.loc 3 370 33 view .LVU181
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 573              		.loc 3 376 3 view .LVU182
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 574              		.loc 3 376 3 view .LVU183
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 575              		.loc 3 376 3 view .LVU184
 576              		.loc 3 380 3 view .LVU185
 577              	.LBB207:
 578              	.LBI207:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 579              		.loc 4 693 27 view .LVU186
 580              		.loc 4 696 3 view .LVU187
 581              	.LBB208:
 582              	.LBI208:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 583              		.loc 5 491 27 view .LVU188
 584              	.LBB209:
 585              		.loc 5 493 3 view .LVU189
 586 0016 0023     		movs	r3, #0
 587              		.syntax unified
 588              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 589 0018 83F31188 		MSR basepri, r3
 590              	@ 0 "" 2
 591              	.LVL20:
 592              		.loc 5 493 3 is_stmt 0 view .LVU190
 593              		.thumb
 594              		.syntax unified
 595              	.LBE209:
 596              	.LBE208:
 597              	.LBE207:
 598              	.LBE206:
 599              	.LBE205:
 600              	.LBE204:
 180:lib/chibios/os/hal/src/hal_pwm.c **** }
 601              		.loc 1 180 1 view .LVU191
 602 001c 38BD     		pop	{r3, r4, r5, pc}
 603              		.cfi_endproc
 604              	.LFE287:
 606              		.section	.text.pwmDisableChannel,"ax",%progbits
 607              		.align	1
 608              		.global	pwmDisableChannel
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 613              	pwmDisableChannel:
 614              	.LVL21:
 615              	.LFB288:
 181:lib/chibios/os/hal/src/hal_pwm.c **** 
 182:lib/chibios/os/hal/src/hal_pwm.c **** /**
 183:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Disables a PWM channel and its notification.
 184:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 185:lib/chibios/os/hal/src/hal_pwm.c ****  * @post    The channel is disabled and its output line returned to the
 186:lib/chibios/os/hal/src/hal_pwm.c ****  *          idle state.
 187:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    Depending on the hardware implementation this function has
 188:lib/chibios/os/hal/src/hal_pwm.c ****  *          effect starting on the next cycle (recommended implementation)
 189:lib/chibios/os/hal/src/hal_pwm.c ****  *          or immediately (fallback implementation).
 190:lib/chibios/os/hal/src/hal_pwm.c ****  *
 191:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 192:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 193:lib/chibios/os/hal/src/hal_pwm.c ****  *
 194:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 195:lib/chibios/os/hal/src/hal_pwm.c ****  */
 196:lib/chibios/os/hal/src/hal_pwm.c **** void pwmDisableChannel(PWMDriver *pwmp, pwmchannel_t channel) {
 616              		.loc 1 196 63 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 197:lib/chibios/os/hal/src/hal_pwm.c **** 
 198:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 620              		.loc 1 198 3 view .LVU193
 621              		.loc 1 198 3 view .LVU194
 622              		.loc 1 198 3 view .LVU195
 199:lib/chibios/os/hal/src/hal_pwm.c **** 
 200:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 623              		.loc 1 200 3 view .LVU196
 624              	.LBB210:
 625              	.LBI210:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 626              		.loc 2 573 20 view .LVU197
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 627              		.loc 2 575 3 view .LVU198
 628              	.LBB211:
 629              	.LBI211:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 630              		.loc 3 355 20 view .LVU199
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 631              		.loc 3 357 3 view .LVU200
 632              	.LBB212:
 633              	.LBI212:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634              		.loc 4 669 27 view .LVU201
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 635              		.loc 4 677 3 view .LVU202
 636              	.LBB213:
 637              	.LBI213:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 638              		.loc 5 491 27 view .LVU203
 639              	.LBB214:
 640              		.loc 5 493 3 view .LVU204
 641              	.LBE214:
 642              	.LBE213:
 643              	.LBE212:
 644              	.LBE211:
 645              	.LBE210:
 196:lib/chibios/os/hal/src/hal_pwm.c **** 
 646              		.loc 1 196 63 is_stmt 0 view .LVU205
 647 0000 10B5     		push	{r4, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 4, -8
 650              		.cfi_offset 14, -4
 651              	.LBB219:
 652              	.LBB218:
 653              	.LBB217:
 654              	.LBB216:
 655              	.LBB215:
 656              		.loc 5 493 3 view .LVU206
 657 0002 2024     		movs	r4, #32
 658              		.syntax unified
 659              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 660 0004 84F31188 		MSR basepri, r4
 661              	@ 0 "" 2
 662              	.LVL22:
 663              		.loc 5 493 3 view .LVU207
 664              		.thumb
 665              		.syntax unified
 666              	.LBE215:
 667              	.LBE216:
 668              	.LBE217:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 669              		.loc 3 358 34 is_stmt 1 view .LVU208
 359:./lib/chibios/os/rt/include/chsys.h **** }
 670              		.loc 3 359 20 view .LVU209
 671              	.LBE218:
 672              	.LBE219:
 201:lib/chibios/os/hal/src/hal_pwm.c **** 
 202:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 673              		.loc 1 202 3 view .LVU210
 674              		.loc 1 202 3 view .LVU211
 675              		.loc 1 202 3 view .LVU212
 203:lib/chibios/os/hal/src/hal_pwm.c **** 
 204:lib/chibios/os/hal/src/hal_pwm.c ****   pwmDisableChannelI(pwmp, channel);
 676              		.loc 1 204 3 view .LVU213
 677              		.loc 1 204 3 view .LVU214
 678 0008 0124     		movs	r4, #1
 679 000a C268     		ldr	r2, [r0, #12]
 680 000c 8C40     		lsls	r4, r4, r1
 681 000e 22EA0402 		bic	r2, r2, r4
 682 0012 C260     		str	r2, [r0, #12]
 683              		.loc 1 204 3 view .LVU215
 684 0014 FFF7FEFF 		bl	pwm_lld_disable_channel
 685              	.LVL23:
 686              		.loc 1 204 3 view .LVU216
 205:lib/chibios/os/hal/src/hal_pwm.c **** 
 206:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 687              		.loc 1 206 3 view .LVU217
 688              	.LBB220:
 689              	.LBI220:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 690              		.loc 2 584 20 view .LVU218
 691              		.loc 2 586 3 view .LVU219
 692              	.LBB221:
 693              	.LBI221:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 694              		.loc 3 367 20 view .LVU220
 695              	.LBB222:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 696              		.loc 3 369 22 view .LVU221
 370:./lib/chibios/os/rt/include/chsys.h **** 
 697              		.loc 3 370 33 view .LVU222
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 698              		.loc 3 376 3 view .LVU223
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 699              		.loc 3 376 3 view .LVU224
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 700              		.loc 3 376 3 view .LVU225
 701              		.loc 3 380 3 view .LVU226
 702              	.LBB223:
 703              	.LBI223:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 704              		.loc 4 693 27 view .LVU227
 705              		.loc 4 696 3 view .LVU228
 706              	.LBB224:
 707              	.LBI224:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 708              		.loc 5 491 27 view .LVU229
 709              	.LBB225:
 710              		.loc 5 493 3 view .LVU230
 711 0018 0023     		movs	r3, #0
 712              		.syntax unified
 713              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 714 001a 83F31188 		MSR basepri, r3
 715              	@ 0 "" 2
 716              	.LVL24:
 717              		.loc 5 493 3 is_stmt 0 view .LVU231
 718              		.thumb
 719              		.syntax unified
 720              	.LBE225:
 721              	.LBE224:
 722              	.LBE223:
 723              	.LBE222:
 724              	.LBE221:
 725              	.LBE220:
 207:lib/chibios/os/hal/src/hal_pwm.c **** }
 726              		.loc 1 207 1 view .LVU232
 727 001e 10BD     		pop	{r4, pc}
 728              		.cfi_endproc
 729              	.LFE288:
 731              		.section	.text.pwmEnablePeriodicNotification,"ax",%progbits
 732              		.align	1
 733              		.global	pwmEnablePeriodicNotification
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 738              	pwmEnablePeriodicNotification:
 739              	.LVL25:
 740              	.LFB289:
 208:lib/chibios/os/hal/src/hal_pwm.c **** 
 209:lib/chibios/os/hal/src/hal_pwm.c **** /**
 210:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Enables the periodic activation edge notification.
 211:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 212:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If the notification is already enabled then the call has no effect.
 213:lib/chibios/os/hal/src/hal_pwm.c ****  *
 214:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 215:lib/chibios/os/hal/src/hal_pwm.c ****  *
 216:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 217:lib/chibios/os/hal/src/hal_pwm.c ****  */
 218:lib/chibios/os/hal/src/hal_pwm.c **** void pwmEnablePeriodicNotification(PWMDriver *pwmp) {
 741              		.loc 1 218 53 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 219:lib/chibios/os/hal/src/hal_pwm.c **** 
 220:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 745              		.loc 1 220 3 view .LVU234
 746              		.loc 1 220 3 view .LVU235
 747              		.loc 1 220 3 view .LVU236
 221:lib/chibios/os/hal/src/hal_pwm.c **** 
 222:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 748              		.loc 1 222 3 view .LVU237
 749              	.LBB226:
 750              	.LBI226:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 751              		.loc 2 573 20 view .LVU238
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 752              		.loc 2 575 3 view .LVU239
 753              	.LBB227:
 754              	.LBI227:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 755              		.loc 3 355 20 view .LVU240
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 756              		.loc 3 357 3 view .LVU241
 757              	.LBB228:
 758              	.LBI228:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 759              		.loc 4 669 27 view .LVU242
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 760              		.loc 4 677 3 view .LVU243
 761              	.LBB229:
 762              	.LBI229:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 763              		.loc 5 491 27 view .LVU244
 764              	.LBB230:
 765              		.loc 5 493 3 view .LVU245
 766              	.LBE230:
 767              	.LBE229:
 768              	.LBE228:
 769              	.LBE227:
 770              	.LBE226:
 218:lib/chibios/os/hal/src/hal_pwm.c **** 
 771              		.loc 1 218 53 is_stmt 0 view .LVU246
 772 0000 08B5     		push	{r3, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 3, -8
 775              		.cfi_offset 14, -4
 776              	.LBB235:
 777              	.LBB234:
 778              	.LBB233:
 779              	.LBB232:
 780              	.LBB231:
 781              		.loc 5 493 3 view .LVU247
 782 0002 2023     		movs	r3, #32
 783              		.syntax unified
 784              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 785 0004 83F31188 		MSR basepri, r3
 786              	@ 0 "" 2
 787              	.LVL26:
 788              		.loc 5 493 3 view .LVU248
 789              		.thumb
 790              		.syntax unified
 791              	.LBE231:
 792              	.LBE232:
 793              	.LBE233:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 794              		.loc 3 358 34 is_stmt 1 view .LVU249
 359:./lib/chibios/os/rt/include/chsys.h **** }
 795              		.loc 3 359 20 view .LVU250
 796              	.LBE234:
 797              	.LBE235:
 223:lib/chibios/os/hal/src/hal_pwm.c **** 
 224:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 798              		.loc 1 224 3 view .LVU251
 799              		.loc 1 224 3 view .LVU252
 800              		.loc 1 224 3 view .LVU253
 225:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->callback != NULL, "undefined periodic callback");
 801              		.loc 1 225 3 view .LVU254
 802              		.loc 1 225 3 view .LVU255
 803              		.loc 1 225 3 view .LVU256
 226:lib/chibios/os/hal/src/hal_pwm.c **** 
 227:lib/chibios/os/hal/src/hal_pwm.c ****   pwmEnablePeriodicNotificationI(pwmp);
 804              		.loc 1 227 3 view .LVU257
 805 0008 FFF7FEFF 		bl	pwm_lld_enable_periodic_notification
 806              	.LVL27:
 228:lib/chibios/os/hal/src/hal_pwm.c **** 
 229:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 807              		.loc 1 229 3 view .LVU258
 808              	.LBB236:
 809              	.LBI236:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 810              		.loc 2 584 20 view .LVU259
 811              		.loc 2 586 3 view .LVU260
 812              	.LBB237:
 813              	.LBI237:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 814              		.loc 3 367 20 view .LVU261
 815              	.LBB238:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 816              		.loc 3 369 22 view .LVU262
 370:./lib/chibios/os/rt/include/chsys.h **** 
 817              		.loc 3 370 33 view .LVU263
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 818              		.loc 3 376 3 view .LVU264
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 819              		.loc 3 376 3 view .LVU265
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 820              		.loc 3 376 3 view .LVU266
 821              		.loc 3 380 3 view .LVU267
 822              	.LBB239:
 823              	.LBI239:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 824              		.loc 4 693 27 view .LVU268
 825              		.loc 4 696 3 view .LVU269
 826              	.LBB240:
 827              	.LBI240:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 828              		.loc 5 491 27 view .LVU270
 829              	.LBB241:
 830              		.loc 5 493 3 view .LVU271
 831 000c 0023     		movs	r3, #0
 832              		.syntax unified
 833              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 834 000e 83F31188 		MSR basepri, r3
 835              	@ 0 "" 2
 836              	.LVL28:
 837              		.loc 5 493 3 is_stmt 0 view .LVU272
 838              		.thumb
 839              		.syntax unified
 840              	.LBE241:
 841              	.LBE240:
 842              	.LBE239:
 843              	.LBE238:
 844              	.LBE237:
 845              	.LBE236:
 230:lib/chibios/os/hal/src/hal_pwm.c **** }
 846              		.loc 1 230 1 view .LVU273
 847 0012 08BD     		pop	{r3, pc}
 848              		.cfi_endproc
 849              	.LFE289:
 851              		.section	.text.pwmDisablePeriodicNotification,"ax",%progbits
 852              		.align	1
 853              		.global	pwmDisablePeriodicNotification
 854              		.syntax unified
 855              		.thumb
 856              		.thumb_func
 858              	pwmDisablePeriodicNotification:
 859              	.LVL29:
 860              	.LFB290:
 231:lib/chibios/os/hal/src/hal_pwm.c **** 
 232:lib/chibios/os/hal/src/hal_pwm.c **** /**
 233:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Disables the periodic activation edge notification.
 234:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 235:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If the notification is already disabled then the call has no effect.
 236:lib/chibios/os/hal/src/hal_pwm.c ****  *
 237:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 238:lib/chibios/os/hal/src/hal_pwm.c ****  *
 239:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 240:lib/chibios/os/hal/src/hal_pwm.c ****  */
 241:lib/chibios/os/hal/src/hal_pwm.c **** void pwmDisablePeriodicNotification(PWMDriver *pwmp) {
 861              		.loc 1 241 54 is_stmt 1 view -0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 242:lib/chibios/os/hal/src/hal_pwm.c **** 
 243:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 865              		.loc 1 243 3 view .LVU275
 866              		.loc 1 243 3 view .LVU276
 867              		.loc 1 243 3 view .LVU277
 244:lib/chibios/os/hal/src/hal_pwm.c **** 
 245:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 868              		.loc 1 245 3 view .LVU278
 869              	.LBB242:
 870              	.LBI242:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 871              		.loc 2 573 20 view .LVU279
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 872              		.loc 2 575 3 view .LVU280
 873              	.LBB243:
 874              	.LBI243:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 875              		.loc 3 355 20 view .LVU281
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 876              		.loc 3 357 3 view .LVU282
 877              	.LBB244:
 878              	.LBI244:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 879              		.loc 4 669 27 view .LVU283
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 880              		.loc 4 677 3 view .LVU284
 881              	.LBB245:
 882              	.LBI245:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 883              		.loc 5 491 27 view .LVU285
 884              	.LBB246:
 885              		.loc 5 493 3 view .LVU286
 886              	.LBE246:
 887              	.LBE245:
 888              	.LBE244:
 889              	.LBE243:
 890              	.LBE242:
 241:lib/chibios/os/hal/src/hal_pwm.c **** 
 891              		.loc 1 241 54 is_stmt 0 view .LVU287
 892 0000 08B5     		push	{r3, lr}
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 3, -8
 895              		.cfi_offset 14, -4
 896              	.LBB251:
 897              	.LBB250:
 898              	.LBB249:
 899              	.LBB248:
 900              	.LBB247:
 901              		.loc 5 493 3 view .LVU288
 902 0002 2023     		movs	r3, #32
 903              		.syntax unified
 904              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 905 0004 83F31188 		MSR basepri, r3
 906              	@ 0 "" 2
 907              	.LVL30:
 908              		.loc 5 493 3 view .LVU289
 909              		.thumb
 910              		.syntax unified
 911              	.LBE247:
 912              	.LBE248:
 913              	.LBE249:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 914              		.loc 3 358 34 is_stmt 1 view .LVU290
 359:./lib/chibios/os/rt/include/chsys.h **** }
 915              		.loc 3 359 20 view .LVU291
 916              	.LBE250:
 917              	.LBE251:
 246:lib/chibios/os/hal/src/hal_pwm.c **** 
 247:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 918              		.loc 1 247 3 view .LVU292
 919              		.loc 1 247 3 view .LVU293
 920              		.loc 1 247 3 view .LVU294
 248:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->callback != NULL, "undefined periodic callback");
 921              		.loc 1 248 3 view .LVU295
 922              		.loc 1 248 3 view .LVU296
 923              		.loc 1 248 3 view .LVU297
 249:lib/chibios/os/hal/src/hal_pwm.c **** 
 250:lib/chibios/os/hal/src/hal_pwm.c ****   pwmDisablePeriodicNotificationI(pwmp);
 924              		.loc 1 250 3 view .LVU298
 925 0008 FFF7FEFF 		bl	pwm_lld_disable_periodic_notification
 926              	.LVL31:
 251:lib/chibios/os/hal/src/hal_pwm.c **** 
 252:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 927              		.loc 1 252 3 view .LVU299
 928              	.LBB252:
 929              	.LBI252:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 930              		.loc 2 584 20 view .LVU300
 931              		.loc 2 586 3 view .LVU301
 932              	.LBB253:
 933              	.LBI253:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 934              		.loc 3 367 20 view .LVU302
 935              	.LBB254:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 936              		.loc 3 369 22 view .LVU303
 370:./lib/chibios/os/rt/include/chsys.h **** 
 937              		.loc 3 370 33 view .LVU304
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 938              		.loc 3 376 3 view .LVU305
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 939              		.loc 3 376 3 view .LVU306
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 940              		.loc 3 376 3 view .LVU307
 941              		.loc 3 380 3 view .LVU308
 942              	.LBB255:
 943              	.LBI255:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 944              		.loc 4 693 27 view .LVU309
 945              		.loc 4 696 3 view .LVU310
 946              	.LBB256:
 947              	.LBI256:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 948              		.loc 5 491 27 view .LVU311
 949              	.LBB257:
 950              		.loc 5 493 3 view .LVU312
 951 000c 0023     		movs	r3, #0
 952              		.syntax unified
 953              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 954 000e 83F31188 		MSR basepri, r3
 955              	@ 0 "" 2
 956              	.LVL32:
 957              		.loc 5 493 3 is_stmt 0 view .LVU313
 958              		.thumb
 959              		.syntax unified
 960              	.LBE257:
 961              	.LBE256:
 962              	.LBE255:
 963              	.LBE254:
 964              	.LBE253:
 965              	.LBE252:
 253:lib/chibios/os/hal/src/hal_pwm.c **** }
 966              		.loc 1 253 1 view .LVU314
 967 0012 08BD     		pop	{r3, pc}
 968              		.cfi_endproc
 969              	.LFE290:
 971              		.section	.text.pwmEnableChannelNotification,"ax",%progbits
 972              		.align	1
 973              		.global	pwmEnableChannelNotification
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 978              	pwmEnableChannelNotification:
 979              	.LVL33:
 980              	.LFB291:
 254:lib/chibios/os/hal/src/hal_pwm.c **** 
 255:lib/chibios/os/hal/src/hal_pwm.c **** /**
 256:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Enables a channel de-activation edge notification.
 257:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 258:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The channel must have been activated using @p pwmEnableChannel().
 259:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If the notification is already enabled then the call has no effect.
 260:lib/chibios/os/hal/src/hal_pwm.c ****  *
 261:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 262:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 263:lib/chibios/os/hal/src/hal_pwm.c ****  *
 264:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 265:lib/chibios/os/hal/src/hal_pwm.c ****  */
 266:lib/chibios/os/hal/src/hal_pwm.c **** void pwmEnableChannelNotification(PWMDriver *pwmp, pwmchannel_t channel) {
 981              		.loc 1 266 74 is_stmt 1 view -0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 267:lib/chibios/os/hal/src/hal_pwm.c **** 
 268:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 985              		.loc 1 268 3 view .LVU316
 986              		.loc 1 268 3 view .LVU317
 987              		.loc 1 268 3 view .LVU318
 269:lib/chibios/os/hal/src/hal_pwm.c **** 
 270:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 988              		.loc 1 270 3 view .LVU319
 989              	.LBB258:
 990              	.LBI258:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 991              		.loc 2 573 20 view .LVU320
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 992              		.loc 2 575 3 view .LVU321
 993              	.LBB259:
 994              	.LBI259:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 995              		.loc 3 355 20 view .LVU322
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 996              		.loc 3 357 3 view .LVU323
 997              	.LBB260:
 998              	.LBI260:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 999              		.loc 4 669 27 view .LVU324
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1000              		.loc 4 677 3 view .LVU325
 1001              	.LBB261:
 1002              	.LBI261:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1003              		.loc 5 491 27 view .LVU326
 1004              	.LBB262:
 1005              		.loc 5 493 3 view .LVU327
 1006              	.LBE262:
 1007              	.LBE261:
 1008              	.LBE260:
 1009              	.LBE259:
 1010              	.LBE258:
 266:lib/chibios/os/hal/src/hal_pwm.c **** 
 1011              		.loc 1 266 74 is_stmt 0 view .LVU328
 1012 0000 08B5     		push	{r3, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 3, -8
 1015              		.cfi_offset 14, -4
 1016              	.LBB267:
 1017              	.LBB266:
 1018              	.LBB265:
 1019              	.LBB264:
 1020              	.LBB263:
 1021              		.loc 5 493 3 view .LVU329
 1022 0002 2023     		movs	r3, #32
 1023              		.syntax unified
 1024              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1025 0004 83F31188 		MSR basepri, r3
 1026              	@ 0 "" 2
 1027              	.LVL34:
 1028              		.loc 5 493 3 view .LVU330
 1029              		.thumb
 1030              		.syntax unified
 1031              	.LBE263:
 1032              	.LBE264:
 1033              	.LBE265:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1034              		.loc 3 358 34 is_stmt 1 view .LVU331
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1035              		.loc 3 359 20 view .LVU332
 1036              	.LBE266:
 1037              	.LBE267:
 271:lib/chibios/os/hal/src/hal_pwm.c **** 
 272:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 1038              		.loc 1 272 3 view .LVU333
 1039              		.loc 1 272 3 view .LVU334
 1040              		.loc 1 272 3 view .LVU335
 273:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->enabled & ((pwmchnmsk_t)1U << (pwmchnmsk_t)channel)) != 0U,
 1041              		.loc 1 273 3 view .LVU336
 1042              		.loc 1 273 3 view .LVU337
 1043              		.loc 1 273 3 view .LVU338
 274:lib/chibios/os/hal/src/hal_pwm.c ****                 "channel not enabled");
 275:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->channels[channel].callback != NULL,
 1044              		.loc 1 275 3 view .LVU339
 1045              		.loc 1 275 3 view .LVU340
 1046              		.loc 1 275 3 view .LVU341
 276:lib/chibios/os/hal/src/hal_pwm.c ****                 "undefined channel callback");
 277:lib/chibios/os/hal/src/hal_pwm.c **** 
 278:lib/chibios/os/hal/src/hal_pwm.c ****   pwmEnableChannelNotificationI(pwmp, channel);
 1047              		.loc 1 278 3 view .LVU342
 1048 0008 FFF7FEFF 		bl	pwm_lld_enable_channel_notification
 1049              	.LVL35:
 279:lib/chibios/os/hal/src/hal_pwm.c **** 
 280:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 1050              		.loc 1 280 3 view .LVU343
 1051              	.LBB268:
 1052              	.LBI268:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1053              		.loc 2 584 20 view .LVU344
 1054              		.loc 2 586 3 view .LVU345
 1055              	.LBB269:
 1056              	.LBI269:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1057              		.loc 3 367 20 view .LVU346
 1058              	.LBB270:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1059              		.loc 3 369 22 view .LVU347
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1060              		.loc 3 370 33 view .LVU348
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1061              		.loc 3 376 3 view .LVU349
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1062              		.loc 3 376 3 view .LVU350
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1063              		.loc 3 376 3 view .LVU351
 1064              		.loc 3 380 3 view .LVU352
 1065              	.LBB271:
 1066              	.LBI271:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1067              		.loc 4 693 27 view .LVU353
 1068              		.loc 4 696 3 view .LVU354
 1069              	.LBB272:
 1070              	.LBI272:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1071              		.loc 5 491 27 view .LVU355
 1072              	.LBB273:
 1073              		.loc 5 493 3 view .LVU356
 1074 000c 0023     		movs	r3, #0
 1075              		.syntax unified
 1076              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1077 000e 83F31188 		MSR basepri, r3
 1078              	@ 0 "" 2
 1079              	.LVL36:
 1080              		.loc 5 493 3 is_stmt 0 view .LVU357
 1081              		.thumb
 1082              		.syntax unified
 1083              	.LBE273:
 1084              	.LBE272:
 1085              	.LBE271:
 1086              	.LBE270:
 1087              	.LBE269:
 1088              	.LBE268:
 281:lib/chibios/os/hal/src/hal_pwm.c **** }
 1089              		.loc 1 281 1 view .LVU358
 1090 0012 08BD     		pop	{r3, pc}
 1091              		.cfi_endproc
 1092              	.LFE291:
 1094              		.section	.text.pwmDisableChannelNotification,"ax",%progbits
 1095              		.align	1
 1096              		.global	pwmDisableChannelNotification
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1101              	pwmDisableChannelNotification:
 1102              	.LVL37:
 1103              	.LFB292:
 282:lib/chibios/os/hal/src/hal_pwm.c **** 
 283:lib/chibios/os/hal/src/hal_pwm.c **** /**
 284:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Disables a channel de-activation edge notification.
 285:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 286:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The channel must have been activated using @p pwmEnableChannel().
 287:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If the notification is already disabled then the call has no effect.
 288:lib/chibios/os/hal/src/hal_pwm.c ****  *
 289:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 290:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 291:lib/chibios/os/hal/src/hal_pwm.c ****  *
 292:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 293:lib/chibios/os/hal/src/hal_pwm.c ****  */
 294:lib/chibios/os/hal/src/hal_pwm.c **** void pwmDisableChannelNotification(PWMDriver *pwmp, pwmchannel_t channel) {
 1104              		.loc 1 294 75 is_stmt 1 view -0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
 295:lib/chibios/os/hal/src/hal_pwm.c **** 
 296:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 1108              		.loc 1 296 3 view .LVU360
 1109              		.loc 1 296 3 view .LVU361
 1110              		.loc 1 296 3 view .LVU362
 297:lib/chibios/os/hal/src/hal_pwm.c **** 
 298:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 1111              		.loc 1 298 3 view .LVU363
 1112              	.LBB274:
 1113              	.LBI274:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1114              		.loc 2 573 20 view .LVU364
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1115              		.loc 2 575 3 view .LVU365
 1116              	.LBB275:
 1117              	.LBI275:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1118              		.loc 3 355 20 view .LVU366
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1119              		.loc 3 357 3 view .LVU367
 1120              	.LBB276:
 1121              	.LBI276:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1122              		.loc 4 669 27 view .LVU368
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1123              		.loc 4 677 3 view .LVU369
 1124              	.LBB277:
 1125              	.LBI277:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1126              		.loc 5 491 27 view .LVU370
 1127              	.LBB278:
 1128              		.loc 5 493 3 view .LVU371
 1129              	.LBE278:
 1130              	.LBE277:
 1131              	.LBE276:
 1132              	.LBE275:
 1133              	.LBE274:
 294:lib/chibios/os/hal/src/hal_pwm.c **** 
 1134              		.loc 1 294 75 is_stmt 0 view .LVU372
 1135 0000 08B5     		push	{r3, lr}
 1136              		.cfi_def_cfa_offset 8
 1137              		.cfi_offset 3, -8
 1138              		.cfi_offset 14, -4
 1139              	.LBB283:
 1140              	.LBB282:
 1141              	.LBB281:
 1142              	.LBB280:
 1143              	.LBB279:
 1144              		.loc 5 493 3 view .LVU373
 1145 0002 2023     		movs	r3, #32
 1146              		.syntax unified
 1147              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1148 0004 83F31188 		MSR basepri, r3
 1149              	@ 0 "" 2
 1150              	.LVL38:
 1151              		.loc 5 493 3 view .LVU374
 1152              		.thumb
 1153              		.syntax unified
 1154              	.LBE279:
 1155              	.LBE280:
 1156              	.LBE281:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1157              		.loc 3 358 34 is_stmt 1 view .LVU375
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1158              		.loc 3 359 20 view .LVU376
 1159              	.LBE282:
 1160              	.LBE283:
 299:lib/chibios/os/hal/src/hal_pwm.c **** 
 300:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 1161              		.loc 1 300 3 view .LVU377
 1162              		.loc 1 300 3 view .LVU378
 1163              		.loc 1 300 3 view .LVU379
 301:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->enabled & ((pwmchnmsk_t)1U << (pwmchnmsk_t)channel)) != 0U,
 1164              		.loc 1 301 3 view .LVU380
 1165              		.loc 1 301 3 view .LVU381
 1166              		.loc 1 301 3 view .LVU382
 302:lib/chibios/os/hal/src/hal_pwm.c ****                 "channel not enabled");
 303:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->channels[channel].callback != NULL,
 1167              		.loc 1 303 3 view .LVU383
 1168              		.loc 1 303 3 view .LVU384
 1169              		.loc 1 303 3 view .LVU385
 304:lib/chibios/os/hal/src/hal_pwm.c ****                 "undefined channel callback");
 305:lib/chibios/os/hal/src/hal_pwm.c **** 
 306:lib/chibios/os/hal/src/hal_pwm.c ****   pwmDisableChannelNotificationI(pwmp, channel);
 1170              		.loc 1 306 3 view .LVU386
 1171 0008 FFF7FEFF 		bl	pwm_lld_disable_channel_notification
 1172              	.LVL39:
 307:lib/chibios/os/hal/src/hal_pwm.c **** 
 308:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 1173              		.loc 1 308 3 view .LVU387
 1174              	.LBB284:
 1175              	.LBI284:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1176              		.loc 2 584 20 view .LVU388
 1177              		.loc 2 586 3 view .LVU389
 1178              	.LBB285:
 1179              	.LBI285:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1180              		.loc 3 367 20 view .LVU390
 1181              	.LBB286:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1182              		.loc 3 369 22 view .LVU391
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1183              		.loc 3 370 33 view .LVU392
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1184              		.loc 3 376 3 view .LVU393
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1185              		.loc 3 376 3 view .LVU394
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1186              		.loc 3 376 3 view .LVU395
 1187              		.loc 3 380 3 view .LVU396
 1188              	.LBB287:
 1189              	.LBI287:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1190              		.loc 4 693 27 view .LVU397
 1191              		.loc 4 696 3 view .LVU398
 1192              	.LBB288:
 1193              	.LBI288:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1194              		.loc 5 491 27 view .LVU399
 1195              	.LBB289:
 1196              		.loc 5 493 3 view .LVU400
 1197 000c 0023     		movs	r3, #0
 1198              		.syntax unified
 1199              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1200 000e 83F31188 		MSR basepri, r3
 1201              	@ 0 "" 2
 1202              	.LVL40:
 1203              		.loc 5 493 3 is_stmt 0 view .LVU401
 1204              		.thumb
 1205              		.syntax unified
 1206              	.LBE289:
 1207              	.LBE288:
 1208              	.LBE287:
 1209              	.LBE286:
 1210              	.LBE285:
 1211              	.LBE284:
 309:lib/chibios/os/hal/src/hal_pwm.c **** }
 1212              		.loc 1 309 1 view .LVU402
 1213 0012 08BD     		pop	{r3, pc}
 1214              		.cfi_endproc
 1215              	.LFE292:
 1217              		.text
 1218              	.Letext0:
 1219              		.file 6 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1220              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1221              		.file 8 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 1222              		.file 9 "./lib/chibios/os/hal/include/hal_pwm.h"
 1223              		.file 10 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_pwm.c
     /tmp/cc3rQUYZ.s:21     .text.pwmInit:0000000000000000 $t
     /tmp/cc3rQUYZ.s:27     .text.pwmInit:0000000000000000 pwmInit
     /tmp/cc3rQUYZ.s:41     .text.pwmObjectInit:0000000000000000 $t
     /tmp/cc3rQUYZ.s:47     .text.pwmObjectInit:0000000000000000 pwmObjectInit
     /tmp/cc3rQUYZ.s:75     .text.pwmStart:0000000000000000 $t
     /tmp/cc3rQUYZ.s:81     .text.pwmStart:0000000000000000 pwmStart
     /tmp/cc3rQUYZ.s:227    .text.pwmStop:0000000000000000 $t
     /tmp/cc3rQUYZ.s:233    .text.pwmStop:0000000000000000 pwmStop
     /tmp/cc3rQUYZ.s:371    .text.pwmChangePeriod:0000000000000000 $t
     /tmp/cc3rQUYZ.s:377    .text.pwmChangePeriod:0000000000000000 pwmChangePeriod
     /tmp/cc3rQUYZ.s:480    .text.pwmEnableChannel:0000000000000000 $t
     /tmp/cc3rQUYZ.s:486    .text.pwmEnableChannel:0000000000000000 pwmEnableChannel
     /tmp/cc3rQUYZ.s:607    .text.pwmDisableChannel:0000000000000000 $t
     /tmp/cc3rQUYZ.s:613    .text.pwmDisableChannel:0000000000000000 pwmDisableChannel
     /tmp/cc3rQUYZ.s:732    .text.pwmEnablePeriodicNotification:0000000000000000 $t
     /tmp/cc3rQUYZ.s:738    .text.pwmEnablePeriodicNotification:0000000000000000 pwmEnablePeriodicNotification
     /tmp/cc3rQUYZ.s:852    .text.pwmDisablePeriodicNotification:0000000000000000 $t
     /tmp/cc3rQUYZ.s:858    .text.pwmDisablePeriodicNotification:0000000000000000 pwmDisablePeriodicNotification
     /tmp/cc3rQUYZ.s:972    .text.pwmEnableChannelNotification:0000000000000000 $t
     /tmp/cc3rQUYZ.s:978    .text.pwmEnableChannelNotification:0000000000000000 pwmEnableChannelNotification
     /tmp/cc3rQUYZ.s:1095   .text.pwmDisableChannelNotification:0000000000000000 $t
     /tmp/cc3rQUYZ.s:1101   .text.pwmDisableChannelNotification:0000000000000000 pwmDisableChannelNotification

UNDEFINED SYMBOLS
pwm_lld_init
pwm_lld_start
pwm_lld_stop
pwm_lld_enable_channel
pwm_lld_disable_channel
pwm_lld_enable_periodic_notification
pwm_lld_disable_periodic_notification
pwm_lld_enable_channel_notification
pwm_lld_disable_channel_notification
