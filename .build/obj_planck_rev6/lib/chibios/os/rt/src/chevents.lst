   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"chevents.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/chibios/os/rt/src/chevents.c"
  20              		.section	.text.chEvtRegisterMaskWithFlags,"ax",%progbits
  21              		.align	1
  22              		.global	chEvtRegisterMaskWithFlags
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	chEvtRegisterMaskWithFlags:
  28              	.LVL0:
  29              	.LFB289:
   1:lib/chibios/os/rt/src/chevents.c **** /*
   2:lib/chibios/os/rt/src/chevents.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/rt/src/chevents.c **** 
   4:lib/chibios/os/rt/src/chevents.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/rt/src/chevents.c **** 
   6:lib/chibios/os/rt/src/chevents.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/rt/src/chevents.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/rt/src/chevents.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/rt/src/chevents.c ****     (at your option) any later version.
  10:lib/chibios/os/rt/src/chevents.c **** 
  11:lib/chibios/os/rt/src/chevents.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/rt/src/chevents.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/rt/src/chevents.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/rt/src/chevents.c ****     GNU General Public License for more details.
  15:lib/chibios/os/rt/src/chevents.c **** 
  16:lib/chibios/os/rt/src/chevents.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/rt/src/chevents.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/rt/src/chevents.c **** */
  19:lib/chibios/os/rt/src/chevents.c **** /*
  20:lib/chibios/os/rt/src/chevents.c ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:lib/chibios/os/rt/src/chevents.c ****  */
  22:lib/chibios/os/rt/src/chevents.c **** 
  23:lib/chibios/os/rt/src/chevents.c **** /**
  24:lib/chibios/os/rt/src/chevents.c ****  * @file    rt/src/chevents.c
  25:lib/chibios/os/rt/src/chevents.c ****  * @brief   Events code.
  26:lib/chibios/os/rt/src/chevents.c ****  *
  27:lib/chibios/os/rt/src/chevents.c ****  * @addtogroup events
  28:lib/chibios/os/rt/src/chevents.c ****  * @details Event Flags, Event Sources and Event Listeners.
  29:lib/chibios/os/rt/src/chevents.c ****  *          <h2>Operation mode</h2>
  30:lib/chibios/os/rt/src/chevents.c ****  *          Each thread has a mask of pending events inside its
  31:lib/chibios/os/rt/src/chevents.c ****  *          @p thread_t structure.
  32:lib/chibios/os/rt/src/chevents.c ****  *          Operations defined for events:
  33:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Wait</b>, the invoking thread goes to sleep until a certain
  34:lib/chibios/os/rt/src/chevents.c ****  *            AND/OR combination of events are signaled.
  35:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Clear</b>, a mask of events is cleared from the pending
  36:lib/chibios/os/rt/src/chevents.c ****  *            events, the cleared events mask is returned (only the
  37:lib/chibios/os/rt/src/chevents.c ****  *            events that were actually pending and then cleared).
  38:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Signal</b>, an events mask is directly ORed to the mask of
  39:lib/chibios/os/rt/src/chevents.c ****  *            the signaled thread.
  40:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Broadcast</b>, each thread registered on an Event Source is
  41:lib/chibios/os/rt/src/chevents.c ****  *            signaled with the events specified in its Event Listener.
  42:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Dispatch</b>, an events mask is scanned and for each bit set
  43:lib/chibios/os/rt/src/chevents.c ****  *            to one an associated handler function is invoked. Bit masks are
  44:lib/chibios/os/rt/src/chevents.c ****  *            scanned from bit zero upward.
  45:lib/chibios/os/rt/src/chevents.c ****  *          .
  46:lib/chibios/os/rt/src/chevents.c ****  *          An Event Source is a special object that can be "broadcasted" by
  47:lib/chibios/os/rt/src/chevents.c ****  *          a thread or an interrupt service routine. Broadcasting an Event
  48:lib/chibios/os/rt/src/chevents.c ****  *          Source has the effect that all the threads registered on the
  49:lib/chibios/os/rt/src/chevents.c ****  *          Event Source will be signaled with an events mask.<br>
  50:lib/chibios/os/rt/src/chevents.c ****  *          An unlimited number of Event Sources can exists in a system and
  51:lib/chibios/os/rt/src/chevents.c ****  *          each thread can be listening on an unlimited number of
  52:lib/chibios/os/rt/src/chevents.c ****  *          them.
  53:lib/chibios/os/rt/src/chevents.c ****  * @pre     In order to use the Events APIs the @p CH_CFG_USE_EVENTS option
  54:lib/chibios/os/rt/src/chevents.c ****  *          must be enabled in @p chconf.h.
  55:lib/chibios/os/rt/src/chevents.c ****  * @post    Enabling events requires 1-4 (depending on the architecture)
  56:lib/chibios/os/rt/src/chevents.c ****  *          extra bytes in the @p thread_t structure.
  57:lib/chibios/os/rt/src/chevents.c ****  * @{
  58:lib/chibios/os/rt/src/chevents.c ****  */
  59:lib/chibios/os/rt/src/chevents.c **** 
  60:lib/chibios/os/rt/src/chevents.c **** #include "ch.h"
  61:lib/chibios/os/rt/src/chevents.c **** 
  62:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  63:lib/chibios/os/rt/src/chevents.c **** 
  64:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  65:lib/chibios/os/rt/src/chevents.c **** /* Module local definitions.                                                 */
  66:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  67:lib/chibios/os/rt/src/chevents.c **** 
  68:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  69:lib/chibios/os/rt/src/chevents.c **** /* Module exported variables.                                                */
  70:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  71:lib/chibios/os/rt/src/chevents.c **** 
  72:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  73:lib/chibios/os/rt/src/chevents.c **** /* Module local types.                                                       */
  74:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  75:lib/chibios/os/rt/src/chevents.c **** 
  76:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  77:lib/chibios/os/rt/src/chevents.c **** /* Module local variables.                                                   */
  78:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  79:lib/chibios/os/rt/src/chevents.c **** 
  80:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  81:lib/chibios/os/rt/src/chevents.c **** /* Module local functions.                                                   */
  82:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  83:lib/chibios/os/rt/src/chevents.c **** 
  84:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  85:lib/chibios/os/rt/src/chevents.c **** /* Module exported functions.                                                */
  86:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  87:lib/chibios/os/rt/src/chevents.c **** 
  88:lib/chibios/os/rt/src/chevents.c **** /**
  89:lib/chibios/os/rt/src/chevents.c ****  * @brief   Registers an Event Listener on an Event Source.
  90:lib/chibios/os/rt/src/chevents.c ****  * @details Once a thread has registered as listener on an event source it
  91:lib/chibios/os/rt/src/chevents.c ****  *          will be notified of all events broadcasted there.
  92:lib/chibios/os/rt/src/chevents.c ****  * @note    Multiple Event Listeners can specify the same bits to be ORed to
  93:lib/chibios/os/rt/src/chevents.c ****  *          different threads.
  94:lib/chibios/os/rt/src/chevents.c ****  *
  95:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the  @p event_source_t structure
  96:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
  97:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events to be ORed to the thread when
  98:lib/chibios/os/rt/src/chevents.c ****  *                      the event source is broadcasted
  99:lib/chibios/os/rt/src/chevents.c ****  * @param[in] wflags    mask of flags the listening thread is interested in
 100:lib/chibios/os/rt/src/chevents.c ****  *
 101:lib/chibios/os/rt/src/chevents.c ****  * @api
 102:lib/chibios/os/rt/src/chevents.c ****  */
 103:lib/chibios/os/rt/src/chevents.c **** void chEvtRegisterMaskWithFlags(event_source_t *esp,
 104:lib/chibios/os/rt/src/chevents.c ****                                 event_listener_t *elp,
 105:lib/chibios/os/rt/src/chevents.c ****                                 eventmask_t events,
 106:lib/chibios/os/rt/src/chevents.c ****                                 eventflags_t wflags) {
  30              		.loc 1 106 54 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 107:lib/chibios/os/rt/src/chevents.c **** 
 108:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck((esp != NULL) && (elp != NULL));
  34              		.loc 1 108 3 view .LVU1
  35              		.loc 1 108 3 view .LVU2
  36              		.loc 1 108 3 view .LVU3
 109:lib/chibios/os/rt/src/chevents.c **** 
 110:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
  37              		.loc 1 110 3 view .LVU4
  38              	.LBB174:
  39              	.LBI174:
  40              		.file 2 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
  41              		.loc 2 355 20 view .LVU5
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
  42              		.loc 2 357 3 view .LVU6
  43              	.LBB175:
  44              	.LBI175:
  45              		.file 3 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
  46              		.loc 3 669 27 view .LVU7
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
  47              		.loc 3 677 3 view .LVU8
  48              	.LBB176:
  49              	.LBI176:
  50              		.file 4 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
  51              		.loc 4 491 27 view .LVU9
  52              	.LBB177:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
  53              		.loc 4 493 3 view .LVU10
  54              	.LBE177:
  55              	.LBE176:
  56              	.LBE175:
  57              	.LBE174:
 106:lib/chibios/os/rt/src/chevents.c **** 
  58              		.loc 1 106 54 is_stmt 0 view .LVU11
  59 0000 10B5     		push	{r4, lr}
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 4, -8
  62              		.cfi_offset 14, -4
  63              	.LBB181:
  64              	.LBB180:
  65              	.LBB179:
  66              	.LBB178:
  67              		.loc 4 493 3 view .LVU12
  68 0002 2024     		movs	r4, #32
  69              		.syntax unified
  70              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
  71 0004 84F31188 		MSR basepri, r4
  72              	@ 0 "" 2
  73              	.LVL1:
  74              		.loc 4 493 3 view .LVU13
  75              		.thumb
  76              		.syntax unified
  77              	.LBE178:
  78              	.LBE179:
  79              	.LBE180:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
  80              		.loc 2 358 34 is_stmt 1 view .LVU14
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
  81              		.loc 2 359 20 view .LVU15
  82              	.LBE181:
 111:lib/chibios/os/rt/src/chevents.c ****   elp->next     = esp->next;
  83              		.loc 1 111 3 view .LVU16
  84              		.loc 1 111 17 is_stmt 0 view .LVU17
  85 0008 0468     		ldr	r4, [r0]
  86 000a 0C60     		str	r4, [r1]
 112:lib/chibios/os/rt/src/chevents.c ****   esp->next     = elp;
  87              		.loc 1 112 3 is_stmt 1 view .LVU18
  88              		.loc 1 112 17 is_stmt 0 view .LVU19
  89 000c 0160     		str	r1, [r0]
 113:lib/chibios/os/rt/src/chevents.c ****   elp->listener = currp;
  90              		.loc 1 113 3 is_stmt 1 view .LVU20
  91              		.loc 1 113 19 is_stmt 0 view .LVU21
  92 000e 0548     		ldr	r0, .L2
  93              	.LVL2:
  94              		.loc 1 113 17 view .LVU22
  95 0010 8069     		ldr	r0, [r0, #24]
 114:lib/chibios/os/rt/src/chevents.c ****   elp->events   = events;
  96              		.loc 1 114 17 view .LVU23
  97 0012 C1E90102 		strd	r0, r2, [r1, #4]
 115:lib/chibios/os/rt/src/chevents.c ****   elp->flags    = (eventflags_t)0;
  98              		.loc 1 115 3 is_stmt 1 view .LVU24
  99              		.loc 1 115 17 is_stmt 0 view .LVU25
 100 0016 0022     		movs	r2, #0
 101              	.LVL3:
 116:lib/chibios/os/rt/src/chevents.c ****   elp->wflags   = wflags;
 102              		.loc 1 116 17 view .LVU26
 103 0018 C1E90323 		strd	r2, r3, [r1, #12]
 117:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 104              		.loc 1 117 3 is_stmt 1 view .LVU27
 105              	.LBB182:
 106              	.LBI182:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 107              		.loc 2 367 20 view .LVU28
 108              	.LBB183:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 109              		.loc 2 369 22 view .LVU29
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 110              		.loc 2 370 33 view .LVU30
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 111              		.loc 2 376 3 view .LVU31
 112              		.loc 2 376 3 view .LVU32
 113              		.loc 2 376 3 view .LVU33
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 114              		.loc 2 380 3 view .LVU34
 115              	.LBB184:
 116              	.LBI184:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 117              		.loc 3 693 27 view .LVU35
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 118              		.loc 3 696 3 view .LVU36
 119              	.LVL4:
 120              	.LBB185:
 121              	.LBI185:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 122              		.loc 4 491 27 view .LVU37
 123              	.LBB186:
 124              		.loc 4 493 3 view .LVU38
 125              		.syntax unified
 126              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 127 001c 82F31188 		MSR basepri, r2
 128              	@ 0 "" 2
 129              	.LVL5:
 130              		.loc 4 493 3 is_stmt 0 view .LVU39
 131              		.thumb
 132              		.syntax unified
 133              	.LBE186:
 134              	.LBE185:
 135              	.LBE184:
 136              	.LBE183:
 137              	.LBE182:
 118:lib/chibios/os/rt/src/chevents.c **** }
 138              		.loc 1 118 1 view .LVU40
 139 0020 10BD     		pop	{r4, pc}
 140              	.L3:
 141 0022 00BF     		.align	2
 142              	.L2:
 143 0024 00000000 		.word	ch
 144              		.cfi_endproc
 145              	.LFE289:
 147              		.section	.text.chEvtUnregister,"ax",%progbits
 148              		.align	1
 149              		.global	chEvtUnregister
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	chEvtUnregister:
 155              	.LVL6:
 156              	.LFB290:
 119:lib/chibios/os/rt/src/chevents.c **** 
 120:lib/chibios/os/rt/src/chevents.c **** /**
 121:lib/chibios/os/rt/src/chevents.c ****  * @brief   Unregisters an Event Listener from its Event Source.
 122:lib/chibios/os/rt/src/chevents.c ****  * @note    If the event listener is not registered on the specified event
 123:lib/chibios/os/rt/src/chevents.c ****  *          source then the function does nothing.
 124:lib/chibios/os/rt/src/chevents.c ****  * @note    For optimal performance it is better to perform the unregister
 125:lib/chibios/os/rt/src/chevents.c ****  *          operations in inverse order of the register operations (elements
 126:lib/chibios/os/rt/src/chevents.c ****  *          are found on top of the list).
 127:lib/chibios/os/rt/src/chevents.c ****  *
 128:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the  @p event_source_t structure
 129:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 130:lib/chibios/os/rt/src/chevents.c ****  *
 131:lib/chibios/os/rt/src/chevents.c ****  * @api
 132:lib/chibios/os/rt/src/chevents.c ****  */
 133:lib/chibios/os/rt/src/chevents.c **** void chEvtUnregister(event_source_t *esp, event_listener_t *elp) {
 157              		.loc 1 133 66 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 134:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *p;
 162              		.loc 1 134 3 view .LVU42
 135:lib/chibios/os/rt/src/chevents.c **** 
 136:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck((esp != NULL) && (elp != NULL));
 163              		.loc 1 136 3 view .LVU43
 164              		.loc 1 136 3 view .LVU44
 165              		.loc 1 136 3 view .LVU45
 137:lib/chibios/os/rt/src/chevents.c **** 
 138:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 139:lib/chibios/os/rt/src/chevents.c ****   p = (event_listener_t *)esp;
 166              		.loc 1 139 3 view .LVU46
 140:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 141:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 167              		.loc 1 141 3 view .LVU47
 168              	.LBB187:
 169              	.LBI187:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 170              		.loc 2 355 20 view .LVU48
 171              	.LBB188:
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 172              		.loc 2 357 3 view .LVU49
 173              	.LBB189:
 174              	.LBI189:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 175              		.loc 3 669 27 view .LVU50
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 176              		.loc 3 677 3 view .LVU51
 177              	.LBB190:
 178              	.LBI190:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 179              		.loc 4 491 27 view .LVU52
 180              	.LBB191:
 181              		.loc 4 493 3 view .LVU53
 182 0000 2023     		movs	r3, #32
 183              		.syntax unified
 184              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 185 0002 83F31188 		MSR basepri, r3
 186              	@ 0 "" 2
 187              	.LVL7:
 188              		.loc 4 493 3 is_stmt 0 view .LVU54
 189              		.thumb
 190              		.syntax unified
 191              	.LBE191:
 192              	.LBE190:
 193              	.LBE189:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 194              		.loc 2 358 34 is_stmt 1 view .LVU55
 359:./lib/chibios/os/rt/include/chsys.h **** }
 195              		.loc 2 359 20 view .LVU56
 196              	.LBE188:
 197              	.LBE187:
 139:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 198              		.loc 1 139 5 is_stmt 0 view .LVU57
 199 0006 0346     		mov	r3, r0
 200              	.LVL8:
 201              	.L5:
 142:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 143:lib/chibios/os/rt/src/chevents.c ****   while (p->next != (event_listener_t *)esp) {
 202              		.loc 1 143 18 is_stmt 1 view .LVU58
 203 0008 1A46     		mov	r2, r3
 204              		.loc 1 143 11 is_stmt 0 view .LVU59
 205 000a 1B68     		ldr	r3, [r3]
 206              	.LVL9:
 207              		.loc 1 143 18 view .LVU60
 208 000c 8342     		cmp	r3, r0
 209 000e 03D0     		beq	.L6
 144:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 145:lib/chibios/os/rt/src/chevents.c ****     if (p->next == elp) {
 210              		.loc 1 145 5 is_stmt 1 view .LVU61
 211              		.loc 1 145 8 is_stmt 0 view .LVU62
 212 0010 8B42     		cmp	r3, r1
 213 0012 F9D1     		bne	.L5
 146:lib/chibios/os/rt/src/chevents.c ****       p->next = elp->next;
 214              		.loc 1 146 7 is_stmt 1 view .LVU63
 215              		.loc 1 146 20 is_stmt 0 view .LVU64
 216 0014 1B68     		ldr	r3, [r3]
 217              		.loc 1 146 15 view .LVU65
 218 0016 1360     		str	r3, [r2]
 147:lib/chibios/os/rt/src/chevents.c ****       break;
 219              		.loc 1 147 7 is_stmt 1 view .LVU66
 220              	.L6:
 148:lib/chibios/os/rt/src/chevents.c ****     }
 149:lib/chibios/os/rt/src/chevents.c ****     p = p->next;
 150:lib/chibios/os/rt/src/chevents.c ****   }
 151:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 221              		.loc 1 151 3 view .LVU67
 222              	.LBB192:
 223              	.LBI192:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 224              		.loc 2 367 20 view .LVU68
 225              	.LBB193:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 226              		.loc 2 369 22 view .LVU69
 370:./lib/chibios/os/rt/include/chsys.h **** 
 227              		.loc 2 370 33 view .LVU70
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 228              		.loc 2 376 3 view .LVU71
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 229              		.loc 2 376 3 view .LVU72
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 230              		.loc 2 376 3 view .LVU73
 231              		.loc 2 380 3 view .LVU74
 232              	.LBB194:
 233              	.LBI194:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 234              		.loc 3 693 27 view .LVU75
 235              		.loc 3 696 3 view .LVU76
 236              	.LVL10:
 237              	.LBB195:
 238              	.LBI195:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 239              		.loc 4 491 27 view .LVU77
 240              	.LBB196:
 241              		.loc 4 493 3 view .LVU78
 242 0018 0023     		movs	r3, #0
 243              		.syntax unified
 244              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 245 001a 83F31188 		MSR basepri, r3
 246              	@ 0 "" 2
 247              	.LVL11:
 248              		.loc 4 493 3 is_stmt 0 view .LVU79
 249              		.thumb
 250              		.syntax unified
 251              	.LBE196:
 252              	.LBE195:
 253              	.LBE194:
 254              	.LBE193:
 255              	.LBE192:
 152:lib/chibios/os/rt/src/chevents.c **** }
 256              		.loc 1 152 1 view .LVU80
 257 001e 7047     		bx	lr
 258              		.cfi_endproc
 259              	.LFE290:
 261              		.section	.text.chEvtGetAndClearEventsI,"ax",%progbits
 262              		.align	1
 263              		.global	chEvtGetAndClearEventsI
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 268              	chEvtGetAndClearEventsI:
 269              	.LVL12:
 270              	.LFB291:
 153:lib/chibios/os/rt/src/chevents.c **** 
 154:lib/chibios/os/rt/src/chevents.c **** /**
 155:lib/chibios/os/rt/src/chevents.c ****  * @brief   Clears the pending events specified in the events mask.
 156:lib/chibios/os/rt/src/chevents.c ****  *
 157:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be cleared
 158:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of pending events that were cleared.
 159:lib/chibios/os/rt/src/chevents.c ****  *
 160:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 161:lib/chibios/os/rt/src/chevents.c ****  */
 162:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtGetAndClearEventsI(eventmask_t events) {
 271              		.loc 1 162 57 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 163:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 276              		.loc 1 163 3 view .LVU82
 164:lib/chibios/os/rt/src/chevents.c **** 
 165:lib/chibios/os/rt/src/chevents.c ****   m = currp->epending & events;
 277              		.loc 1 165 3 view .LVU83
 278              		.loc 1 165 7 is_stmt 0 view .LVU84
 279 0000 034B     		ldr	r3, .L10
 280 0002 9A69     		ldr	r2, [r3, #24]
 281              		.loc 1 165 12 view .LVU85
 282 0004 536B     		ldr	r3, [r2, #52]
 283              	.LVL13:
 166:lib/chibios/os/rt/src/chevents.c ****   currp->epending &= ~events;
 284              		.loc 1 166 3 is_stmt 1 view .LVU86
 285              		.loc 1 166 19 is_stmt 0 view .LVU87
 286 0006 23EA0001 		bic	r1, r3, r0
 287 000a 5163     		str	r1, [r2, #52]
 167:lib/chibios/os/rt/src/chevents.c **** 
 168:lib/chibios/os/rt/src/chevents.c ****   return m;
 288              		.loc 1 168 3 is_stmt 1 view .LVU88
 169:lib/chibios/os/rt/src/chevents.c **** }
 289              		.loc 1 169 1 is_stmt 0 view .LVU89
 290 000c 1840     		ands	r0, r0, r3
 291              	.LVL14:
 292              		.loc 1 169 1 view .LVU90
 293 000e 7047     		bx	lr
 294              	.L11:
 295              		.align	2
 296              	.L10:
 297 0010 00000000 		.word	ch
 298              		.cfi_endproc
 299              	.LFE291:
 301              		.section	.text.chEvtGetAndClearEvents,"ax",%progbits
 302              		.align	1
 303              		.global	chEvtGetAndClearEvents
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	chEvtGetAndClearEvents:
 309              	.LVL15:
 310              	.LFB292:
 170:lib/chibios/os/rt/src/chevents.c **** 
 171:lib/chibios/os/rt/src/chevents.c **** /**
 172:lib/chibios/os/rt/src/chevents.c ****  * @brief   Clears the pending events specified in the events mask.
 173:lib/chibios/os/rt/src/chevents.c ****  *
 174:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be cleared
 175:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of pending events that were cleared.
 176:lib/chibios/os/rt/src/chevents.c ****  *
 177:lib/chibios/os/rt/src/chevents.c ****  * @api
 178:lib/chibios/os/rt/src/chevents.c ****  */
 179:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtGetAndClearEvents(eventmask_t events) {
 311              		.loc 1 179 56 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 180:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 315              		.loc 1 180 3 view .LVU92
 181:lib/chibios/os/rt/src/chevents.c **** 
 182:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 316              		.loc 1 182 3 view .LVU93
 317              	.LBB197:
 318              	.LBI197:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 319              		.loc 2 355 20 view .LVU94
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 320              		.loc 2 357 3 view .LVU95
 321              	.LBB198:
 322              	.LBI198:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323              		.loc 3 669 27 view .LVU96
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 324              		.loc 3 677 3 view .LVU97
 325              	.LBB199:
 326              	.LBI199:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 327              		.loc 4 491 27 view .LVU98
 328              	.LBB200:
 329              		.loc 4 493 3 view .LVU99
 330              	.LBE200:
 331              	.LBE199:
 332              	.LBE198:
 333              	.LBE197:
 179:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 334              		.loc 1 179 56 is_stmt 0 view .LVU100
 335 0000 08B5     		push	{r3, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 3, -8
 338              		.cfi_offset 14, -4
 339              	.LBB204:
 340              	.LBB203:
 341              	.LBB202:
 342              	.LBB201:
 343              		.loc 4 493 3 view .LVU101
 344 0002 2023     		movs	r3, #32
 345              		.syntax unified
 346              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 347 0004 83F31188 		MSR basepri, r3
 348              	@ 0 "" 2
 349              	.LVL16:
 350              		.loc 4 493 3 view .LVU102
 351              		.thumb
 352              		.syntax unified
 353              	.LBE201:
 354              	.LBE202:
 355              	.LBE203:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 356              		.loc 2 358 34 is_stmt 1 view .LVU103
 359:./lib/chibios/os/rt/include/chsys.h **** }
 357              		.loc 2 359 20 view .LVU104
 358              	.LBE204:
 183:lib/chibios/os/rt/src/chevents.c ****   m = chEvtGetAndClearEventsI(events);
 359              		.loc 1 183 3 view .LVU105
 360              		.loc 1 183 7 is_stmt 0 view .LVU106
 361 0008 FFF7FEFF 		bl	chEvtGetAndClearEventsI
 362              	.LVL17:
 184:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 363              		.loc 1 184 3 is_stmt 1 view .LVU107
 364              	.LBB205:
 365              	.LBI205:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 366              		.loc 2 367 20 view .LVU108
 367              	.LBB206:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 368              		.loc 2 369 22 view .LVU109
 370:./lib/chibios/os/rt/include/chsys.h **** 
 369              		.loc 2 370 33 view .LVU110
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 370              		.loc 2 376 3 view .LVU111
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 371              		.loc 2 376 3 view .LVU112
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 372              		.loc 2 376 3 view .LVU113
 373              		.loc 2 380 3 view .LVU114
 374              	.LBB207:
 375              	.LBI207:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376              		.loc 3 693 27 view .LVU115
 377              		.loc 3 696 3 view .LVU116
 378              	.LBB208:
 379              	.LBI208:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 380              		.loc 4 491 27 view .LVU117
 381              	.LBB209:
 382              		.loc 4 493 3 view .LVU118
 383 000c 0023     		movs	r3, #0
 384              		.syntax unified
 385              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 386 000e 83F31188 		MSR basepri, r3
 387              	@ 0 "" 2
 388              	.LVL18:
 389              		.loc 4 493 3 is_stmt 0 view .LVU119
 390              		.thumb
 391              		.syntax unified
 392              	.LBE209:
 393              	.LBE208:
 394              	.LBE207:
 395              	.LBE206:
 396              	.LBE205:
 185:lib/chibios/os/rt/src/chevents.c **** 
 186:lib/chibios/os/rt/src/chevents.c ****   return m;
 397              		.loc 1 186 3 is_stmt 1 view .LVU120
 187:lib/chibios/os/rt/src/chevents.c **** }
 398              		.loc 1 187 1 is_stmt 0 view .LVU121
 399 0012 08BD     		pop	{r3, pc}
 400              		.cfi_endproc
 401              	.LFE292:
 403              		.section	.text.chEvtAddEvents,"ax",%progbits
 404              		.align	1
 405              		.global	chEvtAddEvents
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	chEvtAddEvents:
 411              	.LVL19:
 412              	.LFB293:
 188:lib/chibios/os/rt/src/chevents.c **** 
 189:lib/chibios/os/rt/src/chevents.c **** /**
 190:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds (OR) a set of events to the current thread, this is
 191:lib/chibios/os/rt/src/chevents.c ****  *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 192:lib/chibios/os/rt/src/chevents.c ****  *
 193:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be added
 194:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of currently pending events.
 195:lib/chibios/os/rt/src/chevents.c ****  *
 196:lib/chibios/os/rt/src/chevents.c ****  * @api
 197:lib/chibios/os/rt/src/chevents.c ****  */
 198:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtAddEvents(eventmask_t events) {
 413              		.loc 1 198 48 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 199:lib/chibios/os/rt/src/chevents.c ****   eventmask_t newevt;
 418              		.loc 1 199 3 view .LVU123
 200:lib/chibios/os/rt/src/chevents.c **** 
 201:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 419              		.loc 1 201 3 view .LVU124
 420              	.LBB221:
 421              	.LBI221:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 422              		.loc 2 355 20 view .LVU125
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 423              		.loc 2 357 3 view .LVU126
 424              	.LBB222:
 425              	.LBI222:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 426              		.loc 3 669 27 view .LVU127
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 427              		.loc 3 677 3 view .LVU128
 428              	.LBB223:
 429              	.LBI223:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 430              		.loc 4 491 27 view .LVU129
 431              	.LBB224:
 432              		.loc 4 493 3 view .LVU130
 433 0000 2023     		movs	r3, #32
 434              		.syntax unified
 435              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 436 0002 83F31188 		MSR basepri, r3
 437              	@ 0 "" 2
 438              	.LVL20:
 439              		.loc 4 493 3 is_stmt 0 view .LVU131
 440              		.thumb
 441              		.syntax unified
 442              	.LBE224:
 443              	.LBE223:
 444              	.LBE222:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 445              		.loc 2 358 34 is_stmt 1 view .LVU132
 359:./lib/chibios/os/rt/include/chsys.h **** }
 446              		.loc 2 359 20 view .LVU133
 447              	.LBE221:
 202:lib/chibios/os/rt/src/chevents.c ****   newevt = chEvtAddEventsI(events);
 448              		.loc 1 202 3 view .LVU134
 449              	.LBB225:
 450              	.LBI225:
 451              		.file 5 "./lib/chibios/os/rt/include/chevents.h"
   1:./lib/chibios/os/rt/include/chevents.h **** /*
   2:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chevents.h **** 
   4:./lib/chibios/os/rt/include/chevents.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chevents.h **** 
   6:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chevents.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chevents.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chevents.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chevents.h **** 
  11:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chevents.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chevents.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chevents.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chevents.h **** 
  16:./lib/chibios/os/rt/include/chevents.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chevents.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chevents.h **** */
  19:./lib/chibios/os/rt/include/chevents.h **** /*
  20:./lib/chibios/os/rt/include/chevents.h ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:./lib/chibios/os/rt/include/chevents.h ****  */
  22:./lib/chibios/os/rt/include/chevents.h **** 
  23:./lib/chibios/os/rt/include/chevents.h **** /**
  24:./lib/chibios/os/rt/include/chevents.h ****  * @file    rt/include/chevents.h
  25:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Events macros and structures.
  26:./lib/chibios/os/rt/include/chevents.h ****  *
  27:./lib/chibios/os/rt/include/chevents.h ****  * @addtogroup events
  28:./lib/chibios/os/rt/include/chevents.h ****  * @{
  29:./lib/chibios/os/rt/include/chevents.h ****  */
  30:./lib/chibios/os/rt/include/chevents.h **** 
  31:./lib/chibios/os/rt/include/chevents.h **** #ifndef CHEVENTS_H
  32:./lib/chibios/os/rt/include/chevents.h **** #define CHEVENTS_H
  33:./lib/chibios/os/rt/include/chevents.h **** 
  34:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  35:./lib/chibios/os/rt/include/chevents.h **** 
  36:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  37:./lib/chibios/os/rt/include/chevents.h **** /* Module constants.                                                         */
  38:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  39:./lib/chibios/os/rt/include/chevents.h **** 
  40:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  41:./lib/chibios/os/rt/include/chevents.h **** /* Module pre-compile time settings.                                         */
  42:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  43:./lib/chibios/os/rt/include/chevents.h **** 
  44:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  45:./lib/chibios/os/rt/include/chevents.h **** /* Derived constants and error checks.                                       */
  46:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  47:./lib/chibios/os/rt/include/chevents.h **** 
  48:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  49:./lib/chibios/os/rt/include/chevents.h **** /* Module data structures and types.                                         */
  50:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  51:./lib/chibios/os/rt/include/chevents.h **** 
  52:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_listener event_listener_t;
  53:./lib/chibios/os/rt/include/chevents.h **** 
  54:./lib/chibios/os/rt/include/chevents.h **** /**
  55:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Listener structure.
  56:./lib/chibios/os/rt/include/chevents.h ****  */
  57:./lib/chibios/os/rt/include/chevents.h **** struct event_listener {
  58:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief Next Event Listener
  59:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the event
  60:./lib/chibios/os/rt/include/chevents.h ****                                                     source.                 */
  61:./lib/chibios/os/rt/include/chevents.h ****   thread_t              *listener;      /**< @brief Thread interested in the
  62:./lib/chibios/os/rt/include/chevents.h ****                                                     event source.           */
  63:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t           events;         /**< @brief Events to be set in
  64:./lib/chibios/os/rt/include/chevents.h ****                                                     the listening thread.   */
  65:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          flags;          /**< @brief Flags added to the listener
  66:./lib/chibios/os/rt/include/chevents.h ****                                                     by the event source.    */
  67:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          wflags;         /**< @brief Flags that this listener
  68:./lib/chibios/os/rt/include/chevents.h ****                                                     interested in.          */
  69:./lib/chibios/os/rt/include/chevents.h **** };
  70:./lib/chibios/os/rt/include/chevents.h **** 
  71:./lib/chibios/os/rt/include/chevents.h **** /**
  72:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Source structure.
  73:./lib/chibios/os/rt/include/chevents.h ****  */
  74:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_source {
  75:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief First Event Listener
  76:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the Event
  77:./lib/chibios/os/rt/include/chevents.h ****                                                     Source.                 */
  78:./lib/chibios/os/rt/include/chevents.h **** } event_source_t;
  79:./lib/chibios/os/rt/include/chevents.h **** 
  80:./lib/chibios/os/rt/include/chevents.h **** /**
  81:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Handler callback function.
  82:./lib/chibios/os/rt/include/chevents.h ****  */
  83:./lib/chibios/os/rt/include/chevents.h **** typedef void (*evhandler_t)(eventid_t id);
  84:./lib/chibios/os/rt/include/chevents.h **** 
  85:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chevents.h **** /* Module macros.                                                            */
  87:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  88:./lib/chibios/os/rt/include/chevents.h **** 
  89:./lib/chibios/os/rt/include/chevents.h **** /**
  90:./lib/chibios/os/rt/include/chevents.h ****  * @brief   All events allowed mask.
  91:./lib/chibios/os/rt/include/chevents.h ****  */
  92:./lib/chibios/os/rt/include/chevents.h **** #define ALL_EVENTS      ((eventmask_t)-1)
  93:./lib/chibios/os/rt/include/chevents.h **** 
  94:./lib/chibios/os/rt/include/chevents.h **** /**
  95:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Returns an event mask from an event identifier.
  96:./lib/chibios/os/rt/include/chevents.h ****  */
  97:./lib/chibios/os/rt/include/chevents.h **** #define EVENT_MASK(eid) ((eventmask_t)1 << (eventmask_t)(eid))
  98:./lib/chibios/os/rt/include/chevents.h **** 
  99:./lib/chibios/os/rt/include/chevents.h **** /**
 100:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Data part of a static event source initializer.
 101:./lib/chibios/os/rt/include/chevents.h ****  * @details This macro should be used when statically initializing an event
 102:./lib/chibios/os/rt/include/chevents.h ****  *          source that is part of a bigger structure.
 103:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 104:./lib/chibios/os/rt/include/chevents.h ****  */
 105:./lib/chibios/os/rt/include/chevents.h **** #define _EVENTSOURCE_DATA(name) {(event_listener_t *)(&name)}
 106:./lib/chibios/os/rt/include/chevents.h **** 
 107:./lib/chibios/os/rt/include/chevents.h **** /**
 108:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Static event source initializer.
 109:./lib/chibios/os/rt/include/chevents.h ****  * @details Statically initialized event sources require no explicit
 110:./lib/chibios/os/rt/include/chevents.h ****  *          initialization using @p chEvtInit().
 111:./lib/chibios/os/rt/include/chevents.h ****  *
 112:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 113:./lib/chibios/os/rt/include/chevents.h ****  */
 114:./lib/chibios/os/rt/include/chevents.h **** #define EVENTSOURCE_DECL(name) event_source_t name = _EVENTSOURCE_DATA(name)
 115:./lib/chibios/os/rt/include/chevents.h **** 
 116:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chevents.h **** /* External declarations.                                                    */
 118:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 119:./lib/chibios/os/rt/include/chevents.h **** 
 120:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 121:./lib/chibios/os/rt/include/chevents.h **** extern "C" {
 122:./lib/chibios/os/rt/include/chevents.h **** #endif
 123:./lib/chibios/os/rt/include/chevents.h ****   void chEvtRegisterMaskWithFlags(event_source_t *esp,
 124:./lib/chibios/os/rt/include/chevents.h ****                                   event_listener_t *elp,
 125:./lib/chibios/os/rt/include/chevents.h ****                                   eventmask_t events,
 126:./lib/chibios/os/rt/include/chevents.h ****                                   eventflags_t wflags);
 127:./lib/chibios/os/rt/include/chevents.h ****   void chEvtUnregister(event_source_t *esp, event_listener_t *elp);
 128:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEventsI(eventmask_t events);
 129:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEvents(eventmask_t events);
 130:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtAddEvents(eventmask_t events);
 131:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlags(event_listener_t *elp);
 132:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp);
 133:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignal(thread_t *tp, eventmask_t events);
 134:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignalI(thread_t *tp, eventmask_t events);
 135:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags);
 136:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags);
 137:./lib/chibios/os/rt/include/chevents.h ****   void chEvtDispatch(const evhandler_t *handlers, eventmask_t events);
 138:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) || (CH_CFG_USE_EVENTS_TIMEOUT == FALSE)
 139:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOne(eventmask_t events);
 140:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAny(eventmask_t events);
 141:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAll(eventmask_t events);
 142:./lib/chibios/os/rt/include/chevents.h **** #endif
 143:./lib/chibios/os/rt/include/chevents.h **** #if CH_CFG_USE_EVENTS_TIMEOUT == TRUE
 144:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout);
 145:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout);
 146:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout);
 147:./lib/chibios/os/rt/include/chevents.h **** #endif
 148:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 149:./lib/chibios/os/rt/include/chevents.h **** }
 150:./lib/chibios/os/rt/include/chevents.h **** #endif
 151:./lib/chibios/os/rt/include/chevents.h **** 
 152:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == FALSE) && (CH_CFG_USE_EVENTS_TIMEOUT == TRUE)
 153:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitOne(mask) chEvtWaitOneTimeout(mask, TIME_INFINITE)
 154:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAny(mask) chEvtWaitAnyTimeout(mask, TIME_INFINITE)
 155:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAll(mask) chEvtWaitAllTimeout(mask, TIME_INFINITE)
 156:./lib/chibios/os/rt/include/chevents.h **** #endif
 157:./lib/chibios/os/rt/include/chevents.h **** 
 158:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 159:./lib/chibios/os/rt/include/chevents.h **** /* Module inline functions.                                                  */
 160:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 161:./lib/chibios/os/rt/include/chevents.h **** 
 162:./lib/chibios/os/rt/include/chevents.h **** /**
 163:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Initializes an Event Source.
 164:./lib/chibios/os/rt/include/chevents.h ****  * @note    This function can be invoked before the kernel is initialized
 165:./lib/chibios/os/rt/include/chevents.h ****  *          because it just prepares a @p event_source_t structure.
 166:./lib/chibios/os/rt/include/chevents.h ****  *
 167:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 168:./lib/chibios/os/rt/include/chevents.h ****  *
 169:./lib/chibios/os/rt/include/chevents.h ****  * @init
 170:./lib/chibios/os/rt/include/chevents.h ****  */
 171:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtObjectInit(event_source_t *esp) {
 172:./lib/chibios/os/rt/include/chevents.h **** 
 173:./lib/chibios/os/rt/include/chevents.h ****   esp->next = (event_listener_t *)esp;
 174:./lib/chibios/os/rt/include/chevents.h **** }
 175:./lib/chibios/os/rt/include/chevents.h **** 
 176:./lib/chibios/os/rt/include/chevents.h **** /**
 177:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Registers an Event Listener on an Event Source.
 178:./lib/chibios/os/rt/include/chevents.h ****  * @details Once a thread has registered as listener on an event source it
 179:./lib/chibios/os/rt/include/chevents.h ****  *          will be notified of all events broadcasted there.
 180:./lib/chibios/os/rt/include/chevents.h ****  * @note    Multiple Event Listeners can specify the same bits to be ORed to
 181:./lib/chibios/os/rt/include/chevents.h ****  *          different threads.
 182:./lib/chibios/os/rt/include/chevents.h ****  *
 183:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 184:./lib/chibios/os/rt/include/chevents.h ****  * @param[out] elp      pointer to the @p event_listener_t structure
 185:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] events    the mask of events to be ORed to the thread when
 186:./lib/chibios/os/rt/include/chevents.h ****  *                      the event source is broadcasted
 187:./lib/chibios/os/rt/include/chevents.h ****  *
 188:./lib/chibios/os/rt/include/chevents.h ****  * @api
 189:./lib/chibios/os/rt/include/chevents.h ****  */
 190:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtRegisterMask(event_source_t *esp,
 191:./lib/chibios/os/rt/include/chevents.h ****                                      event_listener_t *elp,
 192:./lib/chibios/os/rt/include/chevents.h ****                                      eventmask_t events) {
 193:./lib/chibios/os/rt/include/chevents.h **** 
 194:./lib/chibios/os/rt/include/chevents.h ****   chEvtRegisterMaskWithFlags(esp, elp, events, (eventflags_t)-1);
 195:./lib/chibios/os/rt/include/chevents.h **** }
 196:./lib/chibios/os/rt/include/chevents.h **** 
 197:./lib/chibios/os/rt/include/chevents.h **** /**
 198:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Registers an Event Listener on an Event Source.
 199:./lib/chibios/os/rt/include/chevents.h ****  * @note    Multiple Event Listeners can use the same event identifier, the
 200:./lib/chibios/os/rt/include/chevents.h ****  *          listener will share the callback function.
 201:./lib/chibios/os/rt/include/chevents.h ****  *
 202:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the  @p event_source_t structure
 203:./lib/chibios/os/rt/include/chevents.h ****  * @param[out] elp      pointer to the @p event_listener_t structure
 204:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] event     numeric identifier assigned to the Event Listener.
 205:./lib/chibios/os/rt/include/chevents.h ****  *                      The value must range between zero and the size, in bit,
 206:./lib/chibios/os/rt/include/chevents.h ****  *                      of the @p eventmask_t type minus one.
 207:./lib/chibios/os/rt/include/chevents.h ****  *
 208:./lib/chibios/os/rt/include/chevents.h ****  * @api
 209:./lib/chibios/os/rt/include/chevents.h ****  */
 210:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtRegister(event_source_t *esp,
 211:./lib/chibios/os/rt/include/chevents.h ****                                  event_listener_t *elp,
 212:./lib/chibios/os/rt/include/chevents.h ****                                  eventid_t event) {
 213:./lib/chibios/os/rt/include/chevents.h **** 
 214:./lib/chibios/os/rt/include/chevents.h ****   chEvtRegisterMask(esp, elp, EVENT_MASK(event));
 215:./lib/chibios/os/rt/include/chevents.h **** }
 216:./lib/chibios/os/rt/include/chevents.h **** 
 217:./lib/chibios/os/rt/include/chevents.h **** /**
 218:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Verifies if there is at least one @p event_listener_t registered.
 219:./lib/chibios/os/rt/include/chevents.h ****  *
 220:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 221:./lib/chibios/os/rt/include/chevents.h ****  * @return              The event source status.
 222:./lib/chibios/os/rt/include/chevents.h ****  *
 223:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 224:./lib/chibios/os/rt/include/chevents.h ****  */
 225:./lib/chibios/os/rt/include/chevents.h **** static inline bool chEvtIsListeningI(event_source_t *esp) {
 226:./lib/chibios/os/rt/include/chevents.h **** 
 227:./lib/chibios/os/rt/include/chevents.h ****   return (bool)(esp != (event_source_t *)esp->next);
 228:./lib/chibios/os/rt/include/chevents.h **** }
 229:./lib/chibios/os/rt/include/chevents.h **** 
 230:./lib/chibios/os/rt/include/chevents.h **** /**
 231:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Signals all the Event Listeners registered on the specified Event
 232:./lib/chibios/os/rt/include/chevents.h ****  *          Source.
 233:./lib/chibios/os/rt/include/chevents.h ****  *
 234:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 235:./lib/chibios/os/rt/include/chevents.h ****  *
 236:./lib/chibios/os/rt/include/chevents.h ****  * @api
 237:./lib/chibios/os/rt/include/chevents.h ****  */
 238:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtBroadcast(event_source_t *esp) {
 239:./lib/chibios/os/rt/include/chevents.h **** 
 240:./lib/chibios/os/rt/include/chevents.h ****   chEvtBroadcastFlags(esp, (eventflags_t)0);
 241:./lib/chibios/os/rt/include/chevents.h **** }
 242:./lib/chibios/os/rt/include/chevents.h **** 
 243:./lib/chibios/os/rt/include/chevents.h **** /**
 244:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Signals all the Event Listeners registered on the specified Event
 245:./lib/chibios/os/rt/include/chevents.h ****  *          Source.
 246:./lib/chibios/os/rt/include/chevents.h ****  * @post    This function does not reschedule so a call to a rescheduling
 247:./lib/chibios/os/rt/include/chevents.h ****  *          function must be performed before unlocking the kernel. Note that
 248:./lib/chibios/os/rt/include/chevents.h ****  *          interrupt handlers always reschedule on exit so an explicit
 249:./lib/chibios/os/rt/include/chevents.h ****  *          reschedule must not be performed in ISRs.
 250:./lib/chibios/os/rt/include/chevents.h ****  *
 251:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 252:./lib/chibios/os/rt/include/chevents.h ****  *
 253:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 254:./lib/chibios/os/rt/include/chevents.h ****  */
 255:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtBroadcastI(event_source_t *esp) {
 256:./lib/chibios/os/rt/include/chevents.h **** 
 257:./lib/chibios/os/rt/include/chevents.h ****   chEvtBroadcastFlagsI(esp, (eventflags_t)0);
 258:./lib/chibios/os/rt/include/chevents.h **** }
 259:./lib/chibios/os/rt/include/chevents.h **** 
 260:./lib/chibios/os/rt/include/chevents.h **** /**
 261:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Adds (OR) a set of events to the current thread, this is
 262:./lib/chibios/os/rt/include/chevents.h ****  *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 263:./lib/chibios/os/rt/include/chevents.h ****  *
 264:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] events    the events to be added
 265:./lib/chibios/os/rt/include/chevents.h ****  * @return              The mask of currently pending events.
 266:./lib/chibios/os/rt/include/chevents.h ****  *
 267:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 268:./lib/chibios/os/rt/include/chevents.h ****  */
 269:./lib/chibios/os/rt/include/chevents.h **** static inline eventmask_t chEvtAddEventsI(eventmask_t events) {
 452              		.loc 5 269 27 view .LVU135
 453              	.LBB226:
 270:./lib/chibios/os/rt/include/chevents.h **** 
 271:./lib/chibios/os/rt/include/chevents.h ****   return currp->epending |= events;
 454              		.loc 5 271 3 view .LVU136
 455              		.loc 5 271 10 is_stmt 0 view .LVU137
 456 0006 044B     		ldr	r3, .L14
 457 0008 9B69     		ldr	r3, [r3, #24]
 458              		.loc 5 271 26 view .LVU138
 459 000a 5A6B     		ldr	r2, [r3, #52]
 460 000c 1043     		orrs	r0, r0, r2
 461              	.LVL21:
 462              		.loc 5 271 26 view .LVU139
 463 000e 5863     		str	r0, [r3, #52]
 464              	.LVL22:
 465              		.loc 5 271 26 view .LVU140
 466              	.LBE226:
 467              	.LBE225:
 203:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 468              		.loc 1 203 3 is_stmt 1 view .LVU141
 469              	.LBB227:
 470              	.LBI227:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 471              		.loc 2 367 20 view .LVU142
 472              	.LBB228:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 473              		.loc 2 369 22 view .LVU143
 370:./lib/chibios/os/rt/include/chsys.h **** 
 474              		.loc 2 370 33 view .LVU144
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 475              		.loc 2 376 3 view .LVU145
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 476              		.loc 2 376 3 view .LVU146
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 477              		.loc 2 376 3 view .LVU147
 478              		.loc 2 380 3 view .LVU148
 479              	.LBB229:
 480              	.LBI229:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 481              		.loc 3 693 27 view .LVU149
 482              		.loc 3 696 3 view .LVU150
 483              	.LBB230:
 484              	.LBI230:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 485              		.loc 4 491 27 view .LVU151
 486              	.LBB231:
 487              		.loc 4 493 3 view .LVU152
 488 0010 0023     		movs	r3, #0
 489              		.syntax unified
 490              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 491 0012 83F31188 		MSR basepri, r3
 492              	@ 0 "" 2
 493              	.LVL23:
 494              		.loc 4 493 3 is_stmt 0 view .LVU153
 495              		.thumb
 496              		.syntax unified
 497              	.LBE231:
 498              	.LBE230:
 499              	.LBE229:
 500              	.LBE228:
 501              	.LBE227:
 204:lib/chibios/os/rt/src/chevents.c **** 
 205:lib/chibios/os/rt/src/chevents.c ****   return newevt;
 502              		.loc 1 205 3 is_stmt 1 view .LVU154
 206:lib/chibios/os/rt/src/chevents.c **** }
 503              		.loc 1 206 1 is_stmt 0 view .LVU155
 504 0016 7047     		bx	lr
 505              	.L15:
 506              		.align	2
 507              	.L14:
 508 0018 00000000 		.word	ch
 509              		.cfi_endproc
 510              	.LFE293:
 512              		.section	.text.chEvtGetAndClearFlags,"ax",%progbits
 513              		.align	1
 514              		.global	chEvtGetAndClearFlags
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 519              	chEvtGetAndClearFlags:
 520              	.LVL24:
 521              	.LFB295:
 207:lib/chibios/os/rt/src/chevents.c **** 
 208:lib/chibios/os/rt/src/chevents.c **** /**
 209:lib/chibios/os/rt/src/chevents.c ****  * @brief   Signals all the Event Listeners registered on the specified Event
 210:lib/chibios/os/rt/src/chevents.c ****  *          Source.
 211:lib/chibios/os/rt/src/chevents.c ****  * @details This function variants ORs the specified event flags to all the
 212:lib/chibios/os/rt/src/chevents.c ****  *          threads registered on the @p event_source_t in addition to the
 213:lib/chibios/os/rt/src/chevents.c ****  *          event flags specified by the threads themselves in the
 214:lib/chibios/os/rt/src/chevents.c ****  *          @p event_listener_t objects.
 215:lib/chibios/os/rt/src/chevents.c ****  * @post    This function does not reschedule so a call to a rescheduling
 216:lib/chibios/os/rt/src/chevents.c ****  *          function must be performed before unlocking the kernel. Note that
 217:lib/chibios/os/rt/src/chevents.c ****  *          interrupt handlers always reschedule on exit so an explicit
 218:lib/chibios/os/rt/src/chevents.c ****  *          reschedule must not be performed in ISRs.
 219:lib/chibios/os/rt/src/chevents.c ****  *
 220:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the @p event_source_t structure
 221:lib/chibios/os/rt/src/chevents.c ****  * @param[in] flags     the flags set to be added to the listener flags mask
 222:lib/chibios/os/rt/src/chevents.c ****  *
 223:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 224:lib/chibios/os/rt/src/chevents.c ****  */
 225:lib/chibios/os/rt/src/chevents.c **** void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags) {
 226:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 227:lib/chibios/os/rt/src/chevents.c **** 
 228:lib/chibios/os/rt/src/chevents.c ****   chDbgCheckClassI();
 229:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(esp != NULL);
 230:lib/chibios/os/rt/src/chevents.c **** 
 231:lib/chibios/os/rt/src/chevents.c ****   elp = esp->next;
 232:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 233:lib/chibios/os/rt/src/chevents.c ****   while (elp != (event_listener_t *)esp) {
 234:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 235:lib/chibios/os/rt/src/chevents.c ****     elp->flags |= flags;
 236:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 237:lib/chibios/os/rt/src/chevents.c ****        source does not emit any flag.*/
 238:lib/chibios/os/rt/src/chevents.c ****     if ((flags == (eventflags_t)0) ||
 239:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 240:lib/chibios/os/rt/src/chevents.c ****       chEvtSignalI(elp->listener, elp->events);
 241:lib/chibios/os/rt/src/chevents.c ****     }
 242:lib/chibios/os/rt/src/chevents.c ****     elp = elp->next;
 243:lib/chibios/os/rt/src/chevents.c ****   }
 244:lib/chibios/os/rt/src/chevents.c **** }
 245:lib/chibios/os/rt/src/chevents.c **** 
 246:lib/chibios/os/rt/src/chevents.c **** /**
 247:lib/chibios/os/rt/src/chevents.c ****  * @brief   Returns the flags associated to an @p event_listener_t.
 248:lib/chibios/os/rt/src/chevents.c ****  * @details The flags are returned and the @p event_listener_t flags mask is
 249:lib/chibios/os/rt/src/chevents.c ****  *          cleared.
 250:lib/chibios/os/rt/src/chevents.c ****  *
 251:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 252:lib/chibios/os/rt/src/chevents.c ****  * @return              The flags added to the listener by the associated
 253:lib/chibios/os/rt/src/chevents.c ****  *                      event source.
 254:lib/chibios/os/rt/src/chevents.c ****  *
 255:lib/chibios/os/rt/src/chevents.c ****  * @api
 256:lib/chibios/os/rt/src/chevents.c ****  */
 257:lib/chibios/os/rt/src/chevents.c **** eventflags_t chEvtGetAndClearFlags(event_listener_t *elp) {
 522              		.loc 1 257 59 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 258:lib/chibios/os/rt/src/chevents.c ****   eventflags_t flags;
 527              		.loc 1 258 3 view .LVU157
 259:lib/chibios/os/rt/src/chevents.c **** 
 260:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 528              		.loc 1 260 3 view .LVU158
 529              	.LBB232:
 530              	.LBI232:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 531              		.loc 2 355 20 view .LVU159
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 532              		.loc 2 357 3 view .LVU160
 533              	.LBB233:
 534              	.LBI233:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 535              		.loc 3 669 27 view .LVU161
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 536              		.loc 3 677 3 view .LVU162
 537              	.LBB234:
 538              	.LBI234:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 539              		.loc 4 491 27 view .LVU163
 540              	.LBB235:
 541              		.loc 4 493 3 view .LVU164
 542 0000 2023     		movs	r3, #32
 543              		.syntax unified
 544              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 545 0002 83F31188 		MSR basepri, r3
 546              	@ 0 "" 2
 547              	.LVL25:
 548              		.loc 4 493 3 is_stmt 0 view .LVU165
 549              		.thumb
 550              		.syntax unified
 551              	.LBE235:
 552              	.LBE234:
 553              	.LBE233:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 554              		.loc 2 358 34 is_stmt 1 view .LVU166
 359:./lib/chibios/os/rt/include/chsys.h **** }
 555              		.loc 2 359 20 view .LVU167
 556              	.LBE232:
 261:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 557              		.loc 1 261 3 view .LVU168
 262:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 558              		.loc 1 262 14 is_stmt 0 view .LVU169
 559 0006 0023     		movs	r3, #0
 261:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 560              		.loc 1 261 9 view .LVU170
 561 0008 C268     		ldr	r2, [r0, #12]
 562              	.LVL26:
 563              		.loc 1 262 3 is_stmt 1 view .LVU171
 564              		.loc 1 262 14 is_stmt 0 view .LVU172
 565 000a C360     		str	r3, [r0, #12]
 263:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 566              		.loc 1 263 3 is_stmt 1 view .LVU173
 567              	.LBB236:
 568              	.LBI236:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 569              		.loc 2 367 20 view .LVU174
 570              	.LBB237:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 571              		.loc 2 369 22 view .LVU175
 370:./lib/chibios/os/rt/include/chsys.h **** 
 572              		.loc 2 370 33 view .LVU176
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 573              		.loc 2 376 3 view .LVU177
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 574              		.loc 2 376 3 view .LVU178
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 575              		.loc 2 376 3 view .LVU179
 576              		.loc 2 380 3 view .LVU180
 577              	.LBB238:
 578              	.LBI238:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 579              		.loc 3 693 27 view .LVU181
 580              		.loc 3 696 3 view .LVU182
 581              	.LVL27:
 582              	.LBB239:
 583              	.LBI239:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 584              		.loc 4 491 27 view .LVU183
 585              	.LBB240:
 586              		.loc 4 493 3 view .LVU184
 587              		.syntax unified
 588              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 589 000c 83F31188 		MSR basepri, r3
 590              	@ 0 "" 2
 591              	.LVL28:
 592              		.loc 4 493 3 is_stmt 0 view .LVU185
 593              		.thumb
 594              		.syntax unified
 595              	.LBE240:
 596              	.LBE239:
 597              	.LBE238:
 598              	.LBE237:
 599              	.LBE236:
 264:lib/chibios/os/rt/src/chevents.c **** 
 265:lib/chibios/os/rt/src/chevents.c ****   return flags & elp->wflags;
 600              		.loc 1 265 3 is_stmt 1 view .LVU186
 601              		.loc 1 265 16 is_stmt 0 view .LVU187
 602 0010 0069     		ldr	r0, [r0, #16]
 603              	.LVL29:
 266:lib/chibios/os/rt/src/chevents.c **** }
 604              		.loc 1 266 1 view .LVU188
 605 0012 1040     		ands	r0, r0, r2
 606 0014 7047     		bx	lr
 607              		.cfi_endproc
 608              	.LFE295:
 610              		.section	.text.chEvtSignalI,"ax",%progbits
 611              		.align	1
 612              		.global	chEvtSignalI
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 617              	chEvtSignalI:
 618              	.LVL30:
 619              	.LFB297:
 267:lib/chibios/os/rt/src/chevents.c **** 
 268:lib/chibios/os/rt/src/chevents.c **** /**
 269:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds a set of event flags directly to the specified @p thread_t.
 270:lib/chibios/os/rt/src/chevents.c ****  *
 271:lib/chibios/os/rt/src/chevents.c ****  * @param[in] tp        the thread to be signaled
 272:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events set to be ORed
 273:lib/chibios/os/rt/src/chevents.c ****  *
 274:lib/chibios/os/rt/src/chevents.c ****  * @api
 275:lib/chibios/os/rt/src/chevents.c ****  */
 276:lib/chibios/os/rt/src/chevents.c **** void chEvtSignal(thread_t *tp, eventmask_t events) {
 277:lib/chibios/os/rt/src/chevents.c **** 
 278:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(tp != NULL);
 279:lib/chibios/os/rt/src/chevents.c **** 
 280:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 281:lib/chibios/os/rt/src/chevents.c ****   chEvtSignalI(tp, events);
 282:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 283:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 284:lib/chibios/os/rt/src/chevents.c **** }
 285:lib/chibios/os/rt/src/chevents.c **** 
 286:lib/chibios/os/rt/src/chevents.c **** /**
 287:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds a set of event flags directly to the specified @p thread_t.
 288:lib/chibios/os/rt/src/chevents.c ****  * @post    This function does not reschedule so a call to a rescheduling
 289:lib/chibios/os/rt/src/chevents.c ****  *          function must be performed before unlocking the kernel. Note that
 290:lib/chibios/os/rt/src/chevents.c ****  *          interrupt handlers always reschedule on exit so an explicit
 291:lib/chibios/os/rt/src/chevents.c ****  *          reschedule must not be performed in ISRs.
 292:lib/chibios/os/rt/src/chevents.c ****  *
 293:lib/chibios/os/rt/src/chevents.c ****  * @param[in] tp        the thread to be signaled
 294:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events set to be ORed
 295:lib/chibios/os/rt/src/chevents.c ****  *
 296:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 297:lib/chibios/os/rt/src/chevents.c ****  */
 298:lib/chibios/os/rt/src/chevents.c **** void chEvtSignalI(thread_t *tp, eventmask_t events) {
 620              		.loc 1 298 53 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 299:lib/chibios/os/rt/src/chevents.c **** 
 300:lib/chibios/os/rt/src/chevents.c ****   chDbgCheckClassI();
 625              		.loc 1 300 21 view .LVU190
 301:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(tp != NULL);
 626              		.loc 1 301 3 view .LVU191
 627              		.loc 1 301 3 view .LVU192
 628              		.loc 1 301 3 view .LVU193
 302:lib/chibios/os/rt/src/chevents.c **** 
 303:lib/chibios/os/rt/src/chevents.c ****   tp->epending |= events;
 629              		.loc 1 303 3 view .LVU194
 630              		.loc 1 303 16 is_stmt 0 view .LVU195
 631 0000 436B     		ldr	r3, [r0, #52]
 632 0002 1943     		orrs	r1, r1, r3
 633              	.LVL31:
 304:lib/chibios/os/rt/src/chevents.c ****   /* Test on the AND/OR conditions wait states.*/
 305:lib/chibios/os/rt/src/chevents.c ****   if (((tp->state == CH_STATE_WTOREVT) &&
 634              		.loc 1 305 11 view .LVU196
 635 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 303:lib/chibios/os/rt/src/chevents.c ****   /* Test on the AND/OR conditions wait states.*/
 636              		.loc 1 303 16 view .LVU197
 637 0008 4163     		str	r1, [r0, #52]
 638              		.loc 1 305 3 is_stmt 1 view .LVU198
 639              		.loc 1 305 6 is_stmt 0 view .LVU199
 640 000a 0A2B     		cmp	r3, #10
 641 000c 03D1     		bne	.L18
 306:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 642              		.loc 1 306 23 discriminator 1 view .LVU200
 643 000e 436A     		ldr	r3, [r0, #36]
 305:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 644              		.loc 1 305 40 discriminator 1 view .LVU201
 645 0010 1942     		tst	r1, r3
 646 0012 05D1     		bne	.L19
 647 0014 7047     		bx	lr
 648              	.L18:
 649              		.loc 1 306 59 view .LVU202
 650 0016 0B2B     		cmp	r3, #11
 651 0018 06D1     		bne	.L17
 307:lib/chibios/os/rt/src/chevents.c ****       ((tp->state == CH_STATE_WTANDEVT) &&
 308:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) == tp->u.ewmask))) {
 652              		.loc 1 308 30 view .LVU203
 653 001a 436A     		ldr	r3, [r0, #36]
 307:lib/chibios/os/rt/src/chevents.c ****       ((tp->state == CH_STATE_WTANDEVT) &&
 654              		.loc 1 307 41 view .LVU204
 655 001c 8B43     		bics	r3, r3, r1
 656 001e 03D1     		bne	.L17
 657              	.L19:
 658              	.LVL32:
 659              	.LBB243:
 660              	.LBI243:
 298:lib/chibios/os/rt/src/chevents.c **** 
 661              		.loc 1 298 6 is_stmt 1 view .LVU205
 662              	.LBB244:
 309:lib/chibios/os/rt/src/chevents.c ****     tp->u.rdymsg = MSG_OK;
 663              		.loc 1 309 5 view .LVU206
 664              		.loc 1 309 18 is_stmt 0 view .LVU207
 665 0020 0023     		movs	r3, #0
 666 0022 4362     		str	r3, [r0, #36]
 310:lib/chibios/os/rt/src/chevents.c ****     (void) chSchReadyI(tp);
 667              		.loc 1 310 5 is_stmt 1 view .LVU208
 668              		.loc 1 310 12 is_stmt 0 view .LVU209
 669 0024 FFF7FEBF 		b	chSchReadyI
 670              	.LVL33:
 671              	.L17:
 672              		.loc 1 310 12 view .LVU210
 673              	.LBE244:
 674              	.LBE243:
 311:lib/chibios/os/rt/src/chevents.c ****   }
 312:lib/chibios/os/rt/src/chevents.c **** }
 675              		.loc 1 312 1 view .LVU211
 676 0028 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE297:
 680              		.section	.text.chEvtBroadcastFlagsI,"ax",%progbits
 681              		.align	1
 682              		.global	chEvtBroadcastFlagsI
 683              		.syntax unified
 684              		.thumb
 685              		.thumb_func
 687              	chEvtBroadcastFlagsI:
 688              	.LVL34:
 689              	.LFB294:
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 690              		.loc 1 225 68 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 226:lib/chibios/os/rt/src/chevents.c **** 
 694              		.loc 1 226 3 view .LVU213
 228:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(esp != NULL);
 695              		.loc 1 228 21 view .LVU214
 229:lib/chibios/os/rt/src/chevents.c **** 
 696              		.loc 1 229 3 view .LVU215
 229:lib/chibios/os/rt/src/chevents.c **** 
 697              		.loc 1 229 3 view .LVU216
 229:lib/chibios/os/rt/src/chevents.c **** 
 698              		.loc 1 229 3 view .LVU217
 231:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 699              		.loc 1 231 3 view .LVU218
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 700              		.loc 1 225 68 is_stmt 0 view .LVU219
 701 0000 70B5     		push	{r4, r5, r6, lr}
 702              		.cfi_def_cfa_offset 16
 703              		.cfi_offset 4, -16
 704              		.cfi_offset 5, -12
 705              		.cfi_offset 6, -8
 706              		.cfi_offset 14, -4
 231:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 707              		.loc 1 231 7 view .LVU220
 708 0002 0468     		ldr	r4, [r0]
 709              	.LVL35:
 233:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 710              		.loc 1 233 3 is_stmt 1 view .LVU221
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 711              		.loc 1 225 68 is_stmt 0 view .LVU222
 712 0004 0646     		mov	r6, r0
 713 0006 0D46     		mov	r5, r1
 714              	.LVL36:
 715              	.L22:
 233:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 716              		.loc 1 233 14 is_stmt 1 view .LVU223
 717 0008 B442     		cmp	r4, r6
 718 000a 00D1     		bne	.L25
 244:lib/chibios/os/rt/src/chevents.c **** 
 719              		.loc 1 244 1 is_stmt 0 view .LVU224
 720 000c 70BD     		pop	{r4, r5, r6, pc}
 721              	.LVL37:
 722              	.L25:
 235:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 723              		.loc 1 235 5 is_stmt 1 view .LVU225
 235:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 724              		.loc 1 235 16 is_stmt 0 view .LVU226
 725 000e E368     		ldr	r3, [r4, #12]
 726 0010 2B43     		orrs	r3, r3, r5
 727 0012 E360     		str	r3, [r4, #12]
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 728              		.loc 1 238 5 is_stmt 1 view .LVU227
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 729              		.loc 1 238 8 is_stmt 0 view .LVU228
 730 0014 15B1     		cbz	r5, .L23
 239:lib/chibios/os/rt/src/chevents.c ****       chEvtSignalI(elp->listener, elp->events);
 731              		.loc 1 239 17 discriminator 1 view .LVU229
 732 0016 2369     		ldr	r3, [r4, #16]
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 733              		.loc 1 238 36 discriminator 1 view .LVU230
 734 0018 1D42     		tst	r5, r3
 735 001a 03D0     		beq	.L24
 736              	.L23:
 240:lib/chibios/os/rt/src/chevents.c ****     }
 737              		.loc 1 240 7 is_stmt 1 view .LVU231
 738 001c D4E90101 		ldrd	r0, r1, [r4, #4]
 739 0020 FFF7FEFF 		bl	chEvtSignalI
 740              	.LVL38:
 741              	.L24:
 242:lib/chibios/os/rt/src/chevents.c ****   }
 742              		.loc 1 242 5 view .LVU232
 242:lib/chibios/os/rt/src/chevents.c ****   }
 743              		.loc 1 242 9 is_stmt 0 view .LVU233
 744 0024 2468     		ldr	r4, [r4]
 745              	.LVL39:
 242:lib/chibios/os/rt/src/chevents.c ****   }
 746              		.loc 1 242 9 view .LVU234
 747 0026 EFE7     		b	.L22
 748              		.cfi_endproc
 749              	.LFE294:
 751              		.section	.text.chEvtSignal,"ax",%progbits
 752              		.align	1
 753              		.global	chEvtSignal
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 758              	chEvtSignal:
 759              	.LVL40:
 760              	.LFB296:
 276:lib/chibios/os/rt/src/chevents.c **** 
 761              		.loc 1 276 52 is_stmt 1 view -0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 278:lib/chibios/os/rt/src/chevents.c **** 
 765              		.loc 1 278 3 view .LVU236
 278:lib/chibios/os/rt/src/chevents.c **** 
 766              		.loc 1 278 3 view .LVU237
 278:lib/chibios/os/rt/src/chevents.c **** 
 767              		.loc 1 278 3 view .LVU238
 280:lib/chibios/os/rt/src/chevents.c ****   chEvtSignalI(tp, events);
 768              		.loc 1 280 3 view .LVU239
 769              	.LBB245:
 770              	.LBI245:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 771              		.loc 2 355 20 view .LVU240
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 772              		.loc 2 357 3 view .LVU241
 773              	.LBB246:
 774              	.LBI246:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 775              		.loc 3 669 27 view .LVU242
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 776              		.loc 3 677 3 view .LVU243
 777              	.LBB247:
 778              	.LBI247:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 779              		.loc 4 491 27 view .LVU244
 780              	.LBB248:
 781              		.loc 4 493 3 view .LVU245
 782              	.LBE248:
 783              	.LBE247:
 784              	.LBE246:
 785              	.LBE245:
 276:lib/chibios/os/rt/src/chevents.c **** 
 786              		.loc 1 276 52 is_stmt 0 view .LVU246
 787 0000 08B5     		push	{r3, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 3, -8
 790              		.cfi_offset 14, -4
 791              	.LBB252:
 792              	.LBB251:
 793              	.LBB250:
 794              	.LBB249:
 795              		.loc 4 493 3 view .LVU247
 796 0002 2023     		movs	r3, #32
 797              		.syntax unified
 798              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 799 0004 83F31188 		MSR basepri, r3
 800              	@ 0 "" 2
 801              	.LVL41:
 802              		.loc 4 493 3 view .LVU248
 803              		.thumb
 804              		.syntax unified
 805              	.LBE249:
 806              	.LBE250:
 807              	.LBE251:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 808              		.loc 2 358 34 is_stmt 1 view .LVU249
 359:./lib/chibios/os/rt/include/chsys.h **** }
 809              		.loc 2 359 20 view .LVU250
 810              	.LBE252:
 281:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 811              		.loc 1 281 3 view .LVU251
 812 0008 FFF7FEFF 		bl	chEvtSignalI
 813              	.LVL42:
 282:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 814              		.loc 1 282 3 view .LVU252
 815 000c FFF7FEFF 		bl	chSchRescheduleS
 816              	.LVL43:
 283:lib/chibios/os/rt/src/chevents.c **** }
 817              		.loc 1 283 3 view .LVU253
 818              	.LBB253:
 819              	.LBI253:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 820              		.loc 2 367 20 view .LVU254
 821              	.LBB254:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 822              		.loc 2 369 22 view .LVU255
 370:./lib/chibios/os/rt/include/chsys.h **** 
 823              		.loc 2 370 33 view .LVU256
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 824              		.loc 2 376 3 view .LVU257
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 825              		.loc 2 376 3 view .LVU258
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 826              		.loc 2 376 3 view .LVU259
 827              		.loc 2 380 3 view .LVU260
 828              	.LBB255:
 829              	.LBI255:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 830              		.loc 3 693 27 view .LVU261
 831              		.loc 3 696 3 view .LVU262
 832              	.LBB256:
 833              	.LBI256:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 834              		.loc 4 491 27 view .LVU263
 835              	.LBB257:
 836              		.loc 4 493 3 view .LVU264
 837 0010 0023     		movs	r3, #0
 838              		.syntax unified
 839              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 840 0012 83F31188 		MSR basepri, r3
 841              	@ 0 "" 2
 842              	.LVL44:
 843              		.loc 4 493 3 is_stmt 0 view .LVU265
 844              		.thumb
 845              		.syntax unified
 846              	.LBE257:
 847              	.LBE256:
 848              	.LBE255:
 849              	.LBE254:
 850              	.LBE253:
 284:lib/chibios/os/rt/src/chevents.c **** 
 851              		.loc 1 284 1 view .LVU266
 852 0016 08BD     		pop	{r3, pc}
 853              		.cfi_endproc
 854              	.LFE296:
 856              		.section	.text.chEvtBroadcastFlags,"ax",%progbits
 857              		.align	1
 858              		.global	chEvtBroadcastFlags
 859              		.syntax unified
 860              		.thumb
 861              		.thumb_func
 863              	chEvtBroadcastFlags:
 864              	.LVL45:
 865              	.LFB298:
 313:lib/chibios/os/rt/src/chevents.c **** 
 314:lib/chibios/os/rt/src/chevents.c **** /**
 315:lib/chibios/os/rt/src/chevents.c ****  * @brief   Signals all the Event Listeners registered on the specified Event
 316:lib/chibios/os/rt/src/chevents.c ****  *          Source.
 317:lib/chibios/os/rt/src/chevents.c ****  * @details This function variants ORs the specified event flags to all the
 318:lib/chibios/os/rt/src/chevents.c ****  *          threads registered on the @p event_source_t in addition to the
 319:lib/chibios/os/rt/src/chevents.c ****  *          event flags specified by the threads themselves in the
 320:lib/chibios/os/rt/src/chevents.c ****  *          @p event_listener_t objects.
 321:lib/chibios/os/rt/src/chevents.c ****  *
 322:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the @p event_source_t structure
 323:lib/chibios/os/rt/src/chevents.c ****  * @param[in] flags     the flags set to be added to the listener flags mask
 324:lib/chibios/os/rt/src/chevents.c ****  *
 325:lib/chibios/os/rt/src/chevents.c ****  * @api
 326:lib/chibios/os/rt/src/chevents.c ****  */
 327:lib/chibios/os/rt/src/chevents.c **** void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags) {
 866              		.loc 1 327 67 is_stmt 1 view -0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 328:lib/chibios/os/rt/src/chevents.c **** 
 329:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 870              		.loc 1 329 3 view .LVU268
 871              	.LBB258:
 872              	.LBI258:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 873              		.loc 2 355 20 view .LVU269
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 874              		.loc 2 357 3 view .LVU270
 875              	.LBB259:
 876              	.LBI259:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 877              		.loc 3 669 27 view .LVU271
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 878              		.loc 3 677 3 view .LVU272
 879              	.LBB260:
 880              	.LBI260:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 881              		.loc 4 491 27 view .LVU273
 882              	.LBB261:
 883              		.loc 4 493 3 view .LVU274
 884              	.LBE261:
 885              	.LBE260:
 886              	.LBE259:
 887              	.LBE258:
 327:lib/chibios/os/rt/src/chevents.c **** 
 888              		.loc 1 327 67 is_stmt 0 view .LVU275
 889 0000 08B5     		push	{r3, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 3, -8
 892              		.cfi_offset 14, -4
 893              	.LBB265:
 894              	.LBB264:
 895              	.LBB263:
 896              	.LBB262:
 897              		.loc 4 493 3 view .LVU276
 898 0002 2023     		movs	r3, #32
 899              		.syntax unified
 900              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 901 0004 83F31188 		MSR basepri, r3
 902              	@ 0 "" 2
 903              	.LVL46:
 904              		.loc 4 493 3 view .LVU277
 905              		.thumb
 906              		.syntax unified
 907              	.LBE262:
 908              	.LBE263:
 909              	.LBE264:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 910              		.loc 2 358 34 is_stmt 1 view .LVU278
 359:./lib/chibios/os/rt/include/chsys.h **** }
 911              		.loc 2 359 20 view .LVU279
 912              	.LBE265:
 330:lib/chibios/os/rt/src/chevents.c ****   chEvtBroadcastFlagsI(esp, flags);
 913              		.loc 1 330 3 view .LVU280
 914 0008 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 915              	.LVL47:
 331:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 916              		.loc 1 331 3 view .LVU281
 917 000c FFF7FEFF 		bl	chSchRescheduleS
 918              	.LVL48:
 332:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 919              		.loc 1 332 3 view .LVU282
 920              	.LBB266:
 921              	.LBI266:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 922              		.loc 2 367 20 view .LVU283
 923              	.LBB267:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 924              		.loc 2 369 22 view .LVU284
 370:./lib/chibios/os/rt/include/chsys.h **** 
 925              		.loc 2 370 33 view .LVU285
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 926              		.loc 2 376 3 view .LVU286
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 927              		.loc 2 376 3 view .LVU287
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 928              		.loc 2 376 3 view .LVU288
 929              		.loc 2 380 3 view .LVU289
 930              	.LBB268:
 931              	.LBI268:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 932              		.loc 3 693 27 view .LVU290
 933              		.loc 3 696 3 view .LVU291
 934              	.LBB269:
 935              	.LBI269:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 936              		.loc 4 491 27 view .LVU292
 937              	.LBB270:
 938              		.loc 4 493 3 view .LVU293
 939 0010 0023     		movs	r3, #0
 940              		.syntax unified
 941              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 942 0012 83F31188 		MSR basepri, r3
 943              	@ 0 "" 2
 944              	.LVL49:
 945              		.loc 4 493 3 is_stmt 0 view .LVU294
 946              		.thumb
 947              		.syntax unified
 948              	.LBE270:
 949              	.LBE269:
 950              	.LBE268:
 951              	.LBE267:
 952              	.LBE266:
 333:lib/chibios/os/rt/src/chevents.c **** }
 953              		.loc 1 333 1 view .LVU295
 954 0016 08BD     		pop	{r3, pc}
 955              		.cfi_endproc
 956              	.LFE298:
 958              		.section	.text.chEvtGetAndClearFlagsI,"ax",%progbits
 959              		.align	1
 960              		.global	chEvtGetAndClearFlagsI
 961              		.syntax unified
 962              		.thumb
 963              		.thumb_func
 965              	chEvtGetAndClearFlagsI:
 966              	.LVL50:
 967              	.LFB299:
 334:lib/chibios/os/rt/src/chevents.c **** 
 335:lib/chibios/os/rt/src/chevents.c **** /**
 336:lib/chibios/os/rt/src/chevents.c ****  * @brief   Returns the unmasked flags associated to an @p event_listener_t.
 337:lib/chibios/os/rt/src/chevents.c ****  * @details The flags are returned and the @p event_listener_t flags mask is
 338:lib/chibios/os/rt/src/chevents.c ****  *          cleared.
 339:lib/chibios/os/rt/src/chevents.c ****  *
 340:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 341:lib/chibios/os/rt/src/chevents.c ****  * @return              The flags added to the listener by the associated
 342:lib/chibios/os/rt/src/chevents.c ****  *                      event source.
 343:lib/chibios/os/rt/src/chevents.c ****  *
 344:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 345:lib/chibios/os/rt/src/chevents.c ****  */
 346:lib/chibios/os/rt/src/chevents.c **** eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp) {
 968              		.loc 1 346 60 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              		@ link register save eliminated.
 347:lib/chibios/os/rt/src/chevents.c ****   eventflags_t flags;
 973              		.loc 1 347 3 view .LVU297
 348:lib/chibios/os/rt/src/chevents.c **** 
 349:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 974              		.loc 1 349 3 view .LVU298
 350:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 975              		.loc 1 350 14 is_stmt 0 view .LVU299
 976 0000 0023     		movs	r3, #0
 349:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 977              		.loc 1 349 9 view .LVU300
 978 0002 C268     		ldr	r2, [r0, #12]
 979              	.LVL51:
 980              		.loc 1 350 3 is_stmt 1 view .LVU301
 981              		.loc 1 350 14 is_stmt 0 view .LVU302
 982 0004 C360     		str	r3, [r0, #12]
 351:lib/chibios/os/rt/src/chevents.c **** 
 352:lib/chibios/os/rt/src/chevents.c ****   return flags & elp->wflags;
 983              		.loc 1 352 3 is_stmt 1 view .LVU303
 984              		.loc 1 352 16 is_stmt 0 view .LVU304
 985 0006 0069     		ldr	r0, [r0, #16]
 986              	.LVL52:
 353:lib/chibios/os/rt/src/chevents.c **** }
 987              		.loc 1 353 1 view .LVU305
 988 0008 1040     		ands	r0, r0, r2
 989 000a 7047     		bx	lr
 990              		.cfi_endproc
 991              	.LFE299:
 993              		.section	.text.chEvtDispatch,"ax",%progbits
 994              		.align	1
 995              		.global	chEvtDispatch
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 1000              	chEvtDispatch:
 1001              	.LVL53:
 1002              	.LFB300:
 354:lib/chibios/os/rt/src/chevents.c **** 
 355:lib/chibios/os/rt/src/chevents.c **** /**
 356:lib/chibios/os/rt/src/chevents.c ****  * @brief   Invokes the event handlers associated to an event flags mask.
 357:lib/chibios/os/rt/src/chevents.c ****  *
 358:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    mask of events to be dispatched
 359:lib/chibios/os/rt/src/chevents.c ****  * @param[in] handlers  an array of @p evhandler_t. The array must have size
 360:lib/chibios/os/rt/src/chevents.c ****  *                      equal to the number of bits in eventmask_t.
 361:lib/chibios/os/rt/src/chevents.c ****  *
 362:lib/chibios/os/rt/src/chevents.c ****  * @api
 363:lib/chibios/os/rt/src/chevents.c ****  */
 364:lib/chibios/os/rt/src/chevents.c **** void chEvtDispatch(const evhandler_t *handlers, eventmask_t events) {
 1003              		.loc 1 364 69 is_stmt 1 view -0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 365:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1007              		.loc 1 365 3 view .LVU307
 366:lib/chibios/os/rt/src/chevents.c **** 
 367:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(handlers != NULL);
 1008              		.loc 1 367 3 view .LVU308
 1009              		.loc 1 367 3 view .LVU309
 1010              		.loc 1 367 3 view .LVU310
 368:lib/chibios/os/rt/src/chevents.c **** 
 369:lib/chibios/os/rt/src/chevents.c ****   eid = (eventid_t)0;
 1011              		.loc 1 369 3 view .LVU311
 370:lib/chibios/os/rt/src/chevents.c ****   while (events != (eventmask_t)0) {
 1012              		.loc 1 370 3 view .LVU312
 364:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1013              		.loc 1 364 69 is_stmt 0 view .LVU313
 1014 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1015              		.cfi_def_cfa_offset 24
 1016              		.cfi_offset 3, -24
 1017              		.cfi_offset 4, -20
 1018              		.cfi_offset 5, -16
 1019              		.cfi_offset 6, -12
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 364:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1022              		.loc 1 364 69 view .LVU314
 1023 0002 0646     		mov	r6, r0
 1024 0004 0C46     		mov	r4, r1
 369:lib/chibios/os/rt/src/chevents.c ****   while (events != (eventmask_t)0) {
 1025              		.loc 1 369 7 view .LVU315
 1026 0006 0025     		movs	r5, #0
 371:lib/chibios/os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 372:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 373:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 1027              		.loc 1 373 18 view .LVU316
 1028 0008 0127     		movs	r7, #1
 1029              	.LVL54:
 1030              	.L36:
 370:lib/chibios/os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 1031              		.loc 1 370 17 is_stmt 1 view .LVU317
 1032 000a 04B9     		cbnz	r4, .L38
 374:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 375:lib/chibios/os/rt/src/chevents.c ****     }
 376:lib/chibios/os/rt/src/chevents.c ****     eid++;
 377:lib/chibios/os/rt/src/chevents.c ****   }
 378:lib/chibios/os/rt/src/chevents.c **** }
 1033              		.loc 1 378 1 is_stmt 0 view .LVU318
 1034 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1035              	.LVL55:
 1036              	.L38:
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1037              		.loc 1 371 5 is_stmt 1 view .LVU319
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1038              		.loc 1 371 36 is_stmt 0 view .LVU320
 1039 000e 24FA05F3 		lsr	r3, r4, r5
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1040              		.loc 1 371 8 view .LVU321
 1041 0012 DB07     		lsls	r3, r3, #31
 1042 0014 07D5     		bpl	.L37
 372:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 1043              		.loc 1 372 7 is_stmt 1 discriminator 5 view .LVU322
 372:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 1044              		.loc 1 372 7 discriminator 5 view .LVU323
 372:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 1045              		.loc 1 372 7 discriminator 5 view .LVU324
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1046              		.loc 1 373 7 discriminator 5 view .LVU325
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1047              		.loc 1 373 18 is_stmt 0 discriminator 5 view .LVU326
 1048 0016 07FA05F3 		lsl	r3, r7, r5
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1049              		.loc 1 373 14 discriminator 5 view .LVU327
 1050 001a 24EA0304 		bic	r4, r4, r3
 1051              	.LVL56:
 374:lib/chibios/os/rt/src/chevents.c ****     }
 1052              		.loc 1 374 7 is_stmt 1 discriminator 5 view .LVU328
 1053 001e 2846     		mov	r0, r5
 1054 0020 56F82530 		ldr	r3, [r6, r5, lsl #2]
 1055 0024 9847     		blx	r3
 1056              	.LVL57:
 1057              	.L37:
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1058              		.loc 1 376 5 view .LVU329
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1059              		.loc 1 376 8 is_stmt 0 view .LVU330
 1060 0026 0135     		adds	r5, r5, #1
 1061              	.LVL58:
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1062              		.loc 1 376 8 view .LVU331
 1063 0028 EFE7     		b	.L36
 1064              		.cfi_endproc
 1065              	.LFE300:
 1067              		.section	.text.chEvtWaitOne,"ax",%progbits
 1068              		.align	1
 1069              		.global	chEvtWaitOne
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1074              	chEvtWaitOne:
 1075              	.LVL59:
 1076              	.LFB301:
 379:lib/chibios/os/rt/src/chevents.c **** 
 380:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) ||                                      \
 381:lib/chibios/os/rt/src/chevents.c ****     (CH_CFG_USE_EVENTS_TIMEOUT == FALSE) ||                                 \
 382:lib/chibios/os/rt/src/chevents.c ****     defined(__DOXYGEN__)
 383:lib/chibios/os/rt/src/chevents.c **** /**
 384:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for exactly one of the specified events.
 385:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for one event among those specified in
 386:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the event is cleared and returned.
 387:lib/chibios/os/rt/src/chevents.c ****  * @note    One and only one event is served in the function, the one with the
 388:lib/chibios/os/rt/src/chevents.c ****  *          lowest event id. The function is meant to be invoked into a loop in
 389:lib/chibios/os/rt/src/chevents.c ****  *          order to serve all the pending events.<br>
 390:lib/chibios/os/rt/src/chevents.c ****  *          This means that Event Listeners with a lower event identifier have
 391:lib/chibios/os/rt/src/chevents.c ****  *          an higher priority.
 392:lib/chibios/os/rt/src/chevents.c ****  *
 393:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 394:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 395:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the lowest event id served and cleared.
 396:lib/chibios/os/rt/src/chevents.c ****  *
 397:lib/chibios/os/rt/src/chevents.c ****  * @api
 398:lib/chibios/os/rt/src/chevents.c ****  */
 399:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitOne(eventmask_t events) {
 1077              		.loc 1 399 46 is_stmt 1 view -0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 400:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1081              		.loc 1 400 3 view .LVU333
 399:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1082              		.loc 1 399 46 is_stmt 0 view .LVU334
 1083 0000 38B5     		push	{r3, r4, r5, lr}
 1084              		.cfi_def_cfa_offset 16
 1085              		.cfi_offset 3, -16
 1086              		.cfi_offset 4, -12
 1087              		.cfi_offset 5, -8
 1088              		.cfi_offset 14, -4
 1089              		.loc 1 400 13 view .LVU335
 1090 0002 0C4B     		ldr	r3, .L44
 399:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1091              		.loc 1 399 46 view .LVU336
 1092 0004 0446     		mov	r4, r0
 1093              		.loc 1 400 13 view .LVU337
 1094 0006 9D69     		ldr	r5, [r3, #24]
 1095              	.LVL60:
 401:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1096              		.loc 1 401 3 is_stmt 1 view .LVU338
 402:lib/chibios/os/rt/src/chevents.c **** 
 403:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1097              		.loc 1 403 3 view .LVU339
 1098              	.LBB271:
 1099              	.LBI271:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1100              		.loc 2 355 20 view .LVU340
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1101              		.loc 2 357 3 view .LVU341
 1102              	.LBB272:
 1103              	.LBI272:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1104              		.loc 3 669 27 view .LVU342
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1105              		.loc 3 677 3 view .LVU343
 1106              	.LBB273:
 1107              	.LBI273:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1108              		.loc 4 491 27 view .LVU344
 1109              	.LBB274:
 1110              		.loc 4 493 3 view .LVU345
 1111 0008 2023     		movs	r3, #32
 1112              		.syntax unified
 1113              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1114 000a 83F31188 		MSR basepri, r3
 1115              	@ 0 "" 2
 1116              	.LVL61:
 1117              		.loc 4 493 3 is_stmt 0 view .LVU346
 1118              		.thumb
 1119              		.syntax unified
 1120              	.LBE274:
 1121              	.LBE273:
 1122              	.LBE272:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1123              		.loc 2 358 34 is_stmt 1 view .LVU347
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1124              		.loc 2 359 20 view .LVU348
 1125              	.LBE271:
 404:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1126              		.loc 1 404 3 view .LVU349
 1127              		.loc 1 404 5 is_stmt 0 view .LVU350
 1128 000e 6B6B     		ldr	r3, [r5, #52]
 1129              	.LVL62:
 405:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1130              		.loc 1 405 3 is_stmt 1 view .LVU351
 1131              		.loc 1 405 6 is_stmt 0 view .LVU352
 1132 0010 0340     		ands	r3, r0, r3
 1133              	.LVL63:
 1134              		.loc 1 405 6 view .LVU353
 1135 0012 05D1     		bne	.L43
 406:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1136              		.loc 1 406 5 is_stmt 1 view .LVU354
 1137              		.loc 1 406 19 is_stmt 0 view .LVU355
 1138 0014 6862     		str	r0, [r5, #36]
 407:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 1139              		.loc 1 407 5 is_stmt 1 view .LVU356
 1140 0016 0A20     		movs	r0, #10
 1141              	.LVL64:
 1142              		.loc 1 407 5 is_stmt 0 view .LVU357
 1143 0018 FFF7FEFF 		bl	chSchGoSleepS
 1144              	.LVL65:
 408:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 1145              		.loc 1 408 5 is_stmt 1 view .LVU358
 1146              		.loc 1 408 7 is_stmt 0 view .LVU359
 1147 001c 6B6B     		ldr	r3, [r5, #52]
 1148 001e 2340     		ands	r3, r3, r4
 1149              	.LVL66:
 1150              	.L43:
 409:lib/chibios/os/rt/src/chevents.c ****   }
 410:lib/chibios/os/rt/src/chevents.c ****   m ^= m & (m - (eventmask_t)1);
 1151              		.loc 1 410 3 is_stmt 1 view .LVU360
 1152              		.loc 1 410 5 is_stmt 0 view .LVU361
 1153 0020 5842     		rsbs	r0, r3, #0
 1154 0022 1840     		ands	r0, r0, r3
 1155              	.LVL67:
 411:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1156              		.loc 1 411 3 is_stmt 1 view .LVU362
 1157              		.loc 1 411 17 is_stmt 0 view .LVU363
 1158 0024 6B6B     		ldr	r3, [r5, #52]
 1159 0026 23EA0003 		bic	r3, r3, r0
 1160 002a 6B63     		str	r3, [r5, #52]
 412:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1161              		.loc 1 412 3 is_stmt 1 view .LVU364
 1162              	.LBB275:
 1163              	.LBI275:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1164              		.loc 2 367 20 view .LVU365
 1165              	.LBB276:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1166              		.loc 2 369 22 view .LVU366
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1167              		.loc 2 370 33 view .LVU367
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1168              		.loc 2 376 3 view .LVU368
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1169              		.loc 2 376 3 view .LVU369
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1170              		.loc 2 376 3 view .LVU370
 1171              		.loc 2 380 3 view .LVU371
 1172              	.LBB277:
 1173              	.LBI277:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1174              		.loc 3 693 27 view .LVU372
 1175              		.loc 3 696 3 view .LVU373
 1176              	.LVL68:
 1177              	.LBB278:
 1178              	.LBI278:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1179              		.loc 4 491 27 view .LVU374
 1180              	.LBB279:
 1181              		.loc 4 493 3 view .LVU375
 1182 002c 0023     		movs	r3, #0
 1183              		.syntax unified
 1184              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1185 002e 83F31188 		MSR basepri, r3
 1186              	@ 0 "" 2
 1187              	.LVL69:
 1188              		.loc 4 493 3 is_stmt 0 view .LVU376
 1189              		.thumb
 1190              		.syntax unified
 1191              	.LBE279:
 1192              	.LBE278:
 1193              	.LBE277:
 1194              	.LBE276:
 1195              	.LBE275:
 413:lib/chibios/os/rt/src/chevents.c **** 
 414:lib/chibios/os/rt/src/chevents.c ****   return m;
 1196              		.loc 1 414 3 is_stmt 1 view .LVU377
 415:lib/chibios/os/rt/src/chevents.c **** }
 1197              		.loc 1 415 1 is_stmt 0 view .LVU378
 1198 0032 38BD     		pop	{r3, r4, r5, pc}
 1199              	.LVL70:
 1200              	.L45:
 1201              		.loc 1 415 1 view .LVU379
 1202              		.align	2
 1203              	.L44:
 1204 0034 00000000 		.word	ch
 1205              		.cfi_endproc
 1206              	.LFE301:
 1208              		.section	.text.chEvtWaitAny,"ax",%progbits
 1209              		.align	1
 1210              		.global	chEvtWaitAny
 1211              		.syntax unified
 1212              		.thumb
 1213              		.thumb_func
 1215              	chEvtWaitAny:
 1216              	.LVL71:
 1217              	.LFB302:
 416:lib/chibios/os/rt/src/chevents.c **** 
 417:lib/chibios/os/rt/src/chevents.c **** /**
 418:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for any of the specified events.
 419:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for any event among those specified in
 420:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the events are cleared and
 421:lib/chibios/os/rt/src/chevents.c ****  *          returned.
 422:lib/chibios/os/rt/src/chevents.c ****  *
 423:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 424:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 425:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 426:lib/chibios/os/rt/src/chevents.c ****  *
 427:lib/chibios/os/rt/src/chevents.c ****  * @api
 428:lib/chibios/os/rt/src/chevents.c ****  */
 429:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAny(eventmask_t events) {
 1218              		.loc 1 429 46 is_stmt 1 view -0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 0
 1221              		@ frame_needed = 0, uses_anonymous_args = 0
 430:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1222              		.loc 1 430 3 view .LVU381
 429:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1223              		.loc 1 429 46 is_stmt 0 view .LVU382
 1224 0000 38B5     		push	{r3, r4, r5, lr}
 1225              		.cfi_def_cfa_offset 16
 1226              		.cfi_offset 3, -16
 1227              		.cfi_offset 4, -12
 1228              		.cfi_offset 5, -8
 1229              		.cfi_offset 14, -4
 1230              		.loc 1 430 13 view .LVU383
 1231 0002 0C4B     		ldr	r3, .L48
 429:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1232              		.loc 1 429 46 view .LVU384
 1233 0004 0446     		mov	r4, r0
 1234              		.loc 1 430 13 view .LVU385
 1235 0006 9D69     		ldr	r5, [r3, #24]
 1236              	.LVL72:
 431:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1237              		.loc 1 431 3 is_stmt 1 view .LVU386
 432:lib/chibios/os/rt/src/chevents.c **** 
 433:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1238              		.loc 1 433 3 view .LVU387
 1239              	.LBB280:
 1240              	.LBI280:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1241              		.loc 2 355 20 view .LVU388
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1242              		.loc 2 357 3 view .LVU389
 1243              	.LBB281:
 1244              	.LBI281:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1245              		.loc 3 669 27 view .LVU390
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1246              		.loc 3 677 3 view .LVU391
 1247              	.LBB282:
 1248              	.LBI282:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1249              		.loc 4 491 27 view .LVU392
 1250              	.LBB283:
 1251              		.loc 4 493 3 view .LVU393
 1252 0008 2023     		movs	r3, #32
 1253              		.syntax unified
 1254              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1255 000a 83F31188 		MSR basepri, r3
 1256              	@ 0 "" 2
 1257              	.LVL73:
 1258              		.loc 4 493 3 is_stmt 0 view .LVU394
 1259              		.thumb
 1260              		.syntax unified
 1261              	.LBE283:
 1262              	.LBE282:
 1263              	.LBE281:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1264              		.loc 2 358 34 is_stmt 1 view .LVU395
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1265              		.loc 2 359 20 view .LVU396
 1266              	.LBE280:
 434:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1267              		.loc 1 434 3 view .LVU397
 1268              		.loc 1 434 5 is_stmt 0 view .LVU398
 1269 000e 6B6B     		ldr	r3, [r5, #52]
 1270              	.LVL74:
 435:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1271              		.loc 1 435 3 is_stmt 1 view .LVU399
 1272              		.loc 1 435 6 is_stmt 0 view .LVU400
 1273 0010 1840     		ands	r0, r0, r3
 1274              	.LVL75:
 1275              		.loc 1 435 6 view .LVU401
 1276 0012 06D1     		bne	.L47
 436:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1277              		.loc 1 436 5 is_stmt 1 view .LVU402
 437:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 1278              		.loc 1 437 5 is_stmt 0 view .LVU403
 1279 0014 0A20     		movs	r0, #10
 1280              	.LVL76:
 436:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1281              		.loc 1 436 19 view .LVU404
 1282 0016 6C62     		str	r4, [r5, #36]
 1283              		.loc 1 437 5 is_stmt 1 view .LVU405
 1284 0018 FFF7FEFF 		bl	chSchGoSleepS
 1285              	.LVL77:
 438:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 1286              		.loc 1 438 5 view .LVU406
 1287              		.loc 1 438 7 is_stmt 0 view .LVU407
 1288 001c 6B6B     		ldr	r3, [r5, #52]
 1289 001e 04EA0300 		and	r0, r4, r3
 1290              	.LVL78:
 1291              	.L47:
 439:lib/chibios/os/rt/src/chevents.c ****   }
 440:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1292              		.loc 1 440 3 is_stmt 1 view .LVU408
 1293              		.loc 1 440 17 is_stmt 0 view .LVU409
 1294 0022 6B6B     		ldr	r3, [r5, #52]
 1295 0024 23EA0003 		bic	r3, r3, r0
 1296 0028 6B63     		str	r3, [r5, #52]
 441:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1297              		.loc 1 441 3 is_stmt 1 view .LVU410
 1298              	.LBB284:
 1299              	.LBI284:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1300              		.loc 2 367 20 view .LVU411
 1301              	.LBB285:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1302              		.loc 2 369 22 view .LVU412
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1303              		.loc 2 370 33 view .LVU413
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1304              		.loc 2 376 3 view .LVU414
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1305              		.loc 2 376 3 view .LVU415
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1306              		.loc 2 376 3 view .LVU416
 1307              		.loc 2 380 3 view .LVU417
 1308              	.LBB286:
 1309              	.LBI286:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1310              		.loc 3 693 27 view .LVU418
 1311              		.loc 3 696 3 view .LVU419
 1312              	.LVL79:
 1313              	.LBB287:
 1314              	.LBI287:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1315              		.loc 4 491 27 view .LVU420
 1316              	.LBB288:
 1317              		.loc 4 493 3 view .LVU421
 1318 002a 0023     		movs	r3, #0
 1319              		.syntax unified
 1320              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1321 002c 83F31188 		MSR basepri, r3
 1322              	@ 0 "" 2
 1323              	.LVL80:
 1324              		.loc 4 493 3 is_stmt 0 view .LVU422
 1325              		.thumb
 1326              		.syntax unified
 1327              	.LBE288:
 1328              	.LBE287:
 1329              	.LBE286:
 1330              	.LBE285:
 1331              	.LBE284:
 442:lib/chibios/os/rt/src/chevents.c **** 
 443:lib/chibios/os/rt/src/chevents.c ****   return m;
 1332              		.loc 1 443 3 is_stmt 1 view .LVU423
 444:lib/chibios/os/rt/src/chevents.c **** }
 1333              		.loc 1 444 1 is_stmt 0 view .LVU424
 1334 0030 38BD     		pop	{r3, r4, r5, pc}
 1335              	.LVL81:
 1336              	.L49:
 1337              		.loc 1 444 1 view .LVU425
 1338 0032 00BF     		.align	2
 1339              	.L48:
 1340 0034 00000000 		.word	ch
 1341              		.cfi_endproc
 1342              	.LFE302:
 1344              		.section	.text.chEvtWaitAll,"ax",%progbits
 1345              		.align	1
 1346              		.global	chEvtWaitAll
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1351              	chEvtWaitAll:
 1352              	.LVL82:
 1353              	.LFB303:
 445:lib/chibios/os/rt/src/chevents.c **** 
 446:lib/chibios/os/rt/src/chevents.c **** /**
 447:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for all the specified events.
 448:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for all the events specified in @p events to
 449:lib/chibios/os/rt/src/chevents.c ****  *          become pending then the events are cleared and returned.
 450:lib/chibios/os/rt/src/chevents.c ****  *
 451:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 452:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS requires all the events
 453:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 454:lib/chibios/os/rt/src/chevents.c ****  *
 455:lib/chibios/os/rt/src/chevents.c ****  * @api
 456:lib/chibios/os/rt/src/chevents.c ****  */
 457:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAll(eventmask_t events) {
 1354              		.loc 1 457 46 is_stmt 1 view -0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 458:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1358              		.loc 1 458 3 view .LVU427
 457:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1359              		.loc 1 457 46 is_stmt 0 view .LVU428
 1360 0000 38B5     		push	{r3, r4, r5, lr}
 1361              		.cfi_def_cfa_offset 16
 1362              		.cfi_offset 3, -16
 1363              		.cfi_offset 4, -12
 1364              		.cfi_offset 5, -8
 1365              		.cfi_offset 14, -4
 1366              		.loc 1 458 13 view .LVU429
 1367 0002 0B4B     		ldr	r3, .L52
 457:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1368              		.loc 1 457 46 view .LVU430
 1369 0004 0446     		mov	r4, r0
 1370              		.loc 1 458 13 view .LVU431
 1371 0006 9D69     		ldr	r5, [r3, #24]
 1372              	.LVL83:
 459:lib/chibios/os/rt/src/chevents.c **** 
 460:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1373              		.loc 1 460 3 is_stmt 1 view .LVU432
 1374              	.LBB289:
 1375              	.LBI289:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1376              		.loc 2 355 20 view .LVU433
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1377              		.loc 2 357 3 view .LVU434
 1378              	.LBB290:
 1379              	.LBI290:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1380              		.loc 3 669 27 view .LVU435
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1381              		.loc 3 677 3 view .LVU436
 1382              	.LBB291:
 1383              	.LBI291:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1384              		.loc 4 491 27 view .LVU437
 1385              	.LBB292:
 1386              		.loc 4 493 3 view .LVU438
 1387 0008 2023     		movs	r3, #32
 1388              		.syntax unified
 1389              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1390 000a 83F31188 		MSR basepri, r3
 1391              	@ 0 "" 2
 1392              	.LVL84:
 1393              		.loc 4 493 3 is_stmt 0 view .LVU439
 1394              		.thumb
 1395              		.syntax unified
 1396              	.LBE292:
 1397              	.LBE291:
 1398              	.LBE290:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1399              		.loc 2 358 34 is_stmt 1 view .LVU440
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1400              		.loc 2 359 20 view .LVU441
 1401              	.LBE289:
 461:lib/chibios/os/rt/src/chevents.c ****   if ((ctp->epending & events) != events) {
 1402              		.loc 1 461 3 view .LVU442
 1403              		.loc 1 461 22 is_stmt 0 view .LVU443
 1404 000e 6B6B     		ldr	r3, [r5, #52]
 1405              		.loc 1 461 6 view .LVU444
 1406 0010 30EA0303 		bics	r3, r0, r3
 1407 0014 03D0     		beq	.L51
 462:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1408              		.loc 1 462 5 is_stmt 1 view .LVU445
 1409              		.loc 1 462 19 is_stmt 0 view .LVU446
 1410 0016 6862     		str	r0, [r5, #36]
 463:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTANDEVT);
 1411              		.loc 1 463 5 is_stmt 1 view .LVU447
 1412 0018 0B20     		movs	r0, #11
 1413              	.LVL85:
 1414              		.loc 1 463 5 is_stmt 0 view .LVU448
 1415 001a FFF7FEFF 		bl	chSchGoSleepS
 1416              	.LVL86:
 1417              	.L51:
 464:lib/chibios/os/rt/src/chevents.c ****   }
 465:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~events;
 1418              		.loc 1 465 3 is_stmt 1 view .LVU449
 1419              		.loc 1 465 17 is_stmt 0 view .LVU450
 1420 001e 6B6B     		ldr	r3, [r5, #52]
 1421 0020 23EA0403 		bic	r3, r3, r4
 1422 0024 6B63     		str	r3, [r5, #52]
 466:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1423              		.loc 1 466 3 is_stmt 1 view .LVU451
 1424              	.LBB293:
 1425              	.LBI293:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1426              		.loc 2 367 20 view .LVU452
 1427              	.LBB294:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1428              		.loc 2 369 22 view .LVU453
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1429              		.loc 2 370 33 view .LVU454
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1430              		.loc 2 376 3 view .LVU455
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1431              		.loc 2 376 3 view .LVU456
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1432              		.loc 2 376 3 view .LVU457
 1433              		.loc 2 380 3 view .LVU458
 1434              	.LBB295:
 1435              	.LBI295:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1436              		.loc 3 693 27 view .LVU459
 1437              		.loc 3 696 3 view .LVU460
 1438              	.LVL87:
 1439              	.LBB296:
 1440              	.LBI296:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1441              		.loc 4 491 27 view .LVU461
 1442              	.LBB297:
 1443              		.loc 4 493 3 view .LVU462
 1444 0026 0023     		movs	r3, #0
 1445              		.syntax unified
 1446              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1447 0028 83F31188 		MSR basepri, r3
 1448              	@ 0 "" 2
 1449              	.LVL88:
 1450              		.loc 4 493 3 is_stmt 0 view .LVU463
 1451              		.thumb
 1452              		.syntax unified
 1453              	.LBE297:
 1454              	.LBE296:
 1455              	.LBE295:
 1456              	.LBE294:
 1457              	.LBE293:
 467:lib/chibios/os/rt/src/chevents.c **** 
 468:lib/chibios/os/rt/src/chevents.c ****   return events;
 1458              		.loc 1 468 3 is_stmt 1 view .LVU464
 469:lib/chibios/os/rt/src/chevents.c **** }
 1459              		.loc 1 469 1 is_stmt 0 view .LVU465
 1460 002c 2046     		mov	r0, r4
 1461 002e 38BD     		pop	{r3, r4, r5, pc}
 1462              	.LVL89:
 1463              	.L53:
 1464              		.loc 1 469 1 view .LVU466
 1465              		.align	2
 1466              	.L52:
 1467 0030 00000000 		.word	ch
 1468              		.cfi_endproc
 1469              	.LFE303:
 1471              		.section	.text.chEvtWaitOneTimeout,"ax",%progbits
 1472              		.align	1
 1473              		.global	chEvtWaitOneTimeout
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1478              	chEvtWaitOneTimeout:
 1479              	.LVL90:
 1480              	.LFB304:
 470:lib/chibios/os/rt/src/chevents.c **** #endif /* CH_CFG_OPTIMIZE_SPEED || !CH_CFG_USE_EVENTS_TIMEOUT */
 471:lib/chibios/os/rt/src/chevents.c **** 
 472:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_USE_EVENTS_TIMEOUT == TRUE) || defined(__DOXYGEN__)
 473:lib/chibios/os/rt/src/chevents.c **** /**
 474:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for exactly one of the specified events.
 475:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for one event among those specified in
 476:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the event is cleared and returned.
 477:lib/chibios/os/rt/src/chevents.c ****  * @note    One and only one event is served in the function, the one with the
 478:lib/chibios/os/rt/src/chevents.c ****  *          lowest event id. The function is meant to be invoked into a loop
 479:lib/chibios/os/rt/src/chevents.c ****  *          in order to serve all the pending events.<br>
 480:lib/chibios/os/rt/src/chevents.c ****  *          This means that Event Listeners with a lower event identifier have
 481:lib/chibios/os/rt/src/chevents.c ****  *          an higher priority.
 482:lib/chibios/os/rt/src/chevents.c ****  *
 483:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 484:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 485:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 486:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 487:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 488:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 489:lib/chibios/os/rt/src/chevents.c ****  *                      .
 490:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the lowest event id served and cleared.
 491:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 492:lib/chibios/os/rt/src/chevents.c ****  *
 493:lib/chibios/os/rt/src/chevents.c ****  * @api
 494:lib/chibios/os/rt/src/chevents.c ****  */
 495:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout) {
 1481              		.loc 1 495 76 is_stmt 1 view -0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 496:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1485              		.loc 1 496 3 view .LVU468
 1486              		.loc 1 496 13 is_stmt 0 view .LVU469
 1487 0000 104A     		ldr	r2, .L61
 495:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1488              		.loc 1 495 76 view .LVU470
 1489 0002 70B5     		push	{r4, r5, r6, lr}
 1490              		.cfi_def_cfa_offset 16
 1491              		.cfi_offset 4, -16
 1492              		.cfi_offset 5, -12
 1493              		.cfi_offset 6, -8
 1494              		.cfi_offset 14, -4
 1495              		.loc 1 496 13 view .LVU471
 1496 0004 9669     		ldr	r6, [r2, #24]
 1497              	.LVL91:
 497:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1498              		.loc 1 497 3 is_stmt 1 view .LVU472
 498:lib/chibios/os/rt/src/chevents.c **** 
 499:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1499              		.loc 1 499 3 view .LVU473
 1500              	.LBB298:
 1501              	.LBI298:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1502              		.loc 2 355 20 view .LVU474
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1503              		.loc 2 357 3 view .LVU475
 1504              	.LBB299:
 1505              	.LBI299:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1506              		.loc 3 669 27 view .LVU476
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1507              		.loc 3 677 3 view .LVU477
 1508              	.LBB300:
 1509              	.LBI300:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1510              		.loc 4 491 27 view .LVU478
 1511              	.LBB301:
 1512              		.loc 4 493 3 view .LVU479
 1513              	.LBE301:
 1514              	.LBE300:
 1515              	.LBE299:
 1516              	.LBE298:
 495:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1517              		.loc 1 495 76 is_stmt 0 view .LVU480
 1518 0006 0546     		mov	r5, r0
 1519              	.LBB305:
 1520              	.LBB304:
 1521              	.LBB303:
 1522              	.LBB302:
 1523              		.loc 4 493 3 view .LVU481
 1524 0008 2022     		movs	r2, #32
 1525              		.syntax unified
 1526              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1527 000a 82F31188 		MSR basepri, r2
 1528              	@ 0 "" 2
 1529              	.LVL92:
 1530              		.loc 4 493 3 view .LVU482
 1531              		.thumb
 1532              		.syntax unified
 1533              	.LBE302:
 1534              	.LBE303:
 1535              	.LBE304:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1536              		.loc 2 358 34 is_stmt 1 view .LVU483
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1537              		.loc 2 359 20 view .LVU484
 1538              	.LBE305:
 500:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1539              		.loc 1 500 3 view .LVU485
 1540              		.loc 1 500 5 is_stmt 0 view .LVU486
 1541 000e 746B     		ldr	r4, [r6, #52]
 1542              	.LVL93:
 501:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1543              		.loc 1 501 3 is_stmt 1 view .LVU487
 1544              		.loc 1 501 6 is_stmt 0 view .LVU488
 1545 0010 0440     		ands	r4, r0, r4
 1546              	.LVL94:
 1547              		.loc 1 501 6 view .LVU489
 1548 0012 0CD1     		bne	.L55
 502:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1549              		.loc 1 502 5 is_stmt 1 view .LVU490
 1550              		.loc 1 502 8 is_stmt 0 view .LVU491
 1551 0014 19B9     		cbnz	r1, .L56
 1552              	.LVL95:
 1553              	.L60:
 503:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 504:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 505:lib/chibios/os/rt/src/chevents.c ****     }
 506:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 507:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 508:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1554              		.loc 1 508 7 is_stmt 1 view .LVU492
 1555              	.LBB306:
 1556              	.LBI306:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1557              		.loc 2 367 20 view .LVU493
 1558              	.LBB307:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1559              		.loc 2 369 22 view .LVU494
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1560              		.loc 2 370 33 view .LVU495
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1561              		.loc 2 376 3 view .LVU496
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1562              		.loc 2 376 3 view .LVU497
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1563              		.loc 2 376 3 view .LVU498
 1564              		.loc 2 380 3 view .LVU499
 1565              	.LBB308:
 1566              	.LBI308:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1567              		.loc 3 693 27 view .LVU500
 1568              		.loc 3 696 3 view .LVU501
 1569              	.LBB309:
 1570              	.LBI309:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1571              		.loc 4 491 27 view .LVU502
 1572              	.LBB310:
 1573              		.loc 4 493 3 view .LVU503
 1574              		.syntax unified
 1575              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1576 0016 84F31188 		MSR basepri, r4
 1577              	@ 0 "" 2
 1578              	.LVL96:
 1579              		.loc 4 493 3 is_stmt 0 view .LVU504
 1580              		.thumb
 1581              		.syntax unified
 1582              	.LBE310:
 1583              	.LBE309:
 1584              	.LBE308:
 1585              	.LBE307:
 1586              	.LBE306:
 509:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 1587              		.loc 1 509 7 is_stmt 1 view .LVU505
 1588              	.L54:
 510:lib/chibios/os/rt/src/chevents.c ****     }
 511:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 512:lib/chibios/os/rt/src/chevents.c ****   }
 513:lib/chibios/os/rt/src/chevents.c ****   m ^= m & (m - (eventmask_t)1);
 514:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 515:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 516:lib/chibios/os/rt/src/chevents.c **** 
 517:lib/chibios/os/rt/src/chevents.c ****   return m;
 518:lib/chibios/os/rt/src/chevents.c **** }
 1589              		.loc 1 518 1 is_stmt 0 view .LVU506
 1590 001a 2046     		mov	r0, r4
 1591 001c 70BD     		pop	{r4, r5, r6, pc}
 1592              	.LVL97:
 1593              	.L56:
 506:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1594              		.loc 1 506 5 is_stmt 1 view .LVU507
 506:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1595              		.loc 1 506 19 is_stmt 0 view .LVU508
 1596 001e 7062     		str	r0, [r6, #36]
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1597              		.loc 1 507 5 is_stmt 1 view .LVU509
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1598              		.loc 1 507 9 is_stmt 0 view .LVU510
 1599 0020 0A20     		movs	r0, #10
 1600              	.LVL98:
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1601              		.loc 1 507 9 view .LVU511
 1602 0022 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1603              	.LVL99:
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1604              		.loc 1 507 8 view .LVU512
 1605 0026 0028     		cmp	r0, #0
 1606 0028 F5DB     		blt	.L60
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1607              		.loc 1 511 5 is_stmt 1 view .LVU513
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1608              		.loc 1 511 7 is_stmt 0 view .LVU514
 1609 002a 746B     		ldr	r4, [r6, #52]
 1610              	.LVL100:
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1611              		.loc 1 511 7 view .LVU515
 1612 002c 2C40     		ands	r4, r4, r5
 1613              	.LVL101:
 1614              	.L55:
 513:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1615              		.loc 1 513 3 is_stmt 1 view .LVU516
 513:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1616              		.loc 1 513 5 is_stmt 0 view .LVU517
 1617 002e 6342     		rsbs	r3, r4, #0
 1618 0030 1C40     		ands	r4, r4, r3
 1619              	.LVL102:
 514:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1620              		.loc 1 514 3 is_stmt 1 view .LVU518
 514:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1621              		.loc 1 514 17 is_stmt 0 view .LVU519
 1622 0032 736B     		ldr	r3, [r6, #52]
 1623 0034 23EA0403 		bic	r3, r3, r4
 1624 0038 7363     		str	r3, [r6, #52]
 515:lib/chibios/os/rt/src/chevents.c **** 
 1625              		.loc 1 515 3 is_stmt 1 view .LVU520
 1626              	.LBB311:
 1627              	.LBI311:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1628              		.loc 2 367 20 view .LVU521
 1629              	.LBB312:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1630              		.loc 2 369 22 view .LVU522
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1631              		.loc 2 370 33 view .LVU523
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1632              		.loc 2 376 3 view .LVU524
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1633              		.loc 2 376 3 view .LVU525
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1634              		.loc 2 376 3 view .LVU526
 1635              		.loc 2 380 3 view .LVU527
 1636              	.LBB313:
 1637              	.LBI313:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1638              		.loc 3 693 27 view .LVU528
 1639              		.loc 3 696 3 view .LVU529
 1640              	.LVL103:
 1641              	.LBB314:
 1642              	.LBI314:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1643              		.loc 4 491 27 view .LVU530
 1644              	.LBB315:
 1645              		.loc 4 493 3 view .LVU531
 1646 003a 0023     		movs	r3, #0
 1647              		.syntax unified
 1648              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1649 003c 83F31188 		MSR basepri, r3
 1650              	@ 0 "" 2
 1651              	.LVL104:
 1652              		.loc 4 493 3 is_stmt 0 view .LVU532
 1653              		.thumb
 1654              		.syntax unified
 1655              	.LBE315:
 1656              	.LBE314:
 1657              	.LBE313:
 1658              	.LBE312:
 1659              	.LBE311:
 517:lib/chibios/os/rt/src/chevents.c **** }
 1660              		.loc 1 517 3 is_stmt 1 view .LVU533
 517:lib/chibios/os/rt/src/chevents.c **** }
 1661              		.loc 1 517 10 is_stmt 0 view .LVU534
 1662 0040 EBE7     		b	.L54
 1663              	.L62:
 1664 0042 00BF     		.align	2
 1665              	.L61:
 1666 0044 00000000 		.word	ch
 1667              		.cfi_endproc
 1668              	.LFE304:
 1670              		.section	.text.chEvtWaitAnyTimeout,"ax",%progbits
 1671              		.align	1
 1672              		.global	chEvtWaitAnyTimeout
 1673              		.syntax unified
 1674              		.thumb
 1675              		.thumb_func
 1677              	chEvtWaitAnyTimeout:
 1678              	.LVL105:
 1679              	.LFB305:
 519:lib/chibios/os/rt/src/chevents.c **** 
 520:lib/chibios/os/rt/src/chevents.c **** /**
 521:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for any of the specified events.
 522:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for any event among those specified in
 523:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the events are cleared and
 524:lib/chibios/os/rt/src/chevents.c ****  *          returned.
 525:lib/chibios/os/rt/src/chevents.c ****  *
 526:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 527:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 528:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 529:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 530:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 531:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 532:lib/chibios/os/rt/src/chevents.c ****  *                      .
 533:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 534:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 535:lib/chibios/os/rt/src/chevents.c ****  *
 536:lib/chibios/os/rt/src/chevents.c ****  * @api
 537:lib/chibios/os/rt/src/chevents.c ****  */
 538:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout) {
 1680              		.loc 1 538 76 is_stmt 1 view -0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 539:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1684              		.loc 1 539 3 view .LVU536
 1685              		.loc 1 539 13 is_stmt 0 view .LVU537
 1686 0000 0F4A     		ldr	r2, .L70
 538:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1687              		.loc 1 538 76 view .LVU538
 1688 0002 70B5     		push	{r4, r5, r6, lr}
 1689              		.cfi_def_cfa_offset 16
 1690              		.cfi_offset 4, -16
 1691              		.cfi_offset 5, -12
 1692              		.cfi_offset 6, -8
 1693              		.cfi_offset 14, -4
 1694              		.loc 1 539 13 view .LVU539
 1695 0004 9669     		ldr	r6, [r2, #24]
 1696              	.LVL106:
 540:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1697              		.loc 1 540 3 is_stmt 1 view .LVU540
 541:lib/chibios/os/rt/src/chevents.c **** 
 542:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1698              		.loc 1 542 3 view .LVU541
 1699              	.LBB316:
 1700              	.LBI316:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1701              		.loc 2 355 20 view .LVU542
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1702              		.loc 2 357 3 view .LVU543
 1703              	.LBB317:
 1704              	.LBI317:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1705              		.loc 3 669 27 view .LVU544
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1706              		.loc 3 677 3 view .LVU545
 1707              	.LBB318:
 1708              	.LBI318:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1709              		.loc 4 491 27 view .LVU546
 1710              	.LBB319:
 1711              		.loc 4 493 3 view .LVU547
 1712              	.LBE319:
 1713              	.LBE318:
 1714              	.LBE317:
 1715              	.LBE316:
 538:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1716              		.loc 1 538 76 is_stmt 0 view .LVU548
 1717 0006 0546     		mov	r5, r0
 1718              	.LBB323:
 1719              	.LBB322:
 1720              	.LBB321:
 1721              	.LBB320:
 1722              		.loc 4 493 3 view .LVU549
 1723 0008 2022     		movs	r2, #32
 1724              		.syntax unified
 1725              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1726 000a 82F31188 		MSR basepri, r2
 1727              	@ 0 "" 2
 1728              	.LVL107:
 1729              		.loc 4 493 3 view .LVU550
 1730              		.thumb
 1731              		.syntax unified
 1732              	.LBE320:
 1733              	.LBE321:
 1734              	.LBE322:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1735              		.loc 2 358 34 is_stmt 1 view .LVU551
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1736              		.loc 2 359 20 view .LVU552
 1737              	.LBE323:
 543:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1738              		.loc 1 543 3 view .LVU553
 1739              		.loc 1 543 5 is_stmt 0 view .LVU554
 1740 000e 746B     		ldr	r4, [r6, #52]
 1741              	.LVL108:
 544:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1742              		.loc 1 544 3 is_stmt 1 view .LVU555
 1743              		.loc 1 544 6 is_stmt 0 view .LVU556
 1744 0010 0440     		ands	r4, r0, r4
 1745              	.LVL109:
 1746              		.loc 1 544 6 view .LVU557
 1747 0012 0CD1     		bne	.L64
 545:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1748              		.loc 1 545 5 is_stmt 1 view .LVU558
 1749              		.loc 1 545 8 is_stmt 0 view .LVU559
 1750 0014 19B9     		cbnz	r1, .L65
 1751              	.LVL110:
 1752              	.L69:
 546:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 547:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 548:lib/chibios/os/rt/src/chevents.c ****     }
 549:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 550:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 551:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1753              		.loc 1 551 7 is_stmt 1 view .LVU560
 1754              	.LBB324:
 1755              	.LBI324:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1756              		.loc 2 367 20 view .LVU561
 1757              	.LBB325:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1758              		.loc 2 369 22 view .LVU562
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1759              		.loc 2 370 33 view .LVU563
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1760              		.loc 2 376 3 view .LVU564
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1761              		.loc 2 376 3 view .LVU565
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1762              		.loc 2 376 3 view .LVU566
 1763              		.loc 2 380 3 view .LVU567
 1764              	.LBB326:
 1765              	.LBI326:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1766              		.loc 3 693 27 view .LVU568
 1767              		.loc 3 696 3 view .LVU569
 1768              	.LBB327:
 1769              	.LBI327:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1770              		.loc 4 491 27 view .LVU570
 1771              	.LBB328:
 1772              		.loc 4 493 3 view .LVU571
 1773              		.syntax unified
 1774              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1775 0016 84F31188 		MSR basepri, r4
 1776              	@ 0 "" 2
 1777              	.LVL111:
 1778              		.loc 4 493 3 is_stmt 0 view .LVU572
 1779              		.thumb
 1780              		.syntax unified
 1781              	.LBE328:
 1782              	.LBE327:
 1783              	.LBE326:
 1784              	.LBE325:
 1785              	.LBE324:
 552:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 1786              		.loc 1 552 7 is_stmt 1 view .LVU573
 1787              	.L63:
 553:lib/chibios/os/rt/src/chevents.c ****     }
 554:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 555:lib/chibios/os/rt/src/chevents.c ****   }
 556:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 557:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 558:lib/chibios/os/rt/src/chevents.c **** 
 559:lib/chibios/os/rt/src/chevents.c ****   return m;
 560:lib/chibios/os/rt/src/chevents.c **** }
 1788              		.loc 1 560 1 is_stmt 0 view .LVU574
 1789 001a 2046     		mov	r0, r4
 1790 001c 70BD     		pop	{r4, r5, r6, pc}
 1791              	.LVL112:
 1792              	.L65:
 549:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1793              		.loc 1 549 5 is_stmt 1 view .LVU575
 549:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1794              		.loc 1 549 19 is_stmt 0 view .LVU576
 1795 001e 7062     		str	r0, [r6, #36]
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1796              		.loc 1 550 5 is_stmt 1 view .LVU577
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1797              		.loc 1 550 9 is_stmt 0 view .LVU578
 1798 0020 0A20     		movs	r0, #10
 1799              	.LVL113:
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1800              		.loc 1 550 9 view .LVU579
 1801 0022 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1802              	.LVL114:
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1803              		.loc 1 550 8 view .LVU580
 1804 0026 0028     		cmp	r0, #0
 1805 0028 F5DB     		blt	.L69
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1806              		.loc 1 554 5 is_stmt 1 view .LVU581
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1807              		.loc 1 554 7 is_stmt 0 view .LVU582
 1808 002a 746B     		ldr	r4, [r6, #52]
 1809              	.LVL115:
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1810              		.loc 1 554 7 view .LVU583
 1811 002c 2C40     		ands	r4, r4, r5
 1812              	.LVL116:
 1813              	.L64:
 556:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1814              		.loc 1 556 3 is_stmt 1 view .LVU584
 556:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1815              		.loc 1 556 17 is_stmt 0 view .LVU585
 1816 002e 736B     		ldr	r3, [r6, #52]
 1817 0030 23EA0403 		bic	r3, r3, r4
 1818 0034 7363     		str	r3, [r6, #52]
 557:lib/chibios/os/rt/src/chevents.c **** 
 1819              		.loc 1 557 3 is_stmt 1 view .LVU586
 1820              	.LBB329:
 1821              	.LBI329:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1822              		.loc 2 367 20 view .LVU587
 1823              	.LBB330:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1824              		.loc 2 369 22 view .LVU588
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1825              		.loc 2 370 33 view .LVU589
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1826              		.loc 2 376 3 view .LVU590
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1827              		.loc 2 376 3 view .LVU591
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1828              		.loc 2 376 3 view .LVU592
 1829              		.loc 2 380 3 view .LVU593
 1830              	.LBB331:
 1831              	.LBI331:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1832              		.loc 3 693 27 view .LVU594
 1833              		.loc 3 696 3 view .LVU595
 1834              	.LVL117:
 1835              	.LBB332:
 1836              	.LBI332:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1837              		.loc 4 491 27 view .LVU596
 1838              	.LBB333:
 1839              		.loc 4 493 3 view .LVU597
 1840 0036 0023     		movs	r3, #0
 1841              		.syntax unified
 1842              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1843 0038 83F31188 		MSR basepri, r3
 1844              	@ 0 "" 2
 1845              	.LVL118:
 1846              		.loc 4 493 3 is_stmt 0 view .LVU598
 1847              		.thumb
 1848              		.syntax unified
 1849              	.LBE333:
 1850              	.LBE332:
 1851              	.LBE331:
 1852              	.LBE330:
 1853              	.LBE329:
 559:lib/chibios/os/rt/src/chevents.c **** }
 1854              		.loc 1 559 3 is_stmt 1 view .LVU599
 559:lib/chibios/os/rt/src/chevents.c **** }
 1855              		.loc 1 559 10 is_stmt 0 view .LVU600
 1856 003c EDE7     		b	.L63
 1857              	.L71:
 1858 003e 00BF     		.align	2
 1859              	.L70:
 1860 0040 00000000 		.word	ch
 1861              		.cfi_endproc
 1862              	.LFE305:
 1864              		.section	.text.chEvtWaitAllTimeout,"ax",%progbits
 1865              		.align	1
 1866              		.global	chEvtWaitAllTimeout
 1867              		.syntax unified
 1868              		.thumb
 1869              		.thumb_func
 1871              	chEvtWaitAllTimeout:
 1872              	.LVL119:
 1873              	.LFB306:
 561:lib/chibios/os/rt/src/chevents.c **** 
 562:lib/chibios/os/rt/src/chevents.c **** /**
 563:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for all the specified events.
 564:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for all the events specified in @p events to
 565:lib/chibios/os/rt/src/chevents.c ****  *          become pending then the events are cleared and returned.
 566:lib/chibios/os/rt/src/chevents.c ****  *
 567:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 568:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS requires all the events
 569:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 570:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 571:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 572:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 573:lib/chibios/os/rt/src/chevents.c ****  *                      .
 574:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 575:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 576:lib/chibios/os/rt/src/chevents.c ****  *
 577:lib/chibios/os/rt/src/chevents.c ****  * @api
 578:lib/chibios/os/rt/src/chevents.c ****  */
 579:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout) {
 1874              		.loc 1 579 76 is_stmt 1 view -0
 1875              		.cfi_startproc
 1876              		@ args = 0, pretend = 0, frame = 0
 1877              		@ frame_needed = 0, uses_anonymous_args = 0
 580:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1878              		.loc 1 580 3 view .LVU602
 1879              		.loc 1 580 13 is_stmt 0 view .LVU603
 1880 0000 104A     		ldr	r2, .L78
 579:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1881              		.loc 1 579 76 view .LVU604
 1882 0002 38B5     		push	{r3, r4, r5, lr}
 1883              		.cfi_def_cfa_offset 16
 1884              		.cfi_offset 3, -16
 1885              		.cfi_offset 4, -12
 1886              		.cfi_offset 5, -8
 1887              		.cfi_offset 14, -4
 1888              		.loc 1 580 13 view .LVU605
 1889 0004 9569     		ldr	r5, [r2, #24]
 1890              	.LVL120:
 581:lib/chibios/os/rt/src/chevents.c **** 
 582:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1891              		.loc 1 582 3 is_stmt 1 view .LVU606
 1892              	.LBB334:
 1893              	.LBI334:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1894              		.loc 2 355 20 view .LVU607
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1895              		.loc 2 357 3 view .LVU608
 1896              	.LBB335:
 1897              	.LBI335:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1898              		.loc 3 669 27 view .LVU609
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1899              		.loc 3 677 3 view .LVU610
 1900              	.LBB336:
 1901              	.LBI336:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1902              		.loc 4 491 27 view .LVU611
 1903              	.LBB337:
 1904              		.loc 4 493 3 view .LVU612
 1905              	.LBE337:
 1906              	.LBE336:
 1907              	.LBE335:
 1908              	.LBE334:
 579:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1909              		.loc 1 579 76 is_stmt 0 view .LVU613
 1910 0006 0446     		mov	r4, r0
 1911 0008 0B46     		mov	r3, r1
 1912              	.LBB341:
 1913              	.LBB340:
 1914              	.LBB339:
 1915              	.LBB338:
 1916              		.loc 4 493 3 view .LVU614
 1917 000a 2022     		movs	r2, #32
 1918              		.syntax unified
 1919              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1920 000c 82F31188 		MSR basepri, r2
 1921              	@ 0 "" 2
 1922              	.LVL121:
 1923              		.loc 4 493 3 view .LVU615
 1924              		.thumb
 1925              		.syntax unified
 1926              	.LBE338:
 1927              	.LBE339:
 1928              	.LBE340:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1929              		.loc 2 358 34 is_stmt 1 view .LVU616
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1930              		.loc 2 359 20 view .LVU617
 1931              	.LBE341:
 583:lib/chibios/os/rt/src/chevents.c ****   if ((ctp->epending & events) != events) {
 1932              		.loc 1 583 3 view .LVU618
 1933              		.loc 1 583 22 is_stmt 0 view .LVU619
 1934 0010 6A6B     		ldr	r2, [r5, #52]
 1935              		.loc 1 583 6 view .LVU620
 1936 0012 30EA0202 		bics	r2, r0, r2
 1937 0016 0DD0     		beq	.L73
 584:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1938              		.loc 1 584 5 is_stmt 1 view .LVU621
 1939              		.loc 1 584 8 is_stmt 0 view .LVU622
 1940 0018 21B9     		cbnz	r1, .L74
 1941              	.LVL122:
 1942              	.L77:
 1943              	.LBB342:
 1944              	.LBB343:
 1945              	.LBB344:
 1946              	.LBB345:
 1947              	.LBB346:
 1948              		.loc 4 493 3 view .LVU623
 1949              		.syntax unified
 1950              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1951 001a 83F31188 		MSR basepri, r3
 1952              	@ 0 "" 2
 1953              		.thumb
 1954              		.syntax unified
 1955              	.LBE346:
 1956              	.LBE345:
 1957              	.LBE344:
 1958              	.LBE343:
 1959              	.LBE342:
 585:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 586:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 587:lib/chibios/os/rt/src/chevents.c ****     }
 588:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 589:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 590:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 591:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 1960              		.loc 1 591 7 is_stmt 1 view .LVU624
 586:lib/chibios/os/rt/src/chevents.c ****     }
 1961              		.loc 1 586 14 is_stmt 0 view .LVU625
 1962 001e 0024     		movs	r4, #0
 1963              	.LVL123:
 1964              	.L76:
 592:lib/chibios/os/rt/src/chevents.c ****     }
 593:lib/chibios/os/rt/src/chevents.c ****   }
 594:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~events;
 595:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 596:lib/chibios/os/rt/src/chevents.c **** 
 597:lib/chibios/os/rt/src/chevents.c ****   return events;
 598:lib/chibios/os/rt/src/chevents.c **** }
 1965              		.loc 1 598 1 view .LVU626
 1966 0020 2046     		mov	r0, r4
 1967 0022 38BD     		pop	{r3, r4, r5, pc}
 1968              	.LVL124:
 1969              	.L74:
 588:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 1970              		.loc 1 588 5 is_stmt 1 view .LVU627
 588:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 1971              		.loc 1 588 19 is_stmt 0 view .LVU628
 1972 0024 6862     		str	r0, [r5, #36]
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1973              		.loc 1 589 5 is_stmt 1 view .LVU629
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1974              		.loc 1 589 9 is_stmt 0 view .LVU630
 1975 0026 0B20     		movs	r0, #11
 1976              	.LVL125:
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1977              		.loc 1 589 9 view .LVU631
 1978 0028 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1979              	.LVL126:
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1980              		.loc 1 589 8 view .LVU632
 1981 002c 0028     		cmp	r0, #0
 1982 002e 01DA     		bge	.L73
 590:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 1983              		.loc 1 590 7 is_stmt 1 view .LVU633
 1984              	.LBB351:
 1985              	.LBI342:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1986              		.loc 2 367 20 view .LVU634
 1987              	.LBB350:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1988              		.loc 2 369 22 view .LVU635
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1989              		.loc 2 370 33 view .LVU636
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1990              		.loc 2 376 3 view .LVU637
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1991              		.loc 2 376 3 view .LVU638
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1992              		.loc 2 376 3 view .LVU639
 1993              		.loc 2 380 3 view .LVU640
 1994              	.LBB349:
 1995              	.LBI344:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1996              		.loc 3 693 27 view .LVU641
 1997              		.loc 3 696 3 view .LVU642
 1998              	.LVL127:
 1999              	.LBB348:
 2000              	.LBI345:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2001              		.loc 4 491 27 view .LVU643
 2002              	.LBB347:
 2003              		.loc 4 493 3 view .LVU644
 2004 0030 0023     		movs	r3, #0
 2005 0032 F2E7     		b	.L77
 2006              	.LVL128:
 2007              	.L73:
 2008              		.loc 4 493 3 is_stmt 0 view .LVU645
 2009              	.LBE347:
 2010              	.LBE348:
 2011              	.LBE349:
 2012              	.LBE350:
 2013              	.LBE351:
 594:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 2014              		.loc 1 594 3 is_stmt 1 view .LVU646
 594:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 2015              		.loc 1 594 17 is_stmt 0 view .LVU647
 2016 0034 6B6B     		ldr	r3, [r5, #52]
 2017 0036 23EA0403 		bic	r3, r3, r4
 2018 003a 6B63     		str	r3, [r5, #52]
 595:lib/chibios/os/rt/src/chevents.c **** 
 2019              		.loc 1 595 3 is_stmt 1 view .LVU648
 2020              	.LBB352:
 2021              	.LBI352:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2022              		.loc 2 367 20 view .LVU649
 2023              	.LBB353:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2024              		.loc 2 369 22 view .LVU650
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2025              		.loc 2 370 33 view .LVU651
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2026              		.loc 2 376 3 view .LVU652
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2027              		.loc 2 376 3 view .LVU653
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2028              		.loc 2 376 3 view .LVU654
 2029              		.loc 2 380 3 view .LVU655
 2030              	.LBB354:
 2031              	.LBI354:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2032              		.loc 3 693 27 view .LVU656
 2033              		.loc 3 696 3 view .LVU657
 2034              	.LVL129:
 2035              	.LBB355:
 2036              	.LBI355:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2037              		.loc 4 491 27 view .LVU658
 2038              	.LBB356:
 2039              		.loc 4 493 3 view .LVU659
 2040 003c 0023     		movs	r3, #0
 2041              		.syntax unified
 2042              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2043 003e 83F31188 		MSR basepri, r3
 2044              	@ 0 "" 2
 2045              	.LVL130:
 2046              		.loc 4 493 3 is_stmt 0 view .LVU660
 2047              		.thumb
 2048              		.syntax unified
 2049              	.LBE356:
 2050              	.LBE355:
 2051              	.LBE354:
 2052              	.LBE353:
 2053              	.LBE352:
 597:lib/chibios/os/rt/src/chevents.c **** }
 2054              		.loc 1 597 3 is_stmt 1 view .LVU661
 597:lib/chibios/os/rt/src/chevents.c **** }
 2055              		.loc 1 597 10 is_stmt 0 view .LVU662
 2056 0042 EDE7     		b	.L76
 2057              	.L79:
 2058              		.align	2
 2059              	.L78:
 2060 0044 00000000 		.word	ch
 2061              		.cfi_endproc
 2062              	.LFE306:
 2064              		.text
 2065              	.Letext0:
 2066              		.file 6 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2067              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2068              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2069              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 2070              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 2071              		.file 11 "./lib/chibios/os/rt/include/chlists.h"
 2072              		.file 12 "./lib/chibios/os/rt/include/chtime.h"
 2073              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2074              		.file 14 "./lib/chibios/os/rt/include/chtm.h"
 2075              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 2076              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chevents.c
     /tmp/cceNP5W1.s:21     .text.chEvtRegisterMaskWithFlags:0000000000000000 $t
     /tmp/cceNP5W1.s:27     .text.chEvtRegisterMaskWithFlags:0000000000000000 chEvtRegisterMaskWithFlags
     /tmp/cceNP5W1.s:143    .text.chEvtRegisterMaskWithFlags:0000000000000024 $d
     /tmp/cceNP5W1.s:148    .text.chEvtUnregister:0000000000000000 $t
     /tmp/cceNP5W1.s:154    .text.chEvtUnregister:0000000000000000 chEvtUnregister
     /tmp/cceNP5W1.s:262    .text.chEvtGetAndClearEventsI:0000000000000000 $t
     /tmp/cceNP5W1.s:268    .text.chEvtGetAndClearEventsI:0000000000000000 chEvtGetAndClearEventsI
     /tmp/cceNP5W1.s:297    .text.chEvtGetAndClearEventsI:0000000000000010 $d
     /tmp/cceNP5W1.s:302    .text.chEvtGetAndClearEvents:0000000000000000 $t
     /tmp/cceNP5W1.s:308    .text.chEvtGetAndClearEvents:0000000000000000 chEvtGetAndClearEvents
     /tmp/cceNP5W1.s:404    .text.chEvtAddEvents:0000000000000000 $t
     /tmp/cceNP5W1.s:410    .text.chEvtAddEvents:0000000000000000 chEvtAddEvents
     /tmp/cceNP5W1.s:508    .text.chEvtAddEvents:0000000000000018 $d
     /tmp/cceNP5W1.s:513    .text.chEvtGetAndClearFlags:0000000000000000 $t
     /tmp/cceNP5W1.s:519    .text.chEvtGetAndClearFlags:0000000000000000 chEvtGetAndClearFlags
     /tmp/cceNP5W1.s:611    .text.chEvtSignalI:0000000000000000 $t
     /tmp/cceNP5W1.s:617    .text.chEvtSignalI:0000000000000000 chEvtSignalI
     /tmp/cceNP5W1.s:681    .text.chEvtBroadcastFlagsI:0000000000000000 $t
     /tmp/cceNP5W1.s:687    .text.chEvtBroadcastFlagsI:0000000000000000 chEvtBroadcastFlagsI
     /tmp/cceNP5W1.s:752    .text.chEvtSignal:0000000000000000 $t
     /tmp/cceNP5W1.s:758    .text.chEvtSignal:0000000000000000 chEvtSignal
     /tmp/cceNP5W1.s:857    .text.chEvtBroadcastFlags:0000000000000000 $t
     /tmp/cceNP5W1.s:863    .text.chEvtBroadcastFlags:0000000000000000 chEvtBroadcastFlags
     /tmp/cceNP5W1.s:959    .text.chEvtGetAndClearFlagsI:0000000000000000 $t
     /tmp/cceNP5W1.s:965    .text.chEvtGetAndClearFlagsI:0000000000000000 chEvtGetAndClearFlagsI
     /tmp/cceNP5W1.s:994    .text.chEvtDispatch:0000000000000000 $t
     /tmp/cceNP5W1.s:1000   .text.chEvtDispatch:0000000000000000 chEvtDispatch
     /tmp/cceNP5W1.s:1068   .text.chEvtWaitOne:0000000000000000 $t
     /tmp/cceNP5W1.s:1074   .text.chEvtWaitOne:0000000000000000 chEvtWaitOne
     /tmp/cceNP5W1.s:1204   .text.chEvtWaitOne:0000000000000034 $d
     /tmp/cceNP5W1.s:1209   .text.chEvtWaitAny:0000000000000000 $t
     /tmp/cceNP5W1.s:1215   .text.chEvtWaitAny:0000000000000000 chEvtWaitAny
     /tmp/cceNP5W1.s:1340   .text.chEvtWaitAny:0000000000000034 $d
     /tmp/cceNP5W1.s:1345   .text.chEvtWaitAll:0000000000000000 $t
     /tmp/cceNP5W1.s:1351   .text.chEvtWaitAll:0000000000000000 chEvtWaitAll
     /tmp/cceNP5W1.s:1467   .text.chEvtWaitAll:0000000000000030 $d
     /tmp/cceNP5W1.s:1472   .text.chEvtWaitOneTimeout:0000000000000000 $t
     /tmp/cceNP5W1.s:1478   .text.chEvtWaitOneTimeout:0000000000000000 chEvtWaitOneTimeout
     /tmp/cceNP5W1.s:1666   .text.chEvtWaitOneTimeout:0000000000000044 $d
     /tmp/cceNP5W1.s:1671   .text.chEvtWaitAnyTimeout:0000000000000000 $t
     /tmp/cceNP5W1.s:1677   .text.chEvtWaitAnyTimeout:0000000000000000 chEvtWaitAnyTimeout
     /tmp/cceNP5W1.s:1860   .text.chEvtWaitAnyTimeout:0000000000000040 $d
     /tmp/cceNP5W1.s:1865   .text.chEvtWaitAllTimeout:0000000000000000 $t
     /tmp/cceNP5W1.s:1871   .text.chEvtWaitAllTimeout:0000000000000000 chEvtWaitAllTimeout
     /tmp/cceNP5W1.s:2060   .text.chEvtWaitAllTimeout:0000000000000044 $d

UNDEFINED SYMBOLS
ch
chSchReadyI
chSchRescheduleS
chSchGoSleepS
chSchGoSleepTimeoutS
