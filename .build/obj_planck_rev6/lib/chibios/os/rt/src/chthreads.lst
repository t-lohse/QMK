   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"chthreads.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/chibios/os/rt/src/chthreads.c"
  20              		.section	.text._thread_init,"ax",%progbits
  21              		.align	1
  22              		.global	_thread_init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	_thread_init:
  28              	.LVL0:
  29              	.LFB289:
   1:lib/chibios/os/rt/src/chthreads.c **** /*
   2:lib/chibios/os/rt/src/chthreads.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/rt/src/chthreads.c **** 
   4:lib/chibios/os/rt/src/chthreads.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/rt/src/chthreads.c **** 
   6:lib/chibios/os/rt/src/chthreads.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/rt/src/chthreads.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/rt/src/chthreads.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/rt/src/chthreads.c ****     (at your option) any later version.
  10:lib/chibios/os/rt/src/chthreads.c **** 
  11:lib/chibios/os/rt/src/chthreads.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/rt/src/chthreads.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/rt/src/chthreads.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/rt/src/chthreads.c ****     GNU General Public License for more details.
  15:lib/chibios/os/rt/src/chthreads.c **** 
  16:lib/chibios/os/rt/src/chthreads.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/rt/src/chthreads.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/rt/src/chthreads.c **** */
  19:lib/chibios/os/rt/src/chthreads.c **** 
  20:lib/chibios/os/rt/src/chthreads.c **** /**
  21:lib/chibios/os/rt/src/chthreads.c ****  * @file    rt/src/chthreads.c
  22:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Threads code.
  23:lib/chibios/os/rt/src/chthreads.c ****  *
  24:lib/chibios/os/rt/src/chthreads.c ****  * @addtogroup threads
  25:lib/chibios/os/rt/src/chthreads.c ****  * @details Threads related APIs and services.
  26:lib/chibios/os/rt/src/chthreads.c ****  *          <h2>Operation mode</h2>
  27:lib/chibios/os/rt/src/chthreads.c ****  *          A thread is an abstraction of an independent instructions flow.
  28:lib/chibios/os/rt/src/chthreads.c ****  *          In ChibiOS/RT a thread is represented by a "C" function owning
  29:lib/chibios/os/rt/src/chthreads.c ****  *          a processor context, state informations and a dedicated stack
  30:lib/chibios/os/rt/src/chthreads.c ****  *          area. In this scenario static variables are shared among all
  31:lib/chibios/os/rt/src/chthreads.c ****  *          threads while automatic variables are local to the thread.<br>
  32:lib/chibios/os/rt/src/chthreads.c ****  *          Operations defined for threads:
  33:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Create</b>, a thread is started on the specified thread
  34:lib/chibios/os/rt/src/chthreads.c ****  *            function. This operation is available in multiple variants,
  35:lib/chibios/os/rt/src/chthreads.c ****  *            both static and dynamic.
  36:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Exit</b>, a thread terminates by returning from its top
  37:lib/chibios/os/rt/src/chthreads.c ****  *            level function or invoking a specific API, the thread can
  38:lib/chibios/os/rt/src/chthreads.c ****  *            return a value that can be retrieved by other threads.
  39:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Wait</b>, a thread waits for the termination of another
  40:lib/chibios/os/rt/src/chthreads.c ****  *            thread and retrieves its return value.
  41:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Resume</b>, a thread created in suspended state is started.
  42:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Sleep</b>, the execution of a thread is suspended for the
  43:lib/chibios/os/rt/src/chthreads.c ****  *            specified amount of time or the specified future absolute time
  44:lib/chibios/os/rt/src/chthreads.c ****  *            is reached.
  45:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>SetPriority</b>, a thread changes its own priority level.
  46:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Yield</b>, a thread voluntarily renounces to its time slot.
  47:lib/chibios/os/rt/src/chthreads.c ****  *          .
  48:lib/chibios/os/rt/src/chthreads.c ****  * @{
  49:lib/chibios/os/rt/src/chthreads.c ****  */
  50:lib/chibios/os/rt/src/chthreads.c **** 
  51:lib/chibios/os/rt/src/chthreads.c **** #include "ch.h"
  52:lib/chibios/os/rt/src/chthreads.c **** 
  53:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  54:lib/chibios/os/rt/src/chthreads.c **** /* Module local definitions.                                                 */
  55:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  56:lib/chibios/os/rt/src/chthreads.c **** 
  57:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  58:lib/chibios/os/rt/src/chthreads.c **** /* Module exported variables.                                                */
  59:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  60:lib/chibios/os/rt/src/chthreads.c **** 
  61:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  62:lib/chibios/os/rt/src/chthreads.c **** /* Module local types.                                                       */
  63:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  64:lib/chibios/os/rt/src/chthreads.c **** 
  65:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  66:lib/chibios/os/rt/src/chthreads.c **** /* Module local variables.                                                   */
  67:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  68:lib/chibios/os/rt/src/chthreads.c **** 
  69:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  70:lib/chibios/os/rt/src/chthreads.c **** /* Module local functions.                                                   */
  71:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  72:lib/chibios/os/rt/src/chthreads.c **** 
  73:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  74:lib/chibios/os/rt/src/chthreads.c **** /* Module exported functions.                                                */
  75:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  76:lib/chibios/os/rt/src/chthreads.c **** 
  77:lib/chibios/os/rt/src/chthreads.c **** /**
  78:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Initializes a thread structure.
  79:lib/chibios/os/rt/src/chthreads.c ****  * @note    This is an internal functions, do not use it in application code.
  80:lib/chibios/os/rt/src/chthreads.c ****  *
  81:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
  82:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] name      thread name
  83:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] prio      the priority level for the new thread
  84:lib/chibios/os/rt/src/chthreads.c ****  * @return              The same thread pointer passed as parameter.
  85:lib/chibios/os/rt/src/chthreads.c ****  *
  86:lib/chibios/os/rt/src/chthreads.c ****  * @notapi
  87:lib/chibios/os/rt/src/chthreads.c ****  */
  88:lib/chibios/os/rt/src/chthreads.c **** thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio) {
  30              		.loc 1 88 70 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  89:lib/chibios/os/rt/src/chthreads.c **** 
  90:lib/chibios/os/rt/src/chthreads.c ****   tp->hdr.pqueue.prio = prio;
  35              		.loc 1 90 3 view .LVU1
  36              		.loc 1 90 23 is_stmt 0 view .LVU2
  37 0000 8260     		str	r2, [r0, #8]
  91:lib/chibios/os/rt/src/chthreads.c ****   tp->state           = CH_STATE_WTSTART;
  38              		.loc 1 91 3 is_stmt 1 view .LVU3
  92:lib/chibios/os/rt/src/chthreads.c ****   tp->flags           = CH_FLAG_MODE_STATIC;
  39              		.loc 1 92 3 view .LVU4
  93:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_TIME_QUANTUM > 0
  94:lib/chibios/os/rt/src/chthreads.c ****   tp->ticks           = (tslices_t)CH_CFG_TIME_QUANTUM;
  95:lib/chibios/os/rt/src/chthreads.c **** #endif
  96:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_MUTEXES == TRUE
  97:lib/chibios/os/rt/src/chthreads.c ****   tp->realprio        = prio;
  40              		.loc 1 97 3 view .LVU5
  41              		.loc 1 97 23 is_stmt 0 view .LVU6
  42 0002 C263     		str	r2, [r0, #60]
  98:lib/chibios/os/rt/src/chthreads.c ****   tp->mtxlist         = NULL;
  43              		.loc 1 98 3 is_stmt 1 view .LVU7
  44              		.loc 1 98 23 is_stmt 0 view .LVU8
  45 0004 0022     		movs	r2, #0
  46              	.LVL1:
  99:lib/chibios/os/rt/src/chthreads.c **** #endif
 100:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_EVENTS == TRUE
 101:lib/chibios/os/rt/src/chthreads.c ****   tp->epending        = (eventmask_t)0;
  47              		.loc 1 101 23 view .LVU9
  48 0006 C0E90D22 		strd	r2, r2, [r0, #52]
 102:lib/chibios/os/rt/src/chthreads.c **** #endif
 103:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_THREADS_PROFILING == TRUE
 104:lib/chibios/os/rt/src/chthreads.c ****   tp->time            = (systime_t)0;
 105:lib/chibios/os/rt/src/chthreads.c **** #endif
 106:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 107:lib/chibios/os/rt/src/chthreads.c ****   tp->refs            = (trefs_t)1;
  49              		.loc 1 107 3 is_stmt 1 view .LVU10
  91:lib/chibios/os/rt/src/chthreads.c ****   tp->flags           = CH_FLAG_MODE_STATIC;
  50              		.loc 1 91 23 is_stmt 0 view .LVU11
  51 000a 0222     		movs	r2, #2
  52 000c 0284     		strh	r2, [r0, #32]	@ movhi
  53              		.loc 1 107 23 view .LVU12
  54 000e 0122     		movs	r2, #1
  55 0010 80F82220 		strb	r2, [r0, #34]
 108:lib/chibios/os/rt/src/chthreads.c ****   tp->name            = name;
  56              		.loc 1 108 3 is_stmt 1 view .LVU13
 109:lib/chibios/os/rt/src/chthreads.c ****   REG_INSERT(tp);
  57              		.loc 1 109 3 is_stmt 0 view .LVU14
  58 0014 074A     		ldr	r2, .L2
 108:lib/chibios/os/rt/src/chthreads.c ****   tp->name            = name;
  59              		.loc 1 108 23 view .LVU15
  60 0016 8161     		str	r1, [r0, #24]
  61              		.loc 1 109 3 is_stmt 1 view .LVU16
  62 0018 5169     		ldr	r1, [r2, #20]
  63              	.LVL2:
  64              		.loc 1 109 3 is_stmt 0 view .LVU17
  65 001a 0261     		str	r2, [r0, #16]
  66              		.loc 1 109 3 is_stmt 1 view .LVU18
  67 001c 4161     		str	r1, [r0, #20]
  68              		.loc 1 109 3 view .LVU19
  69 001e 0861     		str	r0, [r1, #16]
  70              		.loc 1 109 3 view .LVU20
  71 0020 5061     		str	r0, [r2, #20]
  72              		.loc 1 109 17 view .LVU21
 110:lib/chibios/os/rt/src/chthreads.c **** #else
 111:lib/chibios/os/rt/src/chthreads.c ****   (void)name;
 112:lib/chibios/os/rt/src/chthreads.c **** #endif
 113:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_WAITEXIT == TRUE
 114:lib/chibios/os/rt/src/chthreads.c ****   ch_list_init(&tp->waiting);
  73              		.loc 1 114 3 view .LVU22
  74              	.LVL3:
  75              	.LBB226:
  76              	.LBI226:
  77              		.file 2 "./lib/chibios/os/rt/include/chlists.h"
   1:./lib/chibios/os/rt/include/chlists.h **** /*
   2:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chlists.h **** 
   4:./lib/chibios/os/rt/include/chlists.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chlists.h **** 
   6:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chlists.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chlists.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chlists.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chlists.h **** 
  11:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chlists.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chlists.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chlists.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chlists.h **** 
  16:./lib/chibios/os/rt/include/chlists.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chlists.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chlists.h **** */
  19:./lib/chibios/os/rt/include/chlists.h **** 
  20:./lib/chibios/os/rt/include/chlists.h **** /**
  21:./lib/chibios/os/rt/include/chlists.h ****  * @file    chlists.h
  22:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Lists and Queues header.
  23:./lib/chibios/os/rt/include/chlists.h ****  *
  24:./lib/chibios/os/rt/include/chlists.h ****  * @addtogroup os_lists
  25:./lib/chibios/os/rt/include/chlists.h ****  * @{
  26:./lib/chibios/os/rt/include/chlists.h ****  */
  27:./lib/chibios/os/rt/include/chlists.h **** 
  28:./lib/chibios/os/rt/include/chlists.h **** #ifndef CHLISTS_H
  29:./lib/chibios/os/rt/include/chlists.h **** #define CHLISTS_H
  30:./lib/chibios/os/rt/include/chlists.h **** 
  31:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chlists.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chlists.h **** 
  35:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chlists.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chlists.h **** 
  39:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chlists.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chlists.h **** 
  43:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chlists.h **** /* Module data structures and types.                                         */
  45:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chlists.h **** 
  47:./lib/chibios/os/rt/include/chlists.h **** /**
  48:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic single link list header and element.
  49:./lib/chibios/os/rt/include/chlists.h ****  */
  50:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_list ch_list_t;
  51:./lib/chibios/os/rt/include/chlists.h **** 
  52:./lib/chibios/os/rt/include/chlists.h **** /**
  53:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic single link list header
  54:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  55:./lib/chibios/os/rt/include/chlists.h ****  */
  56:./lib/chibios/os/rt/include/chlists.h **** struct ch_list {
  57:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t             *next;      /**< @brief Next in the list/queue.     */
  58:./lib/chibios/os/rt/include/chlists.h **** };
  59:./lib/chibios/os/rt/include/chlists.h **** 
  60:./lib/chibios/os/rt/include/chlists.h **** /**
  61:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic bidirectional linked list header and element.
  62:./lib/chibios/os/rt/include/chlists.h ****  */
  63:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_queue ch_queue_t;
  64:./lib/chibios/os/rt/include/chlists.h **** 
  65:./lib/chibios/os/rt/include/chlists.h **** /**
  66:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic bidirectional linked list header
  67:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  68:./lib/chibios/os/rt/include/chlists.h ****  */
  69:./lib/chibios/os/rt/include/chlists.h **** struct ch_queue {
  70:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *next;      /**< @brief Next in the list/queue.     */
  71:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *prev;      /**< @brief Previous in the queue.      */
  72:./lib/chibios/os/rt/include/chlists.h **** };
  73:./lib/chibios/os/rt/include/chlists.h **** 
  74:./lib/chibios/os/rt/include/chlists.h **** /**
  75:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic priority-ordered bidirectional linked list
  76:./lib/chibios/os/rt/include/chlists.h ****  *          header and element.
  77:./lib/chibios/os/rt/include/chlists.h ****  */
  78:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_priority_queue ch_priority_queue_t;
  79:./lib/chibios/os/rt/include/chlists.h **** 
  80:./lib/chibios/os/rt/include/chlists.h **** /**
  81:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic priority-ordered bidirectional
  82:./lib/chibios/os/rt/include/chlists.h ****  *          linked list header and element.
  83:./lib/chibios/os/rt/include/chlists.h ****  * @note    Link fields are void pointers in order to avoid aliasing issues.
  84:./lib/chibios/os/rt/include/chlists.h ****  */
  85:./lib/chibios/os/rt/include/chlists.h **** struct ch_priority_queue {
  86:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *next;      /**< @brief Next in the list/queue.     */
  87:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *prev;      /**< @brief Previous in the queue.      */
  88:./lib/chibios/os/rt/include/chlists.h ****   tprio_t               prio;
  89:./lib/chibios/os/rt/include/chlists.h **** };
  90:./lib/chibios/os/rt/include/chlists.h **** 
  91:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  92:./lib/chibios/os/rt/include/chlists.h **** /* Module macros.                                                            */
  93:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  94:./lib/chibios/os/rt/include/chlists.h **** 
  95:./lib/chibios/os/rt/include/chlists.h **** /**
  96:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Data part of a static queue object initializer.
  97:./lib/chibios/os/rt/include/chlists.h ****  * @details This macro should be used when statically initializing a
  98:./lib/chibios/os/rt/include/chlists.h ****  *          queue that is part of a bigger structure.
  99:./lib/chibios/os/rt/include/chlists.h ****  *
 100:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 101:./lib/chibios/os/rt/include/chlists.h ****  */
 102:./lib/chibios/os/rt/include/chlists.h **** #define _CH_QUEUE_DATA(name) {(ch_queue_t *)&name, (ch_queue_t *)&name}
 103:./lib/chibios/os/rt/include/chlists.h **** 
 104:./lib/chibios/os/rt/include/chlists.h **** /**
 105:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Static queue object initializer.
 106:./lib/chibios/os/rt/include/chlists.h ****  * @details Statically initialized queues require no explicit
 107:./lib/chibios/os/rt/include/chlists.h ****  *          initialization using @p queue_init().
 108:./lib/chibios/os/rt/include/chlists.h ****  *
 109:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 110:./lib/chibios/os/rt/include/chlists.h ****  */
 111:./lib/chibios/os/rt/include/chlists.h **** #define CH_QUEUE_DECL(name)                                                 \
 112:./lib/chibios/os/rt/include/chlists.h ****     ch_queue_t name = _CH_QUEUE_DATA(name)
 113:./lib/chibios/os/rt/include/chlists.h **** 
 114:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 115:./lib/chibios/os/rt/include/chlists.h **** /* External declarations.                                                    */
 116:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chlists.h **** 
 118:./lib/chibios/os/rt/include/chlists.h **** /* Early function prototypes required by the following headers.*/
 119:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 120:./lib/chibios/os/rt/include/chlists.h **** extern "C" {
 121:./lib/chibios/os/rt/include/chlists.h **** #endif
 122:./lib/chibios/os/rt/include/chlists.h **** 
 123:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 124:./lib/chibios/os/rt/include/chlists.h **** }
 125:./lib/chibios/os/rt/include/chlists.h **** #endif
 126:./lib/chibios/os/rt/include/chlists.h **** 
 127:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 128:./lib/chibios/os/rt/include/chlists.h **** /* Module inline functions.                                                  */
 129:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 130:./lib/chibios/os/rt/include/chlists.h **** 
 131:./lib/chibios/os/rt/include/chlists.h **** /**
 132:./lib/chibios/os/rt/include/chlists.h ****  * @brief   List initialization.
 133:./lib/chibios/os/rt/include/chlists.h ****  *
 134:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] lp       pointer to the list header
 135:./lib/chibios/os/rt/include/chlists.h ****  *
 136:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 137:./lib/chibios/os/rt/include/chlists.h ****  */
 138:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_init(ch_list_t *lp) {
  78              		.loc 2 138 20 view .LVU23
  79              	.LBB227:
 139:./lib/chibios/os/rt/include/chlists.h **** 
 140:./lib/chibios/os/rt/include/chlists.h ****   lp->next = lp;
  80              		.loc 2 140 3 view .LVU24
  81              	.LBE227:
  82              	.LBE226:
  83              		.loc 1 114 3 is_stmt 0 view .LVU25
  84 0022 00F12802 		add	r2, r0, #40
  85              	.LVL4:
  86              	.LBB229:
  87              	.LBB228:
  88              		.loc 2 140 12 view .LVU26
  89 0026 8262     		str	r2, [r0, #40]
  90              	.LVL5:
  91              		.loc 2 140 12 view .LVU27
  92              	.LBE228:
  93              	.LBE229:
 115:lib/chibios/os/rt/src/chthreads.c **** #endif
 116:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_MESSAGES == TRUE
 117:lib/chibios/os/rt/src/chthreads.c ****   ch_queue_init(&tp->msgqueue);
  94              		.loc 1 117 3 is_stmt 1 view .LVU28
  95 0028 00F12C02 		add	r2, r0, #44
  96              	.LVL6:
  97              	.LBB230:
  98              	.LBI230:
 141:./lib/chibios/os/rt/include/chlists.h **** }
 142:./lib/chibios/os/rt/include/chlists.h **** 
 143:./lib/chibios/os/rt/include/chlists.h **** /**
 144:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is empty.
 145:./lib/chibios/os/rt/include/chlists.h ****  *
 146:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 147:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 148:./lib/chibios/os/rt/include/chlists.h ****  *
 149:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 150:./lib/chibios/os/rt/include/chlists.h ****  */
 151:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_isempty(ch_list_t *lp) {
 152:./lib/chibios/os/rt/include/chlists.h **** 
 153:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next == lp);
 154:./lib/chibios/os/rt/include/chlists.h **** }
 155:./lib/chibios/os/rt/include/chlists.h **** 
 156:./lib/chibios/os/rt/include/chlists.h **** /**
 157:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is not empty.
 158:./lib/chibios/os/rt/include/chlists.h ****  *
 159:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 160:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 161:./lib/chibios/os/rt/include/chlists.h ****  *
 162:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 163:./lib/chibios/os/rt/include/chlists.h ****  */
 164:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_notempty(ch_list_t *lp) {
 165:./lib/chibios/os/rt/include/chlists.h **** 
 166:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next != lp);
 167:./lib/chibios/os/rt/include/chlists.h **** }
 168:./lib/chibios/os/rt/include/chlists.h **** 
 169:./lib/chibios/os/rt/include/chlists.h **** /**
 170:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pushes an element on top of a stack list.
 171:./lib/chibios/os/rt/include/chlists.h ****  *
 172:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] p     the pointer to the element to be inserted in the list
 173:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp    the pointer to the list header
 174:./lib/chibios/os/rt/include/chlists.h ****  *
 175:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 176:./lib/chibios/os/rt/include/chlists.h ****  */
 177:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_push(ch_list_t *p, ch_list_t *lp) {
 178:./lib/chibios/os/rt/include/chlists.h **** 
 179:./lib/chibios/os/rt/include/chlists.h ****   p->next = lp->next;
 180:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p;
 181:./lib/chibios/os/rt/include/chlists.h **** }
 182:./lib/chibios/os/rt/include/chlists.h **** 
 183:./lib/chibios/os/rt/include/chlists.h **** /**
 184:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pops an element from the top of a stack list and returns it.
 185:./lib/chibios/os/rt/include/chlists.h ****  * @pre     The list must be non-empty before calling this function.
 186:./lib/chibios/os/rt/include/chlists.h ****  *
 187:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        the pointer to the list header
 188:./lib/chibios/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 189:./lib/chibios/os/rt/include/chlists.h ****  *
 190:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 191:./lib/chibios/os/rt/include/chlists.h ****  */
 192:./lib/chibios/os/rt/include/chlists.h **** static inline ch_list_t *ch_list_pop(ch_list_t *lp) {
 193:./lib/chibios/os/rt/include/chlists.h **** 
 194:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t *p = lp->next;
 195:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p->next;
 196:./lib/chibios/os/rt/include/chlists.h **** 
 197:./lib/chibios/os/rt/include/chlists.h ****   return p;
 198:./lib/chibios/os/rt/include/chlists.h **** }
 199:./lib/chibios/os/rt/include/chlists.h **** 
 200:./lib/chibios/os/rt/include/chlists.h **** /**
 201:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Queue initialization.
 202:./lib/chibios/os/rt/include/chlists.h ****  *
 203:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] qp       pointer to the queue header
 204:./lib/chibios/os/rt/include/chlists.h ****  *
 205:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 206:./lib/chibios/os/rt/include/chlists.h ****  */
 207:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_queue_init(ch_queue_t *qp) {
  99              		.loc 2 207 20 view .LVU29
 100              	.LBB231:
 208:./lib/chibios/os/rt/include/chlists.h **** 
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->next = qp;
 101              		.loc 2 209 3 view .LVU30
 210:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
 102              		.loc 2 210 12 is_stmt 0 view .LVU31
 103 002c C0E90B22 		strd	r2, r2, [r0, #44]
 104              	.LVL7:
 105              		.loc 2 210 12 view .LVU32
 106              	.LBE231:
 107              	.LBE230:
 118:lib/chibios/os/rt/src/chthreads.c **** #endif
 119:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_STATISTICS == TRUE
 120:lib/chibios/os/rt/src/chthreads.c ****   chTMObjectInit(&tp->stats);
 121:lib/chibios/os/rt/src/chthreads.c **** #endif
 122:lib/chibios/os/rt/src/chthreads.c ****   CH_CFG_THREAD_INIT_HOOK(tp);
 108              		.loc 1 122 3 is_stmt 1 view .LVU33
 109              		.loc 1 122 30 view .LVU34
 123:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 110              		.loc 1 123 3 view .LVU35
 124:lib/chibios/os/rt/src/chthreads.c **** }
 111              		.loc 1 124 1 is_stmt 0 view .LVU36
 112 0030 7047     		bx	lr
 113              	.L3:
 114 0032 00BF     		.align	2
 115              	.L2:
 116 0034 00000000 		.word	ch
 117              		.cfi_endproc
 118              	.LFE289:
 120              		.section	.text.chThdCreateSuspendedI,"ax",%progbits
 121              		.align	1
 122              		.global	chThdCreateSuspendedI
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 127              	chThdCreateSuspendedI:
 128              	.LVL8:
 129              	.LFB290:
 125:lib/chibios/os/rt/src/chthreads.c **** 
 126:lib/chibios/os/rt/src/chthreads.c **** #if (CH_DBG_FILL_THREADS == TRUE) || defined(__DOXYGEN__)
 127:lib/chibios/os/rt/src/chthreads.c **** /**
 128:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Memory fill utility.
 129:lib/chibios/os/rt/src/chthreads.c ****  *
 130:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] startp    first address to fill
 131:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] endp      last address to fill +1
 132:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] v         filler value
 133:lib/chibios/os/rt/src/chthreads.c ****  *
 134:lib/chibios/os/rt/src/chthreads.c ****  * @notapi
 135:lib/chibios/os/rt/src/chthreads.c ****  */
 136:lib/chibios/os/rt/src/chthreads.c **** void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v) {
 137:lib/chibios/os/rt/src/chthreads.c **** 
 138:lib/chibios/os/rt/src/chthreads.c ****   while (startp < endp) {
 139:lib/chibios/os/rt/src/chthreads.c ****     *startp++ = v;
 140:lib/chibios/os/rt/src/chthreads.c ****   }
 141:lib/chibios/os/rt/src/chthreads.c **** }
 142:lib/chibios/os/rt/src/chthreads.c **** #endif /* CH_DBG_FILL_THREADS */
 143:lib/chibios/os/rt/src/chthreads.c **** 
 144:lib/chibios/os/rt/src/chthreads.c **** /**
 145:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 146:lib/chibios/os/rt/src/chthreads.c ****  * @details The new thread is initialized but not inserted in the ready list,
 147:lib/chibios/os/rt/src/chthreads.c ****  *          the initial state is @p CH_STATE_WTSTART.
 148:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 149:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 150:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 151:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 152:lib/chibios/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 153:lib/chibios/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 154:lib/chibios/os/rt/src/chthreads.c ****  *          depending on the execution context.
 155:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 156:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 157:lib/chibios/os/rt/src/chthreads.c ****  * @note    Threads created using this function do not obey to the
 158:lib/chibios/os/rt/src/chthreads.c ****  *          @p CH_DBG_FILL_THREADS debug option because it would keep
 159:lib/chibios/os/rt/src/chthreads.c ****  *          the kernel locked for too much time.
 160:lib/chibios/os/rt/src/chthreads.c ****  *
 161:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 162:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 163:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 164:lib/chibios/os/rt/src/chthreads.c ****  *
 165:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 166:lib/chibios/os/rt/src/chthreads.c ****  */
 167:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp) {
 130              		.loc 1 167 65 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 168:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 135              		.loc 1 168 3 view .LVU38
 169:lib/chibios/os/rt/src/chthreads.c **** 
 170:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheckClassI();
 136              		.loc 1 170 21 view .LVU39
 171:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck(tdp != NULL);
 137              		.loc 1 171 3 view .LVU40
 138              		.loc 1 171 3 view .LVU41
 139              		.loc 1 171 3 view .LVU42
 172:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck(MEM_IS_ALIGNED(tdp->wbase, PORT_WORKING_AREA_ALIGN) &&
 140              		.loc 1 172 3 view .LVU43
 141              		.loc 1 172 3 view .LVU44
 142              		.loc 1 172 3 view .LVU45
 173:lib/chibios/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(tdp->wend, PORT_STACK_ALIGN) &&
 174:lib/chibios/os/rt/src/chthreads.c ****              (tdp->wend > tdp->wbase) &&
 175:lib/chibios/os/rt/src/chthreads.c ****              (((size_t)tdp->wend - (size_t)tdp->wbase) >= THD_WORKING_AREA_SIZE(0)));
 176:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck((tdp->prio <= HIGHPRIO) && (tdp->funcp != NULL));
 143              		.loc 1 176 3 view .LVU46
 144              		.loc 1 176 3 view .LVU47
 145              		.loc 1 176 3 view .LVU48
 177:lib/chibios/os/rt/src/chthreads.c **** 
 178:lib/chibios/os/rt/src/chthreads.c ****   /* The thread structure is laid out in the upper part of the thread
 179:lib/chibios/os/rt/src/chthreads.c ****      workspace. The thread position structure is aligned to the required
 180:lib/chibios/os/rt/src/chthreads.c ****      stack alignment because it represents the stack top.*/
 181:lib/chibios/os/rt/src/chthreads.c ****   tp = (thread_t *)((uint8_t *)tdp->wend -
 146              		.loc 1 181 3 view .LVU49
 182:lib/chibios/os/rt/src/chthreads.c ****                     MEM_ALIGN_NEXT(sizeof (thread_t), PORT_STACK_ALIGN));
 183:lib/chibios/os/rt/src/chthreads.c **** 
 184:lib/chibios/os/rt/src/chthreads.c **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE)
 185:lib/chibios/os/rt/src/chthreads.c ****   /* Stack boundary.*/
 186:lib/chibios/os/rt/src/chthreads.c ****   tp->wabase = tdp->wbase;
 147              		.loc 1 186 14 is_stmt 0 view .LVU50
 148 0000 D0E90123 		ldrd	r2, r3, [r0, #4]
 149 0004 43F82C2C 		str	r2, [r3, #-44]
 187:lib/chibios/os/rt/src/chthreads.c **** #endif
 188:lib/chibios/os/rt/src/chthreads.c **** 
 189:lib/chibios/os/rt/src/chthreads.c ****   /* Setting up the port-dependent part of the working area.*/
 190:lib/chibios/os/rt/src/chthreads.c ****   PORT_SETUP_CONTEXT(tp, tdp->wbase, tp, tdp->funcp, tdp->arg);
 150              		.loc 1 190 3 is_stmt 1 view .LVU51
 151 0008 A3F1AC02 		sub	r2, r3, #172
 152 000c 43F83C2C 		str	r2, [r3, #-60]
 153              		.loc 1 190 3 view .LVU52
 154 0010 0269     		ldr	r2, [r0, #16]
 155 0012 43F86C2C 		str	r2, [r3, #-108]
 156              		.loc 1 190 3 view .LVU53
 157 0016 4269     		ldr	r2, [r0, #20]
 158 0018 43F8682C 		str	r2, [r3, #-104]
 159              		.loc 1 190 3 view .LVU54
 160 001c 044A     		ldr	r2, .L5
 191:lib/chibios/os/rt/src/chthreads.c **** 
 192:lib/chibios/os/rt/src/chthreads.c ****   /* The driver object is initialized but not started.*/
 193:lib/chibios/os/rt/src/chthreads.c ****   return _thread_init(tp, tdp->name, tdp->prio);
 161              		.loc 1 193 10 is_stmt 0 view .LVU55
 162 001e 0168     		ldr	r1, [r0]
 190:lib/chibios/os/rt/src/chthreads.c **** 
 163              		.loc 1 190 3 view .LVU56
 164 0020 43F84C2C 		str	r2, [r3, #-76]
 190:lib/chibios/os/rt/src/chthreads.c **** 
 165              		.loc 1 190 3 is_stmt 1 view .LVU57
 190:lib/chibios/os/rt/src/chthreads.c **** 
 166              		.loc 1 190 3 view .LVU58
 190:lib/chibios/os/rt/src/chthreads.c **** 
 167              		.loc 1 190 63 view .LVU59
 168              		.loc 1 193 3 view .LVU60
 169              		.loc 1 193 10 is_stmt 0 view .LVU61
 170 0024 C268     		ldr	r2, [r0, #12]
 171 0026 A3F14800 		sub	r0, r3, #72
 172              	.LVL9:
 173              		.loc 1 193 10 view .LVU62
 174 002a FFF7FEBF 		b	_thread_init
 175              	.LVL10:
 176              	.L6:
 177 002e 00BF     		.align	2
 178              	.L5:
 179 0030 00000000 		.word	_port_thread_start
 180              		.cfi_endproc
 181              	.LFE290:
 183              		.section	.text.chThdCreateSuspended,"ax",%progbits
 184              		.align	1
 185              		.global	chThdCreateSuspended
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	chThdCreateSuspended:
 191              	.LVL11:
 192              	.LFB291:
 194:lib/chibios/os/rt/src/chthreads.c **** }
 195:lib/chibios/os/rt/src/chthreads.c **** 
 196:lib/chibios/os/rt/src/chthreads.c **** /**
 197:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 198:lib/chibios/os/rt/src/chthreads.c ****  * @details The new thread is initialized but not inserted in the ready list,
 199:lib/chibios/os/rt/src/chthreads.c ****  *          the initial state is @p CH_STATE_WTSTART.
 200:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 201:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 202:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 203:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 204:lib/chibios/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 205:lib/chibios/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 206:lib/chibios/os/rt/src/chthreads.c ****  *          depending on the execution context.
 207:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 208:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 209:lib/chibios/os/rt/src/chthreads.c ****  *
 210:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 211:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 212:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 213:lib/chibios/os/rt/src/chthreads.c ****  *
 214:lib/chibios/os/rt/src/chthreads.c ****  * @api
 215:lib/chibios/os/rt/src/chthreads.c ****  */
 216:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp) {
 193              		.loc 1 216 64 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 217:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 197              		.loc 1 217 3 view .LVU64
 218:lib/chibios/os/rt/src/chthreads.c **** 
 219:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 220:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(tdp->wbase) == NULL,
 198              		.loc 1 220 3 view .LVU65
 199              		.loc 1 220 3 view .LVU66
 200              		.loc 1 220 3 view .LVU67
 221:lib/chibios/os/rt/src/chthreads.c ****               "working area in use");
 222:lib/chibios/os/rt/src/chthreads.c **** #endif
 223:lib/chibios/os/rt/src/chthreads.c **** 
 224:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 225:lib/chibios/os/rt/src/chthreads.c ****   _thread_memfill((uint8_t *)tdp->wbase,
 226:lib/chibios/os/rt/src/chthreads.c ****                   (uint8_t *)tdp->wend,
 227:lib/chibios/os/rt/src/chthreads.c ****                   CH_DBG_STACK_FILL_VALUE);
 228:lib/chibios/os/rt/src/chthreads.c **** #endif
 229:lib/chibios/os/rt/src/chthreads.c **** 
 230:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 201              		.loc 1 230 3 view .LVU68
 202              	.LBB232:
 203              	.LBI232:
 204              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 205              		.loc 3 355 20 view .LVU69
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 206              		.loc 3 357 3 view .LVU70
 207              	.LBB233:
 208              	.LBI233:
 209              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 210              		.loc 4 669 27 view .LVU71
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 211              		.loc 4 677 3 view .LVU72
 212              	.LBB234:
 213              	.LBI234:
 214              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 215              		.loc 5 491 27 view .LVU73
 216              	.LBB235:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 217              		.loc 5 493 3 view .LVU74
 218              	.LBE235:
 219              	.LBE234:
 220              	.LBE233:
 221              	.LBE232:
 216:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 222              		.loc 1 216 64 is_stmt 0 view .LVU75
 223 0000 08B5     		push	{r3, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 3, -8
 226              		.cfi_offset 14, -4
 227              	.LBB239:
 228              	.LBB238:
 229              	.LBB237:
 230              	.LBB236:
 231              		.loc 5 493 3 view .LVU76
 232 0002 2023     		movs	r3, #32
 233              		.syntax unified
 234              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 235 0004 83F31188 		MSR basepri, r3
 236              	@ 0 "" 2
 237              	.LVL12:
 238              		.loc 5 493 3 view .LVU77
 239              		.thumb
 240              		.syntax unified
 241              	.LBE236:
 242              	.LBE237:
 243              	.LBE238:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 244              		.loc 3 358 34 is_stmt 1 view .LVU78
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 245              		.loc 3 359 20 view .LVU79
 246              	.LBE239:
 231:lib/chibios/os/rt/src/chthreads.c ****   tp = chThdCreateSuspendedI(tdp);
 247              		.loc 1 231 3 view .LVU80
 248              		.loc 1 231 8 is_stmt 0 view .LVU81
 249 0008 FFF7FEFF 		bl	chThdCreateSuspendedI
 250              	.LVL13:
 232:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 251              		.loc 1 232 3 is_stmt 1 view .LVU82
 252              	.LBB240:
 253              	.LBI240:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 254              		.loc 3 367 20 view .LVU83
 255              	.LBB241:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 256              		.loc 3 369 22 view .LVU84
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 257              		.loc 3 370 33 view .LVU85
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 258              		.loc 3 376 3 view .LVU86
 259              		.loc 3 376 3 view .LVU87
 260              		.loc 3 376 3 view .LVU88
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 261              		.loc 3 380 3 view .LVU89
 262              	.LBB242:
 263              	.LBI242:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 264              		.loc 4 693 27 view .LVU90
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 265              		.loc 4 696 3 view .LVU91
 266              	.LBB243:
 267              	.LBI243:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 268              		.loc 5 491 27 view .LVU92
 269              	.LBB244:
 270              		.loc 5 493 3 view .LVU93
 271 000c 0023     		movs	r3, #0
 272              		.syntax unified
 273              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 274 000e 83F31188 		MSR basepri, r3
 275              	@ 0 "" 2
 276              	.LVL14:
 277              		.loc 5 493 3 is_stmt 0 view .LVU94
 278              		.thumb
 279              		.syntax unified
 280              	.LBE244:
 281              	.LBE243:
 282              	.LBE242:
 283              	.LBE241:
 284              	.LBE240:
 233:lib/chibios/os/rt/src/chthreads.c **** 
 234:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 285              		.loc 1 234 3 is_stmt 1 view .LVU95
 235:lib/chibios/os/rt/src/chthreads.c **** }
 286              		.loc 1 235 1 is_stmt 0 view .LVU96
 287 0012 08BD     		pop	{r3, pc}
 288              		.cfi_endproc
 289              	.LFE291:
 291              		.section	.text.chThdCreateI,"ax",%progbits
 292              		.align	1
 293              		.global	chThdCreateI
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 298              	chThdCreateI:
 299              	.LVL15:
 300              	.LFB292:
 236:lib/chibios/os/rt/src/chthreads.c **** 
 237:lib/chibios/os/rt/src/chthreads.c **** /**
 238:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 239:lib/chibios/os/rt/src/chthreads.c ****  * @details The new thread is initialized and make ready to execute.
 240:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 241:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 242:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 243:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 244:lib/chibios/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 245:lib/chibios/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 246:lib/chibios/os/rt/src/chthreads.c ****  *          depending on the execution context.
 247:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 248:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 249:lib/chibios/os/rt/src/chthreads.c ****  * @note    Threads created using this function do not obey to the
 250:lib/chibios/os/rt/src/chthreads.c ****  *          @p CH_DBG_FILL_THREADS debug option because it would keep
 251:lib/chibios/os/rt/src/chthreads.c ****  *          the kernel locked for too much time.
 252:lib/chibios/os/rt/src/chthreads.c ****  *
 253:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 254:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 255:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 256:lib/chibios/os/rt/src/chthreads.c ****  *
 257:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 258:lib/chibios/os/rt/src/chthreads.c ****  */
 259:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreateI(const thread_descriptor_t *tdp) {
 301              		.loc 1 259 56 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 260:lib/chibios/os/rt/src/chthreads.c **** 
 261:lib/chibios/os/rt/src/chthreads.c ****   return chSchReadyI(chThdCreateSuspendedI(tdp));
 305              		.loc 1 261 3 view .LVU98
 259:lib/chibios/os/rt/src/chthreads.c **** 
 306              		.loc 1 259 56 is_stmt 0 view .LVU99
 307 0000 08B5     		push	{r3, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 3, -8
 310              		.cfi_offset 14, -4
 311              		.loc 1 261 10 view .LVU100
 312 0002 FFF7FEFF 		bl	chThdCreateSuspendedI
 313              	.LVL16:
 262:lib/chibios/os/rt/src/chthreads.c **** }
 314              		.loc 1 262 1 view .LVU101
 315 0006 BDE80840 		pop	{r3, lr}
 316              		.cfi_restore 14
 317              		.cfi_restore 3
 318              		.cfi_def_cfa_offset 0
 261:lib/chibios/os/rt/src/chthreads.c **** }
 319              		.loc 1 261 10 view .LVU102
 320 000a FFF7FEBF 		b	chSchReadyI
 321              	.LVL17:
 322              		.cfi_endproc
 323              	.LFE292:
 325              		.section	.text.chThdCreate,"ax",%progbits
 326              		.align	1
 327              		.global	chThdCreate
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	chThdCreate:
 333              	.LVL18:
 334              	.LFB293:
 263:lib/chibios/os/rt/src/chthreads.c **** 
 264:lib/chibios/os/rt/src/chthreads.c **** /**
 265:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 266:lib/chibios/os/rt/src/chthreads.c ****  * @details The new thread is initialized and make ready to execute.
 267:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 268:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 269:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 270:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 271:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 272:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 273:lib/chibios/os/rt/src/chthreads.c ****  *
 274:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 275:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 276:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 277:lib/chibios/os/rt/src/chthreads.c ****  *
 278:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 279:lib/chibios/os/rt/src/chthreads.c ****  */
 280:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreate(const thread_descriptor_t *tdp) {
 335              		.loc 1 280 55 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 281:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 339              		.loc 1 281 3 view .LVU104
 282:lib/chibios/os/rt/src/chthreads.c **** 
 283:lib/chibios/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) &&                                        \
 284:lib/chibios/os/rt/src/chthreads.c ****     ((CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE))
 285:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(tdp->wbase) == NULL,
 340              		.loc 1 285 3 view .LVU105
 341              		.loc 1 285 3 view .LVU106
 342              		.loc 1 285 3 view .LVU107
 286:lib/chibios/os/rt/src/chthreads.c ****               "working area in use");
 287:lib/chibios/os/rt/src/chthreads.c **** #endif
 288:lib/chibios/os/rt/src/chthreads.c **** 
 289:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 290:lib/chibios/os/rt/src/chthreads.c ****   _thread_memfill((uint8_t *)tdp->wbase,
 291:lib/chibios/os/rt/src/chthreads.c ****                   (uint8_t *)tdp->wend,
 292:lib/chibios/os/rt/src/chthreads.c ****                   CH_DBG_STACK_FILL_VALUE);
 293:lib/chibios/os/rt/src/chthreads.c **** #endif
 294:lib/chibios/os/rt/src/chthreads.c **** 
 295:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 343              		.loc 1 295 3 view .LVU108
 344              	.LBB245:
 345              	.LBI245:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 346              		.loc 3 355 20 view .LVU109
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 347              		.loc 3 357 3 view .LVU110
 348              	.LBB246:
 349              	.LBI246:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 350              		.loc 4 669 27 view .LVU111
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 351              		.loc 4 677 3 view .LVU112
 352              	.LBB247:
 353              	.LBI247:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 354              		.loc 5 491 27 view .LVU113
 355              	.LBB248:
 356              		.loc 5 493 3 view .LVU114
 357              	.LBE248:
 358              	.LBE247:
 359              	.LBE246:
 360              	.LBE245:
 280:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 361              		.loc 1 280 55 is_stmt 0 view .LVU115
 362 0000 10B5     		push	{r4, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 4, -8
 365              		.cfi_offset 14, -4
 366              	.LBB252:
 367              	.LBB251:
 368              	.LBB250:
 369              	.LBB249:
 370              		.loc 5 493 3 view .LVU116
 371 0002 2023     		movs	r3, #32
 372              		.syntax unified
 373              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 374 0004 83F31188 		MSR basepri, r3
 375              	@ 0 "" 2
 376              	.LVL19:
 377              		.loc 5 493 3 view .LVU117
 378              		.thumb
 379              		.syntax unified
 380              	.LBE249:
 381              	.LBE250:
 382              	.LBE251:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 383              		.loc 3 358 34 is_stmt 1 view .LVU118
 359:./lib/chibios/os/rt/include/chsys.h **** }
 384              		.loc 3 359 20 view .LVU119
 385              	.LBE252:
 296:lib/chibios/os/rt/src/chthreads.c ****   tp = chThdCreateSuspendedI(tdp);
 386              		.loc 1 296 3 view .LVU120
 387              		.loc 1 296 8 is_stmt 0 view .LVU121
 388 0008 FFF7FEFF 		bl	chThdCreateSuspendedI
 389              	.LVL20:
 297:lib/chibios/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 390              		.loc 1 297 3 view .LVU122
 391 000c 0021     		movs	r1, #0
 296:lib/chibios/os/rt/src/chthreads.c ****   tp = chThdCreateSuspendedI(tdp);
 392              		.loc 1 296 8 view .LVU123
 393 000e 0446     		mov	r4, r0
 394              	.LVL21:
 395              		.loc 1 297 3 is_stmt 1 view .LVU124
 396 0010 FFF7FEFF 		bl	chSchWakeupS
 397              	.LVL22:
 298:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 398              		.loc 1 298 3 view .LVU125
 399              	.LBB253:
 400              	.LBI253:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 401              		.loc 3 367 20 view .LVU126
 402              	.LBB254:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 403              		.loc 3 369 22 view .LVU127
 370:./lib/chibios/os/rt/include/chsys.h **** 
 404              		.loc 3 370 33 view .LVU128
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 405              		.loc 3 376 3 view .LVU129
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 406              		.loc 3 376 3 view .LVU130
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 407              		.loc 3 376 3 view .LVU131
 408              		.loc 3 380 3 view .LVU132
 409              	.LBB255:
 410              	.LBI255:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 411              		.loc 4 693 27 view .LVU133
 412              		.loc 4 696 3 view .LVU134
 413              	.LBB256:
 414              	.LBI256:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 415              		.loc 5 491 27 view .LVU135
 416              	.LBB257:
 417              		.loc 5 493 3 view .LVU136
 418 0014 0023     		movs	r3, #0
 419              		.syntax unified
 420              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 421 0016 83F31188 		MSR basepri, r3
 422              	@ 0 "" 2
 423              	.LVL23:
 424              		.loc 5 493 3 is_stmt 0 view .LVU137
 425              		.thumb
 426              		.syntax unified
 427              	.LBE257:
 428              	.LBE256:
 429              	.LBE255:
 430              	.LBE254:
 431              	.LBE253:
 299:lib/chibios/os/rt/src/chthreads.c **** 
 300:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 432              		.loc 1 300 3 is_stmt 1 view .LVU138
 301:lib/chibios/os/rt/src/chthreads.c **** }
 433              		.loc 1 301 1 is_stmt 0 view .LVU139
 434 001a 2046     		mov	r0, r4
 435 001c 10BD     		pop	{r4, pc}
 436              		.loc 1 301 1 view .LVU140
 437              		.cfi_endproc
 438              	.LFE293:
 440              		.section	.rodata.chThdCreateStatic.str1.1,"aMS",%progbits,1
 441              	.LC0:
 442 0000 6E6F6E61 		.ascii	"noname\000"
 442      6D6500
 443              		.section	.text.chThdCreateStatic,"ax",%progbits
 444              		.align	1
 445              		.global	chThdCreateStatic
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 450              	chThdCreateStatic:
 451              	.LVL24:
 452              	.LFB294:
 302:lib/chibios/os/rt/src/chthreads.c **** 
 303:lib/chibios/os/rt/src/chthreads.c **** /**
 304:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 305:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 306:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chThdWait()
 307:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 308:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 309:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 310:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 311:lib/chibios/os/rt/src/chthreads.c ****  *
 312:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] wsp      pointer to a working area dedicated to the thread stack
 313:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] size      size of the working area
 314:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] prio      the priority level for the new thread
 315:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] pf        the thread function
 316:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] arg       an argument passed to the thread function. It can be
 317:lib/chibios/os/rt/src/chthreads.c ****  *                      @p NULL.
 318:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 319:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 320:lib/chibios/os/rt/src/chthreads.c ****  *
 321:lib/chibios/os/rt/src/chthreads.c ****  * @api
 322:lib/chibios/os/rt/src/chthreads.c ****  */
 323:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreateStatic(void *wsp, size_t size,
 324:lib/chibios/os/rt/src/chthreads.c ****                             tprio_t prio, tfunc_t pf, void *arg) {
 453              		.loc 1 324 66 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 4, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 325:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 457              		.loc 1 325 3 view .LVU142
 326:lib/chibios/os/rt/src/chthreads.c **** 
 327:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck((wsp != NULL) &&
 458              		.loc 1 327 3 view .LVU143
 459              		.loc 1 327 3 view .LVU144
 460              		.loc 1 327 3 view .LVU145
 328:lib/chibios/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(wsp, PORT_WORKING_AREA_ALIGN) &&
 329:lib/chibios/os/rt/src/chthreads.c ****              (size >= THD_WORKING_AREA_SIZE(0)) &&
 330:lib/chibios/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(size, PORT_STACK_ALIGN) &&
 331:lib/chibios/os/rt/src/chthreads.c ****              (prio <= HIGHPRIO) && (pf != NULL));
 332:lib/chibios/os/rt/src/chthreads.c **** 
 333:lib/chibios/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) &&                                        \
 334:lib/chibios/os/rt/src/chthreads.c ****     ((CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE))
 335:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(wsp) == NULL,
 461              		.loc 1 335 3 view .LVU146
 462              		.loc 1 335 3 view .LVU147
 463              		.loc 1 335 3 view .LVU148
 336:lib/chibios/os/rt/src/chthreads.c ****               "working area in use");
 337:lib/chibios/os/rt/src/chthreads.c **** #endif
 338:lib/chibios/os/rt/src/chthreads.c **** 
 339:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 340:lib/chibios/os/rt/src/chthreads.c ****   _thread_memfill((uint8_t *)wsp,
 341:lib/chibios/os/rt/src/chthreads.c ****                   (uint8_t *)wsp + size,
 342:lib/chibios/os/rt/src/chthreads.c ****                   CH_DBG_STACK_FILL_VALUE);
 343:lib/chibios/os/rt/src/chthreads.c **** #endif
 344:lib/chibios/os/rt/src/chthreads.c **** 
 345:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 464              		.loc 1 345 3 view .LVU149
 465              	.LBB258:
 466              	.LBI258:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 467              		.loc 3 355 20 view .LVU150
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 468              		.loc 3 357 3 view .LVU151
 469              	.LBB259:
 470              	.LBI259:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 471              		.loc 4 669 27 view .LVU152
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 472              		.loc 4 677 3 view .LVU153
 473              	.LBB260:
 474              	.LBI260:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 475              		.loc 5 491 27 view .LVU154
 476              	.LBB261:
 477              		.loc 5 493 3 view .LVU155
 478              	.LBE261:
 479              	.LBE260:
 480              	.LBE259:
 481              	.LBE258:
 324:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 482              		.loc 1 324 66 is_stmt 0 view .LVU156
 483 0000 10B5     		push	{r4, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 4, -8
 486              		.cfi_offset 14, -4
 324:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 487              		.loc 1 324 66 view .LVU157
 488 0002 0446     		mov	r4, r0
 489              	.LBB265:
 490              	.LBB264:
 491              	.LBB263:
 492              	.LBB262:
 493              		.loc 5 493 3 view .LVU158
 494 0004 2020     		movs	r0, #32
 495              	.LVL25:
 496              		.loc 5 493 3 view .LVU159
 497              		.syntax unified
 498              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 499 0006 80F31188 		MSR basepri, r0
 500              	@ 0 "" 2
 501              	.LVL26:
 502              		.loc 5 493 3 view .LVU160
 503              		.thumb
 504              		.syntax unified
 505              	.LBE262:
 506              	.LBE263:
 507              	.LBE264:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 508              		.loc 3 358 34 is_stmt 1 view .LVU161
 359:./lib/chibios/os/rt/include/chsys.h **** }
 509              		.loc 3 359 20 view .LVU162
 510              	.LBE265:
 346:lib/chibios/os/rt/src/chthreads.c **** 
 347:lib/chibios/os/rt/src/chthreads.c ****   /* The thread structure is laid out in the upper part of the thread
 348:lib/chibios/os/rt/src/chthreads.c ****      workspace. The thread position structure is aligned to the required
 349:lib/chibios/os/rt/src/chthreads.c ****      stack alignment because it represents the stack top.*/
 350:lib/chibios/os/rt/src/chthreads.c ****   tp = (thread_t *)((uint8_t *)wsp + size -
 511              		.loc 1 350 3 view .LVU163
 512              		.loc 1 350 43 is_stmt 0 view .LVU164
 513 000a 4839     		subs	r1, r1, #72
 514              	.LVL27:
 515              		.loc 1 350 6 view .LVU165
 516 000c 6018     		adds	r0, r4, r1
 517              	.LVL28:
 351:lib/chibios/os/rt/src/chthreads.c ****                     MEM_ALIGN_NEXT(sizeof (thread_t), PORT_STACK_ALIGN));
 352:lib/chibios/os/rt/src/chthreads.c **** 
 353:lib/chibios/os/rt/src/chthreads.c **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE)
 354:lib/chibios/os/rt/src/chthreads.c ****   /* Stack boundary.*/
 355:lib/chibios/os/rt/src/chthreads.c ****   tp->wabase = (stkalign_t *)wsp;
 518              		.loc 1 355 3 is_stmt 1 view .LVU166
 356:lib/chibios/os/rt/src/chthreads.c **** #endif
 357:lib/chibios/os/rt/src/chthreads.c **** 
 358:lib/chibios/os/rt/src/chthreads.c ****   /* Setting up the port-dependent part of the working area.*/
 359:lib/chibios/os/rt/src/chthreads.c ****   PORT_SETUP_CONTEXT(tp, wsp, tp, pf, arg);
 519              		.loc 1 359 3 is_stmt 0 view .LVU167
 520 000e A0F16401 		sub	r1, r0, #100
 521              	.LVL29:
 522              		.loc 1 359 3 view .LVU168
 523 0012 40F8243C 		str	r3, [r0, #-36]
 524 0016 029B     		ldr	r3, [sp, #8]
 525              	.LVL30:
 526              		.loc 1 359 3 view .LVU169
 527 0018 40F8203C 		str	r3, [r0, #-32]
 528 001c 084B     		ldr	r3, .L11
 529 001e 40F8043C 		str	r3, [r0, #-4]
 355:lib/chibios/os/rt/src/chthreads.c **** #endif
 530              		.loc 1 355 14 view .LVU170
 531 0022 C461     		str	r4, [r0, #28]
 532              		.loc 1 359 3 is_stmt 1 view .LVU171
 533 0024 C160     		str	r1, [r0, #12]
 534              		.loc 1 359 3 view .LVU172
 535              		.loc 1 359 3 view .LVU173
 536              		.loc 1 359 3 view .LVU174
 537              		.loc 1 359 3 view .LVU175
 538              		.loc 1 359 3 view .LVU176
 539              		.loc 1 359 43 view .LVU177
 360:lib/chibios/os/rt/src/chthreads.c **** 
 361:lib/chibios/os/rt/src/chthreads.c ****   tp = _thread_init(tp, "noname", prio);
 540              		.loc 1 361 3 view .LVU178
 541              		.loc 1 361 8 is_stmt 0 view .LVU179
 542 0026 0749     		ldr	r1, .L11+4
 543 0028 FFF7FEFF 		bl	_thread_init
 544              	.LVL31:
 362:lib/chibios/os/rt/src/chthreads.c **** 
 363:lib/chibios/os/rt/src/chthreads.c ****   /* Starting the thread immediately.*/
 364:lib/chibios/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 545              		.loc 1 364 3 view .LVU180
 546 002c 0021     		movs	r1, #0
 361:lib/chibios/os/rt/src/chthreads.c **** 
 547              		.loc 1 361 8 view .LVU181
 548 002e 0446     		mov	r4, r0
 549              	.LVL32:
 550              		.loc 1 364 3 is_stmt 1 view .LVU182
 551 0030 FFF7FEFF 		bl	chSchWakeupS
 552              	.LVL33:
 365:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 553              		.loc 1 365 3 view .LVU183
 554              	.LBB266:
 555              	.LBI266:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 556              		.loc 3 367 20 view .LVU184
 557              	.LBB267:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 558              		.loc 3 369 22 view .LVU185
 370:./lib/chibios/os/rt/include/chsys.h **** 
 559              		.loc 3 370 33 view .LVU186
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 560              		.loc 3 376 3 view .LVU187
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 561              		.loc 3 376 3 view .LVU188
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 562              		.loc 3 376 3 view .LVU189
 563              		.loc 3 380 3 view .LVU190
 564              	.LBB268:
 565              	.LBI268:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 566              		.loc 4 693 27 view .LVU191
 567              		.loc 4 696 3 view .LVU192
 568              	.LBB269:
 569              	.LBI269:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 570              		.loc 5 491 27 view .LVU193
 571              	.LBB270:
 572              		.loc 5 493 3 view .LVU194
 573 0034 0023     		movs	r3, #0
 574              		.syntax unified
 575              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 576 0036 83F31188 		MSR basepri, r3
 577              	@ 0 "" 2
 578              	.LVL34:
 579              		.loc 5 493 3 is_stmt 0 view .LVU195
 580              		.thumb
 581              		.syntax unified
 582              	.LBE270:
 583              	.LBE269:
 584              	.LBE268:
 585              	.LBE267:
 586              	.LBE266:
 366:lib/chibios/os/rt/src/chthreads.c **** 
 367:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 587              		.loc 1 367 3 is_stmt 1 view .LVU196
 368:lib/chibios/os/rt/src/chthreads.c **** }
 588              		.loc 1 368 1 is_stmt 0 view .LVU197
 589 003a 2046     		mov	r0, r4
 590 003c 10BD     		pop	{r4, pc}
 591              	.LVL35:
 592              	.L12:
 593              		.loc 1 368 1 view .LVU198
 594 003e 00BF     		.align	2
 595              	.L11:
 596 0040 00000000 		.word	_port_thread_start
 597 0044 00000000 		.word	.LC0
 598              		.cfi_endproc
 599              	.LFE294:
 601              		.section	.text.chThdStart,"ax",%progbits
 602              		.align	1
 603              		.global	chThdStart
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 608              	chThdStart:
 609              	.LVL36:
 610              	.LFB295:
 369:lib/chibios/os/rt/src/chthreads.c **** 
 370:lib/chibios/os/rt/src/chthreads.c **** /**
 371:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Resumes a thread created with @p chThdCreateI().
 372:lib/chibios/os/rt/src/chthreads.c ****  *
 373:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 374:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 375:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 376:lib/chibios/os/rt/src/chthreads.c ****  *
 377:lib/chibios/os/rt/src/chthreads.c ****  * @api
 378:lib/chibios/os/rt/src/chthreads.c ****  */
 379:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdStart(thread_t *tp) {
 611              		.loc 1 379 36 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 380:lib/chibios/os/rt/src/chthreads.c **** 
 381:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 615              		.loc 1 381 3 view .LVU200
 616              	.LBB271:
 617              	.LBI271:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 618              		.loc 3 355 20 view .LVU201
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 619              		.loc 3 357 3 view .LVU202
 620              	.LBB272:
 621              	.LBI272:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 622              		.loc 4 669 27 view .LVU203
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 623              		.loc 4 677 3 view .LVU204
 624              	.LBB273:
 625              	.LBI273:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 626              		.loc 5 491 27 view .LVU205
 627              	.LBB274:
 628              		.loc 5 493 3 view .LVU206
 629              	.LBE274:
 630              	.LBE273:
 631              	.LBE272:
 632              	.LBE271:
 379:lib/chibios/os/rt/src/chthreads.c **** 
 633              		.loc 1 379 36 is_stmt 0 view .LVU207
 634 0000 10B5     		push	{r4, lr}
 635              		.cfi_def_cfa_offset 8
 636              		.cfi_offset 4, -8
 637              		.cfi_offset 14, -4
 638              	.LBB281:
 639              	.LBB279:
 640              	.LBB277:
 641              	.LBB275:
 642              		.loc 5 493 3 view .LVU208
 643 0002 2023     		movs	r3, #32
 644              	.LBE275:
 645              	.LBE277:
 646              	.LBE279:
 647              	.LBE281:
 379:lib/chibios/os/rt/src/chthreads.c **** 
 648              		.loc 1 379 36 view .LVU209
 649 0004 0446     		mov	r4, r0
 650              	.LBB282:
 651              	.LBB280:
 652              	.LBB278:
 653              	.LBB276:
 654              		.loc 5 493 3 view .LVU210
 655              		.syntax unified
 656              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 657 0006 83F31188 		MSR basepri, r3
 658              	@ 0 "" 2
 659              	.LVL37:
 660              		.loc 5 493 3 view .LVU211
 661              		.thumb
 662              		.syntax unified
 663              	.LBE276:
 664              	.LBE278:
 665              	.LBE280:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 666              		.loc 3 358 34 is_stmt 1 view .LVU212
 359:./lib/chibios/os/rt/include/chsys.h **** }
 667              		.loc 3 359 20 view .LVU213
 668              	.LBE282:
 382:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 669              		.loc 1 382 3 view .LVU214
 670              		.loc 1 382 3 view .LVU215
 671              		.loc 1 382 3 view .LVU216
 383:lib/chibios/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 672              		.loc 1 383 3 view .LVU217
 673 000a 0021     		movs	r1, #0
 674 000c FFF7FEFF 		bl	chSchWakeupS
 675              	.LVL38:
 384:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 676              		.loc 1 384 3 view .LVU218
 677              	.LBB283:
 678              	.LBI283:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 679              		.loc 3 367 20 view .LVU219
 680              	.LBB284:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 681              		.loc 3 369 22 view .LVU220
 370:./lib/chibios/os/rt/include/chsys.h **** 
 682              		.loc 3 370 33 view .LVU221
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 683              		.loc 3 376 3 view .LVU222
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 684              		.loc 3 376 3 view .LVU223
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 685              		.loc 3 376 3 view .LVU224
 686              		.loc 3 380 3 view .LVU225
 687              	.LBB285:
 688              	.LBI285:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 689              		.loc 4 693 27 view .LVU226
 690              		.loc 4 696 3 view .LVU227
 691              	.LBB286:
 692              	.LBI286:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 693              		.loc 5 491 27 view .LVU228
 694              	.LBB287:
 695              		.loc 5 493 3 view .LVU229
 696 0010 0023     		movs	r3, #0
 697              		.syntax unified
 698              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 699 0012 83F31188 		MSR basepri, r3
 700              	@ 0 "" 2
 701              	.LVL39:
 702              		.loc 5 493 3 is_stmt 0 view .LVU230
 703              		.thumb
 704              		.syntax unified
 705              	.LBE287:
 706              	.LBE286:
 707              	.LBE285:
 708              	.LBE284:
 709              	.LBE283:
 385:lib/chibios/os/rt/src/chthreads.c **** 
 386:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 710              		.loc 1 386 3 is_stmt 1 view .LVU231
 387:lib/chibios/os/rt/src/chthreads.c **** }
 711              		.loc 1 387 1 is_stmt 0 view .LVU232
 712 0016 2046     		mov	r0, r4
 713 0018 10BD     		pop	{r4, pc}
 714              		.loc 1 387 1 view .LVU233
 715              		.cfi_endproc
 716              	.LFE295:
 718              		.section	.text.chThdAddRef,"ax",%progbits
 719              		.align	1
 720              		.global	chThdAddRef
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	chThdAddRef:
 726              	.LVL40:
 727              	.LFB296:
 388:lib/chibios/os/rt/src/chthreads.c **** 
 389:lib/chibios/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 390:lib/chibios/os/rt/src/chthreads.c **** /**
 391:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Adds a reference to a thread object.
 392:lib/chibios/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_REGISTRY must be enabled in
 393:lib/chibios/os/rt/src/chthreads.c ****  *          order to use this function.
 394:lib/chibios/os/rt/src/chthreads.c ****  *
 395:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 396:lib/chibios/os/rt/src/chthreads.c ****  * @return              The same thread pointer passed as parameter
 397:lib/chibios/os/rt/src/chthreads.c ****  *                      representing the new reference.
 398:lib/chibios/os/rt/src/chthreads.c ****  *
 399:lib/chibios/os/rt/src/chthreads.c ****  * @api
 400:lib/chibios/os/rt/src/chthreads.c ****  */
 401:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdAddRef(thread_t *tp) {
 728              		.loc 1 401 37 is_stmt 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 402:lib/chibios/os/rt/src/chthreads.c **** 
 403:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 733              		.loc 1 403 3 view .LVU235
 734              	.LBB288:
 735              	.LBI288:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 736              		.loc 3 355 20 view .LVU236
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 737              		.loc 3 357 3 view .LVU237
 738              	.LBB289:
 739              	.LBI289:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 740              		.loc 4 669 27 view .LVU238
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 741              		.loc 4 677 3 view .LVU239
 742              	.LBB290:
 743              	.LBI290:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 744              		.loc 5 491 27 view .LVU240
 745              	.LBB291:
 746              		.loc 5 493 3 view .LVU241
 747 0000 2022     		movs	r2, #32
 748              		.syntax unified
 749              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 750 0002 82F31188 		MSR basepri, r2
 751              	@ 0 "" 2
 752              	.LVL41:
 753              		.loc 5 493 3 is_stmt 0 view .LVU242
 754              		.thumb
 755              		.syntax unified
 756              	.LBE291:
 757              	.LBE290:
 758              	.LBE289:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 759              		.loc 3 358 34 is_stmt 1 view .LVU243
 359:./lib/chibios/os/rt/include/chsys.h **** }
 760              		.loc 3 359 20 view .LVU244
 761              	.LBE288:
 404:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs < (trefs_t)255, "too many references");
 762              		.loc 1 404 3 view .LVU245
 763              		.loc 1 404 3 view .LVU246
 764              		.loc 1 404 3 view .LVU247
 405:lib/chibios/os/rt/src/chthreads.c ****   tp->refs++;
 765              		.loc 1 405 3 view .LVU248
 766              		.loc 1 405 11 is_stmt 0 view .LVU249
 767 0006 90F82220 		ldrb	r2, [r0, #34]	@ zero_extendqisi2
 768 000a 0132     		adds	r2, r2, #1
 769 000c 80F82220 		strb	r2, [r0, #34]
 406:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 770              		.loc 1 406 3 is_stmt 1 view .LVU250
 771              	.LBB292:
 772              	.LBI292:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 773              		.loc 3 367 20 view .LVU251
 774              	.LBB293:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 775              		.loc 3 369 22 view .LVU252
 370:./lib/chibios/os/rt/include/chsys.h **** 
 776              		.loc 3 370 33 view .LVU253
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 777              		.loc 3 376 3 view .LVU254
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 778              		.loc 3 376 3 view .LVU255
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 779              		.loc 3 376 3 view .LVU256
 780              		.loc 3 380 3 view .LVU257
 781              	.LBB294:
 782              	.LBI294:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 783              		.loc 4 693 27 view .LVU258
 784              		.loc 4 696 3 view .LVU259
 785              	.LVL42:
 786              	.LBB295:
 787              	.LBI295:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 788              		.loc 5 491 27 view .LVU260
 789              	.LBB296:
 790              		.loc 5 493 3 view .LVU261
 791 0010 0023     		movs	r3, #0
 792              		.syntax unified
 793              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 794 0012 83F31188 		MSR basepri, r3
 795              	@ 0 "" 2
 796              	.LVL43:
 797              		.loc 5 493 3 is_stmt 0 view .LVU262
 798              		.thumb
 799              		.syntax unified
 800              	.LBE296:
 801              	.LBE295:
 802              	.LBE294:
 803              	.LBE293:
 804              	.LBE292:
 407:lib/chibios/os/rt/src/chthreads.c **** 
 408:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 805              		.loc 1 408 3 is_stmt 1 view .LVU263
 409:lib/chibios/os/rt/src/chthreads.c **** }
 806              		.loc 1 409 1 is_stmt 0 view .LVU264
 807 0016 7047     		bx	lr
 808              		.cfi_endproc
 809              	.LFE296:
 811              		.section	.text.chThdRelease,"ax",%progbits
 812              		.align	1
 813              		.global	chThdRelease
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 818              	chThdRelease:
 819              	.LVL44:
 820              	.LFB297:
 410:lib/chibios/os/rt/src/chthreads.c **** 
 411:lib/chibios/os/rt/src/chthreads.c **** /**
 412:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Releases a reference to a thread object.
 413:lib/chibios/os/rt/src/chthreads.c ****  * @details If the references counter reaches zero <b>and</b> the thread
 414:lib/chibios/os/rt/src/chthreads.c ****  *          is in the @p CH_STATE_FINAL state then the thread's memory is
 415:lib/chibios/os/rt/src/chthreads.c ****  *          returned to the proper allocator and the thread is removed
 416:lib/chibios/os/rt/src/chthreads.c ****  *          from the registry.<br>
 417:lib/chibios/os/rt/src/chthreads.c ****  *          Threads whose counter reaches zero and are still active become
 418:lib/chibios/os/rt/src/chthreads.c ****  *          "detached" and will be removed from registry on termination.
 419:lib/chibios/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_REGISTRY must be enabled in
 420:lib/chibios/os/rt/src/chthreads.c ****  *          order to use this function.
 421:lib/chibios/os/rt/src/chthreads.c ****  * @note    Static threads are not affected.
 422:lib/chibios/os/rt/src/chthreads.c ****  *
 423:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 424:lib/chibios/os/rt/src/chthreads.c ****  *
 425:lib/chibios/os/rt/src/chthreads.c ****  * @api
 426:lib/chibios/os/rt/src/chthreads.c ****  */
 427:lib/chibios/os/rt/src/chthreads.c **** void chThdRelease(thread_t *tp) {
 821              		.loc 1 427 33 is_stmt 1 view -0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 428:lib/chibios/os/rt/src/chthreads.c **** 
 429:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 826              		.loc 1 429 3 view .LVU266
 827              	.LBB326:
 828              	.LBI326:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 829              		.loc 3 355 20 view .LVU267
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 830              		.loc 3 357 3 view .LVU268
 831              	.LBB327:
 832              	.LBI327:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 833              		.loc 4 669 27 view .LVU269
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 834              		.loc 4 677 3 view .LVU270
 835              	.LBB328:
 836              	.LBI328:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 837              		.loc 5 491 27 view .LVU271
 838              	.LBB329:
 839              		.loc 5 493 3 view .LVU272
 840 0000 2023     		movs	r3, #32
 841              		.syntax unified
 842              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 843 0002 83F31188 		MSR basepri, r3
 844              	@ 0 "" 2
 845              	.LVL45:
 846              		.loc 5 493 3 is_stmt 0 view .LVU273
 847              		.thumb
 848              		.syntax unified
 849              	.LBE329:
 850              	.LBE328:
 851              	.LBE327:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 852              		.loc 3 358 34 is_stmt 1 view .LVU274
 359:./lib/chibios/os/rt/include/chsys.h **** }
 853              		.loc 3 359 20 view .LVU275
 854              	.LBE326:
 430:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs > (trefs_t)0, "not referenced");
 855              		.loc 1 430 3 view .LVU276
 856              		.loc 1 430 3 view .LVU277
 857              		.loc 1 430 3 view .LVU278
 431:lib/chibios/os/rt/src/chthreads.c ****   tp->refs--;
 858              		.loc 1 431 3 view .LVU279
 859              		.loc 1 431 11 is_stmt 0 view .LVU280
 860 0006 90F82230 		ldrb	r3, [r0, #34]	@ zero_extendqisi2
 861 000a 013B     		subs	r3, r3, #1
 862 000c 80F82230 		strb	r3, [r0, #34]
 432:lib/chibios/os/rt/src/chthreads.c **** 
 433:lib/chibios/os/rt/src/chthreads.c ****   /* If the references counter reaches zero and the thread is in its
 434:lib/chibios/os/rt/src/chthreads.c ****      terminated state then the memory can be returned to the proper
 435:lib/chibios/os/rt/src/chthreads.c ****      allocator.*/
 436:lib/chibios/os/rt/src/chthreads.c ****   if ((tp->refs == (trefs_t)0) && (tp->state == CH_STATE_FINAL)) {
 863              		.loc 1 436 3 is_stmt 1 view .LVU281
 864              		.loc 1 436 32 is_stmt 0 view .LVU282
 865 0010 036A     		ldr	r3, [r0, #32]
 866 0012 03F0FF13 		and	r3, r3, #16711935
 867              		.loc 1 436 6 view .LVU283
 868 0016 0F2B     		cmp	r3, #15
 869 0018 16D1     		bne	.L16
 870              	.LVL46:
 871              	.LBB330:
 872              	.LBI330:
 427:lib/chibios/os/rt/src/chthreads.c **** 
 873              		.loc 1 427 6 is_stmt 1 view .LVU284
 874              	.LBB331:
 437:lib/chibios/os/rt/src/chthreads.c ****     REG_REMOVE(tp);
 875              		.loc 1 437 5 view .LVU285
 876 001a D0E90432 		ldrd	r3, r2, [r0, #16]
 877 001e 1361     		str	r3, [r2, #16]
 878              		.loc 1 437 5 view .LVU286
 879 0020 5A61     		str	r2, [r3, #20]
 880              		.loc 1 437 19 view .LVU287
 438:lib/chibios/os/rt/src/chthreads.c ****     chSysUnlock();
 881              		.loc 1 438 5 view .LVU288
 882              	.LBB332:
 883              	.LBI332:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 884              		.loc 3 367 20 view .LVU289
 885              	.LBB333:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 886              		.loc 3 369 22 view .LVU290
 370:./lib/chibios/os/rt/include/chsys.h **** 
 887              		.loc 3 370 33 view .LVU291
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 888              		.loc 3 376 3 view .LVU292
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 889              		.loc 3 376 3 view .LVU293
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 890              		.loc 3 376 3 view .LVU294
 891              		.loc 3 380 3 view .LVU295
 892              	.LBB334:
 893              	.LBI334:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 894              		.loc 4 693 27 view .LVU296
 895              		.loc 4 696 3 view .LVU297
 896              	.LVL47:
 897              	.LBB335:
 898              	.LBI335:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 899              		.loc 5 491 27 view .LVU298
 900              	.LBB336:
 901              		.loc 5 493 3 view .LVU299
 902 0022 0023     		movs	r3, #0
 903              		.syntax unified
 904              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 905 0024 83F31188 		MSR basepri, r3
 906              	@ 0 "" 2
 907              	.LVL48:
 908              		.loc 5 493 3 is_stmt 0 view .LVU300
 909              		.thumb
 910              		.syntax unified
 911              	.LBE336:
 912              	.LBE335:
 913              	.LBE334:
 914              	.LBE333:
 915              	.LBE332:
 439:lib/chibios/os/rt/src/chthreads.c **** 
 440:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_DYNAMIC == TRUE
 441:lib/chibios/os/rt/src/chthreads.c ****     switch (tp->flags & CH_FLAG_MODE_MASK) {
 916              		.loc 1 441 5 is_stmt 1 view .LVU301
 917 0028 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 918 002c 03F00303 		and	r3, r3, #3
 919 0030 012B     		cmp	r3, #1
 920 0032 02D0     		beq	.L17
 921 0034 022B     		cmp	r3, #2
 922 0036 03D0     		beq	.L18
 923 0038 7047     		bx	lr
 924              	.L17:
 442:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_HEAP == TRUE
 443:lib/chibios/os/rt/src/chthreads.c ****     case CH_FLAG_MODE_HEAP:
 444:lib/chibios/os/rt/src/chthreads.c ****       chHeapFree(chThdGetWorkingAreaX(tp));
 925              		.loc 1 444 7 view .LVU302
 926              	.LVL49:
 927              	.LBB337:
 928              	.LBI337:
 929              		.file 6 "./lib/chibios/os/rt/include/chthreads.h"
   1:./lib/chibios/os/rt/include/chthreads.h **** /*
   2:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chthreads.h **** 
   4:./lib/chibios/os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chthreads.h **** 
   6:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chthreads.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chthreads.h **** 
  11:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chthreads.h **** 
  16:./lib/chibios/os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chthreads.h **** */
  19:./lib/chibios/os/rt/include/chthreads.h **** 
  20:./lib/chibios/os/rt/include/chthreads.h **** /**
  21:./lib/chibios/os/rt/include/chthreads.h ****  * @file    rt/include/chthreads.h
  22:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:./lib/chibios/os/rt/include/chthreads.h ****  *
  24:./lib/chibios/os/rt/include/chthreads.h ****  * @addtogroup threads
  25:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  26:./lib/chibios/os/rt/include/chthreads.h ****  */
  27:./lib/chibios/os/rt/include/chthreads.h **** 
  28:./lib/chibios/os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:./lib/chibios/os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:./lib/chibios/os/rt/include/chthreads.h **** 
  31:./lib/chibios/os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:./lib/chibios/os/rt/include/chthreads.h **** 
  33:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chthreads.h **** 
  37:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chthreads.h **** 
  41:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chthreads.h **** 
  45:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chthreads.h **** 
  49:./lib/chibios/os/rt/include/chthreads.h **** /**
  50:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:./lib/chibios/os/rt/include/chthreads.h ****  */
  52:./lib/chibios/os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:./lib/chibios/os/rt/include/chthreads.h **** 
  54:./lib/chibios/os/rt/include/chthreads.h **** /**
  55:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:./lib/chibios/os/rt/include/chthreads.h ****  */
  57:./lib/chibios/os/rt/include/chthreads.h **** typedef struct {
  58:./lib/chibios/os/rt/include/chthreads.h ****   /**
  59:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:./lib/chibios/os/rt/include/chthreads.h ****    */
  61:./lib/chibios/os/rt/include/chthreads.h ****   const char        *name;
  62:./lib/chibios/os/rt/include/chthreads.h ****   /**
  63:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:./lib/chibios/os/rt/include/chthreads.h ****    */
  65:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:./lib/chibios/os/rt/include/chthreads.h ****   /**
  67:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:./lib/chibios/os/rt/include/chthreads.h ****    */
  69:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:./lib/chibios/os/rt/include/chthreads.h ****   /**
  71:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:./lib/chibios/os/rt/include/chthreads.h ****    */
  73:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t           prio;
  74:./lib/chibios/os/rt/include/chthreads.h ****   /**
  75:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:./lib/chibios/os/rt/include/chthreads.h ****    */
  77:./lib/chibios/os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:./lib/chibios/os/rt/include/chthreads.h ****   /**
  79:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:./lib/chibios/os/rt/include/chthreads.h ****    */
  81:./lib/chibios/os/rt/include/chthreads.h ****   void              *arg;
  82:./lib/chibios/os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:./lib/chibios/os/rt/include/chthreads.h **** 
  84:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  87:./lib/chibios/os/rt/include/chthreads.h **** 
  88:./lib/chibios/os/rt/include/chthreads.h **** /**
  89:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads queues
  90:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  91:./lib/chibios/os/rt/include/chthreads.h ****  */
  92:./lib/chibios/os/rt/include/chthreads.h **** /**
  93:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  94:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  95:./lib/chibios/os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  96:./lib/chibios/os/rt/include/chthreads.h ****  *
  97:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  98:./lib/chibios/os/rt/include/chthreads.h ****  */
  99:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {_CH_QUEUE_DATA(name)}
 100:./lib/chibios/os/rt/include/chthreads.h **** 
 101:./lib/chibios/os/rt/include/chthreads.h **** /**
 102:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 103:./lib/chibios/os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 104:./lib/chibios/os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 105:./lib/chibios/os/rt/include/chthreads.h ****  *
 106:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 107:./lib/chibios/os/rt/include/chthreads.h ****  */
 108:./lib/chibios/os/rt/include/chthreads.h **** #define THREADS_QUEUE_DECL(name)                                            \
 109:./lib/chibios/os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 110:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 111:./lib/chibios/os/rt/include/chthreads.h **** 
 112:./lib/chibios/os/rt/include/chthreads.h **** /**
 113:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Working Areas
 114:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 115:./lib/chibios/os/rt/include/chthreads.h ****  */
 116:./lib/chibios/os/rt/include/chthreads.h **** /**
 117:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 118:./lib/chibios/os/rt/include/chthreads.h ****  *
 119:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 120:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 121:./lib/chibios/os/rt/include/chthreads.h ****  *
 122:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 123:./lib/chibios/os/rt/include/chthreads.h ****  */
 124:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 125:./lib/chibios/os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 126:./lib/chibios/os/rt/include/chthreads.h **** 
 127:./lib/chibios/os/rt/include/chthreads.h **** /**
 128:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 129:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 130:./lib/chibios/os/rt/include/chthreads.h ****  *          aligned as both position and size.
 131:./lib/chibios/os/rt/include/chthreads.h ****  *
 132:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 133:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 134:./lib/chibios/os/rt/include/chthreads.h ****  *
 135:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 136:./lib/chibios/os/rt/include/chthreads.h ****  */
 137:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 138:./lib/chibios/os/rt/include/chthreads.h **** 
 139:./lib/chibios/os/rt/include/chthreads.h **** /**
 140:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 141:./lib/chibios/os/rt/include/chthreads.h ****  *
 142:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 143:./lib/chibios/os/rt/include/chthreads.h ****  */
 144:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 145:./lib/chibios/os/rt/include/chthreads.h **** 
 146:./lib/chibios/os/rt/include/chthreads.h **** /**
 147:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 148:./lib/chibios/os/rt/include/chthreads.h ****  *
 149:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 150:./lib/chibios/os/rt/include/chthreads.h ****  */
 151:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 152:./lib/chibios/os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 153:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 154:./lib/chibios/os/rt/include/chthreads.h **** 
 155:./lib/chibios/os/rt/include/chthreads.h **** /**
 156:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 157:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 158:./lib/chibios/os/rt/include/chthreads.h ****  */
 159:./lib/chibios/os/rt/include/chthreads.h **** /**
 160:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 161:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 162:./lib/chibios/os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 163:./lib/chibios/os/rt/include/chthreads.h ****  */
 164:./lib/chibios/os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 165:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 166:./lib/chibios/os/rt/include/chthreads.h **** 
 167:./lib/chibios/os/rt/include/chthreads.h **** /**
 168:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Macro Functions
 169:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 170:./lib/chibios/os/rt/include/chthreads.h ****  */
 171:./lib/chibios/os/rt/include/chthreads.h **** /**
 172:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 173:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 174:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 175:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 176:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 177:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 178:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 179:./lib/chibios/os/rt/include/chthreads.h ****  *
 180:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 181:./lib/chibios/os/rt/include/chthreads.h ****  *
 182:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 183:./lib/chibios/os/rt/include/chthreads.h ****  */
 184:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 185:./lib/chibios/os/rt/include/chthreads.h **** 
 186:./lib/chibios/os/rt/include/chthreads.h **** /**
 187:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 188:./lib/chibios/os/rt/include/chthreads.h ****  *          milliseconds.
 189:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 190:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 191:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 192:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 193:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 194:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 195:./lib/chibios/os/rt/include/chthreads.h ****  *
 196:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 197:./lib/chibios/os/rt/include/chthreads.h ****  *
 198:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 199:./lib/chibios/os/rt/include/chthreads.h ****  */
 200:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 201:./lib/chibios/os/rt/include/chthreads.h **** 
 202:./lib/chibios/os/rt/include/chthreads.h **** /**
 203:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 204:./lib/chibios/os/rt/include/chthreads.h ****  *          microseconds.
 205:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 206:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 207:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 208:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 209:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 210:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 211:./lib/chibios/os/rt/include/chthreads.h ****  *
 212:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 213:./lib/chibios/os/rt/include/chthreads.h ****  *
 214:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 215:./lib/chibios/os/rt/include/chthreads.h ****  */
 216:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 217:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 218:./lib/chibios/os/rt/include/chthreads.h **** 
 219:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 220:./lib/chibios/os/rt/include/chthreads.h **** /* External declarations.                                                    */
 221:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 222:./lib/chibios/os/rt/include/chthreads.h **** 
 223:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 224:./lib/chibios/os/rt/include/chthreads.h **** extern "C" {
 225:./lib/chibios/os/rt/include/chthreads.h **** #endif
 226:./lib/chibios/os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 227:./lib/chibios/os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 228:./lib/chibios/os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 229:./lib/chibios/os/rt/include/chthreads.h **** #endif
 230:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 231:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 232:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 233:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 234:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 235:./lib/chibios/os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 236:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 237:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 238:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 239:./lib/chibios/os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 240:./lib/chibios/os/rt/include/chthreads.h **** #endif
 241:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 242:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 243:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 244:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 245:./lib/chibios/os/rt/include/chthreads.h **** #endif
 246:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 247:./lib/chibios/os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 248:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 249:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 250:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 251:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 252:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 253:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 254:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 255:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 256:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 257:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 258:./lib/chibios/os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 259:./lib/chibios/os/rt/include/chthreads.h ****   void chThdYield(void);
 260:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 261:./lib/chibios/os/rt/include/chthreads.h **** }
 262:./lib/chibios/os/rt/include/chthreads.h **** #endif
 263:./lib/chibios/os/rt/include/chthreads.h **** 
 264:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 265:./lib/chibios/os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 266:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 267:./lib/chibios/os/rt/include/chthreads.h **** 
 268:./lib/chibios/os/rt/include/chthreads.h **** /**
 269:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns a pointer to the current @p thread_t.
 270:./lib/chibios/os/rt/include/chthreads.h ****  *
 271:./lib/chibios/os/rt/include/chthreads.h ****  * @return              A pointer to the current thread.
 272:./lib/chibios/os/rt/include/chthreads.h ****  *
 273:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 274:./lib/chibios/os/rt/include/chthreads.h ****  */
 275:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 276:./lib/chibios/os/rt/include/chthreads.h **** 
 277:./lib/chibios/os/rt/include/chthreads.h ****   return ch.rlist.current;
 278:./lib/chibios/os/rt/include/chthreads.h **** }
 279:./lib/chibios/os/rt/include/chthreads.h **** 
 280:./lib/chibios/os/rt/include/chthreads.h **** /**
 281:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 282:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 283:./lib/chibios/os/rt/include/chthreads.h ****  *
 284:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The current thread priority.
 285:./lib/chibios/os/rt/include/chthreads.h ****  *
 286:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 287:./lib/chibios/os/rt/include/chthreads.h ****  */
 288:./lib/chibios/os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 289:./lib/chibios/os/rt/include/chthreads.h **** 
 290:./lib/chibios/os/rt/include/chthreads.h ****   return chThdGetSelfX()->hdr.pqueue.prio;
 291:./lib/chibios/os/rt/include/chthreads.h **** }
 292:./lib/chibios/os/rt/include/chthreads.h **** 
 293:./lib/chibios/os/rt/include/chthreads.h **** /**
 294:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 295:./lib/chibios/os/rt/include/chthreads.h ****  * @note    This function is only available when the
 296:./lib/chibios/os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 297:./lib/chibios/os/rt/include/chthreads.h ****  *
 298:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 299:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 300:./lib/chibios/os/rt/include/chthreads.h ****  *
 301:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 302:./lib/chibios/os/rt/include/chthreads.h ****  */
 303:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 305:./lib/chibios/os/rt/include/chthreads.h **** 
 306:./lib/chibios/os/rt/include/chthreads.h ****   return tp->time;
 307:./lib/chibios/os/rt/include/chthreads.h **** }
 308:./lib/chibios/os/rt/include/chthreads.h **** #endif
 309:./lib/chibios/os/rt/include/chthreads.h **** 
 310:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 311:./lib/chibios/os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 312:./lib/chibios/os/rt/include/chthreads.h **** /**
 313:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 314:./lib/chibios/os/rt/include/chthreads.h ****  *
 315:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 316:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 317:./lib/chibios/os/rt/include/chthreads.h ****  *
 318:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 319:./lib/chibios/os/rt/include/chthreads.h ****  */
 320:./lib/chibios/os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 930              		.loc 6 320 27 view .LVU303
 931              	.LBB338:
 321:./lib/chibios/os/rt/include/chthreads.h **** 
 322:./lib/chibios/os/rt/include/chthreads.h ****   return tp->wabase;
 932              		.loc 6 322 3 view .LVU304
 933              		.loc 6 322 3 is_stmt 0 view .LVU305
 934              	.LBE338:
 935              	.LBE337:
 936              		.loc 1 444 7 view .LVU306
 937 003a C069     		ldr	r0, [r0, #28]
 938              	.LVL50:
 939              		.loc 1 444 7 view .LVU307
 940 003c FFF7FEBF 		b	chHeapFree
 941              	.LVL51:
 942              	.L18:
 445:lib/chibios/os/rt/src/chthreads.c ****       break;
 446:lib/chibios/os/rt/src/chthreads.c **** #endif
 447:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_MEMPOOLS == TRUE
 448:lib/chibios/os/rt/src/chthreads.c ****     case CH_FLAG_MODE_MPOOL:
 449:lib/chibios/os/rt/src/chthreads.c ****       chPoolFree(tp->mpool, chThdGetWorkingAreaX(tp));
 943              		.loc 1 449 7 is_stmt 1 view .LVU308
 944              	.LBB339:
 945              	.LBI339:
 320:./lib/chibios/os/rt/include/chthreads.h **** 
 946              		.loc 6 320 27 view .LVU309
 947              	.LBB340:
 948              		.loc 6 322 3 view .LVU310
 949              		.loc 6 322 3 is_stmt 0 view .LVU311
 950              	.LBE340:
 951              	.LBE339:
 952              		.loc 1 449 7 view .LVU312
 953 0040 C169     		ldr	r1, [r0, #28]
 954 0042 006C     		ldr	r0, [r0, #64]
 955              	.LVL52:
 956              		.loc 1 449 7 view .LVU313
 957 0044 FFF7FEBF 		b	chPoolFree
 958              	.LVL53:
 959              	.L16:
 960              		.loc 1 449 7 view .LVU314
 961              	.LBE331:
 962              	.LBE330:
 450:lib/chibios/os/rt/src/chthreads.c ****       break;
 451:lib/chibios/os/rt/src/chthreads.c **** #endif
 452:lib/chibios/os/rt/src/chthreads.c ****     default:
 453:lib/chibios/os/rt/src/chthreads.c ****       /* Nothing else to do for static threads.*/
 454:lib/chibios/os/rt/src/chthreads.c ****       break;
 455:lib/chibios/os/rt/src/chthreads.c ****     }
 456:lib/chibios/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_DYNAMIC == TRUE */
 457:lib/chibios/os/rt/src/chthreads.c ****     return;
 458:lib/chibios/os/rt/src/chthreads.c ****   }
 459:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 963              		.loc 1 459 3 is_stmt 1 view .LVU315
 964              	.LBB341:
 965              	.LBI341:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 966              		.loc 3 367 20 view .LVU316
 967              	.LBB342:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 968              		.loc 3 369 22 view .LVU317
 370:./lib/chibios/os/rt/include/chsys.h **** 
 969              		.loc 3 370 33 view .LVU318
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 970              		.loc 3 376 3 view .LVU319
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 971              		.loc 3 376 3 view .LVU320
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 972              		.loc 3 376 3 view .LVU321
 973              		.loc 3 380 3 view .LVU322
 974              	.LBB343:
 975              	.LBI343:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 976              		.loc 4 693 27 view .LVU323
 977              		.loc 4 696 3 view .LVU324
 978              	.LBB344:
 979              	.LBI344:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 980              		.loc 5 491 27 view .LVU325
 981              	.LBB345:
 982              		.loc 5 493 3 view .LVU326
 983 0048 0023     		movs	r3, #0
 984              		.syntax unified
 985              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 986 004a 83F31188 		MSR basepri, r3
 987              	@ 0 "" 2
 988              	.LVL54:
 989              		.loc 5 493 3 is_stmt 0 view .LVU327
 990              		.thumb
 991              		.syntax unified
 992              	.LBE345:
 993              	.LBE344:
 994              	.LBE343:
 995              	.LBE342:
 996              	.LBE341:
 460:lib/chibios/os/rt/src/chthreads.c **** }
 997              		.loc 1 460 1 view .LVU328
 998 004e 7047     		bx	lr
 999              		.cfi_endproc
 1000              	.LFE297:
 1002              		.section	.text.chThdExitS,"ax",%progbits
 1003              		.align	1
 1004              		.global	chThdExitS
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1009              	chThdExitS:
 1010              	.LVL55:
 1011              	.LFB299:
 461:lib/chibios/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_REGISTRY == TRUE */
 462:lib/chibios/os/rt/src/chthreads.c **** 
 463:lib/chibios/os/rt/src/chthreads.c **** /**
 464:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Terminates the current thread.
 465:lib/chibios/os/rt/src/chthreads.c ****  * @details The thread goes in the @p CH_STATE_FINAL state holding the
 466:lib/chibios/os/rt/src/chthreads.c ****  *          specified exit status code, other threads can retrieve the
 467:lib/chibios/os/rt/src/chthreads.c ****  *          exit status code by invoking the function @p chThdWait().
 468:lib/chibios/os/rt/src/chthreads.c ****  * @post    Eventual code after this function will never be executed,
 469:lib/chibios/os/rt/src/chthreads.c ****  *          this function never returns. The compiler has no way to
 470:lib/chibios/os/rt/src/chthreads.c ****  *          know this so do not assume that the compiler would remove
 471:lib/chibios/os/rt/src/chthreads.c ****  *          the dead code.
 472:lib/chibios/os/rt/src/chthreads.c ****  *
 473:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       thread exit code
 474:lib/chibios/os/rt/src/chthreads.c ****  *
 475:lib/chibios/os/rt/src/chthreads.c ****  * @api
 476:lib/chibios/os/rt/src/chthreads.c ****  */
 477:lib/chibios/os/rt/src/chthreads.c **** void chThdExit(msg_t msg) {
 478:lib/chibios/os/rt/src/chthreads.c **** 
 479:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 480:lib/chibios/os/rt/src/chthreads.c ****   chThdExitS(msg);
 481:lib/chibios/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 482:lib/chibios/os/rt/src/chthreads.c **** }
 483:lib/chibios/os/rt/src/chthreads.c **** 
 484:lib/chibios/os/rt/src/chthreads.c **** /**
 485:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Terminates the current thread.
 486:lib/chibios/os/rt/src/chthreads.c ****  * @details The thread goes in the @p CH_STATE_FINAL state holding the
 487:lib/chibios/os/rt/src/chthreads.c ****  *          specified exit status code, other threads can retrieve the
 488:lib/chibios/os/rt/src/chthreads.c ****  *          exit status code by invoking the function @p chThdWait().
 489:lib/chibios/os/rt/src/chthreads.c ****  * @post    Exiting a non-static thread that does not have references
 490:lib/chibios/os/rt/src/chthreads.c ****  *          (detached) causes the thread to remain in the registry.
 491:lib/chibios/os/rt/src/chthreads.c ****  *          It can only be removed by performing a registry scan operation.
 492:lib/chibios/os/rt/src/chthreads.c ****  * @post    Eventual code after this function will never be executed,
 493:lib/chibios/os/rt/src/chthreads.c ****  *          this function never returns. The compiler has no way to
 494:lib/chibios/os/rt/src/chthreads.c ****  *          know this so do not assume that the compiler would remove
 495:lib/chibios/os/rt/src/chthreads.c ****  *          the dead code.
 496:lib/chibios/os/rt/src/chthreads.c ****  *
 497:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       thread exit code
 498:lib/chibios/os/rt/src/chthreads.c ****  *
 499:lib/chibios/os/rt/src/chthreads.c ****  * @sclass
 500:lib/chibios/os/rt/src/chthreads.c ****  */
 501:lib/chibios/os/rt/src/chthreads.c **** void chThdExitS(msg_t msg) {
 1012              		.loc 1 501 28 is_stmt 1 view -0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 502:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = currp;
 1016              		.loc 1 502 3 view .LVU330
 501:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = currp;
 1017              		.loc 1 501 28 is_stmt 0 view .LVU331
 1018 0000 38B5     		push	{r3, r4, r5, lr}
 1019              		.cfi_def_cfa_offset 16
 1020              		.cfi_offset 3, -16
 1021              		.cfi_offset 4, -12
 1022              		.cfi_offset 5, -8
 1023              		.cfi_offset 14, -4
 1024              		.loc 1 502 13 view .LVU332
 1025 0002 0E4B     		ldr	r3, .L24
 1026 0004 9C69     		ldr	r4, [r3, #24]
 1027              	.LVL56:
 503:lib/chibios/os/rt/src/chthreads.c **** 
 504:lib/chibios/os/rt/src/chthreads.c ****   /* Storing exit message.*/
 505:lib/chibios/os/rt/src/chthreads.c ****   tp->u.exitcode = msg;
 1028              		.loc 1 505 3 is_stmt 1 view .LVU333
 1029              		.loc 1 505 18 is_stmt 0 view .LVU334
 1030 0006 6062     		str	r0, [r4, #36]
 506:lib/chibios/os/rt/src/chthreads.c **** 
 507:lib/chibios/os/rt/src/chthreads.c ****   /* Exit handler hook.*/
 508:lib/chibios/os/rt/src/chthreads.c ****   CH_CFG_THREAD_EXIT_HOOK(tp);
 1031              		.loc 1 508 3 is_stmt 1 view .LVU335
 1032              		.loc 1 508 30 view .LVU336
 509:lib/chibios/os/rt/src/chthreads.c **** 
 510:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_WAITEXIT == TRUE
 511:lib/chibios/os/rt/src/chthreads.c ****   /* Waking up any waiting thread.*/
 512:lib/chibios/os/rt/src/chthreads.c ****   while (ch_list_notempty(&tp->waiting)) {
 1033              		.loc 1 512 3 view .LVU337
 1034              		.loc 1 512 10 is_stmt 0 view .LVU338
 1035 0008 04F12805 		add	r5, r4, #40
 1036              	.LVL57:
 1037              	.L21:
 1038              		.loc 1 512 10 is_stmt 1 view .LVU339
 1039              	.LBB346:
 1040              	.LBI346:
 164:./lib/chibios/os/rt/include/chlists.h **** 
 1041              		.loc 2 164 20 view .LVU340
 1042              	.LBB347:
 166:./lib/chibios/os/rt/include/chlists.h **** }
 1043              		.loc 2 166 3 view .LVU341
 166:./lib/chibios/os/rt/include/chlists.h **** }
 1044              		.loc 2 166 19 is_stmt 0 view .LVU342
 1045 000c A06A     		ldr	r0, [r4, #40]
 1046              	.LVL58:
 166:./lib/chibios/os/rt/include/chlists.h **** }
 1047              		.loc 2 166 19 view .LVU343
 1048              	.LBE347:
 1049              	.LBE346:
 1050              		.loc 1 512 10 view .LVU344
 1051 000e A842     		cmp	r0, r5
 1052 0010 0FD1     		bne	.L22
 513:lib/chibios/os/rt/src/chthreads.c ****     (void) chSchReadyI((thread_t *)ch_list_pop(&tp->waiting));
 514:lib/chibios/os/rt/src/chthreads.c ****   }
 515:lib/chibios/os/rt/src/chthreads.c **** #endif
 516:lib/chibios/os/rt/src/chthreads.c **** 
 517:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 518:lib/chibios/os/rt/src/chthreads.c ****   /* Static threads with no references are immediately removed from the
 519:lib/chibios/os/rt/src/chthreads.c ****      registry because there is no memory to recover.*/
 520:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_DYNAMIC == TRUE
 521:lib/chibios/os/rt/src/chthreads.c ****   if ((tp->refs == (trefs_t)0) &&
 1053              		.loc 1 521 3 is_stmt 1 view .LVU345
 1054              		.loc 1 521 6 is_stmt 0 view .LVU346
 1055 0012 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 1056 0016 3BB9     		cbnz	r3, .L23
 1057              		.loc 1 521 32 discriminator 1 view .LVU347
 1058 0018 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 1059 001c 9B07     		lsls	r3, r3, #30
 522:lib/chibios/os/rt/src/chthreads.c ****       ((tp->flags & CH_FLAG_MODE_MASK) == CH_FLAG_MODE_STATIC)) {
 523:lib/chibios/os/rt/src/chthreads.c ****     REG_REMOVE(tp);
 1060              		.loc 1 523 5 is_stmt 1 discriminator 1 view .LVU348
 1061 001e 02BF     		ittt	eq
 1062 0020 D4E90432 		ldrdeq	r3, r2, [r4, #16]
 1063 0024 1361     		streq	r3, [r2, #16]
 1064              		.loc 1 523 5 discriminator 1 view .LVU349
 1065 0026 5A61     		streq	r2, [r3, #20]
 1066              	.L23:
 1067              		.loc 1 523 19 discriminator 1 view .LVU350
 524:lib/chibios/os/rt/src/chthreads.c ****   }
 525:lib/chibios/os/rt/src/chthreads.c **** #else
 526:lib/chibios/os/rt/src/chthreads.c ****   if (tp->refs == (trefs_t)0) {
 527:lib/chibios/os/rt/src/chthreads.c ****     REG_REMOVE(tp);
 528:lib/chibios/os/rt/src/chthreads.c ****   }
 529:lib/chibios/os/rt/src/chthreads.c **** #endif
 530:lib/chibios/os/rt/src/chthreads.c **** #endif
 531:lib/chibios/os/rt/src/chthreads.c **** 
 532:lib/chibios/os/rt/src/chthreads.c ****   /* Going into final state.*/
 533:lib/chibios/os/rt/src/chthreads.c ****   chSchGoSleepS(CH_STATE_FINAL);
 1068              		.loc 1 533 3 discriminator 1 view .LVU351
 534:lib/chibios/os/rt/src/chthreads.c **** 
 535:lib/chibios/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 536:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(false, "zombies apocalypse");
 537:lib/chibios/os/rt/src/chthreads.c **** }
 1069              		.loc 1 537 1 is_stmt 0 discriminator 1 view .LVU352
 1070 0028 BDE83840 		pop	{r3, r4, r5, lr}
 1071              		.cfi_remember_state
 1072              		.cfi_restore 14
 1073              		.cfi_restore 5
 1074              		.cfi_restore 4
 1075              		.cfi_restore 3
 1076              		.cfi_def_cfa_offset 0
 1077              	.LVL59:
 533:lib/chibios/os/rt/src/chthreads.c **** 
 1078              		.loc 1 533 3 discriminator 1 view .LVU353
 1079 002c 0F20     		movs	r0, #15
 1080 002e FFF7FEBF 		b	chSchGoSleepS
 1081              	.LVL60:
 1082              	.L22:
 1083              		.cfi_restore_state
 513:lib/chibios/os/rt/src/chthreads.c ****   }
 1084              		.loc 1 513 5 is_stmt 1 view .LVU354
 1085              	.LBB348:
 1086              	.LBI348:
 192:./lib/chibios/os/rt/include/chlists.h **** 
 1087              		.loc 2 192 26 view .LVU355
 1088              	.LBB349:
 194:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p->next;
 1089              		.loc 2 194 3 view .LVU356
 195:./lib/chibios/os/rt/include/chlists.h **** 
 1090              		.loc 2 195 3 view .LVU357
 195:./lib/chibios/os/rt/include/chlists.h **** 
 1091              		.loc 2 195 15 is_stmt 0 view .LVU358
 1092 0032 0368     		ldr	r3, [r0]
 195:./lib/chibios/os/rt/include/chlists.h **** 
 1093              		.loc 2 195 12 view .LVU359
 1094 0034 A362     		str	r3, [r4, #40]
 197:./lib/chibios/os/rt/include/chlists.h **** }
 1095              		.loc 2 197 3 is_stmt 1 view .LVU360
 1096              	.LVL61:
 197:./lib/chibios/os/rt/include/chlists.h **** }
 1097              		.loc 2 197 3 is_stmt 0 view .LVU361
 1098              	.LBE349:
 1099              	.LBE348:
 513:lib/chibios/os/rt/src/chthreads.c ****   }
 1100              		.loc 1 513 12 view .LVU362
 1101 0036 FFF7FEFF 		bl	chSchReadyI
 1102              	.LVL62:
 1103 003a E7E7     		b	.L21
 1104              	.L25:
 1105              		.align	2
 1106              	.L24:
 1107 003c 00000000 		.word	ch
 1108              		.cfi_endproc
 1109              	.LFE299:
 1111              		.section	.text.chThdExit,"ax",%progbits
 1112              		.align	1
 1113              		.global	chThdExit
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1118              	chThdExit:
 1119              	.LVL63:
 1120              	.LFB298:
 477:lib/chibios/os/rt/src/chthreads.c **** 
 1121              		.loc 1 477 27 is_stmt 1 view -0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 0, uses_anonymous_args = 0
 1125              		@ link register save eliminated.
 479:lib/chibios/os/rt/src/chthreads.c ****   chThdExitS(msg);
 1126              		.loc 1 479 3 view .LVU364
 1127              	.LBB350:
 1128              	.LBI350:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1129              		.loc 3 355 20 view .LVU365
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1130              		.loc 3 357 3 view .LVU366
 1131              	.LBB351:
 1132              	.LBI351:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1133              		.loc 4 669 27 view .LVU367
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1134              		.loc 4 677 3 view .LVU368
 1135              	.LBB352:
 1136              	.LBI352:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1137              		.loc 5 491 27 view .LVU369
 1138              	.LBB353:
 1139              		.loc 5 493 3 view .LVU370
 1140 0000 2023     		movs	r3, #32
 1141              		.syntax unified
 1142              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1143 0002 83F31188 		MSR basepri, r3
 1144              	@ 0 "" 2
 1145              	.LVL64:
 1146              		.loc 5 493 3 is_stmt 0 view .LVU371
 1147              		.thumb
 1148              		.syntax unified
 1149              	.LBE353:
 1150              	.LBE352:
 1151              	.LBE351:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1152              		.loc 3 358 34 is_stmt 1 view .LVU372
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1153              		.loc 3 359 20 view .LVU373
 1154              	.LBE350:
 480:lib/chibios/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 1155              		.loc 1 480 3 view .LVU374
 1156 0006 FFF7FEBF 		b	chThdExitS
 1157              	.LVL65:
 480:lib/chibios/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 1158              		.loc 1 480 3 is_stmt 0 view .LVU375
 1159              		.cfi_endproc
 1160              	.LFE298:
 1162              		.section	.text.chThdWait,"ax",%progbits
 1163              		.align	1
 1164              		.global	chThdWait
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1169              	chThdWait:
 1170              	.LVL66:
 1171              	.LFB300:
 538:lib/chibios/os/rt/src/chthreads.c **** 
 539:lib/chibios/os/rt/src/chthreads.c **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 540:lib/chibios/os/rt/src/chthreads.c **** /**
 541:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Blocks the execution of the invoking thread until the specified
 542:lib/chibios/os/rt/src/chthreads.c ****  *          thread terminates then the exit code is returned.
 543:lib/chibios/os/rt/src/chthreads.c ****  * @details This function waits for the specified thread to terminate then
 544:lib/chibios/os/rt/src/chthreads.c ****  *          decrements its reference counter, if the counter reaches zero then
 545:lib/chibios/os/rt/src/chthreads.c ****  *          the thread working area is returned to the proper allocator and
 546:lib/chibios/os/rt/src/chthreads.c ****  *          the thread is removed from registry.
 547:lib/chibios/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_WAITEXIT must be enabled in
 548:lib/chibios/os/rt/src/chthreads.c ****  *          order to use this function.
 549:lib/chibios/os/rt/src/chthreads.c ****  * @post    Enabling @p chThdWait() requires 2-4 (depending on the
 550:lib/chibios/os/rt/src/chthreads.c ****  *          architecture) extra bytes in the @p thread_t structure.
 551:lib/chibios/os/rt/src/chthreads.c ****  * @note    If @p CH_CFG_USE_DYNAMIC is not specified this function just waits
 552:lib/chibios/os/rt/src/chthreads.c ****  *          for the thread termination, no memory allocators are involved.
 553:lib/chibios/os/rt/src/chthreads.c ****  *
 554:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 555:lib/chibios/os/rt/src/chthreads.c ****  * @return              The exit code from the terminated thread.
 556:lib/chibios/os/rt/src/chthreads.c ****  *
 557:lib/chibios/os/rt/src/chthreads.c ****  * @api
 558:lib/chibios/os/rt/src/chthreads.c ****  */
 559:lib/chibios/os/rt/src/chthreads.c **** msg_t chThdWait(thread_t *tp) {
 1172              		.loc 1 559 31 is_stmt 1 view -0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 560:lib/chibios/os/rt/src/chthreads.c ****   msg_t msg;
 1176              		.loc 1 560 3 view .LVU377
 561:lib/chibios/os/rt/src/chthreads.c **** 
 562:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck(tp != NULL);
 1177              		.loc 1 562 3 view .LVU378
 1178              		.loc 1 562 3 view .LVU379
 1179              		.loc 1 562 3 view .LVU380
 563:lib/chibios/os/rt/src/chthreads.c **** 
 564:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1180              		.loc 1 564 3 view .LVU381
 1181              	.LBB354:
 1182              	.LBI354:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1183              		.loc 3 355 20 view .LVU382
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1184              		.loc 3 357 3 view .LVU383
 1185              	.LBB355:
 1186              	.LBI355:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1187              		.loc 4 669 27 view .LVU384
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1188              		.loc 4 677 3 view .LVU385
 1189              	.LBB356:
 1190              	.LBI356:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1191              		.loc 5 491 27 view .LVU386
 1192              	.LBB357:
 1193              		.loc 5 493 3 view .LVU387
 1194              	.LBE357:
 1195              	.LBE356:
 1196              	.LBE355:
 1197              	.LBE354:
 559:lib/chibios/os/rt/src/chthreads.c ****   msg_t msg;
 1198              		.loc 1 559 31 is_stmt 0 view .LVU388
 1199 0000 38B5     		push	{r3, r4, r5, lr}
 1200              		.cfi_def_cfa_offset 16
 1201              		.cfi_offset 3, -16
 1202              		.cfi_offset 4, -12
 1203              		.cfi_offset 5, -8
 1204              		.cfi_offset 14, -4
 559:lib/chibios/os/rt/src/chthreads.c ****   msg_t msg;
 1205              		.loc 1 559 31 view .LVU389
 1206 0002 0446     		mov	r4, r0
 1207              	.LBB361:
 1208              	.LBB360:
 1209              	.LBB359:
 1210              	.LBB358:
 1211              		.loc 5 493 3 view .LVU390
 1212 0004 2023     		movs	r3, #32
 1213              		.syntax unified
 1214              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1215 0006 83F31188 		MSR basepri, r3
 1216              	@ 0 "" 2
 1217              	.LVL67:
 1218              		.loc 5 493 3 view .LVU391
 1219              		.thumb
 1220              		.syntax unified
 1221              	.LBE358:
 1222              	.LBE359:
 1223              	.LBE360:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1224              		.loc 3 358 34 is_stmt 1 view .LVU392
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1225              		.loc 3 359 20 view .LVU393
 1226              	.LBE361:
 565:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp != currp, "waiting self");
 1227              		.loc 1 565 3 view .LVU394
 1228              		.loc 1 565 3 view .LVU395
 1229              		.loc 1 565 3 view .LVU396
 566:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 567:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs > (trefs_t)0, "no references");
 1230              		.loc 1 567 3 view .LVU397
 1231              		.loc 1 567 3 view .LVU398
 1232              		.loc 1 567 3 view .LVU399
 568:lib/chibios/os/rt/src/chthreads.c **** #endif
 569:lib/chibios/os/rt/src/chthreads.c **** 
 570:lib/chibios/os/rt/src/chthreads.c ****   if (tp->state != CH_STATE_FINAL) {
 1233              		.loc 1 570 3 view .LVU400
 1234              		.loc 1 570 6 is_stmt 0 view .LVU401
 1235 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1236 000e 0F2B     		cmp	r3, #15
 1237 0010 07D0     		beq	.L28
 571:lib/chibios/os/rt/src/chthreads.c ****     ch_list_push(&currp->hdr.list, &tp->waiting);
 1238              		.loc 1 571 5 is_stmt 1 view .LVU402
 1239              		.loc 1 571 19 is_stmt 0 view .LVU403
 1240 0012 084B     		ldr	r3, .L32
 1241              	.LBB362:
 1242              	.LBB363:
 179:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p;
 1243              		.loc 2 179 15 view .LVU404
 1244 0014 826A     		ldr	r2, [r0, #40]
 1245              	.LBE363:
 1246              	.LBE362:
 1247              		.loc 1 571 19 view .LVU405
 1248 0016 9B69     		ldr	r3, [r3, #24]
 1249              	.LVL68:
 1250              	.LBB365:
 1251              	.LBI362:
 177:./lib/chibios/os/rt/include/chlists.h **** 
 1252              		.loc 2 177 20 is_stmt 1 view .LVU406
 1253              	.LBB364:
 179:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p;
 1254              		.loc 2 179 3 view .LVU407
 179:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p;
 1255              		.loc 2 179 11 is_stmt 0 view .LVU408
 1256 0018 1A60     		str	r2, [r3]
 180:./lib/chibios/os/rt/include/chlists.h **** }
 1257              		.loc 2 180 3 is_stmt 1 view .LVU409
 180:./lib/chibios/os/rt/include/chlists.h **** }
 1258              		.loc 2 180 12 is_stmt 0 view .LVU410
 1259 001a 8362     		str	r3, [r0, #40]
 1260              	.LVL69:
 180:./lib/chibios/os/rt/include/chlists.h **** }
 1261              		.loc 2 180 12 view .LVU411
 1262              	.LBE364:
 1263              	.LBE365:
 572:lib/chibios/os/rt/src/chthreads.c ****     chSchGoSleepS(CH_STATE_WTEXIT);
 1264              		.loc 1 572 5 is_stmt 1 view .LVU412
 1265 001c 0920     		movs	r0, #9
 1266              	.LVL70:
 1267              		.loc 1 572 5 is_stmt 0 view .LVU413
 1268 001e FFF7FEFF 		bl	chSchGoSleepS
 1269              	.LVL71:
 1270              	.L28:
 573:lib/chibios/os/rt/src/chthreads.c ****   }
 574:lib/chibios/os/rt/src/chthreads.c ****   msg = tp->u.exitcode;
 1271              		.loc 1 574 3 is_stmt 1 view .LVU414
 1272              		.loc 1 574 7 is_stmt 0 view .LVU415
 1273 0022 656A     		ldr	r5, [r4, #36]
 1274              	.LVL72:
 575:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1275              		.loc 1 575 3 is_stmt 1 view .LVU416
 1276              	.LBB366:
 1277              	.LBI366:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1278              		.loc 3 367 20 view .LVU417
 1279              	.LBB367:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1280              		.loc 3 369 22 view .LVU418
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1281              		.loc 3 370 33 view .LVU419
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1282              		.loc 3 376 3 view .LVU420
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1283              		.loc 3 376 3 view .LVU421
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1284              		.loc 3 376 3 view .LVU422
 1285              		.loc 3 380 3 view .LVU423
 1286              	.LBB368:
 1287              	.LBI368:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1288              		.loc 4 693 27 view .LVU424
 1289              		.loc 4 696 3 view .LVU425
 1290              	.LBB369:
 1291              	.LBI369:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1292              		.loc 5 491 27 view .LVU426
 1293              	.LBB370:
 1294              		.loc 5 493 3 view .LVU427
 1295 0024 0023     		movs	r3, #0
 1296              		.syntax unified
 1297              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1298 0026 83F31188 		MSR basepri, r3
 1299              	@ 0 "" 2
 1300              	.LVL73:
 1301              		.loc 5 493 3 is_stmt 0 view .LVU428
 1302              		.thumb
 1303              		.syntax unified
 1304              	.LBE370:
 1305              	.LBE369:
 1306              	.LBE368:
 1307              	.LBE367:
 1308              	.LBE366:
 576:lib/chibios/os/rt/src/chthreads.c **** 
 577:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 578:lib/chibios/os/rt/src/chthreads.c ****   /* Releasing a reference to the thread.*/
 579:lib/chibios/os/rt/src/chthreads.c ****   chThdRelease(tp);
 1309              		.loc 1 579 3 is_stmt 1 view .LVU429
 1310 002a 2046     		mov	r0, r4
 1311 002c FFF7FEFF 		bl	chThdRelease
 1312              	.LVL74:
 580:lib/chibios/os/rt/src/chthreads.c **** #endif
 581:lib/chibios/os/rt/src/chthreads.c **** 
 582:lib/chibios/os/rt/src/chthreads.c ****   return msg;
 1313              		.loc 1 582 3 view .LVU430
 583:lib/chibios/os/rt/src/chthreads.c **** }
 1314              		.loc 1 583 1 is_stmt 0 view .LVU431
 1315 0030 2846     		mov	r0, r5
 1316 0032 38BD     		pop	{r3, r4, r5, pc}
 1317              	.LVL75:
 1318              	.L33:
 1319              		.loc 1 583 1 view .LVU432
 1320              		.align	2
 1321              	.L32:
 1322 0034 00000000 		.word	ch
 1323              		.cfi_endproc
 1324              	.LFE300:
 1326              		.section	.text.chThdSetPriority,"ax",%progbits
 1327              		.align	1
 1328              		.global	chThdSetPriority
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1333              	chThdSetPriority:
 1334              	.LVL76:
 1335              	.LFB301:
 584:lib/chibios/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_WAITEXIT */
 585:lib/chibios/os/rt/src/chthreads.c **** 
 586:lib/chibios/os/rt/src/chthreads.c **** /**
 587:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Changes the running thread priority level then reschedules if
 588:lib/chibios/os/rt/src/chthreads.c ****  *          necessary.
 589:lib/chibios/os/rt/src/chthreads.c ****  * @note    The function returns the real thread priority regardless of the
 590:lib/chibios/os/rt/src/chthreads.c ****  *          current priority that could be higher than the real priority
 591:lib/chibios/os/rt/src/chthreads.c ****  *          because the priority inheritance mechanism.
 592:lib/chibios/os/rt/src/chthreads.c ****  *
 593:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] newprio   the new priority level of the running thread
 594:lib/chibios/os/rt/src/chthreads.c ****  * @return              The old priority level.
 595:lib/chibios/os/rt/src/chthreads.c ****  *
 596:lib/chibios/os/rt/src/chthreads.c ****  * @api
 597:lib/chibios/os/rt/src/chthreads.c ****  */
 598:lib/chibios/os/rt/src/chthreads.c **** tprio_t chThdSetPriority(tprio_t newprio) {
 1336              		.loc 1 598 43 is_stmt 1 view -0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 599:lib/chibios/os/rt/src/chthreads.c ****   tprio_t oldprio;
 1340              		.loc 1 599 3 view .LVU434
 600:lib/chibios/os/rt/src/chthreads.c **** 
 601:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck(newprio <= HIGHPRIO);
 1341              		.loc 1 601 3 view .LVU435
 1342              		.loc 1 601 3 view .LVU436
 1343              		.loc 1 601 3 view .LVU437
 602:lib/chibios/os/rt/src/chthreads.c **** 
 603:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1344              		.loc 1 603 3 view .LVU438
 1345              	.LBB371:
 1346              	.LBI371:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1347              		.loc 3 355 20 view .LVU439
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1348              		.loc 3 357 3 view .LVU440
 1349              	.LBB372:
 1350              	.LBI372:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1351              		.loc 4 669 27 view .LVU441
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1352              		.loc 4 677 3 view .LVU442
 1353              	.LBB373:
 1354              	.LBI373:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1355              		.loc 5 491 27 view .LVU443
 1356              	.LBB374:
 1357              		.loc 5 493 3 view .LVU444
 1358              	.LBE374:
 1359              	.LBE373:
 1360              	.LBE372:
 1361              	.LBE371:
 598:lib/chibios/os/rt/src/chthreads.c ****   tprio_t oldprio;
 1362              		.loc 1 598 43 is_stmt 0 view .LVU445
 1363 0000 10B5     		push	{r4, lr}
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 4, -8
 1366              		.cfi_offset 14, -4
 1367              	.LBB378:
 1368              	.LBB377:
 1369              	.LBB376:
 1370              	.LBB375:
 1371              		.loc 5 493 3 view .LVU446
 1372 0002 2022     		movs	r2, #32
 1373              		.syntax unified
 1374              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1375 0004 82F31188 		MSR basepri, r2
 1376              	@ 0 "" 2
 1377              	.LVL77:
 1378              		.loc 5 493 3 view .LVU447
 1379              		.thumb
 1380              		.syntax unified
 1381              	.LBE375:
 1382              	.LBE376:
 1383              	.LBE377:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1384              		.loc 3 358 34 is_stmt 1 view .LVU448
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1385              		.loc 3 359 20 view .LVU449
 1386              	.LBE378:
 604:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_MUTEXES == TRUE
 605:lib/chibios/os/rt/src/chthreads.c ****   oldprio = currp->realprio;
 1387              		.loc 1 605 3 view .LVU450
 1388              		.loc 1 605 13 is_stmt 0 view .LVU451
 1389 0008 084A     		ldr	r2, .L37
 1390 000a 9269     		ldr	r2, [r2, #24]
 1391              		.loc 1 605 11 view .LVU452
 1392 000c D46B     		ldr	r4, [r2, #60]
 1393              	.LVL78:
 606:lib/chibios/os/rt/src/chthreads.c ****   if ((currp->hdr.pqueue.prio == currp->realprio) ||
 1394              		.loc 1 606 3 is_stmt 1 view .LVU453
 1395              		.loc 1 606 25 is_stmt 0 view .LVU454
 1396 000e 9168     		ldr	r1, [r2, #8]
 1397              		.loc 1 606 6 view .LVU455
 1398 0010 A142     		cmp	r1, r4
 1399 0012 01D0     		beq	.L35
 1400              		.loc 1 606 51 discriminator 1 view .LVU456
 1401 0014 8142     		cmp	r1, r0
 1402 0016 00D2     		bcs	.L36
 1403              	.L35:
 607:lib/chibios/os/rt/src/chthreads.c ****       (newprio > currp->hdr.pqueue.prio)) {
 608:lib/chibios/os/rt/src/chthreads.c ****     currp->hdr.pqueue.prio = newprio;
 1404              		.loc 1 608 5 is_stmt 1 view .LVU457
 1405              		.loc 1 608 28 is_stmt 0 view .LVU458
 1406 0018 9060     		str	r0, [r2, #8]
 1407              	.L36:
 609:lib/chibios/os/rt/src/chthreads.c ****   }
 610:lib/chibios/os/rt/src/chthreads.c ****   currp->realprio = newprio;
 1408              		.loc 1 610 3 is_stmt 1 view .LVU459
 1409              		.loc 1 610 19 is_stmt 0 view .LVU460
 1410 001a D063     		str	r0, [r2, #60]
 611:lib/chibios/os/rt/src/chthreads.c **** #else
 612:lib/chibios/os/rt/src/chthreads.c ****   oldprio = currp->hdr.pqueue.prio;
 613:lib/chibios/os/rt/src/chthreads.c ****   currp->hdr.pqueue.prio = newprio;
 614:lib/chibios/os/rt/src/chthreads.c **** #endif
 615:lib/chibios/os/rt/src/chthreads.c ****   chSchRescheduleS();
 1411              		.loc 1 615 3 is_stmt 1 view .LVU461
 1412 001c FFF7FEFF 		bl	chSchRescheduleS
 1413              	.LVL79:
 616:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1414              		.loc 1 616 3 view .LVU462
 1415              	.LBB379:
 1416              	.LBI379:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1417              		.loc 3 367 20 view .LVU463
 1418              	.LBB380:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1419              		.loc 3 369 22 view .LVU464
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1420              		.loc 3 370 33 view .LVU465
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1421              		.loc 3 376 3 view .LVU466
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1422              		.loc 3 376 3 view .LVU467
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1423              		.loc 3 376 3 view .LVU468
 1424              		.loc 3 380 3 view .LVU469
 1425              	.LBB381:
 1426              	.LBI381:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1427              		.loc 4 693 27 view .LVU470
 1428              		.loc 4 696 3 view .LVU471
 1429              	.LBB382:
 1430              	.LBI382:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1431              		.loc 5 491 27 view .LVU472
 1432              	.LBB383:
 1433              		.loc 5 493 3 view .LVU473
 1434 0020 0023     		movs	r3, #0
 1435              		.syntax unified
 1436              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1437 0022 83F31188 		MSR basepri, r3
 1438              	@ 0 "" 2
 1439              	.LVL80:
 1440              		.loc 5 493 3 is_stmt 0 view .LVU474
 1441              		.thumb
 1442              		.syntax unified
 1443              	.LBE383:
 1444              	.LBE382:
 1445              	.LBE381:
 1446              	.LBE380:
 1447              	.LBE379:
 617:lib/chibios/os/rt/src/chthreads.c **** 
 618:lib/chibios/os/rt/src/chthreads.c ****   return oldprio;
 1448              		.loc 1 618 3 is_stmt 1 view .LVU475
 619:lib/chibios/os/rt/src/chthreads.c **** }
 1449              		.loc 1 619 1 is_stmt 0 view .LVU476
 1450 0026 2046     		mov	r0, r4
 1451 0028 10BD     		pop	{r4, pc}
 1452              	.LVL81:
 1453              	.L38:
 1454              		.loc 1 619 1 view .LVU477
 1455 002a 00BF     		.align	2
 1456              	.L37:
 1457 002c 00000000 		.word	ch
 1458              		.cfi_endproc
 1459              	.LFE301:
 1461              		.section	.text.chThdTerminate,"ax",%progbits
 1462              		.align	1
 1463              		.global	chThdTerminate
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1468              	chThdTerminate:
 1469              	.LVL82:
 1470              	.LFB302:
 620:lib/chibios/os/rt/src/chthreads.c **** 
 621:lib/chibios/os/rt/src/chthreads.c **** /**
 622:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Requests a thread termination.
 623:lib/chibios/os/rt/src/chthreads.c ****  * @pre     The target thread must be written to invoke periodically
 624:lib/chibios/os/rt/src/chthreads.c ****  *          @p chThdShouldTerminate() and terminate cleanly if it returns
 625:lib/chibios/os/rt/src/chthreads.c ****  *          @p true.
 626:lib/chibios/os/rt/src/chthreads.c ****  * @post    The specified thread will terminate after detecting the termination
 627:lib/chibios/os/rt/src/chthreads.c ****  *          condition.
 628:lib/chibios/os/rt/src/chthreads.c ****  *
 629:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 630:lib/chibios/os/rt/src/chthreads.c ****  *
 631:lib/chibios/os/rt/src/chthreads.c ****  * @api
 632:lib/chibios/os/rt/src/chthreads.c ****  */
 633:lib/chibios/os/rt/src/chthreads.c **** void chThdTerminate(thread_t *tp) {
 1471              		.loc 1 633 35 is_stmt 1 view -0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 634:lib/chibios/os/rt/src/chthreads.c **** 
 635:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1476              		.loc 1 635 3 view .LVU479
 1477              	.LBB384:
 1478              	.LBI384:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1479              		.loc 3 355 20 view .LVU480
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1480              		.loc 3 357 3 view .LVU481
 1481              	.LBB385:
 1482              	.LBI385:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1483              		.loc 4 669 27 view .LVU482
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1484              		.loc 4 677 3 view .LVU483
 1485              	.LBB386:
 1486              	.LBI386:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1487              		.loc 5 491 27 view .LVU484
 1488              	.LBB387:
 1489              		.loc 5 493 3 view .LVU485
 1490 0000 2023     		movs	r3, #32
 1491              		.syntax unified
 1492              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1493 0002 83F31188 		MSR basepri, r3
 1494              	@ 0 "" 2
 1495              	.LVL83:
 1496              		.loc 5 493 3 is_stmt 0 view .LVU486
 1497              		.thumb
 1498              		.syntax unified
 1499              	.LBE387:
 1500              	.LBE386:
 1501              	.LBE385:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1502              		.loc 3 358 34 is_stmt 1 view .LVU487
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1503              		.loc 3 359 20 view .LVU488
 1504              	.LBE384:
 636:lib/chibios/os/rt/src/chthreads.c ****   tp->flags |= CH_FLAG_TERMINATE;
 1505              		.loc 1 636 3 view .LVU489
 1506              		.loc 1 636 13 is_stmt 0 view .LVU490
 1507 0006 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 1508 000a 43F00403 		orr	r3, r3, #4
 1509 000e 80F82130 		strb	r3, [r0, #33]
 637:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1510              		.loc 1 637 3 is_stmt 1 view .LVU491
 1511              	.LBB388:
 1512              	.LBI388:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1513              		.loc 3 367 20 view .LVU492
 1514              	.LBB389:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1515              		.loc 3 369 22 view .LVU493
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1516              		.loc 3 370 33 view .LVU494
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1517              		.loc 3 376 3 view .LVU495
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1518              		.loc 3 376 3 view .LVU496
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1519              		.loc 3 376 3 view .LVU497
 1520              		.loc 3 380 3 view .LVU498
 1521              	.LBB390:
 1522              	.LBI390:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1523              		.loc 4 693 27 view .LVU499
 1524              		.loc 4 696 3 view .LVU500
 1525              	.LVL84:
 1526              	.LBB391:
 1527              	.LBI391:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1528              		.loc 5 491 27 view .LVU501
 1529              	.LBB392:
 1530              		.loc 5 493 3 view .LVU502
 1531 0012 0023     		movs	r3, #0
 1532              		.syntax unified
 1533              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1534 0014 83F31188 		MSR basepri, r3
 1535              	@ 0 "" 2
 1536              	.LVL85:
 1537              		.loc 5 493 3 is_stmt 0 view .LVU503
 1538              		.thumb
 1539              		.syntax unified
 1540              	.LBE392:
 1541              	.LBE391:
 1542              	.LBE390:
 1543              	.LBE389:
 1544              	.LBE388:
 638:lib/chibios/os/rt/src/chthreads.c **** }
 1545              		.loc 1 638 1 view .LVU504
 1546 0018 7047     		bx	lr
 1547              		.cfi_endproc
 1548              	.LFE302:
 1550              		.section	.text.chThdSleep,"ax",%progbits
 1551              		.align	1
 1552              		.global	chThdSleep
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1557              	chThdSleep:
 1558              	.LVL86:
 1559              	.LFB303:
 639:lib/chibios/os/rt/src/chthreads.c **** 
 640:lib/chibios/os/rt/src/chthreads.c **** /**
 641:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread for the specified time.
 642:lib/chibios/os/rt/src/chthreads.c ****  *
 643:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] time      the delay in system ticks, the special values are
 644:lib/chibios/os/rt/src/chthreads.c ****  *                      handled as follow:
 645:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 646:lib/chibios/os/rt/src/chthreads.c ****  *                        state.
 647:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 648:lib/chibios/os/rt/src/chthreads.c ****  *                      .
 649:lib/chibios/os/rt/src/chthreads.c ****  *
 650:lib/chibios/os/rt/src/chthreads.c ****  * @api
 651:lib/chibios/os/rt/src/chthreads.c ****  */
 652:lib/chibios/os/rt/src/chthreads.c **** void chThdSleep(sysinterval_t time) {
 1560              		.loc 1 652 37 is_stmt 1 view -0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 0
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 653:lib/chibios/os/rt/src/chthreads.c **** 
 654:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1564              		.loc 1 654 3 view .LVU506
 1565              	.LBB404:
 1566              	.LBI404:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1567              		.loc 3 355 20 view .LVU507
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1568              		.loc 3 357 3 view .LVU508
 1569              	.LBB405:
 1570              	.LBI405:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1571              		.loc 4 669 27 view .LVU509
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1572              		.loc 4 677 3 view .LVU510
 1573              	.LBB406:
 1574              	.LBI406:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1575              		.loc 5 491 27 view .LVU511
 1576              	.LBB407:
 1577              		.loc 5 493 3 view .LVU512
 1578              	.LBE407:
 1579              	.LBE406:
 1580              	.LBE405:
 1581              	.LBE404:
 652:lib/chibios/os/rt/src/chthreads.c **** 
 1582              		.loc 1 652 37 is_stmt 0 view .LVU513
 1583 0000 08B5     		push	{r3, lr}
 1584              		.cfi_def_cfa_offset 8
 1585              		.cfi_offset 3, -8
 1586              		.cfi_offset 14, -4
 652:lib/chibios/os/rt/src/chthreads.c **** 
 1587              		.loc 1 652 37 view .LVU514
 1588 0002 0146     		mov	r1, r0
 1589              	.LBB411:
 1590              	.LBB410:
 1591              	.LBB409:
 1592              	.LBB408:
 1593              		.loc 5 493 3 view .LVU515
 1594 0004 2023     		movs	r3, #32
 1595              		.syntax unified
 1596              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1597 0006 83F31188 		MSR basepri, r3
 1598              	@ 0 "" 2
 1599              	.LVL87:
 1600              		.loc 5 493 3 view .LVU516
 1601              		.thumb
 1602              		.syntax unified
 1603              	.LBE408:
 1604              	.LBE409:
 1605              	.LBE410:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1606              		.loc 3 358 34 is_stmt 1 view .LVU517
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1607              		.loc 3 359 20 view .LVU518
 1608              	.LBE411:
 655:lib/chibios/os/rt/src/chthreads.c ****   chThdSleepS(time);
 1609              		.loc 1 655 3 view .LVU519
 1610              	.LBB412:
 1611              	.LBI412:
 323:./lib/chibios/os/rt/include/chthreads.h **** }
 324:./lib/chibios/os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 325:./lib/chibios/os/rt/include/chthreads.h **** 
 326:./lib/chibios/os/rt/include/chthreads.h **** /**
 327:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 328:./lib/chibios/os/rt/include/chthreads.h ****  *
 329:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 330:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 331:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 332:./lib/chibios/os/rt/include/chthreads.h ****  *
 333:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 334:./lib/chibios/os/rt/include/chthreads.h ****  */
 335:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 336:./lib/chibios/os/rt/include/chthreads.h **** 
 337:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 338:./lib/chibios/os/rt/include/chthreads.h **** }
 339:./lib/chibios/os/rt/include/chthreads.h **** 
 340:./lib/chibios/os/rt/include/chthreads.h **** /**
 341:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 342:./lib/chibios/os/rt/include/chthreads.h ****  *
 343:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 344:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 345:./lib/chibios/os/rt/include/chthreads.h ****  *
 346:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 347:./lib/chibios/os/rt/include/chthreads.h ****  */
 348:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 349:./lib/chibios/os/rt/include/chthreads.h **** 
 350:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 351:./lib/chibios/os/rt/include/chthreads.h **** }
 352:./lib/chibios/os/rt/include/chthreads.h **** 
 353:./lib/chibios/os/rt/include/chthreads.h **** /**
 354:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 355:./lib/chibios/os/rt/include/chthreads.h ****  *
 356:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 357:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 358:./lib/chibios/os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 359:./lib/chibios/os/rt/include/chthreads.h ****  *
 360:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 361:./lib/chibios/os/rt/include/chthreads.h ****  */
 362:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 363:./lib/chibios/os/rt/include/chthreads.h **** 
 364:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 365:./lib/chibios/os/rt/include/chthreads.h **** 
 366:./lib/chibios/os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 367:./lib/chibios/os/rt/include/chthreads.h **** }
 368:./lib/chibios/os/rt/include/chthreads.h **** 
 369:./lib/chibios/os/rt/include/chthreads.h **** /**
 370:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 371:./lib/chibios/os/rt/include/chthreads.h ****  *
 372:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 373:./lib/chibios/os/rt/include/chthreads.h ****  *                      handled as follow:
 374:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 375:./lib/chibios/os/rt/include/chthreads.h ****  *                        state.
 376:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 377:./lib/chibios/os/rt/include/chthreads.h ****  *                      .
 378:./lib/chibios/os/rt/include/chthreads.h ****  *
 379:./lib/chibios/os/rt/include/chthreads.h ****  * @sclass
 380:./lib/chibios/os/rt/include/chthreads.h ****  */
 381:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 1612              		.loc 6 381 20 view .LVU520
 1613              	.LBB413:
 382:./lib/chibios/os/rt/include/chthreads.h **** 
 383:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 1614              		.loc 6 383 3 view .LVU521
 1615              		.loc 6 383 3 view .LVU522
 1616              		.loc 6 383 3 view .LVU523
 384:./lib/chibios/os/rt/include/chthreads.h **** 
 385:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 1617              		.loc 6 385 3 view .LVU524
 1618              		.loc 6 385 10 is_stmt 0 view .LVU525
 1619 000a 0820     		movs	r0, #8
 1620              	.LVL88:
 1621              		.loc 6 385 10 view .LVU526
 1622 000c FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1623              	.LVL89:
 1624              		.loc 6 385 10 view .LVU527
 1625              	.LBE413:
 1626              	.LBE412:
 656:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1627              		.loc 1 656 3 is_stmt 1 view .LVU528
 1628              	.LBB414:
 1629              	.LBI414:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1630              		.loc 3 367 20 view .LVU529
 1631              	.LBB415:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1632              		.loc 3 369 22 view .LVU530
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1633              		.loc 3 370 33 view .LVU531
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1634              		.loc 3 376 3 view .LVU532
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1635              		.loc 3 376 3 view .LVU533
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1636              		.loc 3 376 3 view .LVU534
 1637              		.loc 3 380 3 view .LVU535
 1638              	.LBB416:
 1639              	.LBI416:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1640              		.loc 4 693 27 view .LVU536
 1641              		.loc 4 696 3 view .LVU537
 1642              	.LBB417:
 1643              	.LBI417:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1644              		.loc 5 491 27 view .LVU538
 1645              	.LBB418:
 1646              		.loc 5 493 3 view .LVU539
 1647 0010 0023     		movs	r3, #0
 1648              		.syntax unified
 1649              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1650 0012 83F31188 		MSR basepri, r3
 1651              	@ 0 "" 2
 1652              	.LVL90:
 1653              		.loc 5 493 3 is_stmt 0 view .LVU540
 1654              		.thumb
 1655              		.syntax unified
 1656              	.LBE418:
 1657              	.LBE417:
 1658              	.LBE416:
 1659              	.LBE415:
 1660              	.LBE414:
 657:lib/chibios/os/rt/src/chthreads.c **** }
 1661              		.loc 1 657 1 view .LVU541
 1662 0016 08BD     		pop	{r3, pc}
 1663              		.cfi_endproc
 1664              	.LFE303:
 1666              		.section	.text.chThdSleepUntil,"ax",%progbits
 1667              		.align	1
 1668              		.global	chThdSleepUntil
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1673              	chThdSleepUntil:
 1674              	.LVL91:
 1675              	.LFB304:
 658:lib/chibios/os/rt/src/chthreads.c **** 
 659:lib/chibios/os/rt/src/chthreads.c **** /**
 660:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread until the system time arrives to the
 661:lib/chibios/os/rt/src/chthreads.c ****  *          specified value.
 662:lib/chibios/os/rt/src/chthreads.c ****  * @note    The function has no concept of "past", all specifiable times
 663:lib/chibios/os/rt/src/chthreads.c ****  *          are in the future, this means that if you call this function
 664:lib/chibios/os/rt/src/chthreads.c ****  *          exceeding your calculated intervals then the function will
 665:lib/chibios/os/rt/src/chthreads.c ****  *          return in a far future time, not immediately.
 666:lib/chibios/os/rt/src/chthreads.c ****  * @see     chThdSleepUntilWindowed()
 667:lib/chibios/os/rt/src/chthreads.c ****  *
 668:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] time      absolute system time
 669:lib/chibios/os/rt/src/chthreads.c ****  *
 670:lib/chibios/os/rt/src/chthreads.c ****  * @api
 671:lib/chibios/os/rt/src/chthreads.c ****  */
 672:lib/chibios/os/rt/src/chthreads.c **** void chThdSleepUntil(systime_t time) {
 1676              		.loc 1 672 38 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 673:lib/chibios/os/rt/src/chthreads.c ****   sysinterval_t interval;
 1680              		.loc 1 673 3 view .LVU543
 674:lib/chibios/os/rt/src/chthreads.c **** 
 675:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1681              		.loc 1 675 3 view .LVU544
 1682              	.LBB435:
 1683              	.LBI435:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1684              		.loc 3 355 20 view .LVU545
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1685              		.loc 3 357 3 view .LVU546
 1686              	.LBB436:
 1687              	.LBI436:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1688              		.loc 4 669 27 view .LVU547
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1689              		.loc 4 677 3 view .LVU548
 1690              	.LBB437:
 1691              	.LBI437:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1692              		.loc 5 491 27 view .LVU549
 1693              	.LBB438:
 1694              		.loc 5 493 3 view .LVU550
 1695              	.LBE438:
 1696              	.LBE437:
 1697              	.LBE436:
 1698              	.LBE435:
 672:lib/chibios/os/rt/src/chthreads.c ****   sysinterval_t interval;
 1699              		.loc 1 672 38 is_stmt 0 view .LVU551
 1700 0000 10B5     		push	{r4, lr}
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 4, -8
 1703              		.cfi_offset 14, -4
 1704              	.LBB445:
 1705              	.LBB443:
 1706              	.LBB441:
 1707              	.LBB439:
 1708              		.loc 5 493 3 view .LVU552
 1709 0002 2023     		movs	r3, #32
 1710              	.LBE439:
 1711              	.LBE441:
 1712              	.LBE443:
 1713              	.LBE445:
 672:lib/chibios/os/rt/src/chthreads.c ****   sysinterval_t interval;
 1714              		.loc 1 672 38 view .LVU553
 1715 0004 0446     		mov	r4, r0
 1716              	.LBB446:
 1717              	.LBB444:
 1718              	.LBB442:
 1719              	.LBB440:
 1720              		.loc 5 493 3 view .LVU554
 1721              		.syntax unified
 1722              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1723 0006 83F31188 		MSR basepri, r3
 1724              	@ 0 "" 2
 1725              	.LVL92:
 1726              		.loc 5 493 3 view .LVU555
 1727              		.thumb
 1728              		.syntax unified
 1729              	.LBE440:
 1730              	.LBE442:
 1731              	.LBE444:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1732              		.loc 3 358 34 is_stmt 1 view .LVU556
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1733              		.loc 3 359 20 view .LVU557
 1734              	.LBE446:
 676:lib/chibios/os/rt/src/chthreads.c ****   interval = chTimeDiffX(chVTGetSystemTimeX(), time);
 1735              		.loc 1 676 3 view .LVU558
 1736              	.LBB447:
 1737              	.LBI447:
 1738              		.file 7 "./lib/chibios/os/rt/include/chvt.h"
   1:./lib/chibios/os/rt/include/chvt.h **** /*
   2:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chvt.h **** 
   4:./lib/chibios/os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chvt.h **** 
   6:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chvt.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chvt.h **** 
  11:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chvt.h **** 
  16:./lib/chibios/os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chvt.h **** */
  19:./lib/chibios/os/rt/include/chvt.h **** 
  20:./lib/chibios/os/rt/include/chvt.h **** /**
  21:./lib/chibios/os/rt/include/chvt.h ****  * @file    rt/include/chvt.h
  22:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:./lib/chibios/os/rt/include/chvt.h ****  *
  24:./lib/chibios/os/rt/include/chvt.h ****  * @addtogroup time
  25:./lib/chibios/os/rt/include/chvt.h ****  * @{
  26:./lib/chibios/os/rt/include/chvt.h ****  */
  27:./lib/chibios/os/rt/include/chvt.h **** 
  28:./lib/chibios/os/rt/include/chvt.h **** #ifndef CHVT_H
  29:./lib/chibios/os/rt/include/chvt.h **** #define CHVT_H
  30:./lib/chibios/os/rt/include/chvt.h **** 
  31:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chvt.h **** 
  35:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chvt.h **** 
  39:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chvt.h **** 
  43:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  44:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  45:./lib/chibios/os/rt/include/chvt.h ****        "be zero or greater than one"
  46:./lib/chibios/os/rt/include/chvt.h **** #endif
  47:./lib/chibios/os/rt/include/chvt.h **** 
  48:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  49:./lib/chibios/os/rt/include/chvt.h **** #error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  50:./lib/chibios/os/rt/include/chvt.h **** #endif
  51:./lib/chibios/os/rt/include/chvt.h **** 
  52:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  53:./lib/chibios/os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  54:./lib/chibios/os/rt/include/chvt.h **** #endif
  55:./lib/chibios/os/rt/include/chvt.h **** 
  56:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  57:./lib/chibios/os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  58:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  59:./lib/chibios/os/rt/include/chvt.h **** 
  60:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  61:./lib/chibios/os/rt/include/chvt.h **** /* Module macros.                                                            */
  62:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  63:./lib/chibios/os/rt/include/chvt.h **** 
  64:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  65:./lib/chibios/os/rt/include/chvt.h **** /* External declarations.                                                    */
  66:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  67:./lib/chibios/os/rt/include/chvt.h **** 
  68:./lib/chibios/os/rt/include/chvt.h **** /*
  69:./lib/chibios/os/rt/include/chvt.h ****  * Virtual Timers APIs.
  70:./lib/chibios/os/rt/include/chvt.h ****  */
  71:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  72:./lib/chibios/os/rt/include/chvt.h **** extern "C" {
  73:./lib/chibios/os/rt/include/chvt.h **** #endif
  74:./lib/chibios/os/rt/include/chvt.h ****   void _vt_init(void);
  75:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
  76:./lib/chibios/os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
  77:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
  78:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoTickI(void);
  79:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  80:./lib/chibios/os/rt/include/chvt.h **** }
  81:./lib/chibios/os/rt/include/chvt.h **** #endif
  82:./lib/chibios/os/rt/include/chvt.h **** 
  83:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  84:./lib/chibios/os/rt/include/chvt.h **** /* Module inline functions.                                                  */
  85:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chvt.h **** 
  87:./lib/chibios/os/rt/include/chvt.h **** /**
  88:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
  89:./lib/chibios/os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
  90:./lib/chibios/os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
  91:./lib/chibios/os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
  92:./lib/chibios/os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
  93:./lib/chibios/os/rt/include/chvt.h ****  *
  94:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
  95:./lib/chibios/os/rt/include/chvt.h ****  *
  96:./lib/chibios/os/rt/include/chvt.h ****  * @init
  97:./lib/chibios/os/rt/include/chvt.h ****  */
  98:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
  99:./lib/chibios/os/rt/include/chvt.h **** 
 100:./lib/chibios/os/rt/include/chvt.h ****   vtp->func = NULL;
 101:./lib/chibios/os/rt/include/chvt.h **** }
 102:./lib/chibios/os/rt/include/chvt.h **** 
 103:./lib/chibios/os/rt/include/chvt.h **** /**
 104:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 105:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 106:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 107:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 108:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 109:./lib/chibios/os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 110:./lib/chibios/os/rt/include/chvt.h ****  *          @p systime_t size.
 111:./lib/chibios/os/rt/include/chvt.h ****  *
 112:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 113:./lib/chibios/os/rt/include/chvt.h ****  *
 114:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 115:./lib/chibios/os/rt/include/chvt.h ****  */
 116:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 1739              		.loc 7 116 25 view .LVU559
 117:./lib/chibios/os/rt/include/chvt.h **** 
 118:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 119:./lib/chibios/os/rt/include/chvt.h ****   return ch.vtlist.systime;
 120:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 121:./lib/chibios/os/rt/include/chvt.h ****   return port_timer_get_time();
 1740              		.loc 7 121 3 view .LVU560
 1741              	.LBB448:
 1742              	.LBI448:
 1743              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @file    chcore_timer.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   System timer header file.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @addtogroup ARMCMx_TIMER
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifndef CHCORE_TIMER_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #define CHCORE_TIMER_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module data structures and types.                                         */
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module macros.                                                            */
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* External declarations.                                                    */
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifdef __cplusplus
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** extern "C" {
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #endif
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   void stStartAlarm(systime_t time);
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   void stStopAlarm(void);
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   void stSetAlarm(systime_t time);
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   systime_t stGetCounter(void);
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   systime_t stGetAlarm(void);
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifdef __cplusplus
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #endif
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module inline functions.                                                  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Starts the alarm.
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @note    Makes sure that no spurious alarms are triggered after
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *          this call.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the first alarm
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_start_alarm(systime_t time) {
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStartAlarm(time);
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Stops the alarm interrupt.
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_stop_alarm(void) {
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStopAlarm();
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Sets the alarm time.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the next alarm
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_set_alarm(systime_t time) {
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stSetAlarm(time);
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Returns the system time.
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @return              The system time.
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline systime_t port_timer_get_time(void) {
 1744              		.loc 8 114 25 view .LVU561
 1745              	.LBB449:
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   return stGetCounter();
 1746              		.loc 8 116 3 view .LVU562
 1747              		.loc 8 116 10 is_stmt 0 view .LVU563
 1748 000a FFF7FEFF 		bl	stGetCounter
 1749              	.LVL93:
 1750              		.loc 8 116 10 view .LVU564
 1751              	.LBE449:
 1752              	.LBE448:
 1753              	.LBE447:
 1754              	.LBB450:
 1755              	.LBI450:
 1756              		.file 9 "./lib/chibios/os/rt/include/chtime.h"
   1:./lib/chibios/os/rt/include/chtime.h **** /*
   2:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chtime.h **** 
   4:./lib/chibios/os/rt/include/chtime.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chtime.h **** 
   6:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chtime.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chtime.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chtime.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chtime.h **** 
  11:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chtime.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chtime.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chtime.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chtime.h **** 
  16:./lib/chibios/os/rt/include/chtime.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chtime.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chtime.h **** */
  19:./lib/chibios/os/rt/include/chtime.h **** 
  20:./lib/chibios/os/rt/include/chtime.h **** /**
  21:./lib/chibios/os/rt/include/chtime.h ****  * @file    rt/include/chtime.h
  22:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time and intervals macros and structures.
  23:./lib/chibios/os/rt/include/chtime.h ****  *
  24:./lib/chibios/os/rt/include/chtime.h ****  * @addtogroup time_intervals
  25:./lib/chibios/os/rt/include/chtime.h ****  * @details This module is responsible for handling of system time and time
  26:./lib/chibios/os/rt/include/chtime.h ****  *          intervals.
  27:./lib/chibios/os/rt/include/chtime.h ****  * @{
  28:./lib/chibios/os/rt/include/chtime.h ****  */
  29:./lib/chibios/os/rt/include/chtime.h **** 
  30:./lib/chibios/os/rt/include/chtime.h **** #ifndef CHTIME_H
  31:./lib/chibios/os/rt/include/chtime.h **** #define CHTIME_H
  32:./lib/chibios/os/rt/include/chtime.h **** 
  33:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chtime.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chtime.h **** 
  37:./lib/chibios/os/rt/include/chtime.h **** /**
  38:./lib/chibios/os/rt/include/chtime.h ****  * @name    Special time constants
  39:./lib/chibios/os/rt/include/chtime.h ****  * @{
  40:./lib/chibios/os/rt/include/chtime.h ****  */
  41:./lib/chibios/os/rt/include/chtime.h **** /**
  42:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Zero interval specification for some functions with a timeout
  43:./lib/chibios/os/rt/include/chtime.h ****  *          specification.
  44:./lib/chibios/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_IMMEDIATE as timeout parameter,
  45:./lib/chibios/os/rt/include/chtime.h ****  *          see the specific function documentation.
  46:./lib/chibios/os/rt/include/chtime.h ****  */
  47:./lib/chibios/os/rt/include/chtime.h **** #define TIME_IMMEDIATE      ((sysinterval_t)0)
  48:./lib/chibios/os/rt/include/chtime.h **** 
  49:./lib/chibios/os/rt/include/chtime.h **** /**
  50:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Infinite interval specification for all functions with a timeout
  51:./lib/chibios/os/rt/include/chtime.h ****  *          specification.
  52:./lib/chibios/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_INFINITE as timeout parameter,
  53:./lib/chibios/os/rt/include/chtime.h ****  *          see the specific function documentation.
  54:./lib/chibios/os/rt/include/chtime.h ****  */
  55:./lib/chibios/os/rt/include/chtime.h **** #define TIME_INFINITE       ((sysinterval_t)-1)
  56:./lib/chibios/os/rt/include/chtime.h **** 
  57:./lib/chibios/os/rt/include/chtime.h **** /**
  58:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Maximum interval constant usable as timeout.
  59:./lib/chibios/os/rt/include/chtime.h ****  */
  60:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MAX_INTERVAL   ((sysinterval_t)-2)
  61:./lib/chibios/os/rt/include/chtime.h **** 
  62:./lib/chibios/os/rt/include/chtime.h **** /**
  63:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Maximum system of system time before it wraps.
  64:./lib/chibios/os/rt/include/chtime.h ****  */
  65:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MAX_SYSTIME    ((systime_t)-1)
  66:./lib/chibios/os/rt/include/chtime.h **** /** @} */
  67:./lib/chibios/os/rt/include/chtime.h **** 
  68:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  69:./lib/chibios/os/rt/include/chtime.h **** /* Module pre-compile time settings.                                         */
  70:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  71:./lib/chibios/os/rt/include/chtime.h **** 
  72:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  73:./lib/chibios/os/rt/include/chtime.h **** /* Derived constants and error checks.                                       */
  74:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  75:./lib/chibios/os/rt/include/chtime.h **** 
  76:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION != 16) && (CH_CFG_ST_RESOLUTION != 32) &&         \
  77:./lib/chibios/os/rt/include/chtime.h ****     (CH_CFG_ST_RESOLUTION != 64)
  78:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_RESOLUTION specified, must be 16, 32 or 64"
  79:./lib/chibios/os/rt/include/chtime.h **** #endif
  80:./lib/chibios/os/rt/include/chtime.h **** 
  81:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_ST_FREQUENCY < 10
  82:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_FREQUENCY specified, must be >= 10"
  83:./lib/chibios/os/rt/include/chtime.h **** #endif
  84:./lib/chibios/os/rt/include/chtime.h **** 
  85:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE != 16) && (CH_CFG_INTERVALS_SIZE != 32) &&       \
  86:./lib/chibios/os/rt/include/chtime.h ****     (CH_CFG_INTERVALS_SIZE != 64)
  87:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_INTERVALS_SIZE specified, must be 16, 32 or 64"
  88:./lib/chibios/os/rt/include/chtime.h **** #endif
  89:./lib/chibios/os/rt/include/chtime.h **** 
  90:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE != 16) && (CH_CFG_TIME_TYPES_SIZE != 32)
  91:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_TIME_TYPES_SIZE specified, must be 16 or 32"
  92:./lib/chibios/os/rt/include/chtime.h **** #endif
  93:./lib/chibios/os/rt/include/chtime.h **** 
  94:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_INTERVALS_SIZE < CH_CFG_ST_RESOLUTION
  95:./lib/chibios/os/rt/include/chtime.h **** #error "CH_CFG_INTERVALS_SIZE must be >= CH_CFG_ST_RESOLUTION"
  96:./lib/chibios/os/rt/include/chtime.h **** #endif
  97:./lib/chibios/os/rt/include/chtime.h **** 
  98:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  99:./lib/chibios/os/rt/include/chtime.h **** /* Module data structures and types.                                         */
 100:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 101:./lib/chibios/os/rt/include/chtime.h **** 
 102:./lib/chibios/os/rt/include/chtime.h **** /**
 103:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of system time.
 104:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 105:./lib/chibios/os/rt/include/chtime.h ****  */
 106:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION == 64) || defined(__DOXYGEN__)
 107:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t systime_t;
 108:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 32
 109:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t systime_t;
 110:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 16
 111:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t systime_t;
 112:./lib/chibios/os/rt/include/chtime.h **** #endif
 113:./lib/chibios/os/rt/include/chtime.h **** 
 114:./lib/chibios/os/rt/include/chtime.h **** /**
 115:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of time interval.
 116:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 117:./lib/chibios/os/rt/include/chtime.h ****  */
 118:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE == 64) || defined(__DOXYGEN__)
 119:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t sysinterval_t;
 120:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 32
 121:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t sysinterval_t;
 122:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 16
 123:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t sysinterval_t;
 124:./lib/chibios/os/rt/include/chtime.h **** #endif
 125:./lib/chibios/os/rt/include/chtime.h **** 
 126:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE == 32) || defined(__DOXYGEN__)
 127:./lib/chibios/os/rt/include/chtime.h **** /**
 128:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of seconds.
 129:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 130:./lib/chibios/os/rt/include/chtime.h ****  */
 131:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_secs_t;
 132:./lib/chibios/os/rt/include/chtime.h **** 
 133:./lib/chibios/os/rt/include/chtime.h **** /**
 134:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of milliseconds.
 135:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 136:./lib/chibios/os/rt/include/chtime.h ****  */
 137:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_msecs_t;
 138:./lib/chibios/os/rt/include/chtime.h **** 
 139:./lib/chibios/os/rt/include/chtime.h **** /**
 140:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of microseconds.
 141:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 142:./lib/chibios/os/rt/include/chtime.h ****  */
 143:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_usecs_t;
 144:./lib/chibios/os/rt/include/chtime.h **** 
 145:./lib/chibios/os/rt/include/chtime.h **** /**
 146:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of time conversion variable.
 147:./lib/chibios/os/rt/include/chtime.h ****  * @note    This type must have double width than other time types, it is
 148:./lib/chibios/os/rt/include/chtime.h ****  *          only used internally for conversions.
 149:./lib/chibios/os/rt/include/chtime.h ****  */
 150:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t time_conv_t;
 151:./lib/chibios/os/rt/include/chtime.h **** 
 152:./lib/chibios/os/rt/include/chtime.h **** #else
 153:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_secs_t;
 154:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_msecs_t;
 155:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_usecs_t;
 156:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_conv_t;
 157:./lib/chibios/os/rt/include/chtime.h **** #endif
 158:./lib/chibios/os/rt/include/chtime.h **** 
 159:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 160:./lib/chibios/os/rt/include/chtime.h **** /* Module macros.                                                            */
 161:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 162:./lib/chibios/os/rt/include/chtime.h **** 
 163:./lib/chibios/os/rt/include/chtime.h **** /**
 164:./lib/chibios/os/rt/include/chtime.h ****  * @name    Fast time conversion utilities
 165:./lib/chibios/os/rt/include/chtime.h ****  * @{
 166:./lib/chibios/os/rt/include/chtime.h ****  */
 167:./lib/chibios/os/rt/include/chtime.h **** /**
 168:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 169:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 170:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 171:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 172:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 173:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 174:./lib/chibios/os/rt/include/chtime.h ****  *
 175:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 176:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 177:./lib/chibios/os/rt/include/chtime.h ****  *
 178:./lib/chibios/os/rt/include/chtime.h ****  * @api
 179:./lib/chibios/os/rt/include/chtime.h ****  */
 180:./lib/chibios/os/rt/include/chtime.h **** #define TIME_S2I(secs)                                                      \
 181:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((time_conv_t)(secs) * (time_conv_t)CH_CFG_ST_FREQUENCY))
 182:./lib/chibios/os/rt/include/chtime.h **** 
 183:./lib/chibios/os/rt/include/chtime.h **** /**
 184:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 185:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 186:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 187:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 188:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 189:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 190:./lib/chibios/os/rt/include/chtime.h ****  *
 191:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] msecs     number of milliseconds
 192:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 193:./lib/chibios/os/rt/include/chtime.h ****  *
 194:./lib/chibios/os/rt/include/chtime.h ****  * @api
 195:./lib/chibios/os/rt/include/chtime.h ****  */
 196:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MS2I(msecs)                                                    \
 197:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(msecs) *                                 \
 198:./lib/chibios/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 199:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)999) / (time_conv_t)1000))
 200:./lib/chibios/os/rt/include/chtime.h **** 
 201:./lib/chibios/os/rt/include/chtime.h **** /**
 202:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 203:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 204:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 205:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 206:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 207:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 208:./lib/chibios/os/rt/include/chtime.h ****  *
 209:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] usecs     number of microseconds
 210:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 211:./lib/chibios/os/rt/include/chtime.h ****  *
 212:./lib/chibios/os/rt/include/chtime.h ****  * @api
 213:./lib/chibios/os/rt/include/chtime.h ****  */
 214:./lib/chibios/os/rt/include/chtime.h **** #define TIME_US2I(usecs)                                                    \
 215:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(usecs) *                                 \
 216:./lib/chibios/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 217:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)999999) / (time_conv_t)1000000))
 218:./lib/chibios/os/rt/include/chtime.h **** 
 219:./lib/chibios/os/rt/include/chtime.h **** /**
 220:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 221:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to seconds.
 222:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 223:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 224:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 225:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 226:./lib/chibios/os/rt/include/chtime.h ****  *
 227:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 228:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of seconds.
 229:./lib/chibios/os/rt/include/chtime.h ****  *
 230:./lib/chibios/os/rt/include/chtime.h ****  * @api
 231:./lib/chibios/os/rt/include/chtime.h ****  */
 232:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2S(interval)                                                  \
 233:./lib/chibios/os/rt/include/chtime.h ****   (time_secs_t)(((time_conv_t)(interval) +                                  \
 234:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY -                         \
 235:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY)
 236:./lib/chibios/os/rt/include/chtime.h **** 
 237:./lib/chibios/os/rt/include/chtime.h **** /**
 238:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 239:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to milliseconds.
 240:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 241:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 242:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 243:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 244:./lib/chibios/os/rt/include/chtime.h ****  *
 245:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 246:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 247:./lib/chibios/os/rt/include/chtime.h ****  *
 248:./lib/chibios/os/rt/include/chtime.h ****  * @api
 249:./lib/chibios/os/rt/include/chtime.h ****  */
 250:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2MS(interval)                                                 \
 251:./lib/chibios/os/rt/include/chtime.h ****   (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000) +           \
 252:./lib/chibios/os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 253:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 254:./lib/chibios/os/rt/include/chtime.h **** 
 255:./lib/chibios/os/rt/include/chtime.h **** /**
 256:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 257:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to microseconds.
 258:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 259:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 260:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 261:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 262:./lib/chibios/os/rt/include/chtime.h ****  *
 263:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 264:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 265:./lib/chibios/os/rt/include/chtime.h ****  *
 266:./lib/chibios/os/rt/include/chtime.h ****  * @api
 267:./lib/chibios/os/rt/include/chtime.h ****  */
 268:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2US(interval)                                                 \
 269:./lib/chibios/os/rt/include/chtime.h ****   (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000000) +        \
 270:./lib/chibios/os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 271:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 272:./lib/chibios/os/rt/include/chtime.h **** /** @} */
 273:./lib/chibios/os/rt/include/chtime.h **** 
 274:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chtime.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chtime.h **** 
 278:./lib/chibios/os/rt/include/chtime.h **** /*
 279:./lib/chibios/os/rt/include/chtime.h ****  * Virtual Timers APIs.
 280:./lib/chibios/os/rt/include/chtime.h ****  */
 281:./lib/chibios/os/rt/include/chtime.h **** #ifdef __cplusplus
 282:./lib/chibios/os/rt/include/chtime.h **** extern "C" {
 283:./lib/chibios/os/rt/include/chtime.h **** #endif
 284:./lib/chibios/os/rt/include/chtime.h **** 
 285:./lib/chibios/os/rt/include/chtime.h **** #ifdef __cplusplus
 286:./lib/chibios/os/rt/include/chtime.h **** }
 287:./lib/chibios/os/rt/include/chtime.h **** #endif
 288:./lib/chibios/os/rt/include/chtime.h **** 
 289:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 290:./lib/chibios/os/rt/include/chtime.h **** /* Module inline functions.                                                  */
 291:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 292:./lib/chibios/os/rt/include/chtime.h **** 
 293:./lib/chibios/os/rt/include/chtime.h **** /**
 294:./lib/chibios/os/rt/include/chtime.h ****  * @name    Secure time conversion utilities
 295:./lib/chibios/os/rt/include/chtime.h ****  * @{
 296:./lib/chibios/os/rt/include/chtime.h ****  */
 297:./lib/chibios/os/rt/include/chtime.h **** /**
 298:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 299:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 300:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 301:./lib/chibios/os/rt/include/chtime.h ****  *
 302:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 303:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 304:./lib/chibios/os/rt/include/chtime.h ****  *
 305:./lib/chibios/os/rt/include/chtime.h ****  * @special
 306:./lib/chibios/os/rt/include/chtime.h ****  */
 307:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeS2I(time_secs_t secs) {
 308:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 309:./lib/chibios/os/rt/include/chtime.h **** 
 310:./lib/chibios/os/rt/include/chtime.h ****   ticks = (time_conv_t)secs * (time_conv_t)CH_CFG_ST_FREQUENCY;
 311:./lib/chibios/os/rt/include/chtime.h **** 
 312:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 313:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 314:./lib/chibios/os/rt/include/chtime.h **** 
 315:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 316:./lib/chibios/os/rt/include/chtime.h **** }
 317:./lib/chibios/os/rt/include/chtime.h **** 
 318:./lib/chibios/os/rt/include/chtime.h **** /**
 319:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 320:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 321:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 322:./lib/chibios/os/rt/include/chtime.h ****  *
 323:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] msec      number of milliseconds
 324:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 325:./lib/chibios/os/rt/include/chtime.h ****  *
 326:./lib/chibios/os/rt/include/chtime.h ****  * @special
 327:./lib/chibios/os/rt/include/chtime.h ****  */
 328:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeMS2I(time_msecs_t msec) {
 329:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 330:./lib/chibios/os/rt/include/chtime.h **** 
 331:./lib/chibios/os/rt/include/chtime.h ****   ticks = (((time_conv_t)msec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 332:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)999) / (time_conv_t)1000;
 333:./lib/chibios/os/rt/include/chtime.h **** 
 334:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 335:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 336:./lib/chibios/os/rt/include/chtime.h **** 
 337:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 338:./lib/chibios/os/rt/include/chtime.h **** }
 339:./lib/chibios/os/rt/include/chtime.h **** 
 340:./lib/chibios/os/rt/include/chtime.h **** /**
 341:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 342:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 343:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 344:./lib/chibios/os/rt/include/chtime.h ****  *
 345:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] usec      number of microseconds
 346:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 347:./lib/chibios/os/rt/include/chtime.h ****  *
 348:./lib/chibios/os/rt/include/chtime.h ****  * @special
 349:./lib/chibios/os/rt/include/chtime.h ****  */
 350:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeUS2I(time_usecs_t usec) {
 351:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 352:./lib/chibios/os/rt/include/chtime.h **** 
 353:./lib/chibios/os/rt/include/chtime.h ****   ticks = (((time_conv_t)usec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 354:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)999999) / (time_conv_t)1000000;
 355:./lib/chibios/os/rt/include/chtime.h **** 
 356:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 357:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 358:./lib/chibios/os/rt/include/chtime.h **** 
 359:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 360:./lib/chibios/os/rt/include/chtime.h **** }
 361:./lib/chibios/os/rt/include/chtime.h **** 
 362:./lib/chibios/os/rt/include/chtime.h **** /**
 363:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 364:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to seconds.
 365:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 366:./lib/chibios/os/rt/include/chtime.h ****  *
 367:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 368:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of seconds.
 369:./lib/chibios/os/rt/include/chtime.h ****  *
 370:./lib/chibios/os/rt/include/chtime.h ****  * @special
 371:./lib/chibios/os/rt/include/chtime.h ****  */
 372:./lib/chibios/os/rt/include/chtime.h **** static inline time_secs_t chTimeI2S(sysinterval_t interval) {
 373:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t secs;
 374:./lib/chibios/os/rt/include/chtime.h **** 
 375:./lib/chibios/os/rt/include/chtime.h ****   secs = ((time_conv_t)interval +
 376:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY -
 377:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY;
 378:./lib/chibios/os/rt/include/chtime.h **** 
 379:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(secs < (time_conv_t)((time_secs_t)-1),
 380:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 381:./lib/chibios/os/rt/include/chtime.h **** 
 382:./lib/chibios/os/rt/include/chtime.h ****   return (time_secs_t)secs;
 383:./lib/chibios/os/rt/include/chtime.h **** }
 384:./lib/chibios/os/rt/include/chtime.h **** 
 385:./lib/chibios/os/rt/include/chtime.h **** /**
 386:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 387:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to milliseconds.
 388:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 389:./lib/chibios/os/rt/include/chtime.h ****  *
 390:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 391:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 392:./lib/chibios/os/rt/include/chtime.h ****  *
 393:./lib/chibios/os/rt/include/chtime.h ****  * @special
 394:./lib/chibios/os/rt/include/chtime.h ****  */
 395:./lib/chibios/os/rt/include/chtime.h **** static inline time_msecs_t chTimeI2MS(sysinterval_t interval) {
 396:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t msecs;
 397:./lib/chibios/os/rt/include/chtime.h **** 
 398:./lib/chibios/os/rt/include/chtime.h ****   msecs = (((time_conv_t)interval * (time_conv_t)1000) +
 399:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 400:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 401:./lib/chibios/os/rt/include/chtime.h **** 
 402:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(msecs < (time_conv_t)((time_msecs_t)-1),
 403:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 404:./lib/chibios/os/rt/include/chtime.h **** 
 405:./lib/chibios/os/rt/include/chtime.h ****   return (time_msecs_t)msecs;
 406:./lib/chibios/os/rt/include/chtime.h **** }
 407:./lib/chibios/os/rt/include/chtime.h **** 
 408:./lib/chibios/os/rt/include/chtime.h **** /**
 409:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 410:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to microseconds.
 411:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 412:./lib/chibios/os/rt/include/chtime.h ****  *
 413:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/rt/include/chtime.h ****  *
 416:./lib/chibios/os/rt/include/chtime.h ****  * @special
 417:./lib/chibios/os/rt/include/chtime.h ****  */
 418:./lib/chibios/os/rt/include/chtime.h **** static inline time_usecs_t chTimeI2US(sysinterval_t interval) {
 419:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t usecs;
 420:./lib/chibios/os/rt/include/chtime.h **** 
 421:./lib/chibios/os/rt/include/chtime.h ****   usecs = (((time_conv_t)interval * (time_conv_t)1000000) +
 422:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 423:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 424:./lib/chibios/os/rt/include/chtime.h **** 
 425:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(usecs <= (time_conv_t)((time_usecs_t)-1),
 426:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 427:./lib/chibios/os/rt/include/chtime.h **** 
 428:./lib/chibios/os/rt/include/chtime.h ****   return (time_usecs_t)usecs;
 429:./lib/chibios/os/rt/include/chtime.h **** }
 430:./lib/chibios/os/rt/include/chtime.h **** 
 431:./lib/chibios/os/rt/include/chtime.h **** /**
 432:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Adds an interval to a system time returning a system time.
 433:./lib/chibios/os/rt/include/chtime.h ****  *
 434:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] systime   base system time
 435:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval to be added
 436:./lib/chibios/os/rt/include/chtime.h ****  * @return              The new system time.
 437:./lib/chibios/os/rt/include/chtime.h ****  *
 438:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 439:./lib/chibios/os/rt/include/chtime.h ****  */
 440:./lib/chibios/os/rt/include/chtime.h **** static inline systime_t chTimeAddX(systime_t systime,
 441:./lib/chibios/os/rt/include/chtime.h ****                                    sysinterval_t interval) {
 442:./lib/chibios/os/rt/include/chtime.h **** 
 443:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_ST_RESOLUTION != CH_CFG_INTERVALS_SIZE
 444:./lib/chibios/os/rt/include/chtime.h ****   chDbgCheck(interval <= (sysinterval_t)TIME_MAX_SYSTIME);
 445:./lib/chibios/os/rt/include/chtime.h **** #endif
 446:./lib/chibios/os/rt/include/chtime.h **** 
 447:./lib/chibios/os/rt/include/chtime.h ****   return systime + (systime_t)interval;
 448:./lib/chibios/os/rt/include/chtime.h **** }
 449:./lib/chibios/os/rt/include/chtime.h **** 
 450:./lib/chibios/os/rt/include/chtime.h **** /**
 451:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Subtracts two system times returning an interval.
 452:./lib/chibios/os/rt/include/chtime.h ****  *
 453:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] start     first system time
 454:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] end       second system time
 455:./lib/chibios/os/rt/include/chtime.h ****  * @return              The interval representing the time difference.
 456:./lib/chibios/os/rt/include/chtime.h ****  *
 457:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 458:./lib/chibios/os/rt/include/chtime.h ****  */
 459:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeDiffX(systime_t start, systime_t end) {
 1757              		.loc 9 459 29 is_stmt 1 view .LVU565
 1758              	.LBB451:
 460:./lib/chibios/os/rt/include/chtime.h **** 
 461:./lib/chibios/os/rt/include/chtime.h ****   /*lint -save -e9033 [10.8] This cast is required by the operation, it is
 462:./lib/chibios/os/rt/include/chtime.h ****     known that the destination type can be wider.*/
 463:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)((systime_t)(end - start));
 1759              		.loc 9 463 3 view .LVU566
 1760              		.loc 9 463 26 is_stmt 0 view .LVU567
 1761 000e 211A     		subs	r1, r4, r0
 1762              		.loc 9 463 10 view .LVU568
 1763 0010 89B2     		uxth	r1, r1
 1764              	.LVL94:
 1765              		.loc 9 463 10 view .LVU569
 1766              	.LBE451:
 1767              	.LBE450:
 677:lib/chibios/os/rt/src/chthreads.c ****   if (interval > (sysinterval_t)0) {
 1768              		.loc 1 677 3 is_stmt 1 view .LVU570
 1769              		.loc 1 677 6 is_stmt 0 view .LVU571
 1770 0012 11B1     		cbz	r1, .L42
 678:lib/chibios/os/rt/src/chthreads.c ****     chThdSleepS(interval);
 1771              		.loc 1 678 5 is_stmt 1 view .LVU572
 1772              	.LVL95:
 1773              	.LBB452:
 1774              	.LBI452:
 381:./lib/chibios/os/rt/include/chthreads.h **** 
 1775              		.loc 6 381 20 view .LVU573
 1776              	.LBB453:
 383:./lib/chibios/os/rt/include/chthreads.h **** 
 1777              		.loc 6 383 3 view .LVU574
 383:./lib/chibios/os/rt/include/chthreads.h **** 
 1778              		.loc 6 383 3 view .LVU575
 383:./lib/chibios/os/rt/include/chthreads.h **** 
 1779              		.loc 6 383 3 view .LVU576
 1780              		.loc 6 385 3 view .LVU577
 1781              		.loc 6 385 10 is_stmt 0 view .LVU578
 1782 0014 0820     		movs	r0, #8
 1783 0016 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1784              	.LVL96:
 1785              	.L42:
 1786              		.loc 6 385 10 view .LVU579
 1787              	.LBE453:
 1788              	.LBE452:
 679:lib/chibios/os/rt/src/chthreads.c ****   }
 680:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1789              		.loc 1 680 3 is_stmt 1 view .LVU580
 1790              	.LBB454:
 1791              	.LBI454:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1792              		.loc 3 367 20 view .LVU581
 1793              	.LBB455:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1794              		.loc 3 369 22 view .LVU582
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1795              		.loc 3 370 33 view .LVU583
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1796              		.loc 3 376 3 view .LVU584
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1797              		.loc 3 376 3 view .LVU585
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1798              		.loc 3 376 3 view .LVU586
 1799              		.loc 3 380 3 view .LVU587
 1800              	.LBB456:
 1801              	.LBI456:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1802              		.loc 4 693 27 view .LVU588
 1803              		.loc 4 696 3 view .LVU589
 1804              	.LBB457:
 1805              	.LBI457:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1806              		.loc 5 491 27 view .LVU590
 1807              	.LBB458:
 1808              		.loc 5 493 3 view .LVU591
 1809 001a 0023     		movs	r3, #0
 1810              		.syntax unified
 1811              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1812 001c 83F31188 		MSR basepri, r3
 1813              	@ 0 "" 2
 1814              	.LVL97:
 1815              		.loc 5 493 3 is_stmt 0 view .LVU592
 1816              		.thumb
 1817              		.syntax unified
 1818              	.LBE458:
 1819              	.LBE457:
 1820              	.LBE456:
 1821              	.LBE455:
 1822              	.LBE454:
 681:lib/chibios/os/rt/src/chthreads.c **** }
 1823              		.loc 1 681 1 view .LVU593
 1824 0020 10BD     		pop	{r4, pc}
 1825              		.loc 1 681 1 view .LVU594
 1826              		.cfi_endproc
 1827              	.LFE304:
 1829              		.section	.text.chThdSleepUntilWindowed,"ax",%progbits
 1830              		.align	1
 1831              		.global	chThdSleepUntilWindowed
 1832              		.syntax unified
 1833              		.thumb
 1834              		.thumb_func
 1836              	chThdSleepUntilWindowed:
 1837              	.LVL98:
 1838              	.LFB305:
 682:lib/chibios/os/rt/src/chthreads.c **** 
 683:lib/chibios/os/rt/src/chthreads.c **** /**
 684:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread until the system time arrives to the
 685:lib/chibios/os/rt/src/chthreads.c ****  *          specified value.
 686:lib/chibios/os/rt/src/chthreads.c ****  * @note    The system time is assumed to be between @p prev and @p next
 687:lib/chibios/os/rt/src/chthreads.c ****  *          else the call is assumed to have been called outside the
 688:lib/chibios/os/rt/src/chthreads.c ****  *          allowed time interval, in this case no sleep is performed.
 689:lib/chibios/os/rt/src/chthreads.c ****  * @see     chThdSleepUntil()
 690:lib/chibios/os/rt/src/chthreads.c ****  *
 691:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] prev      absolute system time of the previous deadline
 692:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] next      absolute system time of the next deadline
 693:lib/chibios/os/rt/src/chthreads.c ****  * @return              the @p next parameter
 694:lib/chibios/os/rt/src/chthreads.c ****  *
 695:lib/chibios/os/rt/src/chthreads.c ****  * @api
 696:lib/chibios/os/rt/src/chthreads.c ****  */
 697:lib/chibios/os/rt/src/chthreads.c **** systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next) {
 1839              		.loc 1 697 67 is_stmt 1 view -0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 0
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 698:lib/chibios/os/rt/src/chthreads.c ****   systime_t time;
 1843              		.loc 1 698 3 view .LVU596
 699:lib/chibios/os/rt/src/chthreads.c **** 
 700:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1844              		.loc 1 700 3 view .LVU597
 1845              	.LBB477:
 1846              	.LBI477:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1847              		.loc 3 355 20 view .LVU598
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1848              		.loc 3 357 3 view .LVU599
 1849              	.LBB478:
 1850              	.LBI478:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1851              		.loc 4 669 27 view .LVU600
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1852              		.loc 4 677 3 view .LVU601
 1853              	.LBB479:
 1854              	.LBI479:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1855              		.loc 5 491 27 view .LVU602
 1856              	.LBB480:
 1857              		.loc 5 493 3 view .LVU603
 1858              	.LBE480:
 1859              	.LBE479:
 1860              	.LBE478:
 1861              	.LBE477:
 697:lib/chibios/os/rt/src/chthreads.c ****   systime_t time;
 1862              		.loc 1 697 67 is_stmt 0 view .LVU604
 1863 0000 38B5     		push	{r3, r4, r5, lr}
 1864              		.cfi_def_cfa_offset 16
 1865              		.cfi_offset 3, -16
 1866              		.cfi_offset 4, -12
 1867              		.cfi_offset 5, -8
 1868              		.cfi_offset 14, -4
 697:lib/chibios/os/rt/src/chthreads.c ****   systime_t time;
 1869              		.loc 1 697 67 view .LVU605
 1870 0002 0446     		mov	r4, r0
 1871 0004 0D46     		mov	r5, r1
 1872              	.LBB484:
 1873              	.LBB483:
 1874              	.LBB482:
 1875              	.LBB481:
 1876              		.loc 5 493 3 view .LVU606
 1877 0006 2023     		movs	r3, #32
 1878              		.syntax unified
 1879              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1880 0008 83F31188 		MSR basepri, r3
 1881              	@ 0 "" 2
 1882              	.LVL99:
 1883              		.loc 5 493 3 view .LVU607
 1884              		.thumb
 1885              		.syntax unified
 1886              	.LBE481:
 1887              	.LBE482:
 1888              	.LBE483:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1889              		.loc 3 358 34 is_stmt 1 view .LVU608
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1890              		.loc 3 359 20 view .LVU609
 1891              	.LBE484:
 701:lib/chibios/os/rt/src/chthreads.c ****   time = chVTGetSystemTimeX();
 1892              		.loc 1 701 3 view .LVU610
 1893              	.LBB485:
 1894              	.LBI485:
 116:./lib/chibios/os/rt/include/chvt.h **** 
 1895              		.loc 7 116 25 view .LVU611
 1896              		.loc 7 121 3 view .LVU612
 1897              	.LBB486:
 1898              	.LBI486:
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 1899              		.loc 8 114 25 view .LVU613
 1900              	.LBB487:
 1901              		.loc 8 116 3 view .LVU614
 1902              		.loc 8 116 10 is_stmt 0 view .LVU615
 1903 000c FFF7FEFF 		bl	stGetCounter
 1904              	.LVL100:
 1905              		.loc 8 116 10 view .LVU616
 1906              	.LBE487:
 1907              	.LBE486:
 1908              	.LBE485:
 702:lib/chibios/os/rt/src/chthreads.c ****   if (chTimeIsInRangeX(time, prev, next)) {
 1909              		.loc 1 702 3 is_stmt 1 view .LVU617
 1910              	.LBB488:
 1911              	.LBI488:
 464:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 465:./lib/chibios/os/rt/include/chtime.h **** }
 466:./lib/chibios/os/rt/include/chtime.h **** 
 467:./lib/chibios/os/rt/include/chtime.h **** /**
 468:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Checks if the specified time is within the specified time range.
 469:./lib/chibios/os/rt/include/chtime.h ****  * @note    When start==end then the function returns always false because the
 470:./lib/chibios/os/rt/include/chtime.h ****  *          time window has zero size.
 471:./lib/chibios/os/rt/include/chtime.h ****  *
 472:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] time      the time to be verified
 473:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] start     the start of the time window (inclusive)
 474:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] end       the end of the time window (non inclusive)
 475:./lib/chibios/os/rt/include/chtime.h ****  * @retval true         current time within the specified time window.
 476:./lib/chibios/os/rt/include/chtime.h ****  * @retval false        current time not within the specified time window.
 477:./lib/chibios/os/rt/include/chtime.h ****  *
 478:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 479:./lib/chibios/os/rt/include/chtime.h ****  */
 480:./lib/chibios/os/rt/include/chtime.h **** static inline bool chTimeIsInRangeX(systime_t time,
 1912              		.loc 9 480 20 view .LVU618
 1913              	.LBB489:
 481:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t start,
 482:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t end) {
 483:./lib/chibios/os/rt/include/chtime.h **** 
 484:./lib/chibios/os/rt/include/chtime.h ****   return (bool)((systime_t)((systime_t)time - (systime_t)start) <
 1914              		.loc 9 484 3 view .LVU619
 485:./lib/chibios/os/rt/include/chtime.h ****                 (systime_t)((systime_t)end - (systime_t)start));
 1915              		.loc 9 485 17 is_stmt 0 view .LVU620
 1916 0010 2B1B     		subs	r3, r5, r4
 484:./lib/chibios/os/rt/include/chtime.h ****                 (systime_t)((systime_t)end - (systime_t)start));
 1917              		.loc 9 484 17 view .LVU621
 1918 0012 041B     		subs	r4, r0, r4
 1919              	.LBE489:
 1920              	.LBE488:
 1921              		.loc 1 702 6 view .LVU622
 1922 0014 9BB2     		uxth	r3, r3
 1923 0016 A4B2     		uxth	r4, r4
 1924 0018 A342     		cmp	r3, r4
 1925 001a 04D9     		bls	.L47
 703:lib/chibios/os/rt/src/chthreads.c ****     chThdSleepS(chTimeDiffX(time, next));
 1926              		.loc 1 703 5 is_stmt 1 view .LVU623
 1927              	.LVL101:
 1928              	.LBB490:
 1929              	.LBI490:
 459:./lib/chibios/os/rt/include/chtime.h **** 
 1930              		.loc 9 459 29 view .LVU624
 1931              	.LBB491:
 463:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 1932              		.loc 9 463 3 view .LVU625
 463:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 1933              		.loc 9 463 3 is_stmt 0 view .LVU626
 1934              	.LBE491:
 1935              	.LBE490:
 1936              	.LBB493:
 1937              	.LBI493:
 381:./lib/chibios/os/rt/include/chthreads.h **** 
 1938              		.loc 6 381 20 is_stmt 1 view .LVU627
 1939              	.LBB494:
 383:./lib/chibios/os/rt/include/chthreads.h **** 
 1940              		.loc 6 383 3 view .LVU628
 383:./lib/chibios/os/rt/include/chthreads.h **** 
 1941              		.loc 6 383 3 view .LVU629
 383:./lib/chibios/os/rt/include/chthreads.h **** 
 1942              		.loc 6 383 3 view .LVU630
 1943              		.loc 6 385 3 view .LVU631
 1944              	.LBE494:
 1945              	.LBE493:
 1946              	.LBB496:
 1947              	.LBB492:
 463:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 1948              		.loc 9 463 26 is_stmt 0 view .LVU632
 1949 001c 281A     		subs	r0, r5, r0
 1950              	.LVL102:
 463:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 1951              		.loc 9 463 26 view .LVU633
 1952              	.LBE492:
 1953              	.LBE496:
 1954              	.LBB497:
 1955              	.LBB495:
 1956              		.loc 6 385 10 view .LVU634
 1957 001e 81B2     		uxth	r1, r0
 1958 0020 0820     		movs	r0, #8
 1959 0022 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1960              	.LVL103:
 1961              	.L47:
 1962              		.loc 6 385 10 view .LVU635
 1963              	.LBE495:
 1964              	.LBE497:
 704:lib/chibios/os/rt/src/chthreads.c ****   }
 705:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1965              		.loc 1 705 3 is_stmt 1 view .LVU636
 1966              	.LBB498:
 1967              	.LBI498:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1968              		.loc 3 367 20 view .LVU637
 1969              	.LBB499:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1970              		.loc 3 369 22 view .LVU638
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1971              		.loc 3 370 33 view .LVU639
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1972              		.loc 3 376 3 view .LVU640
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1973              		.loc 3 376 3 view .LVU641
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1974              		.loc 3 376 3 view .LVU642
 1975              		.loc 3 380 3 view .LVU643
 1976              	.LBB500:
 1977              	.LBI500:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1978              		.loc 4 693 27 view .LVU644
 1979              		.loc 4 696 3 view .LVU645
 1980              	.LBB501:
 1981              	.LBI501:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1982              		.loc 5 491 27 view .LVU646
 1983              	.LBB502:
 1984              		.loc 5 493 3 view .LVU647
 1985 0026 0023     		movs	r3, #0
 1986              		.syntax unified
 1987              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1988 0028 83F31188 		MSR basepri, r3
 1989              	@ 0 "" 2
 1990              	.LVL104:
 1991              		.loc 5 493 3 is_stmt 0 view .LVU648
 1992              		.thumb
 1993              		.syntax unified
 1994              	.LBE502:
 1995              	.LBE501:
 1996              	.LBE500:
 1997              	.LBE499:
 1998              	.LBE498:
 706:lib/chibios/os/rt/src/chthreads.c **** 
 707:lib/chibios/os/rt/src/chthreads.c ****   return next;
 1999              		.loc 1 707 3 is_stmt 1 view .LVU649
 708:lib/chibios/os/rt/src/chthreads.c **** }
 2000              		.loc 1 708 1 is_stmt 0 view .LVU650
 2001 002c 2846     		mov	r0, r5
 2002 002e 38BD     		pop	{r3, r4, r5, pc}
 2003              		.cfi_endproc
 2004              	.LFE305:
 2006              		.section	.text.chThdYield,"ax",%progbits
 2007              		.align	1
 2008              		.global	chThdYield
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2013              	chThdYield:
 2014              	.LFB306:
 709:lib/chibios/os/rt/src/chthreads.c **** 
 710:lib/chibios/os/rt/src/chthreads.c **** /**
 711:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Yields the time slot.
 712:lib/chibios/os/rt/src/chthreads.c ****  * @details Yields the CPU control to the next thread in the ready list with
 713:lib/chibios/os/rt/src/chthreads.c ****  *          equal priority, if any.
 714:lib/chibios/os/rt/src/chthreads.c ****  *
 715:lib/chibios/os/rt/src/chthreads.c ****  * @api
 716:lib/chibios/os/rt/src/chthreads.c ****  */
 717:lib/chibios/os/rt/src/chthreads.c **** void chThdYield(void) {
 2015              		.loc 1 717 23 is_stmt 1 view -0
 2016              		.cfi_startproc
 2017              		@ args = 0, pretend = 0, frame = 0
 2018              		@ frame_needed = 0, uses_anonymous_args = 0
 718:lib/chibios/os/rt/src/chthreads.c **** 
 719:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 2019              		.loc 1 719 3 view .LVU652
 2020              	.LBB516:
 2021              	.LBI516:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 2022              		.loc 3 355 20 view .LVU653
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2023              		.loc 3 357 3 view .LVU654
 2024              	.LBB517:
 2025              	.LBI517:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2026              		.loc 4 669 27 view .LVU655
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2027              		.loc 4 677 3 view .LVU656
 2028              	.LVL105:
 2029              	.LBB518:
 2030              	.LBI518:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2031              		.loc 5 491 27 view .LVU657
 2032              	.LBB519:
 2033              		.loc 5 493 3 view .LVU658
 2034              	.LBE519:
 2035              	.LBE518:
 2036              	.LBE517:
 2037              	.LBE516:
 717:lib/chibios/os/rt/src/chthreads.c **** 
 2038              		.loc 1 717 23 is_stmt 0 view .LVU659
 2039 0000 08B5     		push	{r3, lr}
 2040              		.cfi_def_cfa_offset 8
 2041              		.cfi_offset 3, -8
 2042              		.cfi_offset 14, -4
 2043              	.LBB523:
 2044              	.LBB522:
 2045              	.LBB521:
 2046              	.LBB520:
 2047              		.loc 5 493 3 view .LVU660
 2048 0002 2023     		movs	r3, #32
 2049              		.syntax unified
 2050              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2051 0004 83F31188 		MSR basepri, r3
 2052              	@ 0 "" 2
 2053              	.LVL106:
 2054              		.loc 5 493 3 view .LVU661
 2055              		.thumb
 2056              		.syntax unified
 2057              	.LBE520:
 2058              	.LBE521:
 2059              	.LBE522:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2060              		.loc 3 358 34 is_stmt 1 view .LVU662
 359:./lib/chibios/os/rt/include/chsys.h **** }
 2061              		.loc 3 359 20 view .LVU663
 2062              	.LBE523:
 720:lib/chibios/os/rt/src/chthreads.c ****   chSchDoYieldS();
 2063              		.loc 1 720 3 view .LVU664
 2064              	.LBB524:
 2065              	.LBI524:
 2066              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
   1:./lib/chibios/os/rt/include/chschd.h **** /*
   2:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chschd.h **** 
   4:./lib/chibios/os/rt/include/chschd.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chschd.h **** 
   6:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chschd.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chschd.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chschd.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chschd.h **** 
  11:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chschd.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chschd.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chschd.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chschd.h **** 
  16:./lib/chibios/os/rt/include/chschd.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chschd.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chschd.h **** */
  19:./lib/chibios/os/rt/include/chschd.h **** 
  20:./lib/chibios/os/rt/include/chschd.h **** /**
  21:./lib/chibios/os/rt/include/chschd.h ****  * @file    rt/include/chschd.h
  22:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Scheduler macros and structures.
  23:./lib/chibios/os/rt/include/chschd.h ****  *
  24:./lib/chibios/os/rt/include/chschd.h ****  * @addtogroup scheduler
  25:./lib/chibios/os/rt/include/chschd.h ****  * @{
  26:./lib/chibios/os/rt/include/chschd.h ****  */
  27:./lib/chibios/os/rt/include/chschd.h **** 
  28:./lib/chibios/os/rt/include/chschd.h **** #ifndef CHSCHD_H
  29:./lib/chibios/os/rt/include/chschd.h **** #define CHSCHD_H
  30:./lib/chibios/os/rt/include/chschd.h **** 
  31:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chschd.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chschd.h **** 
  35:./lib/chibios/os/rt/include/chschd.h **** /**
  36:./lib/chibios/os/rt/include/chschd.h ****  * @name    Wakeup status codes
  37:./lib/chibios/os/rt/include/chschd.h ****  * @{
  38:./lib/chibios/os/rt/include/chschd.h ****  */
  39:./lib/chibios/os/rt/include/chschd.h **** #define MSG_OK              (msg_t)0    /**< @brief Normal wakeup message.  */
  40:./lib/chibios/os/rt/include/chschd.h **** #define MSG_TIMEOUT         (msg_t)-1   /**< @brief Wakeup caused by a timeout
  41:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  42:./lib/chibios/os/rt/include/chschd.h **** #define MSG_RESET           (msg_t)-2   /**< @brief Wakeup caused by a reset
  43:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  44:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  45:./lib/chibios/os/rt/include/chschd.h **** 
  46:./lib/chibios/os/rt/include/chschd.h **** /**
  47:./lib/chibios/os/rt/include/chschd.h ****  * @name    Priority constants
  48:./lib/chibios/os/rt/include/chschd.h ****  * @{
  49:./lib/chibios/os/rt/include/chschd.h ****  */
  50:./lib/chibios/os/rt/include/chschd.h **** #define NOPRIO              (tprio_t)0      /**< @brief Ready list header
  51:./lib/chibios/os/rt/include/chschd.h ****                                                  priority.                  */
  52:./lib/chibios/os/rt/include/chschd.h **** #define IDLEPRIO            (tprio_t)1      /**< @brief Idle priority.      */
  53:./lib/chibios/os/rt/include/chschd.h **** #define LOWPRIO             (tprio_t)2      /**< @brief Lowest priority.    */
  54:./lib/chibios/os/rt/include/chschd.h **** #define NORMALPRIO          (tprio_t)128    /**< @brief Normal priority.    */
  55:./lib/chibios/os/rt/include/chschd.h **** #define HIGHPRIO            (tprio_t)255    /**< @brief Highest priority.   */
  56:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  57:./lib/chibios/os/rt/include/chschd.h **** 
  58:./lib/chibios/os/rt/include/chschd.h **** /**
  59:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread states
  60:./lib/chibios/os/rt/include/chschd.h ****  * @{
  61:./lib/chibios/os/rt/include/chschd.h ****  */
  62:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_READY      (tstate_t)0      /**< @brief Waiting on the
  63:./lib/chibios/os/rt/include/chschd.h ****                                                   ready list.               */
  64:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_CURRENT    (tstate_t)1      /**< @brief Currently running. */
  65:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSTART    (tstate_t)2      /**< @brief Just created.      */
  66:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SUSPENDED  (tstate_t)3      /**< @brief Suspended state.   */
  67:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_QUEUED     (tstate_t)4      /**< @brief On a queue.        */
  68:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSEM      (tstate_t)5      /**< @brief On a semaphore.    */
  69:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMTX      (tstate_t)6      /**< @brief On a mutex.        */
  70:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTCOND     (tstate_t)7      /**< @brief On a cond.variable.*/
  71:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SLEEPING   (tstate_t)8      /**< @brief Sleeping.          */
  72:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTEXIT     (tstate_t)9      /**< @brief Waiting a thread.  */
  73:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTOREVT    (tstate_t)10     /**< @brief One event.         */
  74:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTANDEVT   (tstate_t)11     /**< @brief Several events.    */
  75:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSGQ    (tstate_t)12     /**< @brief Sending a message,
  76:./lib/chibios/os/rt/include/chschd.h ****                                                   in queue.                 */
  77:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSG     (tstate_t)13     /**< @brief Sent a message,
  78:./lib/chibios/os/rt/include/chschd.h ****                                                   waiting answer.           */
  79:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMSG      (tstate_t)14     /**< @brief Waiting for a
  80:./lib/chibios/os/rt/include/chschd.h ****                                                   message.                  */
  81:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_FINAL      (tstate_t)15     /**< @brief Thread terminated. */
  82:./lib/chibios/os/rt/include/chschd.h **** 
  83:./lib/chibios/os/rt/include/chschd.h **** /**
  84:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Thread states as array of strings.
  85:./lib/chibios/os/rt/include/chschd.h ****  * @details Each element in an array initialized with this macro can be
  86:./lib/chibios/os/rt/include/chschd.h ****  *          indexed using the numeric thread state values.
  87:./lib/chibios/os/rt/include/chschd.h ****  */
  88:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_NAMES                                                     \
  89:./lib/chibios/os/rt/include/chschd.h ****   "READY", "CURRENT", "WTSTART", "SUSPENDED", "QUEUED", "WTSEM", "WTMTX",  \
  90:./lib/chibios/os/rt/include/chschd.h ****   "WTCOND", "SLEEPING", "WTEXIT", "WTOREVT", "WTANDEVT", "SNDMSGQ",        \
  91:./lib/chibios/os/rt/include/chschd.h ****   "SNDMSG", "WTMSG", "FINAL"
  92:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  93:./lib/chibios/os/rt/include/chschd.h **** 
  94:./lib/chibios/os/rt/include/chschd.h **** /**
  95:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread flags and attributes
  96:./lib/chibios/os/rt/include/chschd.h ****  * @{
  97:./lib/chibios/os/rt/include/chschd.h ****  */
  98:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MASK   (tmode_t)3U     /**< @brief Thread memory mode
  99:./lib/chibios/os/rt/include/chschd.h ****                                                  mask.                      */
 100:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_STATIC (tmode_t)0U     /**< @brief Static thread.      */
 101:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_HEAP   (tmode_t)1U     /**< @brief Thread allocated
 102:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Heap.        */
 103:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MPOOL  (tmode_t)2U     /**< @brief Thread allocated
 104:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Pool.        */
 105:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_TERMINATE   (tmode_t)4U     /**< @brief Termination requested
 106:./lib/chibios/os/rt/include/chschd.h ****                                                  flag.                      */
 107:./lib/chibios/os/rt/include/chschd.h **** /** @} */
 108:./lib/chibios/os/rt/include/chschd.h **** 
 109:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 110:./lib/chibios/os/rt/include/chschd.h **** /* Module pre-compile time settings.                                         */
 111:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 112:./lib/chibios/os/rt/include/chschd.h **** 
 113:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 114:./lib/chibios/os/rt/include/chschd.h **** /* Derived constants and error checks.                                       */
 115:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 116:./lib/chibios/os/rt/include/chschd.h **** 
 117:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 118:./lib/chibios/os/rt/include/chschd.h **** /* Module data structures and types.                                         */
 119:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 120:./lib/chibios/os/rt/include/chschd.h **** 
 121:./lib/chibios/os/rt/include/chschd.h **** /**
 122:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Structure representing a threads queue.
 123:./lib/chibios/os/rt/include/chschd.h ****  */
 124:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_queue {
 125:./lib/chibios/os/rt/include/chschd.h ****   ch_queue_t            queue;      /**< @brief Threads queue header.       */
 126:./lib/chibios/os/rt/include/chschd.h **** };
 127:./lib/chibios/os/rt/include/chschd.h **** 
 128:./lib/chibios/os/rt/include/chschd.h **** /**
 129:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Structure representing a thread.
 130:./lib/chibios/os/rt/include/chschd.h ****  * @note    Not all the listed fields are always needed, by switching off some
 131:./lib/chibios/os/rt/include/chschd.h ****  *          not needed ChibiOS/RT subsystems it is possible to save RAM space
 132:./lib/chibios/os/rt/include/chschd.h ****  *          by shrinking this structure.
 133:./lib/chibios/os/rt/include/chschd.h ****  */
 134:./lib/chibios/os/rt/include/chschd.h **** struct ch_thread {
 135:./lib/chibios/os/rt/include/chschd.h ****   union {
 136:./lib/chibios/os/rt/include/chschd.h ****     ch_list_t           list;       /**< @brief Threads lists element.      */
 137:./lib/chibios/os/rt/include/chschd.h ****     ch_queue_t          queue;      /**< @brief Threads queues element.     */
 138:./lib/chibios/os/rt/include/chschd.h ****     ch_priority_queue_t pqueue;     /**< @brief Threads ordered queues
 139:./lib/chibios/os/rt/include/chschd.h ****                                          element.                           */
 140:./lib/chibios/os/rt/include/chschd.h ****   } hdr;
 141:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Processor context.          */
 142:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 143:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 144:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 145:./lib/chibios/os/rt/include/chschd.h **** #endif
 146:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the ReadyList structure. */
 147:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 148:./lib/chibios/os/rt/include/chschd.h ****   /**
 149:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread name or @p NULL.
 150:./lib/chibios/os/rt/include/chschd.h ****    */
 151:./lib/chibios/os/rt/include/chschd.h ****   const char            *name;
 152:./lib/chibios/os/rt/include/chschd.h **** #endif
 153:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 154:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 155:./lib/chibios/os/rt/include/chschd.h ****   /**
 156:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Working area base address.
 157:./lib/chibios/os/rt/include/chschd.h ****    * @note    This pointer is used for stack overflow checks and for
 158:./lib/chibios/os/rt/include/chschd.h ****    *          dynamic threading.
 159:./lib/chibios/os/rt/include/chschd.h ****    */
 160:./lib/chibios/os/rt/include/chschd.h ****   stkalign_t            *wabase;
 161:./lib/chibios/os/rt/include/chschd.h **** #endif
 162:./lib/chibios/os/rt/include/chschd.h ****   /**
 163:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Current thread state.
 164:./lib/chibios/os/rt/include/chschd.h ****    */
 165:./lib/chibios/os/rt/include/chschd.h ****   tstate_t              state;
 166:./lib/chibios/os/rt/include/chschd.h ****   /**
 167:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Various thread flags.
 168:./lib/chibios/os/rt/include/chschd.h ****    */
 169:./lib/chibios/os/rt/include/chschd.h ****   tmode_t               flags;
 170:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 171:./lib/chibios/os/rt/include/chschd.h ****   /**
 172:./lib/chibios/os/rt/include/chschd.h ****    * @brief   References to this thread.
 173:./lib/chibios/os/rt/include/chschd.h ****    */
 174:./lib/chibios/os/rt/include/chschd.h ****   trefs_t               refs;
 175:./lib/chibios/os/rt/include/chschd.h **** #endif
 176:./lib/chibios/os/rt/include/chschd.h ****   /**
 177:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Number of ticks remaining to this thread.
 178:./lib/chibios/os/rt/include/chschd.h ****    */
 179:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_TIME_QUANTUM > 0) || defined(__DOXYGEN__)
 180:./lib/chibios/os/rt/include/chschd.h ****   tslices_t             ticks;
 181:./lib/chibios/os/rt/include/chschd.h **** #endif
 182:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 183:./lib/chibios/os/rt/include/chschd.h ****   /**
 184:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread consumed time in ticks.
 185:./lib/chibios/os/rt/include/chschd.h ****    * @note    This field can overflow.
 186:./lib/chibios/os/rt/include/chschd.h ****    */
 187:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    time;
 188:./lib/chibios/os/rt/include/chschd.h **** #endif
 189:./lib/chibios/os/rt/include/chschd.h ****   /**
 190:./lib/chibios/os/rt/include/chschd.h ****    * @brief   State-specific fields.
 191:./lib/chibios/os/rt/include/chschd.h ****    * @note    All the fields declared in this union are only valid in the
 192:./lib/chibios/os/rt/include/chschd.h ****    *          specified state or condition and are thus volatile.
 193:./lib/chibios/os/rt/include/chschd.h ****    */
 194:./lib/chibios/os/rt/include/chschd.h ****   union {
 195:./lib/chibios/os/rt/include/chschd.h ****     /**
 196:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread wakeup code.
 197:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field contains the low level message sent to the thread
 198:./lib/chibios/os/rt/include/chschd.h ****      *          by the waking thread or interrupt handler. The value is valid
 199:./lib/chibios/os/rt/include/chschd.h ****      *          after exiting the @p chSchWakeupS() function.
 200:./lib/chibios/os/rt/include/chschd.h ****      */
 201:./lib/chibios/os/rt/include/chschd.h ****     msg_t               rdymsg;
 202:./lib/chibios/os/rt/include/chschd.h ****     /**
 203:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread exit code.
 204:./lib/chibios/os/rt/include/chschd.h ****      * @note    The thread termination code is stored in this field in order
 205:./lib/chibios/os/rt/include/chschd.h ****      *          to be retrieved by the thread performing a @p chThdWait() on
 206:./lib/chibios/os/rt/include/chschd.h ****      *          this thread.
 207:./lib/chibios/os/rt/include/chschd.h ****      */
 208:./lib/chibios/os/rt/include/chschd.h ****     msg_t               exitcode;
 209:./lib/chibios/os/rt/include/chschd.h ****     /**
 210:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic "wait" object.
 211:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a generic pointer to a synchronization
 212:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in one of the wait
 213:./lib/chibios/os/rt/include/chschd.h ****      *          states.
 214:./lib/chibios/os/rt/include/chschd.h ****      */
 215:./lib/chibios/os/rt/include/chschd.h ****     void                *wtobjp;
 216:./lib/chibios/os/rt/include/chschd.h ****     /**
 217:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic thread reference object.
 218:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 219:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_SUSPENDED
 220:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 221:./lib/chibios/os/rt/include/chschd.h ****      */
 222:./lib/chibios/os/rt/include/chschd.h ****     thread_reference_t  *wttrp;
 223:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 224:./lib/chibios/os/rt/include/chschd.h ****     /**
 225:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread sent message.
 226:./lib/chibios/os/rt/include/chschd.h ****      */
 227:./lib/chibios/os/rt/include/chschd.h ****     msg_t               sentmsg;
 228:./lib/chibios/os/rt/include/chschd.h **** #endif
 229:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 230:./lib/chibios/os/rt/include/chschd.h ****     /**
 231:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic semaphore object.
 232:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 233:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTSEM
 234:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 235:./lib/chibios/os/rt/include/chschd.h ****      */
 236:./lib/chibios/os/rt/include/chschd.h ****     struct ch_semaphore *wtsemp;
 237:./lib/chibios/os/rt/include/chschd.h **** #endif
 238:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 239:./lib/chibios/os/rt/include/chschd.h ****     /**
 240:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic mutex object.
 241:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 242:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTMTX
 243:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 244:./lib/chibios/os/rt/include/chschd.h ****      */
 245:./lib/chibios/os/rt/include/chschd.h ****     struct ch_mutex     *wtmtxp;
 246:./lib/chibios/os/rt/include/chschd.h **** #endif
 247:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 248:./lib/chibios/os/rt/include/chschd.h ****     /**
 249:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Enabled events mask.
 250:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is only valid while the thread is in the
 251:./lib/chibios/os/rt/include/chschd.h ****      *          @p CH_STATE_WTOREVT or @p CH_STATE_WTANDEVT states.
 252:./lib/chibios/os/rt/include/chschd.h ****      */
 253:./lib/chibios/os/rt/include/chschd.h ****     eventmask_t         ewmask;
 254:./lib/chibios/os/rt/include/chschd.h **** #endif
 255:./lib/chibios/os/rt/include/chschd.h ****   }                     u;
 256:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 257:./lib/chibios/os/rt/include/chschd.h ****   /**
 258:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Termination waiting list.
 259:./lib/chibios/os/rt/include/chschd.h ****    */
 260:./lib/chibios/os/rt/include/chschd.h ****   ch_list_t             waiting;
 261:./lib/chibios/os/rt/include/chschd.h **** #endif
 262:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 263:./lib/chibios/os/rt/include/chschd.h ****   /**
 264:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Messages queue.
 265:./lib/chibios/os/rt/include/chschd.h ****    */
 266:./lib/chibios/os/rt/include/chschd.h ****   ch_queue_t            msgqueue;
 267:./lib/chibios/os/rt/include/chschd.h **** #endif
 268:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 269:./lib/chibios/os/rt/include/chschd.h ****   /**
 270:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pending events mask.
 271:./lib/chibios/os/rt/include/chschd.h ****    */
 272:./lib/chibios/os/rt/include/chschd.h ****   eventmask_t           epending;
 273:./lib/chibios/os/rt/include/chschd.h **** #endif
 274:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 275:./lib/chibios/os/rt/include/chschd.h ****   /**
 276:./lib/chibios/os/rt/include/chschd.h ****    * @brief   List of the mutexes owned by this thread.
 277:./lib/chibios/os/rt/include/chschd.h ****    * @note    The list is terminated by a @p NULL in this field.
 278:./lib/chibios/os/rt/include/chschd.h ****    */
 279:./lib/chibios/os/rt/include/chschd.h ****   struct ch_mutex       *mtxlist;
 280:./lib/chibios/os/rt/include/chschd.h ****   /**
 281:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread's own, non-inherited, priority.
 282:./lib/chibios/os/rt/include/chschd.h ****    */
 283:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               realprio;
 284:./lib/chibios/os/rt/include/chschd.h **** #endif
 285:./lib/chibios/os/rt/include/chschd.h **** #if ((CH_CFG_USE_DYNAMIC == TRUE) && (CH_CFG_USE_MEMPOOLS == TRUE)) ||      \
 286:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 287:./lib/chibios/os/rt/include/chschd.h ****   /**
 288:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Memory Pool where the thread workspace is returned.
 289:./lib/chibios/os/rt/include/chschd.h ****    */
 290:./lib/chibios/os/rt/include/chschd.h ****   void                  *mpool;
 291:./lib/chibios/os/rt/include/chschd.h **** #endif
 292:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 293:./lib/chibios/os/rt/include/chschd.h ****   /**
 294:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread statistics.
 295:./lib/chibios/os/rt/include/chschd.h ****    */
 296:./lib/chibios/os/rt/include/chschd.h ****   time_measurement_t    stats;
 297:./lib/chibios/os/rt/include/chschd.h **** #endif
 298:./lib/chibios/os/rt/include/chschd.h **** #if defined(CH_CFG_THREAD_EXTRA_FIELDS)
 299:./lib/chibios/os/rt/include/chschd.h ****   /* Extra fields defined in chconf.h.*/
 300:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_THREAD_EXTRA_FIELDS
 301:./lib/chibios/os/rt/include/chschd.h **** #endif
 302:./lib/chibios/os/rt/include/chschd.h **** };
 303:./lib/chibios/os/rt/include/chschd.h **** 
 304:./lib/chibios/os/rt/include/chschd.h **** /**
 305:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Type of a Virtual Timer structure.
 306:./lib/chibios/os/rt/include/chschd.h ****  */
 307:./lib/chibios/os/rt/include/chschd.h **** typedef struct ch_delta_list delta_list_t;
 308:./lib/chibios/os/rt/include/chschd.h **** 
 309:./lib/chibios/os/rt/include/chschd.h **** /**
 310:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual Timer delta list element and header structure.
 311:./lib/chibios/os/rt/include/chschd.h ****  */
 312:./lib/chibios/os/rt/include/chschd.h **** struct ch_delta_list {
 313:./lib/chibios/os/rt/include/chschd.h ****   delta_list_t          *next;      /**< @brief Next timer in the list.     */
 314:./lib/chibios/os/rt/include/chschd.h ****   delta_list_t          *prev;      /**< @brief Previous timer in the list. */
 315:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Time delta before timeout.  */
 316:./lib/chibios/os/rt/include/chschd.h **** };
 317:./lib/chibios/os/rt/include/chschd.h **** 
 318:./lib/chibios/os/rt/include/chschd.h **** /**
 319:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Structure representing a Virtual Timer.
 320:./lib/chibios/os/rt/include/chschd.h ****  */
 321:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timer {
 322:./lib/chibios/os/rt/include/chschd.h ****   delta_list_t          dlist;      /**< @brief Delta list element.         */
 323:./lib/chibios/os/rt/include/chschd.h ****   vtfunc_t              func;       /**< @brief Timer callback function
 324:./lib/chibios/os/rt/include/chschd.h ****                                                 pointer.                    */
 325:./lib/chibios/os/rt/include/chschd.h ****   void                  *par;       /**< @brief Timer callback function
 326:./lib/chibios/os/rt/include/chschd.h ****                                                 parameter.                  */
 327:./lib/chibios/os/rt/include/chschd.h **** };
 328:./lib/chibios/os/rt/include/chschd.h **** 
 329:./lib/chibios/os/rt/include/chschd.h **** /**
 330:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Structure representing a virtual timers list header.
 331:./lib/chibios/os/rt/include/chschd.h ****  * @note    The timers list is implemented as a double link bidirectional list
 332:./lib/chibios/os/rt/include/chschd.h ****  *          in order to make the unlink time constant, the reset of a virtual
 333:./lib/chibios/os/rt/include/chschd.h ****  *          timer is often used in the code.
 334:./lib/chibios/os/rt/include/chschd.h ****  */
 335:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timers_list {
 336:./lib/chibios/os/rt/include/chschd.h ****   delta_list_t          dlist;      /**< @brief Delta list header.          */
 337:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 338:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    systime;    /**< @brief System Time counter.        */
 339:./lib/chibios/os/rt/include/chschd.h **** #endif
 340:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA > 0) || defined(__DOXYGEN__)
 341:./lib/chibios/os/rt/include/chschd.h ****   /**
 342:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System time of the last tick event.
 343:./lib/chibios/os/rt/include/chschd.h ****    */
 344:./lib/chibios/os/rt/include/chschd.h ****   systime_t             lasttime;   /**< @brief System time of the last
 345:./lib/chibios/os/rt/include/chschd.h ****                                                 tick event.                 */
 346:./lib/chibios/os/rt/include/chschd.h **** #endif
 347:./lib/chibios/os/rt/include/chschd.h **** };
 348:./lib/chibios/os/rt/include/chschd.h **** 
 349:./lib/chibios/os/rt/include/chschd.h **** /**
 350:./lib/chibios/os/rt/include/chschd.h ****  * @extends threads_queue_t
 351:./lib/chibios/os/rt/include/chschd.h ****  */
 352:./lib/chibios/os/rt/include/chschd.h **** struct ch_ready_list {
 353:./lib/chibios/os/rt/include/chschd.h ****   /**
 354:./lib/chibios/os/rt/include/chschd.h ****    * @brief     Threads ordered queues header.
 355:./lib/chibios/os/rt/include/chschd.h ****    * @note      The priority field must be initialized to zero.
 356:./lib/chibios/os/rt/include/chschd.h ****    */
 357:./lib/chibios/os/rt/include/chschd.h ****   ch_priority_queue_t   pqueue;
 358:./lib/chibios/os/rt/include/chschd.h ****   /**
 359:./lib/chibios/os/rt/include/chschd.h ****    * @brief Not used, present because offsets.
 360:./lib/chibios/os/rt/include/chschd.h ****    */
 361:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;
 362:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 363:./lib/chibios/os/rt/include/chschd.h ****   /**
 364:./lib/chibios/os/rt/include/chschd.h ****    * @brief     Newer registry element.
 365:./lib/chibios/os/rt/include/chschd.h ****    */
 366:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;
 367:./lib/chibios/os/rt/include/chschd.h ****   /**
 368:./lib/chibios/os/rt/include/chschd.h ****    *  @brief    Older registry element.
 369:./lib/chibios/os/rt/include/chschd.h ****    */
 370:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;
 371:./lib/chibios/os/rt/include/chschd.h **** #endif
 372:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the thread_t structure.*/
 373:./lib/chibios/os/rt/include/chschd.h ****   /**
 374:./lib/chibios/os/rt/include/chschd.h ****    * @brief     The currently running thread.
 375:./lib/chibios/os/rt/include/chschd.h ****    */
 376:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *current;
 377:./lib/chibios/os/rt/include/chschd.h **** };
 378:./lib/chibios/os/rt/include/chschd.h **** 
 379:./lib/chibios/os/rt/include/chschd.h **** /**
 380:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System debug data structure.
 381:./lib/chibios/os/rt/include/chschd.h ****  */
 382:./lib/chibios/os/rt/include/chschd.h **** struct ch_system_debug {
 383:./lib/chibios/os/rt/include/chschd.h ****   /**
 384:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pointer to the panic message.
 385:./lib/chibios/os/rt/include/chschd.h ****    * @details This pointer is meant to be accessed through the debugger, it is
 386:./lib/chibios/os/rt/include/chschd.h ****    *          written once and then the system is halted.
 387:./lib/chibios/os/rt/include/chschd.h ****    * @note    Accesses to this pointer must never be optimized out so the
 388:./lib/chibios/os/rt/include/chschd.h ****    *          field itself is declared volatile.
 389:./lib/chibios/os/rt/include/chschd.h ****    */
 390:./lib/chibios/os/rt/include/chschd.h ****   const char            * volatile panic_msg;
 391:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_SYSTEM_STATE_CHECK == TRUE) || defined(__DOXYGEN__)
 392:./lib/chibios/os/rt/include/chschd.h ****   /**
 393:./lib/chibios/os/rt/include/chschd.h ****    * @brief   ISR nesting level.
 394:./lib/chibios/os/rt/include/chschd.h ****    */
 395:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 isr_cnt;
 396:./lib/chibios/os/rt/include/chschd.h ****   /**
 397:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Lock nesting level.
 398:./lib/chibios/os/rt/include/chschd.h ****    */
 399:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 lock_cnt;
 400:./lib/chibios/os/rt/include/chschd.h **** #endif
 401:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_TRACE_MASK != CH_DBG_TRACE_MASK_DISABLED) || defined(__DOXYGEN__)
 402:./lib/chibios/os/rt/include/chschd.h ****   /**
 403:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Public trace buffer.
 404:./lib/chibios/os/rt/include/chschd.h ****    */
 405:./lib/chibios/os/rt/include/chschd.h ****   ch_trace_buffer_t     trace_buffer;
 406:./lib/chibios/os/rt/include/chschd.h **** #endif
 407:./lib/chibios/os/rt/include/chschd.h **** };
 408:./lib/chibios/os/rt/include/chschd.h **** 
 409:./lib/chibios/os/rt/include/chschd.h **** /**
 410:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System data structure.
 411:./lib/chibios/os/rt/include/chschd.h ****  * @note    This structure contain all the data areas used by the OS except
 412:./lib/chibios/os/rt/include/chschd.h ****  *          stacks.
 413:./lib/chibios/os/rt/include/chschd.h ****  */
 414:./lib/chibios/os/rt/include/chschd.h **** struct ch_system {
 415:./lib/chibios/os/rt/include/chschd.h ****   /**
 416:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Ready list header.
 417:./lib/chibios/os/rt/include/chschd.h ****    */
 418:./lib/chibios/os/rt/include/chschd.h ****   ready_list_t          rlist;
 419:./lib/chibios/os/rt/include/chschd.h ****   /**
 420:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Virtual timers delta list header.
 421:./lib/chibios/os/rt/include/chschd.h ****    */
 422:./lib/chibios/os/rt/include/chschd.h ****   virtual_timers_list_t vtlist;
 423:./lib/chibios/os/rt/include/chschd.h ****   /**
 424:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System debug.
 425:./lib/chibios/os/rt/include/chschd.h ****    */
 426:./lib/chibios/os/rt/include/chschd.h ****   system_debug_t        dbg;
 427:./lib/chibios/os/rt/include/chschd.h ****   /**
 428:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Main thread descriptor.
 429:./lib/chibios/os/rt/include/chschd.h ****    */
 430:./lib/chibios/os/rt/include/chschd.h ****   thread_t              mainthread;
 431:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_TM == TRUE) || defined(__DOXYGEN__)
 432:./lib/chibios/os/rt/include/chschd.h ****   /**
 433:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Time measurement calibration data.
 434:./lib/chibios/os/rt/include/chschd.h ****    */
 435:./lib/chibios/os/rt/include/chschd.h ****   tm_calibration_t      tm;
 436:./lib/chibios/os/rt/include/chschd.h **** #endif
 437:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 438:./lib/chibios/os/rt/include/chschd.h ****   /**
 439:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Global kernel statistics.
 440:./lib/chibios/os/rt/include/chschd.h ****    */
 441:./lib/chibios/os/rt/include/chschd.h ****   kernel_stats_t        kernel_stats;
 442:./lib/chibios/os/rt/include/chschd.h **** #endif
 443:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_SYSTEM_EXTRA_FIELDS
 444:./lib/chibios/os/rt/include/chschd.h **** };
 445:./lib/chibios/os/rt/include/chschd.h **** 
 446:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 447:./lib/chibios/os/rt/include/chschd.h **** /* Module macros.                                                            */
 448:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 449:./lib/chibios/os/rt/include/chschd.h **** 
 450:./lib/chibios/os/rt/include/chschd.h **** /**
 451:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Returns the priority of the first thread on the given ready list.
 452:./lib/chibios/os/rt/include/chschd.h ****  *
 453:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 454:./lib/chibios/os/rt/include/chschd.h ****  */
 455:./lib/chibios/os/rt/include/chschd.h **** #define firstprio(rlp)  ((rlp)->next->prio)
 456:./lib/chibios/os/rt/include/chschd.h **** 
 457:./lib/chibios/os/rt/include/chschd.h **** /**
 458:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Current thread pointer access macro.
 459:./lib/chibios/os/rt/include/chschd.h ****  * @note    This macro is not meant to be used in the application code but
 460:./lib/chibios/os/rt/include/chschd.h ****  *          only from within the kernel, use @p chThdGetSelfX() instead.
 461:./lib/chibios/os/rt/include/chschd.h ****  */
 462:./lib/chibios/os/rt/include/chschd.h **** #define currp ch.rlist.current
 463:./lib/chibios/os/rt/include/chschd.h **** 
 464:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 465:./lib/chibios/os/rt/include/chschd.h **** /* External declarations.                                                    */
 466:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 467:./lib/chibios/os/rt/include/chschd.h **** 
 468:./lib/chibios/os/rt/include/chschd.h **** #if !defined(__DOXYGEN__)
 469:./lib/chibios/os/rt/include/chschd.h **** extern ch_system_t ch;
 470:./lib/chibios/os/rt/include/chschd.h **** #endif
 471:./lib/chibios/os/rt/include/chschd.h **** 
 472:./lib/chibios/os/rt/include/chschd.h **** /*
 473:./lib/chibios/os/rt/include/chschd.h ****  * Scheduler APIs.
 474:./lib/chibios/os/rt/include/chschd.h ****  */
 475:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 476:./lib/chibios/os/rt/include/chschd.h **** extern "C" {
 477:./lib/chibios/os/rt/include/chschd.h **** #endif
 478:./lib/chibios/os/rt/include/chschd.h ****   void _scheduler_init(void);
 479:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyI(thread_t *tp);
 480:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyAheadI(thread_t *tp);
 481:./lib/chibios/os/rt/include/chschd.h ****   void chSchGoSleepS(tstate_t newstate);
 482:./lib/chibios/os/rt/include/chschd.h ****   msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout);
 483:./lib/chibios/os/rt/include/chschd.h ****   void chSchWakeupS(thread_t *ntp, msg_t msg);
 484:./lib/chibios/os/rt/include/chschd.h ****   void chSchRescheduleS(void);
 485:./lib/chibios/os/rt/include/chschd.h ****   bool chSchIsPreemptionRequired(void);
 486:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleBehind(void);
 487:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleAhead(void);
 488:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoReschedule(void);
 489:./lib/chibios/os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == FALSE
 490:./lib/chibios/os/rt/include/chschd.h ****   void ch_sch_prio_insert(ch_queue_t *tp, ch_queue_t *qp);
 491:./lib/chibios/os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == FALSE */
 492:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 493:./lib/chibios/os/rt/include/chschd.h **** }
 494:./lib/chibios/os/rt/include/chschd.h **** #endif
 495:./lib/chibios/os/rt/include/chschd.h **** 
 496:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 497:./lib/chibios/os/rt/include/chschd.h **** /* Module inline functions.                                                  */
 498:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 499:./lib/chibios/os/rt/include/chschd.h **** 
 500:./lib/chibios/os/rt/include/chschd.h **** /* If the performance code path has been chosen then all the following
 501:./lib/chibios/os/rt/include/chschd.h ****    functions are inlined into the various kernel modules.*/
 502:./lib/chibios/os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == TRUE
 503:./lib/chibios/os/rt/include/chschd.h **** static inline void ch_sch_prio_insert(ch_queue_t *tp, ch_queue_t *qp) {
 504:./lib/chibios/os/rt/include/chschd.h **** 
 505:./lib/chibios/os/rt/include/chschd.h ****   ch_queue_t *cp = qp;
 506:./lib/chibios/os/rt/include/chschd.h ****   do {
 507:./lib/chibios/os/rt/include/chschd.h ****     cp = cp->next;
 508:./lib/chibios/os/rt/include/chschd.h ****   } while ((cp != qp) &&
 509:./lib/chibios/os/rt/include/chschd.h ****            (((thread_t *)cp)->hdr.pqueue.prio >= ((thread_t *)tp)->hdr.pqueue.prio));
 510:./lib/chibios/os/rt/include/chschd.h ****   tp->next       = cp;
 511:./lib/chibios/os/rt/include/chschd.h ****   tp->prev       = cp->prev;
 512:./lib/chibios/os/rt/include/chschd.h ****   tp->prev->next = tp;
 513:./lib/chibios/os/rt/include/chschd.h ****   cp->prev       = tp;
 514:./lib/chibios/os/rt/include/chschd.h **** }
 515:./lib/chibios/os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == TRUE */
 516:./lib/chibios/os/rt/include/chschd.h **** 
 517:./lib/chibios/os/rt/include/chschd.h **** /**
 518:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Determines if the current thread must reschedule.
 519:./lib/chibios/os/rt/include/chschd.h ****  * @details This function returns @p true if there is a ready thread with
 520:./lib/chibios/os/rt/include/chschd.h ****  *          higher priority.
 521:./lib/chibios/os/rt/include/chschd.h ****  *
 522:./lib/chibios/os/rt/include/chschd.h ****  * @return              The priorities situation.
 523:./lib/chibios/os/rt/include/chschd.h ****  * @retval false        if rescheduling is not necessary.
 524:./lib/chibios/os/rt/include/chschd.h ****  * @retval true         if there is a ready thread at higher priority.
 525:./lib/chibios/os/rt/include/chschd.h ****  *
 526:./lib/chibios/os/rt/include/chschd.h ****  * @iclass
 527:./lib/chibios/os/rt/include/chschd.h ****  */
 528:./lib/chibios/os/rt/include/chschd.h **** static inline bool chSchIsRescRequiredI(void) {
 529:./lib/chibios/os/rt/include/chschd.h **** 
 530:./lib/chibios/os/rt/include/chschd.h ****   chDbgCheckClassI();
 531:./lib/chibios/os/rt/include/chschd.h **** 
 532:./lib/chibios/os/rt/include/chschd.h ****   return firstprio(&ch.rlist.pqueue) > currp->hdr.pqueue.prio;
 533:./lib/chibios/os/rt/include/chschd.h **** }
 534:./lib/chibios/os/rt/include/chschd.h **** 
 535:./lib/chibios/os/rt/include/chschd.h **** /**
 536:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Determines if yielding is possible.
 537:./lib/chibios/os/rt/include/chschd.h ****  * @details This function returns @p true if there is a ready thread with
 538:./lib/chibios/os/rt/include/chschd.h ****  *          equal or higher priority.
 539:./lib/chibios/os/rt/include/chschd.h ****  *
 540:./lib/chibios/os/rt/include/chschd.h ****  * @return              The priorities situation.
 541:./lib/chibios/os/rt/include/chschd.h ****  * @retval false        if yielding is not possible.
 542:./lib/chibios/os/rt/include/chschd.h ****  * @retval true         if there is a ready thread at equal or higher priority.
 543:./lib/chibios/os/rt/include/chschd.h ****  *
 544:./lib/chibios/os/rt/include/chschd.h ****  * @sclass
 545:./lib/chibios/os/rt/include/chschd.h ****  */
 546:./lib/chibios/os/rt/include/chschd.h **** static inline bool chSchCanYieldS(void) {
 547:./lib/chibios/os/rt/include/chschd.h **** 
 548:./lib/chibios/os/rt/include/chschd.h ****   chDbgCheckClassS();
 549:./lib/chibios/os/rt/include/chschd.h **** 
 550:./lib/chibios/os/rt/include/chschd.h ****   return firstprio(&ch.rlist.pqueue) >= currp->hdr.pqueue.prio;
 551:./lib/chibios/os/rt/include/chschd.h **** }
 552:./lib/chibios/os/rt/include/chschd.h **** 
 553:./lib/chibios/os/rt/include/chschd.h **** /**
 554:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Yields the time slot.
 555:./lib/chibios/os/rt/include/chschd.h ****  * @details Yields the CPU control to the next thread in the ready list with
 556:./lib/chibios/os/rt/include/chschd.h ****  *          equal or higher priority, if any.
 557:./lib/chibios/os/rt/include/chschd.h ****  *
 558:./lib/chibios/os/rt/include/chschd.h ****  * @sclass
 559:./lib/chibios/os/rt/include/chschd.h ****  */
 560:./lib/chibios/os/rt/include/chschd.h **** static inline void chSchDoYieldS(void) {
 2067              		.loc 10 560 20 view .LVU665
 2068              	.LBB525:
 561:./lib/chibios/os/rt/include/chschd.h **** 
 562:./lib/chibios/os/rt/include/chschd.h ****   chDbgCheckClassS();
 2069              		.loc 10 562 21 view .LVU666
 563:./lib/chibios/os/rt/include/chschd.h **** 
 564:./lib/chibios/os/rt/include/chschd.h ****   if (chSchCanYieldS()) {
 2070              		.loc 10 564 3 view .LVU667
 2071              	.LBB526:
 2072              	.LBI526:
 546:./lib/chibios/os/rt/include/chschd.h **** 
 2073              		.loc 10 546 20 view .LVU668
 2074              	.LBB527:
 548:./lib/chibios/os/rt/include/chschd.h **** 
 2075              		.loc 10 548 21 view .LVU669
 550:./lib/chibios/os/rt/include/chschd.h **** }
 2076              		.loc 10 550 3 view .LVU670
 550:./lib/chibios/os/rt/include/chschd.h **** }
 2077              		.loc 10 550 10 is_stmt 0 view .LVU671
 2078 0008 064B     		ldr	r3, .L50
 2079 000a 1A68     		ldr	r2, [r3]
 550:./lib/chibios/os/rt/include/chschd.h **** }
 2080              		.loc 10 550 58 view .LVU672
 2081 000c 9B69     		ldr	r3, [r3, #24]
 2082              	.LBE527:
 2083              	.LBE526:
 2084              		.loc 10 564 6 view .LVU673
 2085 000e 9268     		ldr	r2, [r2, #8]
 2086 0010 9B68     		ldr	r3, [r3, #8]
 2087 0012 9A42     		cmp	r2, r3
 2088 0014 01D3     		bcc	.L49
 565:./lib/chibios/os/rt/include/chschd.h ****     chSchDoRescheduleBehind();
 2089              		.loc 10 565 5 is_stmt 1 view .LVU674
 2090 0016 FFF7FEFF 		bl	chSchDoRescheduleBehind
 2091              	.LVL107:
 2092              	.L49:
 2093              	.LBE525:
 2094              	.LBE524:
 721:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 2095              		.loc 1 721 3 view .LVU675
 2096              	.LBB528:
 2097              	.LBI528:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2098              		.loc 3 367 20 view .LVU676
 2099              	.LBB529:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2100              		.loc 3 369 22 view .LVU677
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2101              		.loc 3 370 33 view .LVU678
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2102              		.loc 3 376 3 view .LVU679
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2103              		.loc 3 376 3 view .LVU680
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2104              		.loc 3 376 3 view .LVU681
 2105              		.loc 3 380 3 view .LVU682
 2106              	.LBB530:
 2107              	.LBI530:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2108              		.loc 4 693 27 view .LVU683
 2109              		.loc 4 696 3 view .LVU684
 2110              	.LBB531:
 2111              	.LBI531:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2112              		.loc 5 491 27 view .LVU685
 2113              	.LBB532:
 2114              		.loc 5 493 3 view .LVU686
 2115 001a 0023     		movs	r3, #0
 2116              		.syntax unified
 2117              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2118 001c 83F31188 		MSR basepri, r3
 2119              	@ 0 "" 2
 2120              	.LVL108:
 2121              		.loc 5 493 3 is_stmt 0 view .LVU687
 2122              		.thumb
 2123              		.syntax unified
 2124              	.LBE532:
 2125              	.LBE531:
 2126              	.LBE530:
 2127              	.LBE529:
 2128              	.LBE528:
 722:lib/chibios/os/rt/src/chthreads.c **** }
 2129              		.loc 1 722 1 view .LVU688
 2130 0020 08BD     		pop	{r3, pc}
 2131              	.L51:
 2132 0022 00BF     		.align	2
 2133              	.L50:
 2134 0024 00000000 		.word	ch
 2135              		.cfi_endproc
 2136              	.LFE306:
 2138              		.section	.text.chThdSuspendS,"ax",%progbits
 2139              		.align	1
 2140              		.global	chThdSuspendS
 2141              		.syntax unified
 2142              		.thumb
 2143              		.thumb_func
 2145              	chThdSuspendS:
 2146              	.LVL109:
 2147              	.LFB307:
 723:lib/chibios/os/rt/src/chthreads.c **** 
 724:lib/chibios/os/rt/src/chthreads.c **** /**
 725:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 726:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 727:lib/chibios/os/rt/src/chthreads.c ****  *          context.
 728:lib/chibios/os/rt/src/chthreads.c ****  *
 729:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 730:lib/chibios/os/rt/src/chthreads.c ****  * @return              The wake up message.
 731:lib/chibios/os/rt/src/chthreads.c ****  *
 732:lib/chibios/os/rt/src/chthreads.c ****  * @sclass
 733:lib/chibios/os/rt/src/chthreads.c ****  */
 734:lib/chibios/os/rt/src/chthreads.c **** msg_t chThdSuspendS(thread_reference_t *trp) {
 2148              		.loc 1 734 46 is_stmt 1 view -0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 0
 2151              		@ frame_needed = 0, uses_anonymous_args = 0
 735:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 2152              		.loc 1 735 3 view .LVU690
 2153              	.LBB533:
 2154              	.LBI533:
 275:./lib/chibios/os/rt/include/chthreads.h **** 
 2155              		.loc 6 275 25 view .LVU691
 2156              	.LBB534:
 277:./lib/chibios/os/rt/include/chthreads.h **** }
 2157              		.loc 6 277 3 view .LVU692
 2158              	.LBE534:
 2159              	.LBE533:
 734:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 2160              		.loc 1 734 46 is_stmt 0 view .LVU693
 2161 0000 10B5     		push	{r4, lr}
 2162              		.cfi_def_cfa_offset 8
 2163              		.cfi_offset 4, -8
 2164              		.cfi_offset 14, -4
 2165              	.LBB536:
 2166              	.LBB535:
 277:./lib/chibios/os/rt/include/chthreads.h **** }
 2167              		.loc 6 277 18 view .LVU694
 2168 0002 054C     		ldr	r4, .L53
 2169 0004 A369     		ldr	r3, [r4, #24]
 2170              	.LVL110:
 277:./lib/chibios/os/rt/include/chthreads.h **** }
 2171              		.loc 6 277 18 view .LVU695
 2172              	.LBE535:
 2173              	.LBE536:
 736:lib/chibios/os/rt/src/chthreads.c **** 
 737:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(*trp == NULL, "not NULL");
 2174              		.loc 1 737 3 is_stmt 1 view .LVU696
 2175              		.loc 1 737 3 view .LVU697
 2176              		.loc 1 737 3 view .LVU698
 738:lib/chibios/os/rt/src/chthreads.c **** 
 739:lib/chibios/os/rt/src/chthreads.c ****   *trp = tp;
 2177              		.loc 1 739 3 view .LVU699
 2178              		.loc 1 739 8 is_stmt 0 view .LVU700
 2179 0006 0360     		str	r3, [r0]
 740:lib/chibios/os/rt/src/chthreads.c ****   tp->u.wttrp = trp;
 2180              		.loc 1 740 3 is_stmt 1 view .LVU701
 2181              		.loc 1 740 15 is_stmt 0 view .LVU702
 2182 0008 5862     		str	r0, [r3, #36]
 741:lib/chibios/os/rt/src/chthreads.c ****   chSchGoSleepS(CH_STATE_SUSPENDED);
 2183              		.loc 1 741 3 is_stmt 1 view .LVU703
 2184 000a 0320     		movs	r0, #3
 2185              	.LVL111:
 2186              		.loc 1 741 3 is_stmt 0 view .LVU704
 2187 000c FFF7FEFF 		bl	chSchGoSleepS
 2188              	.LVL112:
 742:lib/chibios/os/rt/src/chthreads.c **** 
 743:lib/chibios/os/rt/src/chthreads.c ****   return chThdGetSelfX()->u.rdymsg;
 2189              		.loc 1 743 3 is_stmt 1 view .LVU705
 2190              	.LBB537:
 2191              	.LBI537:
 275:./lib/chibios/os/rt/include/chthreads.h **** 
 2192              		.loc 6 275 25 view .LVU706
 2193              	.LBB538:
 277:./lib/chibios/os/rt/include/chthreads.h **** }
 2194              		.loc 6 277 3 view .LVU707
 2195              	.LBE538:
 2196              	.LBE537:
 2197              		.loc 1 743 28 is_stmt 0 view .LVU708
 2198 0010 A369     		ldr	r3, [r4, #24]
 744:lib/chibios/os/rt/src/chthreads.c **** }
 2199              		.loc 1 744 1 view .LVU709
 2200 0012 586A     		ldr	r0, [r3, #36]
 2201 0014 10BD     		pop	{r4, pc}
 2202              	.L54:
 2203 0016 00BF     		.align	2
 2204              	.L53:
 2205 0018 00000000 		.word	ch
 2206              		.cfi_endproc
 2207              	.LFE307:
 2209              		.section	.text.chThdSuspendTimeoutS,"ax",%progbits
 2210              		.align	1
 2211              		.global	chThdSuspendTimeoutS
 2212              		.syntax unified
 2213              		.thumb
 2214              		.thumb_func
 2216              	chThdSuspendTimeoutS:
 2217              	.LVL113:
 2218              	.LFB308:
 745:lib/chibios/os/rt/src/chthreads.c **** 
 746:lib/chibios/os/rt/src/chthreads.c **** /**
 747:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 748:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 749:lib/chibios/os/rt/src/chthreads.c ****  *          context.
 750:lib/chibios/os/rt/src/chthreads.c ****  *
 751:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 752:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] timeout   the timeout in system ticks, the special values are
 753:lib/chibios/os/rt/src/chthreads.c ****  *                      handled as follow:
 754:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 755:lib/chibios/os/rt/src/chthreads.c ****  *                        state.
 756:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 757:lib/chibios/os/rt/src/chthreads.c ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 758:lib/chibios/os/rt/src/chthreads.c ****  *                        occurred.
 759:lib/chibios/os/rt/src/chthreads.c ****  *                      .
 760:lib/chibios/os/rt/src/chthreads.c ****  * @return              The wake up message.
 761:lib/chibios/os/rt/src/chthreads.c ****  * @retval MSG_TIMEOUT  if the operation timed out.
 762:lib/chibios/os/rt/src/chthreads.c ****  *
 763:lib/chibios/os/rt/src/chthreads.c ****  * @sclass
 764:lib/chibios/os/rt/src/chthreads.c ****  */
 765:lib/chibios/os/rt/src/chthreads.c **** msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout) {
 2219              		.loc 1 765 76 is_stmt 1 view -0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 0, uses_anonymous_args = 0
 2223              		@ link register save eliminated.
 766:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 2224              		.loc 1 766 3 view .LVU711
 2225              	.LBB539:
 2226              	.LBI539:
 275:./lib/chibios/os/rt/include/chthreads.h **** 
 2227              		.loc 6 275 25 view .LVU712
 2228              	.LBB540:
 277:./lib/chibios/os/rt/include/chthreads.h **** }
 2229              		.loc 6 277 3 view .LVU713
 277:./lib/chibios/os/rt/include/chthreads.h **** }
 2230              		.loc 6 277 18 is_stmt 0 view .LVU714
 2231 0000 054B     		ldr	r3, .L57
 2232 0002 9B69     		ldr	r3, [r3, #24]
 2233              	.LVL114:
 277:./lib/chibios/os/rt/include/chthreads.h **** }
 2234              		.loc 6 277 18 view .LVU715
 2235              	.LBE540:
 2236              	.LBE539:
 767:lib/chibios/os/rt/src/chthreads.c **** 
 768:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(*trp == NULL, "not NULL");
 2237              		.loc 1 768 3 is_stmt 1 view .LVU716
 2238              		.loc 1 768 3 view .LVU717
 2239              		.loc 1 768 3 view .LVU718
 769:lib/chibios/os/rt/src/chthreads.c **** 
 770:lib/chibios/os/rt/src/chthreads.c ****   if (TIME_IMMEDIATE == timeout) {
 2240              		.loc 1 770 3 view .LVU719
 2241              		.loc 1 770 6 is_stmt 0 view .LVU720
 2242 0004 21B1     		cbz	r1, .L56
 771:lib/chibios/os/rt/src/chthreads.c ****     return MSG_TIMEOUT;
 772:lib/chibios/os/rt/src/chthreads.c ****   }
 773:lib/chibios/os/rt/src/chthreads.c **** 
 774:lib/chibios/os/rt/src/chthreads.c ****   *trp = tp;
 2243              		.loc 1 774 3 is_stmt 1 view .LVU721
 2244              		.loc 1 774 8 is_stmt 0 view .LVU722
 2245 0006 0360     		str	r3, [r0]
 775:lib/chibios/os/rt/src/chthreads.c ****   tp->u.wttrp = trp;
 2246              		.loc 1 775 3 is_stmt 1 view .LVU723
 2247              		.loc 1 775 15 is_stmt 0 view .LVU724
 2248 0008 5862     		str	r0, [r3, #36]
 776:lib/chibios/os/rt/src/chthreads.c **** 
 777:lib/chibios/os/rt/src/chthreads.c ****   return chSchGoSleepTimeoutS(CH_STATE_SUSPENDED, timeout);
 2249              		.loc 1 777 3 is_stmt 1 view .LVU725
 2250              		.loc 1 777 10 is_stmt 0 view .LVU726
 2251 000a 0320     		movs	r0, #3
 2252              	.LVL115:
 2253              		.loc 1 777 10 view .LVU727
 2254 000c FFF7FEBF 		b	chSchGoSleepTimeoutS
 2255              	.LVL116:
 2256              	.L56:
 778:lib/chibios/os/rt/src/chthreads.c **** }
 2257              		.loc 1 778 1 view .LVU728
 2258 0010 4FF0FF30 		mov	r0, #-1
 2259              	.LVL117:
 2260              		.loc 1 778 1 view .LVU729
 2261 0014 7047     		bx	lr
 2262              	.L58:
 2263 0016 00BF     		.align	2
 2264              	.L57:
 2265 0018 00000000 		.word	ch
 2266              		.cfi_endproc
 2267              	.LFE308:
 2269              		.section	.text.chThdResumeI,"ax",%progbits
 2270              		.align	1
 2271              		.global	chThdResumeI
 2272              		.syntax unified
 2273              		.thumb
 2274              		.thumb_func
 2276              	chThdResumeI:
 2277              	.LVL118:
 2278              	.LFB309:
 779:lib/chibios/os/rt/src/chthreads.c **** 
 780:lib/chibios/os/rt/src/chthreads.c **** /**
 781:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 782:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must not reschedule because it can be called from
 783:lib/chibios/os/rt/src/chthreads.c ****  *          ISR context.
 784:lib/chibios/os/rt/src/chthreads.c ****  *
 785:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 786:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 787:lib/chibios/os/rt/src/chthreads.c ****  *
 788:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 789:lib/chibios/os/rt/src/chthreads.c ****  */
 790:lib/chibios/os/rt/src/chthreads.c **** void chThdResumeI(thread_reference_t *trp, msg_t msg) {
 2279              		.loc 1 790 55 is_stmt 1 view -0
 2280              		.cfi_startproc
 2281              		@ args = 0, pretend = 0, frame = 0
 2282              		@ frame_needed = 0, uses_anonymous_args = 0
 2283              		@ link register save eliminated.
 791:lib/chibios/os/rt/src/chthreads.c **** 
 792:lib/chibios/os/rt/src/chthreads.c ****   if (*trp != NULL) {
 2284              		.loc 1 792 3 view .LVU731
 790:lib/chibios/os/rt/src/chthreads.c **** 
 2285              		.loc 1 790 55 is_stmt 0 view .LVU732
 2286 0000 0346     		mov	r3, r0
 2287              		.loc 1 792 7 view .LVU733
 2288 0002 0068     		ldr	r0, [r0]
 2289              	.LVL119:
 2290              		.loc 1 792 6 view .LVU734
 2291 0004 20B1     		cbz	r0, .L59
 2292              	.LBB541:
 793:lib/chibios/os/rt/src/chthreads.c ****     thread_t *tp = *trp;
 2293              		.loc 1 793 5 is_stmt 1 view .LVU735
 2294              	.LVL120:
 794:lib/chibios/os/rt/src/chthreads.c **** 
 795:lib/chibios/os/rt/src/chthreads.c ****     chDbgAssert(tp->state == CH_STATE_SUSPENDED, "not CH_STATE_SUSPENDED");
 2295              		.loc 1 795 5 view .LVU736
 2296              		.loc 1 795 5 view .LVU737
 2297              		.loc 1 795 5 view .LVU738
 796:lib/chibios/os/rt/src/chthreads.c **** 
 797:lib/chibios/os/rt/src/chthreads.c ****     *trp = NULL;
 2298              		.loc 1 797 5 view .LVU739
 2299              		.loc 1 797 10 is_stmt 0 view .LVU740
 2300 0006 0022     		movs	r2, #0
 2301 0008 1A60     		str	r2, [r3]
 798:lib/chibios/os/rt/src/chthreads.c ****     tp->u.rdymsg = msg;
 2302              		.loc 1 798 5 is_stmt 1 view .LVU741
 2303              		.loc 1 798 18 is_stmt 0 view .LVU742
 2304 000a 4162     		str	r1, [r0, #36]
 799:lib/chibios/os/rt/src/chthreads.c ****     (void) chSchReadyI(tp);
 2305              		.loc 1 799 5 is_stmt 1 view .LVU743
 2306              		.loc 1 799 12 is_stmt 0 view .LVU744
 2307 000c FFF7FEBF 		b	chSchReadyI
 2308              	.LVL121:
 2309              	.L59:
 2310              		.loc 1 799 12 view .LVU745
 2311              	.LBE541:
 800:lib/chibios/os/rt/src/chthreads.c ****   }
 801:lib/chibios/os/rt/src/chthreads.c **** }
 2312              		.loc 1 801 1 view .LVU746
 2313 0010 7047     		bx	lr
 2314              		.cfi_endproc
 2315              	.LFE309:
 2317              		.section	.text.chThdResumeS,"ax",%progbits
 2318              		.align	1
 2319              		.global	chThdResumeS
 2320              		.syntax unified
 2321              		.thumb
 2322              		.thumb_func
 2324              	chThdResumeS:
 2325              	.LVL122:
 2326              	.LFB310:
 802:lib/chibios/os/rt/src/chthreads.c **** 
 803:lib/chibios/os/rt/src/chthreads.c **** /**
 804:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 805:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 806:lib/chibios/os/rt/src/chthreads.c ****  *          context.
 807:lib/chibios/os/rt/src/chthreads.c ****  *
 808:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 809:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 810:lib/chibios/os/rt/src/chthreads.c ****  *
 811:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 812:lib/chibios/os/rt/src/chthreads.c ****  */
 813:lib/chibios/os/rt/src/chthreads.c **** void chThdResumeS(thread_reference_t *trp, msg_t msg) {
 2327              		.loc 1 813 55 is_stmt 1 view -0
 2328              		.cfi_startproc
 2329              		@ args = 0, pretend = 0, frame = 0
 2330              		@ frame_needed = 0, uses_anonymous_args = 0
 2331              		@ link register save eliminated.
 814:lib/chibios/os/rt/src/chthreads.c **** 
 815:lib/chibios/os/rt/src/chthreads.c ****   if (*trp != NULL) {
 2332              		.loc 1 815 3 view .LVU748
 813:lib/chibios/os/rt/src/chthreads.c **** 
 2333              		.loc 1 813 55 is_stmt 0 view .LVU749
 2334 0000 0346     		mov	r3, r0
 2335              		.loc 1 815 7 view .LVU750
 2336 0002 0068     		ldr	r0, [r0]
 2337              	.LVL123:
 2338              		.loc 1 815 6 view .LVU751
 2339 0004 18B1     		cbz	r0, .L61
 2340              	.LBB542:
 816:lib/chibios/os/rt/src/chthreads.c ****     thread_t *tp = *trp;
 2341              		.loc 1 816 5 is_stmt 1 view .LVU752
 2342              	.LVL124:
 817:lib/chibios/os/rt/src/chthreads.c **** 
 818:lib/chibios/os/rt/src/chthreads.c ****     chDbgAssert(tp->state == CH_STATE_SUSPENDED, "not CH_STATE_SUSPENDED");
 2343              		.loc 1 818 5 view .LVU753
 2344              		.loc 1 818 5 view .LVU754
 2345              		.loc 1 818 5 view .LVU755
 819:lib/chibios/os/rt/src/chthreads.c **** 
 820:lib/chibios/os/rt/src/chthreads.c ****     *trp = NULL;
 2346              		.loc 1 820 5 view .LVU756
 2347              		.loc 1 820 10 is_stmt 0 view .LVU757
 2348 0006 0022     		movs	r2, #0
 2349 0008 1A60     		str	r2, [r3]
 821:lib/chibios/os/rt/src/chthreads.c ****     chSchWakeupS(tp, msg);
 2350              		.loc 1 821 5 is_stmt 1 view .LVU758
 2351 000a FFF7FEBF 		b	chSchWakeupS
 2352              	.LVL125:
 2353              	.L61:
 2354              		.loc 1 821 5 is_stmt 0 view .LVU759
 2355              	.LBE542:
 822:lib/chibios/os/rt/src/chthreads.c ****   }
 823:lib/chibios/os/rt/src/chthreads.c **** }
 2356              		.loc 1 823 1 view .LVU760
 2357 000e 7047     		bx	lr
 2358              		.cfi_endproc
 2359              	.LFE310:
 2361              		.section	.text.chThdResume,"ax",%progbits
 2362              		.align	1
 2363              		.global	chThdResume
 2364              		.syntax unified
 2365              		.thumb
 2366              		.thumb_func
 2368              	chThdResume:
 2369              	.LVL126:
 2370              	.LFB311:
 824:lib/chibios/os/rt/src/chthreads.c **** 
 825:lib/chibios/os/rt/src/chthreads.c **** /**
 826:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 827:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 828:lib/chibios/os/rt/src/chthreads.c ****  *          context.
 829:lib/chibios/os/rt/src/chthreads.c ****  *
 830:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 831:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 832:lib/chibios/os/rt/src/chthreads.c ****  *
 833:lib/chibios/os/rt/src/chthreads.c ****  * @api
 834:lib/chibios/os/rt/src/chthreads.c ****  */
 835:lib/chibios/os/rt/src/chthreads.c **** void chThdResume(thread_reference_t *trp, msg_t msg) {
 2371              		.loc 1 835 54 is_stmt 1 view -0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 836:lib/chibios/os/rt/src/chthreads.c **** 
 837:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 2375              		.loc 1 837 3 view .LVU762
 2376              	.LBB543:
 2377              	.LBI543:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 2378              		.loc 3 355 20 view .LVU763
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2379              		.loc 3 357 3 view .LVU764
 2380              	.LBB544:
 2381              	.LBI544:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2382              		.loc 4 669 27 view .LVU765
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2383              		.loc 4 677 3 view .LVU766
 2384              	.LBB545:
 2385              	.LBI545:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2386              		.loc 5 491 27 view .LVU767
 2387              	.LBB546:
 2388              		.loc 5 493 3 view .LVU768
 2389              	.LBE546:
 2390              	.LBE545:
 2391              	.LBE544:
 2392              	.LBE543:
 835:lib/chibios/os/rt/src/chthreads.c **** 
 2393              		.loc 1 835 54 is_stmt 0 view .LVU769
 2394 0000 08B5     		push	{r3, lr}
 2395              		.cfi_def_cfa_offset 8
 2396              		.cfi_offset 3, -8
 2397              		.cfi_offset 14, -4
 2398              	.LBB550:
 2399              	.LBB549:
 2400              	.LBB548:
 2401              	.LBB547:
 2402              		.loc 5 493 3 view .LVU770
 2403 0002 2023     		movs	r3, #32
 2404              		.syntax unified
 2405              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2406 0004 83F31188 		MSR basepri, r3
 2407              	@ 0 "" 2
 2408              	.LVL127:
 2409              		.loc 5 493 3 view .LVU771
 2410              		.thumb
 2411              		.syntax unified
 2412              	.LBE547:
 2413              	.LBE548:
 2414              	.LBE549:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2415              		.loc 3 358 34 is_stmt 1 view .LVU772
 359:./lib/chibios/os/rt/include/chsys.h **** }
 2416              		.loc 3 359 20 view .LVU773
 2417              	.LBE550:
 838:lib/chibios/os/rt/src/chthreads.c ****   chThdResumeS(trp, msg);
 2418              		.loc 1 838 3 view .LVU774
 2419 0008 FFF7FEFF 		bl	chThdResumeS
 2420              	.LVL128:
 839:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 2421              		.loc 1 839 3 view .LVU775
 2422              	.LBB551:
 2423              	.LBI551:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2424              		.loc 3 367 20 view .LVU776
 2425              	.LBB552:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2426              		.loc 3 369 22 view .LVU777
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2427              		.loc 3 370 33 view .LVU778
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2428              		.loc 3 376 3 view .LVU779
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2429              		.loc 3 376 3 view .LVU780
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2430              		.loc 3 376 3 view .LVU781
 2431              		.loc 3 380 3 view .LVU782
 2432              	.LBB553:
 2433              	.LBI553:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2434              		.loc 4 693 27 view .LVU783
 2435              		.loc 4 696 3 view .LVU784
 2436              	.LBB554:
 2437              	.LBI554:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2438              		.loc 5 491 27 view .LVU785
 2439              	.LBB555:
 2440              		.loc 5 493 3 view .LVU786
 2441 000c 0023     		movs	r3, #0
 2442              		.syntax unified
 2443              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2444 000e 83F31188 		MSR basepri, r3
 2445              	@ 0 "" 2
 2446              	.LVL129:
 2447              		.loc 5 493 3 is_stmt 0 view .LVU787
 2448              		.thumb
 2449              		.syntax unified
 2450              	.LBE555:
 2451              	.LBE554:
 2452              	.LBE553:
 2453              	.LBE552:
 2454              	.LBE551:
 840:lib/chibios/os/rt/src/chthreads.c **** }
 2455              		.loc 1 840 1 view .LVU788
 2456 0012 08BD     		pop	{r3, pc}
 2457              		.cfi_endproc
 2458              	.LFE311:
 2460              		.section	.text.chThdEnqueueTimeoutS,"ax",%progbits
 2461              		.align	1
 2462              		.global	chThdEnqueueTimeoutS
 2463              		.syntax unified
 2464              		.thumb
 2465              		.thumb_func
 2467              	chThdEnqueueTimeoutS:
 2468              	.LVL130:
 2469              	.LFB312:
 841:lib/chibios/os/rt/src/chthreads.c **** 
 842:lib/chibios/os/rt/src/chthreads.c **** /**
 843:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Enqueues the caller thread on a threads queue object.
 844:lib/chibios/os/rt/src/chthreads.c ****  * @details The caller thread is enqueued and put to sleep until it is
 845:lib/chibios/os/rt/src/chthreads.c ****  *          dequeued or the specified timeouts expires.
 846:lib/chibios/os/rt/src/chthreads.c ****  *
 847:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 848:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] timeout   the timeout in system ticks, the special values are
 849:lib/chibios/os/rt/src/chthreads.c ****  *                      handled as follow:
 850:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 851:lib/chibios/os/rt/src/chthreads.c ****  *                        state.
 852:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 853:lib/chibios/os/rt/src/chthreads.c ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 854:lib/chibios/os/rt/src/chthreads.c ****  *                        occurred.
 855:lib/chibios/os/rt/src/chthreads.c ****  *                      .
 856:lib/chibios/os/rt/src/chthreads.c ****  * @return              The message from @p osalQueueWakeupOneI() or
 857:lib/chibios/os/rt/src/chthreads.c ****  *                      @p osalQueueWakeupAllI() functions.
 858:lib/chibios/os/rt/src/chthreads.c ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 859:lib/chibios/os/rt/src/chthreads.c ****  *                      specified timeout or if the function has been
 860:lib/chibios/os/rt/src/chthreads.c ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 861:lib/chibios/os/rt/src/chthreads.c ****  *                      specification.
 862:lib/chibios/os/rt/src/chthreads.c ****  *
 863:lib/chibios/os/rt/src/chthreads.c ****  * @sclass
 864:lib/chibios/os/rt/src/chthreads.c ****  */
 865:lib/chibios/os/rt/src/chthreads.c **** msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout) {
 2470              		.loc 1 865 73 is_stmt 1 view -0
 2471              		.cfi_startproc
 2472              		@ args = 0, pretend = 0, frame = 0
 2473              		@ frame_needed = 0, uses_anonymous_args = 0
 2474              		@ link register save eliminated.
 866:lib/chibios/os/rt/src/chthreads.c **** 
 867:lib/chibios/os/rt/src/chthreads.c ****   if (TIME_IMMEDIATE == timeout) {
 2475              		.loc 1 867 3 view .LVU790
 2476              		.loc 1 867 6 is_stmt 0 view .LVU791
 2477 0000 49B1     		cbz	r1, .L65
 868:lib/chibios/os/rt/src/chthreads.c ****     return MSG_TIMEOUT;
 869:lib/chibios/os/rt/src/chthreads.c ****   }
 870:lib/chibios/os/rt/src/chthreads.c **** 
 871:lib/chibios/os/rt/src/chthreads.c ****   ch_queue_insert(&currp->hdr.queue, &tqp->queue);
 2478              		.loc 1 871 3 is_stmt 1 view .LVU792
 2479              		.loc 1 871 20 is_stmt 0 view .LVU793
 2480 0002 064B     		ldr	r3, .L66
 2481              	.LBB556:
 2482              	.LBB557:
 211:./lib/chibios/os/rt/include/chlists.h **** }
 212:./lib/chibios/os/rt/include/chlists.h **** 
 213:./lib/chibios/os/rt/include/chlists.h **** /**
 214:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified queue is empty.
 215:./lib/chibios/os/rt/include/chlists.h ****  *
 216:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp        pointer to the queue header
 217:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the queue.
 218:./lib/chibios/os/rt/include/chlists.h ****  *
 219:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 220:./lib/chibios/os/rt/include/chlists.h ****  */
 221:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_queue_isempty(const ch_queue_t *qp) {
 222:./lib/chibios/os/rt/include/chlists.h **** 
 223:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(qp->next == qp);
 224:./lib/chibios/os/rt/include/chlists.h **** }
 225:./lib/chibios/os/rt/include/chlists.h **** 
 226:./lib/chibios/os/rt/include/chlists.h **** /**
 227:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified queue is not empty.
 228:./lib/chibios/os/rt/include/chlists.h ****  *
 229:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp        pointer to the queue header
 230:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the queue.
 231:./lib/chibios/os/rt/include/chlists.h ****  *
 232:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 233:./lib/chibios/os/rt/include/chlists.h ****  */
 234:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_queue_notempty(const ch_queue_t *qp) {
 235:./lib/chibios/os/rt/include/chlists.h **** 
 236:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(qp->next != qp);
 237:./lib/chibios/os/rt/include/chlists.h **** }
 238:./lib/chibios/os/rt/include/chlists.h **** 
 239:./lib/chibios/os/rt/include/chlists.h **** /**
 240:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Inserts an element into a queue.
 241:./lib/chibios/os/rt/include/chlists.h ****  *
 242:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] p         the pointer to the element to be inserted in the queue
 243:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp        the pointer to the queue header
 244:./lib/chibios/os/rt/include/chlists.h ****  *
 245:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 246:./lib/chibios/os/rt/include/chlists.h ****  */
 247:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_queue_insert(ch_queue_t *p, ch_queue_t *qp) {
 248:./lib/chibios/os/rt/include/chlists.h **** 
 249:./lib/chibios/os/rt/include/chlists.h ****   p->next       = qp;
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 2483              		.loc 2 250 21 view .LVU794
 2484 0004 4268     		ldr	r2, [r0, #4]
 2485              	.LBE557:
 2486              	.LBE556:
 2487              		.loc 1 871 20 view .LVU795
 2488 0006 9B69     		ldr	r3, [r3, #24]
 2489              	.LVL131:
 2490              	.LBB559:
 2491              	.LBI556:
 247:./lib/chibios/os/rt/include/chlists.h **** 
 2492              		.loc 2 247 20 is_stmt 1 view .LVU796
 2493              	.LBB558:
 249:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 2494              		.loc 2 249 3 view .LVU797
 249:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 2495              		.loc 2 249 17 is_stmt 0 view .LVU798
 2496 0008 1860     		str	r0, [r3]
 2497              		.loc 2 250 3 is_stmt 1 view .LVU799
 2498              		.loc 2 250 17 is_stmt 0 view .LVU800
 2499 000a 5A60     		str	r2, [r3, #4]
 251:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 2500              		.loc 2 251 3 is_stmt 1 view .LVU801
 2501              		.loc 2 251 17 is_stmt 0 view .LVU802
 2502 000c 1360     		str	r3, [r2]
 252:./lib/chibios/os/rt/include/chlists.h ****   qp->prev      = p;
 2503              		.loc 2 252 3 is_stmt 1 view .LVU803
 2504              		.loc 2 252 17 is_stmt 0 view .LVU804
 2505 000e 4360     		str	r3, [r0, #4]
 2506              	.LVL132:
 2507              		.loc 2 252 17 view .LVU805
 2508              	.LBE558:
 2509              	.LBE559:
 872:lib/chibios/os/rt/src/chthreads.c **** 
 873:lib/chibios/os/rt/src/chthreads.c ****   return chSchGoSleepTimeoutS(CH_STATE_QUEUED, timeout);
 2510              		.loc 1 873 3 is_stmt 1 view .LVU806
 2511              		.loc 1 873 10 is_stmt 0 view .LVU807
 2512 0010 0420     		movs	r0, #4
 2513              	.LVL133:
 2514              		.loc 1 873 10 view .LVU808
 2515 0012 FFF7FEBF 		b	chSchGoSleepTimeoutS
 2516              	.LVL134:
 2517              	.L65:
 874:lib/chibios/os/rt/src/chthreads.c **** }
 2518              		.loc 1 874 1 view .LVU809
 2519 0016 4FF0FF30 		mov	r0, #-1
 2520              	.LVL135:
 2521              		.loc 1 874 1 view .LVU810
 2522 001a 7047     		bx	lr
 2523              	.L67:
 2524              		.align	2
 2525              	.L66:
 2526 001c 00000000 		.word	ch
 2527              		.cfi_endproc
 2528              	.LFE312:
 2530              		.section	.text.chThdDequeueNextI,"ax",%progbits
 2531              		.align	1
 2532              		.global	chThdDequeueNextI
 2533              		.syntax unified
 2534              		.thumb
 2535              		.thumb_func
 2537              	chThdDequeueNextI:
 2538              	.LVL136:
 2539              	.LFB313:
 875:lib/chibios/os/rt/src/chthreads.c **** 
 876:lib/chibios/os/rt/src/chthreads.c **** /**
 877:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Dequeues and wakes up one thread from the threads queue object,
 878:lib/chibios/os/rt/src/chthreads.c ****  *          if any.
 879:lib/chibios/os/rt/src/chthreads.c ****  *
 880:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 881:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 882:lib/chibios/os/rt/src/chthreads.c ****  *
 883:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 884:lib/chibios/os/rt/src/chthreads.c ****  */
 885:lib/chibios/os/rt/src/chthreads.c **** void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 2540              		.loc 1 885 57 is_stmt 1 view -0
 2541              		.cfi_startproc
 2542              		@ args = 0, pretend = 0, frame = 0
 2543              		@ frame_needed = 0, uses_anonymous_args = 0
 2544              		@ link register save eliminated.
 886:lib/chibios/os/rt/src/chthreads.c **** 
 887:lib/chibios/os/rt/src/chthreads.c ****   if (ch_queue_notempty(&tqp->queue)) {
 2545              		.loc 1 887 3 view .LVU812
 2546              	.LBB566:
 2547              	.LBI566:
 234:./lib/chibios/os/rt/include/chlists.h **** 
 2548              		.loc 2 234 20 view .LVU813
 2549              	.LBB567:
 236:./lib/chibios/os/rt/include/chlists.h **** }
 2550              		.loc 2 236 3 view .LVU814
 2551              	.LBE567:
 2552              	.LBE566:
 885:lib/chibios/os/rt/src/chthreads.c **** 
 2553              		.loc 1 885 57 is_stmt 0 view .LVU815
 2554 0000 0346     		mov	r3, r0
 2555              	.LBB569:
 2556              	.LBB568:
 236:./lib/chibios/os/rt/include/chlists.h **** }
 2557              		.loc 2 236 19 view .LVU816
 2558 0002 0068     		ldr	r0, [r0]
 2559              	.LVL137:
 236:./lib/chibios/os/rt/include/chlists.h **** }
 2560              		.loc 2 236 19 view .LVU817
 2561              	.LBE568:
 2562              	.LBE569:
 2563              		.loc 1 887 6 view .LVU818
 2564 0004 8342     		cmp	r3, r0
 2565 0006 05D0     		beq	.L68
 888:lib/chibios/os/rt/src/chthreads.c ****     chThdDoDequeueNextI(tqp, msg);
 2566              		.loc 1 888 5 is_stmt 1 view .LVU819
 2567              	.LVL138:
 2568              	.LBB570:
 2569              	.LBI570:
 386:./lib/chibios/os/rt/include/chthreads.h **** }
 387:./lib/chibios/os/rt/include/chthreads.h **** 
 388:./lib/chibios/os/rt/include/chthreads.h **** /**
 389:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 390:./lib/chibios/os/rt/include/chthreads.h ****  *
 391:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 392:./lib/chibios/os/rt/include/chthreads.h ****  *
 393:./lib/chibios/os/rt/include/chthreads.h ****  * @init
 394:./lib/chibios/os/rt/include/chthreads.h ****  */
 395:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
 396:./lib/chibios/os/rt/include/chthreads.h **** 
 397:./lib/chibios/os/rt/include/chthreads.h ****   ch_queue_init(&tqp->queue);
 398:./lib/chibios/os/rt/include/chthreads.h **** }
 399:./lib/chibios/os/rt/include/chthreads.h **** 
 400:./lib/chibios/os/rt/include/chthreads.h **** /**
 401:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Evaluates to @p true if the specified queue is empty.
 402:./lib/chibios/os/rt/include/chthreads.h ****  *
 403:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 404:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The queue status.
 405:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        if the queue is not empty.
 406:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         if the queue is empty.
 407:./lib/chibios/os/rt/include/chthreads.h ****  *
 408:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 409:./lib/chibios/os/rt/include/chthreads.h ****  */
 410:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdQueueIsEmptyI(threads_queue_t *tqp) {
 411:./lib/chibios/os/rt/include/chthreads.h **** 
 412:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheckClassI();
 413:./lib/chibios/os/rt/include/chthreads.h **** 
 414:./lib/chibios/os/rt/include/chthreads.h ****   return ch_queue_isempty(&tqp->queue);
 415:./lib/chibios/os/rt/include/chthreads.h **** }
 416:./lib/chibios/os/rt/include/chthreads.h **** 
 417:./lib/chibios/os/rt/include/chthreads.h **** /**
 418:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Dequeues and wakes up one thread from the threads queue object.
 419:./lib/chibios/os/rt/include/chthreads.h ****  * @details Dequeues one thread from the queue without checking if the queue
 420:./lib/chibios/os/rt/include/chthreads.h ****  *          is empty.
 421:./lib/chibios/os/rt/include/chthreads.h ****  * @pre     The queue must contain at least an object.
 422:./lib/chibios/os/rt/include/chthreads.h ****  *
 423:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tqp       pointer to the threads queue object
 424:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msg       the message code
 425:./lib/chibios/os/rt/include/chthreads.h ****  *
 426:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 427:./lib/chibios/os/rt/include/chthreads.h ****  */
 428:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdDoDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 2570              		.loc 6 428 20 view .LVU820
 2571              	.LBB571:
 429:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *tp;
 2572              		.loc 6 429 3 view .LVU821
 430:./lib/chibios/os/rt/include/chthreads.h **** 
 431:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(ch_queue_notempty(&tqp->queue), "empty queue");
 2573              		.loc 6 431 3 view .LVU822
 2574              		.loc 6 431 3 view .LVU823
 2575              		.loc 6 431 3 view .LVU824
 432:./lib/chibios/os/rt/include/chthreads.h **** 
 433:./lib/chibios/os/rt/include/chthreads.h ****   tp = (thread_t *)ch_queue_fifo_remove(&tqp->queue);
 2576              		.loc 6 433 3 view .LVU825
 2577              	.LBB572:
 2578              	.LBI572:
 253:./lib/chibios/os/rt/include/chlists.h **** }
 254:./lib/chibios/os/rt/include/chlists.h **** 
 255:./lib/chibios/os/rt/include/chlists.h **** /**
 256:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Removes the first-out element from a queue and returns it.
 257:./lib/chibios/os/rt/include/chlists.h ****  * @note    If the queue is priority ordered then this function returns the
 258:./lib/chibios/os/rt/include/chlists.h ****  *          element with the highest priority.
 259:./lib/chibios/os/rt/include/chlists.h ****  *
 260:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp        the pointer to the queue list header
 261:./lib/chibios/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 262:./lib/chibios/os/rt/include/chlists.h ****  *
 263:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 264:./lib/chibios/os/rt/include/chlists.h ****  */
 265:./lib/chibios/os/rt/include/chlists.h **** static inline ch_queue_t *ch_queue_fifo_remove(ch_queue_t *qp) {
 2579              		.loc 2 265 27 view .LVU826
 2580              	.LBB573:
 266:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t *p = qp->next;
 2581              		.loc 2 266 3 view .LVU827
 267:./lib/chibios/os/rt/include/chlists.h **** 
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next       = p->next;
 2582              		.loc 2 268 3 view .LVU828
 2583              		.loc 2 268 21 is_stmt 0 view .LVU829
 2584 0008 0268     		ldr	r2, [r0]
 2585              		.loc 2 268 18 view .LVU830
 2586 000a 1A60     		str	r2, [r3]
 269:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 2587              		.loc 2 269 3 is_stmt 1 view .LVU831
 2588              		.loc 2 269 18 is_stmt 0 view .LVU832
 2589 000c 5360     		str	r3, [r2, #4]
 270:./lib/chibios/os/rt/include/chlists.h **** 
 271:./lib/chibios/os/rt/include/chlists.h ****   return p;
 2590              		.loc 2 271 3 is_stmt 1 view .LVU833
 2591              	.LVL139:
 2592              		.loc 2 271 3 is_stmt 0 view .LVU834
 2593              	.LBE573:
 2594              	.LBE572:
 434:./lib/chibios/os/rt/include/chthreads.h **** 
 435:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_QUEUED, "invalid state");
 2595              		.loc 6 435 3 is_stmt 1 view .LVU835
 2596              		.loc 6 435 3 view .LVU836
 2597              		.loc 6 435 3 view .LVU837
 436:./lib/chibios/os/rt/include/chthreads.h **** 
 437:./lib/chibios/os/rt/include/chthreads.h ****   tp->u.rdymsg = msg;
 2598              		.loc 6 437 3 view .LVU838
 2599              		.loc 6 437 16 is_stmt 0 view .LVU839
 2600 000e 4162     		str	r1, [r0, #36]
 438:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchReadyI(tp);
 2601              		.loc 6 438 3 is_stmt 1 view .LVU840
 2602              		.loc 6 438 10 is_stmt 0 view .LVU841
 2603 0010 FFF7FEBF 		b	chSchReadyI
 2604              	.LVL140:
 2605              	.L68:
 2606              		.loc 6 438 10 view .LVU842
 2607              	.LBE571:
 2608              	.LBE570:
 889:lib/chibios/os/rt/src/chthreads.c ****   }
 890:lib/chibios/os/rt/src/chthreads.c **** }
 2609              		.loc 1 890 1 view .LVU843
 2610 0014 7047     		bx	lr
 2611              		.cfi_endproc
 2612              	.LFE313:
 2614              		.section	.text.chThdDequeueAllI,"ax",%progbits
 2615              		.align	1
 2616              		.global	chThdDequeueAllI
 2617              		.syntax unified
 2618              		.thumb
 2619              		.thumb_func
 2621              	chThdDequeueAllI:
 2622              	.LVL141:
 2623              	.LFB314:
 891:lib/chibios/os/rt/src/chthreads.c **** 
 892:lib/chibios/os/rt/src/chthreads.c **** /**
 893:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Dequeues and wakes up all threads from the threads queue object.
 894:lib/chibios/os/rt/src/chthreads.c ****  *
 895:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 896:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 897:lib/chibios/os/rt/src/chthreads.c ****  *
 898:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 899:lib/chibios/os/rt/src/chthreads.c ****  */
 900:lib/chibios/os/rt/src/chthreads.c **** void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 2624              		.loc 1 900 56 is_stmt 1 view -0
 2625              		.cfi_startproc
 2626              		@ args = 0, pretend = 0, frame = 0
 2627              		@ frame_needed = 0, uses_anonymous_args = 0
 2628              		.loc 1 900 56 is_stmt 0 view .LVU845
 2629 0000 38B5     		push	{r3, r4, r5, lr}
 2630              		.cfi_def_cfa_offset 16
 2631              		.cfi_offset 3, -16
 2632              		.cfi_offset 4, -12
 2633              		.cfi_offset 5, -8
 2634              		.cfi_offset 14, -4
 2635 0002 0446     		mov	r4, r0
 2636 0004 0D46     		mov	r5, r1
 901:lib/chibios/os/rt/src/chthreads.c **** 
 902:lib/chibios/os/rt/src/chthreads.c ****   while (ch_queue_notempty(&tqp->queue)) {
 2637              		.loc 1 902 3 is_stmt 1 view .LVU846
 2638              	.LVL142:
 2639              	.L71:
 2640              		.loc 1 902 10 view .LVU847
 2641              	.LBB580:
 2642              	.LBI580:
 234:./lib/chibios/os/rt/include/chlists.h **** 
 2643              		.loc 2 234 20 view .LVU848
 2644              	.LBB581:
 236:./lib/chibios/os/rt/include/chlists.h **** }
 2645              		.loc 2 236 3 view .LVU849
 236:./lib/chibios/os/rt/include/chlists.h **** }
 2646              		.loc 2 236 19 is_stmt 0 view .LVU850
 2647 0006 2068     		ldr	r0, [r4]
 2648              	.LVL143:
 236:./lib/chibios/os/rt/include/chlists.h **** }
 2649              		.loc 2 236 19 view .LVU851
 2650              	.LBE581:
 2651              	.LBE580:
 2652              		.loc 1 902 10 view .LVU852
 2653 0008 8442     		cmp	r4, r0
 2654 000a 00D1     		bne	.L72
 903:lib/chibios/os/rt/src/chthreads.c ****     chThdDoDequeueNextI(tqp, msg);
 904:lib/chibios/os/rt/src/chthreads.c ****   }
 905:lib/chibios/os/rt/src/chthreads.c **** }
 2655              		.loc 1 905 1 view .LVU853
 2656 000c 38BD     		pop	{r3, r4, r5, pc}
 2657              	.LVL144:
 2658              	.L72:
 903:lib/chibios/os/rt/src/chthreads.c ****     chThdDoDequeueNextI(tqp, msg);
 2659              		.loc 1 903 5 is_stmt 1 view .LVU854
 2660              	.LBB582:
 2661              	.LBI582:
 428:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *tp;
 2662              		.loc 6 428 20 view .LVU855
 2663              	.LBB583:
 429:./lib/chibios/os/rt/include/chthreads.h **** 
 2664              		.loc 6 429 3 view .LVU856
 431:./lib/chibios/os/rt/include/chthreads.h **** 
 2665              		.loc 6 431 3 view .LVU857
 431:./lib/chibios/os/rt/include/chthreads.h **** 
 2666              		.loc 6 431 3 view .LVU858
 431:./lib/chibios/os/rt/include/chthreads.h **** 
 2667              		.loc 6 431 3 view .LVU859
 433:./lib/chibios/os/rt/include/chthreads.h **** 
 2668              		.loc 6 433 3 view .LVU860
 2669              	.LBB584:
 2670              	.LBI584:
 265:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t *p = qp->next;
 2671              		.loc 2 265 27 view .LVU861
 2672              	.LBB585:
 266:./lib/chibios/os/rt/include/chlists.h **** 
 2673              		.loc 2 266 3 view .LVU862
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 2674              		.loc 2 268 3 view .LVU863
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 2675              		.loc 2 268 21 is_stmt 0 view .LVU864
 2676 000e 0368     		ldr	r3, [r0]
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 2677              		.loc 2 268 18 view .LVU865
 2678 0010 2360     		str	r3, [r4]
 269:./lib/chibios/os/rt/include/chlists.h **** 
 2679              		.loc 2 269 3 is_stmt 1 view .LVU866
 269:./lib/chibios/os/rt/include/chlists.h **** 
 2680              		.loc 2 269 18 is_stmt 0 view .LVU867
 2681 0012 5C60     		str	r4, [r3, #4]
 2682              		.loc 2 271 3 is_stmt 1 view .LVU868
 2683              	.LVL145:
 2684              		.loc 2 271 3 is_stmt 0 view .LVU869
 2685              	.LBE585:
 2686              	.LBE584:
 435:./lib/chibios/os/rt/include/chthreads.h **** 
 2687              		.loc 6 435 3 is_stmt 1 view .LVU870
 435:./lib/chibios/os/rt/include/chthreads.h **** 
 2688              		.loc 6 435 3 view .LVU871
 435:./lib/chibios/os/rt/include/chthreads.h **** 
 2689              		.loc 6 435 3 view .LVU872
 437:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchReadyI(tp);
 2690              		.loc 6 437 3 view .LVU873
 437:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchReadyI(tp);
 2691              		.loc 6 437 16 is_stmt 0 view .LVU874
 2692 0014 4562     		str	r5, [r0, #36]
 2693              		.loc 6 438 3 is_stmt 1 view .LVU875
 2694              		.loc 6 438 10 is_stmt 0 view .LVU876
 2695 0016 FFF7FEFF 		bl	chSchReadyI
 2696              	.LVL146:
 439:./lib/chibios/os/rt/include/chthreads.h **** }
 2697              		.loc 6 439 1 view .LVU877
 2698 001a F4E7     		b	.L71
 2699              	.LBE583:
 2700              	.LBE582:
 2701              		.cfi_endproc
 2702              	.LFE314:
 2704              		.text
 2705              	.Letext0:
 2706              		.file 11 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 2707              		.file 12 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2708              		.file 13 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2709              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2710              		.file 15 "./lib/chibios/os/rt/include/chsystypes.h"
 2711              		.file 16 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2712              		.file 17 "./lib/chibios/os/rt/include/chtm.h"
 2713              		.file 18 "./lib/chibios/os/rt/include/chsem.h"
 2714              		.file 19 "./lib/chibios/os/rt/include/chmtx.h"
 2715              		.file 20 "./lib/chibios/os/oslib/include/chmemcore.h"
 2716              		.file 21 "./lib/chibios/os/oslib/include/chmempools.h"
 2717              		.file 22 "./lib/chibios/os/oslib/include/chmemheaps.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chthreads.c
     /tmp/ccbbsGBi.s:21     .text._thread_init:0000000000000000 $t
     /tmp/ccbbsGBi.s:27     .text._thread_init:0000000000000000 _thread_init
     /tmp/ccbbsGBi.s:116    .text._thread_init:0000000000000034 $d
     /tmp/ccbbsGBi.s:121    .text.chThdCreateSuspendedI:0000000000000000 $t
     /tmp/ccbbsGBi.s:127    .text.chThdCreateSuspendedI:0000000000000000 chThdCreateSuspendedI
     /tmp/ccbbsGBi.s:179    .text.chThdCreateSuspendedI:0000000000000030 $d
     /tmp/ccbbsGBi.s:184    .text.chThdCreateSuspended:0000000000000000 $t
     /tmp/ccbbsGBi.s:190    .text.chThdCreateSuspended:0000000000000000 chThdCreateSuspended
     /tmp/ccbbsGBi.s:292    .text.chThdCreateI:0000000000000000 $t
     /tmp/ccbbsGBi.s:298    .text.chThdCreateI:0000000000000000 chThdCreateI
     /tmp/ccbbsGBi.s:326    .text.chThdCreate:0000000000000000 $t
     /tmp/ccbbsGBi.s:332    .text.chThdCreate:0000000000000000 chThdCreate
     /tmp/ccbbsGBi.s:444    .text.chThdCreateStatic:0000000000000000 $t
     /tmp/ccbbsGBi.s:450    .text.chThdCreateStatic:0000000000000000 chThdCreateStatic
     /tmp/ccbbsGBi.s:596    .text.chThdCreateStatic:0000000000000040 $d
     /tmp/ccbbsGBi.s:602    .text.chThdStart:0000000000000000 $t
     /tmp/ccbbsGBi.s:608    .text.chThdStart:0000000000000000 chThdStart
     /tmp/ccbbsGBi.s:719    .text.chThdAddRef:0000000000000000 $t
     /tmp/ccbbsGBi.s:725    .text.chThdAddRef:0000000000000000 chThdAddRef
     /tmp/ccbbsGBi.s:812    .text.chThdRelease:0000000000000000 $t
     /tmp/ccbbsGBi.s:818    .text.chThdRelease:0000000000000000 chThdRelease
     /tmp/ccbbsGBi.s:1003   .text.chThdExitS:0000000000000000 $t
     /tmp/ccbbsGBi.s:1009   .text.chThdExitS:0000000000000000 chThdExitS
     /tmp/ccbbsGBi.s:1107   .text.chThdExitS:000000000000003c $d
     /tmp/ccbbsGBi.s:1112   .text.chThdExit:0000000000000000 $t
     /tmp/ccbbsGBi.s:1118   .text.chThdExit:0000000000000000 chThdExit
     /tmp/ccbbsGBi.s:1163   .text.chThdWait:0000000000000000 $t
     /tmp/ccbbsGBi.s:1169   .text.chThdWait:0000000000000000 chThdWait
     /tmp/ccbbsGBi.s:1322   .text.chThdWait:0000000000000034 $d
     /tmp/ccbbsGBi.s:1327   .text.chThdSetPriority:0000000000000000 $t
     /tmp/ccbbsGBi.s:1333   .text.chThdSetPriority:0000000000000000 chThdSetPriority
     /tmp/ccbbsGBi.s:1457   .text.chThdSetPriority:000000000000002c $d
     /tmp/ccbbsGBi.s:1462   .text.chThdTerminate:0000000000000000 $t
     /tmp/ccbbsGBi.s:1468   .text.chThdTerminate:0000000000000000 chThdTerminate
     /tmp/ccbbsGBi.s:1551   .text.chThdSleep:0000000000000000 $t
     /tmp/ccbbsGBi.s:1557   .text.chThdSleep:0000000000000000 chThdSleep
     /tmp/ccbbsGBi.s:1667   .text.chThdSleepUntil:0000000000000000 $t
     /tmp/ccbbsGBi.s:1673   .text.chThdSleepUntil:0000000000000000 chThdSleepUntil
     /tmp/ccbbsGBi.s:1830   .text.chThdSleepUntilWindowed:0000000000000000 $t
     /tmp/ccbbsGBi.s:1836   .text.chThdSleepUntilWindowed:0000000000000000 chThdSleepUntilWindowed
     /tmp/ccbbsGBi.s:2007   .text.chThdYield:0000000000000000 $t
     /tmp/ccbbsGBi.s:2013   .text.chThdYield:0000000000000000 chThdYield
     /tmp/ccbbsGBi.s:2134   .text.chThdYield:0000000000000024 $d
     /tmp/ccbbsGBi.s:2139   .text.chThdSuspendS:0000000000000000 $t
     /tmp/ccbbsGBi.s:2145   .text.chThdSuspendS:0000000000000000 chThdSuspendS
     /tmp/ccbbsGBi.s:2205   .text.chThdSuspendS:0000000000000018 $d
     /tmp/ccbbsGBi.s:2210   .text.chThdSuspendTimeoutS:0000000000000000 $t
     /tmp/ccbbsGBi.s:2216   .text.chThdSuspendTimeoutS:0000000000000000 chThdSuspendTimeoutS
     /tmp/ccbbsGBi.s:2265   .text.chThdSuspendTimeoutS:0000000000000018 $d
     /tmp/ccbbsGBi.s:2270   .text.chThdResumeI:0000000000000000 $t
     /tmp/ccbbsGBi.s:2276   .text.chThdResumeI:0000000000000000 chThdResumeI
     /tmp/ccbbsGBi.s:2318   .text.chThdResumeS:0000000000000000 $t
     /tmp/ccbbsGBi.s:2324   .text.chThdResumeS:0000000000000000 chThdResumeS
     /tmp/ccbbsGBi.s:2362   .text.chThdResume:0000000000000000 $t
     /tmp/ccbbsGBi.s:2368   .text.chThdResume:0000000000000000 chThdResume
     /tmp/ccbbsGBi.s:2461   .text.chThdEnqueueTimeoutS:0000000000000000 $t
     /tmp/ccbbsGBi.s:2467   .text.chThdEnqueueTimeoutS:0000000000000000 chThdEnqueueTimeoutS
     /tmp/ccbbsGBi.s:2526   .text.chThdEnqueueTimeoutS:000000000000001c $d
     /tmp/ccbbsGBi.s:2531   .text.chThdDequeueNextI:0000000000000000 $t
     /tmp/ccbbsGBi.s:2537   .text.chThdDequeueNextI:0000000000000000 chThdDequeueNextI
     /tmp/ccbbsGBi.s:2615   .text.chThdDequeueAllI:0000000000000000 $t
     /tmp/ccbbsGBi.s:2621   .text.chThdDequeueAllI:0000000000000000 chThdDequeueAllI

UNDEFINED SYMBOLS
ch
_port_thread_start
chSchReadyI
chSchWakeupS
chHeapFree
chPoolFree
chSchGoSleepS
chSchRescheduleS
chSchGoSleepTimeoutS
stGetCounter
chSchDoRescheduleBehind
