   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"hal_dac_lld.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c"
  20              		.section	.text.dac_lld_init,"ax",%progbits
  21              		.align	1
  22              		.global	dac_lld_init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	dac_lld_init:
  28              	.LFB329:
   1:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*
   2:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
   4:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
   8:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  10:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** */
  16:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  17:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
  18:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @file    DACv1/hal_dac_lld.c
  19:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   STM32 DAC subsystem low level driver source.
  20:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
  21:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @addtogroup DAC
  22:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @{
  23:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
  24:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  25:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #include "hal.h"
  26:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  27:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if HAL_USE_DAC || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  29:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  33:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Because ST headers naming inconsistencies.*/
  34:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if !defined(DAC1)
  35:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC1 DAC
  36:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  37:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  38:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC1_CH1_DMA_CHANNEL                                                \
  39:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC1_CH1_DMA_STREAM,                       \
  40:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC1_CH1_DMA_CHN)
  41:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  42:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC1_CH2_DMA_CHANNEL                                                \
  43:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC1_CH2_DMA_STREAM,                       \
  44:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC1_CH2_DMA_CHN)
  45:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  46:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC2_CH1_DMA_CHANNEL                                                \
  47:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC2_CH1_DMA_STREAM,                       \
  48:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC2_CH1_DMA_CHN)
  49:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  50:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC2_CH2_DMA_CHANNEL                                                \
  51:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC2_CH2_DMA_STREAM,                       \
  52:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC2_CH2_DMA_CHN)
  53:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  54:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC3_CH1_DMA_CHANNEL                                                \
  55:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC3_CH1_DMA_STREAM,                       \
  56:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC3_CH1_DMA_CHN)
  57:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  58:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC3_CH2_DMA_CHANNEL                                                \
  59:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC3_CH2_DMA_STREAM,                       \
  60:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC3_CH2_DMA_CHN)
  61:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  62:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC4_CH1_DMA_CHANNEL                                                \
  63:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC4_CH1_DMA_STREAM,                       \
  64:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC4_CH1_DMA_CHN)
  65:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  66:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC4_CH2_DMA_CHANNEL                                                \
  67:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC4_CH2_DMA_STREAM,                       \
  68:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC4_CH2_DMA_CHN)
  69:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  70:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define CHANNEL_DATA_OFFSET 3U
  71:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  72:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  73:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver exported variables.                                                */
  74:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  75:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  76:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC1 CH1 driver identifier.*/
  77:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1 || defined(__DOXYGEN__)
  78:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD1;
  79:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  80:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  81:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC1 CH2 driver identifier.*/
  82:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_DAC_USE_DAC1_CH2 && !STM32_DAC_DUAL_MODE) || defined(__DOXYGEN__)
  83:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD2;
  84:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  85:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  86:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC2 CH1 driver identifier.*/
  87:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1 || defined(__DOXYGEN__)
  88:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD3;
  89:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  90:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  91:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC2 CH2 driver identifier.*/
  92:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_DAC_USE_DAC2_CH2 && !STM32_DAC_DUAL_MODE) || defined(__DOXYGEN__)
  93:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD4;
  94:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  95:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  96:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC3 CH1 driver identifier.*/
  97:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH1 || defined(__DOXYGEN__)
  98:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD5;
  99:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 100:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 101:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC3 CH2 driver identifier.*/
 102:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_DAC_USE_DAC3_CH2 && !STM32_DAC_DUAL_MODE) || defined(__DOXYGEN__)
 103:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD6;
 104:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 105:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 106:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC4 CH1 driver identifier.*/
 107:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH1 || defined(__DOXYGEN__)
 108:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD7;
 109:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 110:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 111:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC4 CH2 driver identifier.*/
 112:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_DAC_USE_DAC4_CH2 && !STM32_DAC_DUAL_MODE) || defined(__DOXYGEN__)
 113:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD8;
 114:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 115:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 116:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 117:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver local variables.                                                   */
 118:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 119:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 120:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1 == TRUE
 121:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dac1_ch1_params = {
 122:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC1,
 123:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = 0U,
 124:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 0U,
 125:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0xFFFF0000U,
 126:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmastream    = STM32_DAC_DAC1_CH1_DMA_STREAM,
 127:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 128:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .peripheral   = STM32_DMAMUX1_DAC1_CH1,
 129:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 130:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC1_CH1_DMA_CHANNEL) |
 131:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC1_CH1_DMA_PRIORITY) |
 132:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 133:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 134:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 135:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC1_CH1_IRQ_PRIORITY
 136:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 137:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 138:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 139:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH2 == TRUE
 140:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dac1_ch2_params = {
 141:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC1,
 142:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = CHANNEL_DATA_OFFSET,
 143:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 16U,
 144:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0x0000FFFFU,
 145:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmastream    = STM32_DAC_DAC1_CH2_DMA_STREAM,
 146:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 147:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .peripheral   = STM32_DMAMUX1_DAC1_CH2,
 148:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 149:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC1_CH2_DMA_CHANNEL) |
 150:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC1_CH2_DMA_PRIORITY) |
 151:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 152:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 153:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 154:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC1_CH2_IRQ_PRIORITY
 155:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 156:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 157:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 158:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1 == TRUE
 159:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dac2_ch1_params = {
 160:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC2,
 161:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = 0U,
 162:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 0U,
 163:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0xFFFF0000U,
 164:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmastream    = STM32_DAC_DAC2_CH1_DMA_STREAM,
 165:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 166:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .peripheral   = STM32_DMAMUX1_DAC2_CH1,
 167:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 168:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC2_CH1_DMA_CHANNEL) |
 169:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC2_CH1_DMA_PRIORITY) |
 170:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 171:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 172:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 173:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC2_CH1_IRQ_PRIORITY
 174:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 175:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 176:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 177:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH2 == TRUE
 178:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dac2_ch2_params = {
 179:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC2,
 180:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = CHANNEL_DATA_OFFSET,
 181:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 16U,
 182:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0x0000FFFFU,
 183:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmastream    = STM32_DAC_DAC2_CH2_DMA_STREAM,
 184:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 185:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .peripheral   = STM32_DMAMUX1_DAC2_CH2,
 186:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 187:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC2_CH2_DMA_CHANNEL) |
 188:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC2_CH2_DMA_PRIORITY) |
 189:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 190:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 191:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 192:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC2_CH2_IRQ_PRIORITY
 193:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 194:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 195:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 196:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH1 == TRUE
 197:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dac3_ch1_params = {
 198:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC3,
 199:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = 0U,
 200:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 0U,
 201:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0xFFFF0000U,
 202:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmastream    = STM32_DAC_DAC3_CH1_DMA_STREAM,
 203:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 204:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .peripheral   = STM32_DMAMUX1_DAC3_CH1,
 205:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 206:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC3_CH1_DMA_CHANNEL) |
 207:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC3_CH1_DMA_PRIORITY) |
 208:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 209:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 210:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 211:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC3_CH1_IRQ_PRIORITY
 212:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 213:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 214:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 215:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH2 == TRUE
 216:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dac3_ch2_params = {
 217:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC3,
 218:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = CHANNEL_DATA_OFFSET,
 219:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 16U,
 220:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0x0000FFFFU,
 221:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmastream    = STM32_DAC_DAC3_CH2_DMA_STREAM,
 222:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 223:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .peripheral   = STM32_DMAMUX1_DAC3_CH2,
 224:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 225:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC3_CH2_DMA_CHANNEL) |
 226:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC3_CH2_DMA_PRIORITY) |
 227:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 228:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 229:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 230:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC3_CH2_IRQ_PRIORITY
 231:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 232:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 233:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 234:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH1 == TRUE
 235:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dac4_ch1_params = {
 236:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC4,
 237:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = 0U,
 238:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 0U,
 239:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0xFFFF0000U,
 240:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmastream    = STM32_DAC_DAC4_CH1_DMA_STREAM,
 241:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 242:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .peripheral   = STM32_DMAMUX1_DAC4_CH1,
 243:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 244:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC4_CH1_DMA_CHANNEL) |
 245:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC4_CH1_DMA_PRIORITY) |
 246:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 247:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 248:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 249:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC4_CH1_IRQ_PRIORITY
 250:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 251:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 252:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 253:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH2 == TRUE
 254:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dac4_ch2_params = {
 255:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC4,
 256:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = CHANNEL_DATA_OFFSET,
 257:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 16U,
 258:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0x0000FFFFU,
 259:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmastream    = STM32_DAC_DAC4_CH2_DMA_STREAM,
 260:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 261:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .peripheral   = STM32_DMAMUX1_DAC4_CH2,
 262:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 263:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC4_CH2_DMA_CHANNEL) |
 264:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC4_CH2_DMA_PRIORITY) |
 265:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 266:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 267:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 268:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC4_CH2_IRQ_PRIORITY
 269:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 270:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 271:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 272:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 273:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver local functions.                                                   */
 274:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 275:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 276:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 277:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Shared end/half-of-tx service routine.
 278:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 279:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 280:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] flags     pre-shifted content of the ISR register
 281:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 282:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static void dac_lld_serve_tx_interrupt(DACDriver *dacp, uint32_t flags) {
 283:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 284:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   if ((flags & (STM32_DMA_ISR_TEIF | STM32_DMA_ISR_DMEIF)) != 0) {
 285:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* DMA errors handling.*/
 286:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dac_lld_stop_conversion(dacp);
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     _dac_isr_error_code(dacp, DAC_ERR_DMAFAILURE);
 288:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 289:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   else {
 290:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if ((flags & STM32_DMA_ISR_HTIF) != 0) {
 291:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Half transfer processing.*/
 292:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       _dac_isr_half_code(dacp);
 293:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 294:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if ((flags & STM32_DMA_ISR_TCIF) != 0) {
 295:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Transfer complete processing.*/
 296:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       _dac_isr_full_code(dacp);
 297:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 298:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 299:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 300:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 301:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 302:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver interrupt handlers.                                                */
 303:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 304:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 305:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 306:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver exported functions.                                                */
 307:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 308:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 309:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 310:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Low level DAC driver initialization.
 311:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 312:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @notapi
 313:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 314:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_init(void) {
  29              		.loc 1 314 25 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 315:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 316:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1
 317:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD1);
  33              		.loc 1 317 3 view .LVU1
 314:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  34              		.loc 1 314 25 is_stmt 0 view .LVU2
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 317 3 view .LVU3
  42 0002 084C     		ldr	r4, .L2
  43 0004 2046     		mov	r0, r4
  44 0006 FFF7FEFF 		bl	dacObjectInit
  45              	.LVL0:
 318:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD1.params  = &dac1_ch1_params;
  46              		.loc 1 318 3 is_stmt 1 view .LVU4
 319:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD1.dma = NULL;
  47              		.loc 1 319 13 is_stmt 0 view .LVU5
  48 000a 0025     		movs	r5, #0
 318:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD1.params  = &dac1_ch1_params;
  49              		.loc 1 318 17 view .LVU6
  50 000c 064B     		ldr	r3, .L2+4
  51 000e A362     		str	r3, [r4, #40]
  52              		.loc 1 319 3 is_stmt 1 view .LVU7
  53              		.loc 1 319 13 is_stmt 0 view .LVU8
  54 0010 E562     		str	r5, [r4, #44]
 320:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 321:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 322:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH2
 323:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD2);
  55              		.loc 1 323 3 is_stmt 1 view .LVU9
  56 0012 064C     		ldr	r4, .L2+8
  57 0014 2046     		mov	r0, r4
  58 0016 FFF7FEFF 		bl	dacObjectInit
  59              	.LVL1:
 324:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD2.params  = &dac1_ch2_params;
  60              		.loc 1 324 3 view .LVU10
  61              		.loc 1 324 17 is_stmt 0 view .LVU11
  62 001a 054B     		ldr	r3, .L2+12
 325:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD2.dma = NULL;
  63              		.loc 1 325 13 view .LVU12
  64 001c C4E90A35 		strd	r3, r5, [r4, #40]
 326:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 327:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 328:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1
 329:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD3);
 330:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD3.params  = &dac2_ch1_params;
 331:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD3.dma = NULL;
 332:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 333:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 334:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH2
 335:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD4);
 336:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD4.params  = &dac2_ch2_params;
 337:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD4.dma = NULL;
 338:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 339:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 340:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH1
 341:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD5);
 342:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD5.params  = &dac3_ch1_params;
 343:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD5.dma = NULL;
 344:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 345:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 346:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH2
 347:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD6);
 348:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD6.params  = &dac3_ch2_params;
 349:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD6.dma = NULL;
 350:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 351:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 352:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH1
 353:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD7);
 354:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD7.params  = &dac4_ch1_params;
 355:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD7.dma = NULL;
 356:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 357:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 358:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH2
 359:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD8);
 360:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD8.params  = &dac4_ch2_params;
 361:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD8.dma = NULL;
 362:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 363:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
  65              		.loc 1 363 1 view .LVU13
  66 0020 38BD     		pop	{r3, r4, r5, pc}
  67              	.L3:
  68 0022 00BF     		.align	2
  69              	.L2:
  70 0024 00000000 		.word	DACD1
  71 0028 00000000 		.word	dac1_ch1_params
  72 002c 00000000 		.word	DACD2
  73 0030 00000000 		.word	dac1_ch2_params
  74              		.cfi_endproc
  75              	.LFE329:
  77              		.section	.text.dac_lld_stop,"ax",%progbits
  78              		.align	1
  79              		.global	dac_lld_stop
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	dac_lld_stop:
  85              	.LVL2:
  86              	.LFB331:
 364:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 365:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 366:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Configures and activates the DAC peripheral.
 367:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 368:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 369:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 370:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @notapi
 371:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 372:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_start(DACDriver *dacp) {
 373:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 374:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* If the driver is in DAC_STOP state then a full initialization is
 375:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****      required.*/
 376:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   if (dacp->state == DAC_STOP) {
 377:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacchannel_t channel = 0;
 378:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 379:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* Enabling the clock source.*/
 380:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1
 381:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD1 == dacp) {
 382:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(true);
 383:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 384:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 385:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 386:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH2
 387:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD2 == dacp) {
 388:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(true);
 389:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 390:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 391:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 392:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 393:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1
 394:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD3 == dacp) {
 395:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC2(true);
 396:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 397:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 398:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 399:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH2
 400:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD4 == dacp) {
 401:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC2(true);
 402:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 403:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 404:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 405:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 406:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH1
 407:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD5 == dacp) {
 408:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC3(true);
 409:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 410:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 411:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 412:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH2
 413:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD6 == dacp) {
 414:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC3(true);
 415:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 416:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 417:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 418:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 419:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH1
 420:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD7 == dacp) {
 421:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC4(true);
 422:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 423:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 424:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 425:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH2
 426:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD8 == dacp) {
 427:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC4(true);
 428:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 429:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 430:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 431:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 432:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* Enabling DAC in SW triggering mode initially, initializing data to
 433:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****        zero.*/
 434:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == FALSE
 435:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     {
 436:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       uint32_t cr;
 437:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 438:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr = dacp->params->dac->CR;
 439:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr &= dacp->params->regmask;
 440:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 441:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = cr;
 442:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dac_lld_put_channel(dacp, channel, dacp->config->init);
 443:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 444:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 445:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if ((dacp->config->datamode == DAC_DHRM_12BIT_RIGHT_DUAL) ||
 446:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         (dacp->config->datamode == DAC_DHRM_12BIT_LEFT_DUAL) ||
 447:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         (dacp->config->datamode == DAC_DHRM_8BIT_RIGHT_DUAL)) {
 448:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = DAC_CR_EN2 | (dacp->config->cr << 16) | DAC_CR_EN1 | dacp->config->cr
 449:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dac_lld_put_channel(dacp, 1U, dacp->config->init);
 450:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 451:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     else {
 452:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = DAC_CR_EN1 | dacp->config->cr;
 453:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 454:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dac_lld_put_channel(dacp, channel, dacp->config->init);
 455:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 456:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 457:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 458:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 459:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 460:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Deactivates the DAC peripheral.
 461:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 462:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 463:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 464:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @notapi
 465:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 466:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_stop(DACDriver *dacp) {
  87              		.loc 1 466 36 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 467:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 468:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* If in ready state then disables the DAC clock.*/
 469:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   if (dacp->state == DAC_READY) {
  92              		.loc 1 469 3 view .LVU15
  93              		.loc 1 469 6 is_stmt 0 view .LVU16
  94 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  95 0002 022B     		cmp	r3, #2
  96 0004 1DD1     		bne	.L4
 470:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 471:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* Disabling DAC.*/
 472:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR &= dacp->params->regmask;
  97              		.loc 1 472 5 is_stmt 1 view .LVU17
  98              		.loc 1 472 9 is_stmt 0 view .LVU18
  99 0006 816A     		ldr	r1, [r0, #40]
 100              		.loc 1 472 17 view .LVU19
 101 0008 0B68     		ldr	r3, [r1]
 102              		.loc 1 472 27 view .LVU20
 103 000a C968     		ldr	r1, [r1, #12]
 104              		.loc 1 472 22 view .LVU21
 105 000c 1A68     		ldr	r2, [r3]
 106              		.loc 1 472 27 view .LVU22
 107 000e 0A40     		ands	r2, r2, r1
 108 0010 1A60     		str	r2, [r3]
 473:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 474:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1
 475:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD1 == dacp) {
 109              		.loc 1 475 5 is_stmt 1 view .LVU23
 110              		.loc 1 475 8 is_stmt 0 view .LVU24
 111 0012 0C4A     		ldr	r2, .L9
 112 0014 9042     		cmp	r0, r2
 113 0016 08D1     		bne	.L7
 476:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN2) == 0U) {
 114              		.loc 1 476 7 is_stmt 1 view .LVU25
 115              		.loc 1 476 29 is_stmt 0 view .LVU26
 116 0018 1A68     		ldr	r2, [r3]
 117              		.loc 1 476 10 view .LVU27
 118 001a D203     		lsls	r2, r2, #15
 119 001c 05D4     		bmi	.L7
 477:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC1();
 120              		.loc 1 477 9 is_stmt 1 view .LVU28
 121 001e 0A4A     		ldr	r2, .L9+4
 122 0020 D169     		ldr	r1, [r2, #28]
 123 0022 21F00051 		bic	r1, r1, #536870912
 124 0026 D161     		str	r1, [r2, #28]
 125              		.loc 1 477 9 view .LVU29
 126 0028 D269     		ldr	r2, [r2, #28]
 127              	.L7:
 128              		.loc 1 477 25 discriminator 1 view .LVU30
 478:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 479:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 480:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 481:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 482:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH2
 483:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD2 == dacp) {
 129              		.loc 1 483 5 discriminator 1 view .LVU31
 130              		.loc 1 483 8 is_stmt 0 discriminator 1 view .LVU32
 131 002a 084A     		ldr	r2, .L9+8
 132 002c 9042     		cmp	r0, r2
 133 002e 08D1     		bne	.L4
 484:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN1) == 0U) {
 134              		.loc 1 484 7 is_stmt 1 view .LVU33
 135              		.loc 1 484 29 is_stmt 0 view .LVU34
 136 0030 1B68     		ldr	r3, [r3]
 137              		.loc 1 484 10 view .LVU35
 138 0032 DB07     		lsls	r3, r3, #31
 139 0034 05D4     		bmi	.L4
 485:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC1();
 140              		.loc 1 485 9 is_stmt 1 view .LVU36
 141 0036 044B     		ldr	r3, .L9+4
 142 0038 DA69     		ldr	r2, [r3, #28]
 143 003a 22F00052 		bic	r2, r2, #536870912
 144 003e DA61     		str	r2, [r3, #28]
 145              		.loc 1 485 9 view .LVU37
 146 0040 DB69     		ldr	r3, [r3, #28]
 147              		.loc 1 485 25 view .LVU38
 148              	.L4:
 486:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 487:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 488:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 489:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 490:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1
 491:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD3 == dacp) {
 492:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN2) == 0U) {
 493:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC2();
 494:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 495:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 496:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 497:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 498:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH2
 499:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD4 == dacp) {
 500:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN1) == 0U) {
 501:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC2();
 502:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 503:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 504:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 505:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 506:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH1
 507:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD5 == dacp) {
 508:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN2) == 0U) {
 509:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC3();
 510:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 511:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 512:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 513:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 514:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC3_CH2
 515:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD6 == dacp) {
 516:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN1) == 0U) {
 517:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC3();
 518:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 519:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 520:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 521:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 522:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH1
 523:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD7 == dacp) {
 524:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN2) == 0U) {
 525:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC4();
 526:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 527:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 528:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 529:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 530:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC4_CH2
 531:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD8 == dacp) {
 532:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN1) == 0U) {
 533:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC4();
 534:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 535:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 536:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 537:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 538:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 149              		.loc 1 538 1 is_stmt 0 view .LVU39
 150 0042 7047     		bx	lr
 151              	.L10:
 152              		.align	2
 153              	.L9:
 154 0044 00000000 		.word	DACD1
 155 0048 00100240 		.word	1073876992
 156 004c 00000000 		.word	DACD2
 157              		.cfi_endproc
 158              	.LFE331:
 160              		.section	.text.dac_lld_put_channel,"ax",%progbits
 161              		.align	1
 162              		.global	dac_lld_put_channel
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	dac_lld_put_channel:
 168              	.LVL3:
 169              	.LFB332:
 539:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 540:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 541:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Outputs a value directly on a DAC channel.
 542:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 543:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 544:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] channel   DAC channel number
 545:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] sample    value to be output
 546:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 547:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @api
 548:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 549:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_put_channel(DACDriver *dacp,
 550:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                          dacchannel_t channel,
 551:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                          dacsample_t sample) {
 170              		.loc 1 551 46 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 552:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 553:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   switch (dacp->config->datamode) {
 175              		.loc 1 553 3 view .LVU41
 176              		.loc 1 553 23 is_stmt 0 view .LVU42
 177 0000 0369     		ldr	r3, [r0, #16]
 178 0002 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 179              		.loc 1 553 3 view .LVU43
 180 0004 012B     		cmp	r3, #1
 181 0006 0CD0     		beq	.L12
 182 0008 022B     		cmp	r3, #2
 183 000a 11D0     		beq	.L13
 184 000c B3B9     		cbnz	r3, .L11
 554:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_RIGHT:
 555:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 556:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_RIGHT_DUAL:
 557:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 558:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (channel == 0U) {
 185              		.loc 1 558 5 is_stmt 1 view .LVU44
 559:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 560:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR12R1 = (uint32_t)sample;
 561:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 562:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       *(&dacp->params->dac->DHR12R1 + dacp->params->dataoffset) = (uint32_t)sample;
 186              		.loc 1 562 14 is_stmt 0 view .LVU45
 187 000e 806A     		ldr	r0, [r0, #40]
 188              	.LVL4:
 189              		.loc 1 562 22 view .LVU46
 190 0010 0368     		ldr	r3, [r0]
 558:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 191              		.loc 1 558 8 view .LVU47
 192 0012 21B9     		cbnz	r1, .L15
 193              		.loc 1 562 7 is_stmt 1 view .LVU48
 194              		.loc 1 562 9 is_stmt 0 view .LVU49
 195 0014 0833     		adds	r3, r3, #8
 196              	.L18:
 563:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 564:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 565:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_HAS_DAC1_CH2 || STM32_HAS_DAC2_CH2 ||                            \
 566:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****      STM32_HAS_DAC3_CH2 || STM32_HAS_DAC4_CH2)
 567:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     else {
 568:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR12R2 = (uint32_t)sample;
 569:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 570:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 571:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 572:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_LEFT:
 573:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 574:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_LEFT_DUAL:
 575:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 576:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (channel == 0U) {
 577:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 578:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR12L1 = (uint32_t)sample;
 579:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 580:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       *(&dacp->params->dac->DHR12L1 + dacp->params->dataoffset) = (uint32_t)sample;
 197              		.loc 1 580 37 view .LVU50
 198 0016 4168     		ldr	r1, [r0, #4]
 199              	.LVL5:
 200              		.loc 1 580 65 view .LVU51
 201 0018 43F82120 		str	r2, [r3, r1, lsl #2]
 202 001c 7047     		bx	lr
 203              	.LVL6:
 204              	.L15:
 568:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 205              		.loc 1 568 7 is_stmt 1 view .LVU52
 568:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 206              		.loc 1 568 34 is_stmt 0 view .LVU53
 207 001e 5A61     		str	r2, [r3, #20]
 208 0020 7047     		bx	lr
 209              	.LVL7:
 210              	.L12:
 576:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 211              		.loc 1 576 5 is_stmt 1 view .LVU54
 562:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 212              		.loc 1 562 14 is_stmt 0 view .LVU55
 213 0022 806A     		ldr	r0, [r0, #40]
 214              	.LVL8:
 562:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 215              		.loc 1 562 22 view .LVU56
 216 0024 0368     		ldr	r3, [r0]
 576:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 217              		.loc 1 576 8 view .LVU57
 218 0026 09B9     		cbnz	r1, .L16
 219              		.loc 1 580 7 is_stmt 1 view .LVU58
 220              		.loc 1 580 9 is_stmt 0 view .LVU59
 221 0028 0C33     		adds	r3, r3, #12
 222 002a F4E7     		b	.L18
 223              	.L16:
 581:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 582:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 583:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_HAS_DAC1_CH2 || STM32_HAS_DAC2_CH2 ||                            \
 584:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****      STM32_HAS_DAC3_CH2 || STM32_HAS_DAC4_CH2)
 585:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     else {
 586:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR12L2 = (uint32_t)sample;
 224              		.loc 1 586 7 is_stmt 1 view .LVU60
 225              		.loc 1 586 34 is_stmt 0 view .LVU61
 226 002c 9A61     		str	r2, [r3, #24]
 227 002e 7047     		bx	lr
 228              	.LVL9:
 229              	.L13:
 587:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 588:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 589:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 590:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_8BIT_RIGHT:
 591:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 592:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_8BIT_RIGHT_DUAL:
 593:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 594:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (channel == 0U) {
 230              		.loc 1 594 5 is_stmt 1 view .LVU62
 562:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 231              		.loc 1 562 14 is_stmt 0 view .LVU63
 232 0030 806A     		ldr	r0, [r0, #40]
 233              	.LVL10:
 562:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 234              		.loc 1 562 22 view .LVU64
 235 0032 0368     		ldr	r3, [r0]
 236              		.loc 1 594 8 view .LVU65
 237 0034 09B9     		cbnz	r1, .L17
 595:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 596:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR8R1 = (uint32_t)sample;
 597:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 598:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       *(&dacp->params->dac->DHR8R1 + dacp->params->dataoffset) = (uint32_t)sample;
 238              		.loc 1 598 7 is_stmt 1 view .LVU66
 239              		.loc 1 598 9 is_stmt 0 view .LVU67
 240 0036 1033     		adds	r3, r3, #16
 241 0038 EDE7     		b	.L18
 242              	.L17:
 599:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 600:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 601:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_HAS_DAC1_CH2 || STM32_HAS_DAC2_CH2 ||                            \
 602:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****      STM32_HAS_DAC3_CH2 || STM32_HAS_DAC4_CH2)
 603:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     else {
 604:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR8R2 = (uint32_t)sample;
 243              		.loc 1 604 7 is_stmt 1 view .LVU68
 244              		.loc 1 604 33 is_stmt 0 view .LVU69
 245 003a DA61     		str	r2, [r3, #28]
 246              	.L11:
 605:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 606:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 607:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 608:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   default:
 609:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(false, "unexpected DAC mode");
 610:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 611:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 612:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 247              		.loc 1 612 1 view .LVU70
 248 003c 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE332:
 252              		.section	.text.dac_lld_start,"ax",%progbits
 253              		.align	1
 254              		.global	dac_lld_start
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 259              	dac_lld_start:
 260              	.LVL11:
 261              	.LFB330:
 372:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 262              		.loc 1 372 37 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 376:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacchannel_t channel = 0;
 267              		.loc 1 376 3 view .LVU72
 376:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacchannel_t channel = 0;
 268              		.loc 1 376 6 is_stmt 0 view .LVU73
 269 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 270 0002 012B     		cmp	r3, #1
 372:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 271              		.loc 1 372 37 view .LVU74
 272 0004 70B4     		push	{r4, r5, r6}
 273              		.cfi_def_cfa_offset 12
 274              		.cfi_offset 4, -12
 275              		.cfi_offset 5, -8
 276              		.cfi_offset 6, -4
 376:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacchannel_t channel = 0;
 277              		.loc 1 376 6 view .LVU75
 278 0006 2AD1     		bne	.L19
 279              	.LBB52:
 377:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 280              		.loc 1 377 5 is_stmt 1 view .LVU76
 281              	.LVL12:
 381:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(true);
 282              		.loc 1 381 5 view .LVU77
 381:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(true);
 283              		.loc 1 381 8 is_stmt 0 view .LVU78
 284 0008 164B     		ldr	r3, .L24
 285 000a 9842     		cmp	r0, r3
 286 000c 05D1     		bne	.L21
 382:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 287              		.loc 1 382 7 is_stmt 1 view .LVU79
 288 000e 164B     		ldr	r3, .L24+4
 289 0010 DA69     		ldr	r2, [r3, #28]
 290 0012 42F00052 		orr	r2, r2, #536870912
 291 0016 DA61     		str	r2, [r3, #28]
 382:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 292              		.loc 1 382 7 view .LVU80
 293 0018 DB69     		ldr	r3, [r3, #28]
 294              	.L21:
 382:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 295              		.loc 1 382 26 discriminator 1 view .LVU81
 387:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(true);
 296              		.loc 1 387 5 discriminator 1 view .LVU82
 387:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(true);
 297              		.loc 1 387 8 is_stmt 0 discriminator 1 view .LVU83
 298 001a 144B     		ldr	r3, .L24+8
 299              	.LBB53:
 438:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr &= dacp->params->regmask;
 300              		.loc 1 438 16 discriminator 1 view .LVU84
 301 001c 846A     		ldr	r4, [r0, #40]
 440:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = cr;
 302              		.loc 1 440 31 discriminator 1 view .LVU85
 303 001e 0569     		ldr	r5, [r0, #16]
 438:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr &= dacp->params->regmask;
 304              		.loc 1 438 24 discriminator 1 view .LVU86
 305 0020 2668     		ldr	r6, [r4]
 306              	.LBE53:
 387:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(true);
 307              		.loc 1 387 8 discriminator 1 view .LVU87
 308 0022 9842     		cmp	r0, r3
 388:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 309              		.loc 1 388 7 is_stmt 1 discriminator 1 view .LVU88
 310 0024 01BF     		itttt	eq
 311 0026 104B     		ldreq	r3, .L24+4
 312 0028 DA69     		ldreq	r2, [r3, #28]
 313 002a 42F00052 		orreq	r2, r2, #536870912
 314 002e DA61     		streq	r2, [r3, #28]
 388:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 315              		.loc 1 388 7 discriminator 1 view .LVU89
 316 0030 08BF     		it	eq
 317 0032 DB69     		ldreq	r3, [r3, #28]
 388:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 318              		.loc 1 388 26 discriminator 1 view .LVU90
 389:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 319              		.loc 1 389 7 discriminator 1 view .LVU91
 320              	.LVL13:
 321              	.LBB54:
 439:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 322              		.loc 1 439 10 is_stmt 0 discriminator 1 view .LVU92
 323 0034 E368     		ldr	r3, [r4, #12]
 438:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr &= dacp->params->regmask;
 324              		.loc 1 438 10 discriminator 1 view .LVU93
 325 0036 3268     		ldr	r2, [r6]
 440:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = cr;
 326              		.loc 1 440 45 discriminator 1 view .LVU94
 327 0038 A468     		ldr	r4, [r4, #8]
 439:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 328              		.loc 1 439 10 discriminator 1 view .LVU95
 329 003a 02EA0302 		and	r2, r2, r3
 440:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = cr;
 330              		.loc 1 440 25 discriminator 1 view .LVU96
 331 003e 6B68     		ldr	r3, [r5, #4]
 332 0040 43F00103 		orr	r3, r3, #1
 440:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = cr;
 333              		.loc 1 440 45 discriminator 1 view .LVU97
 334 0044 03FA04F3 		lsl	r3, r3, r4
 440:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = cr;
 335              		.loc 1 440 10 discriminator 1 view .LVU98
 336 0048 43EA0203 		orr	r3, r3, r2
 441:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dac_lld_put_channel(dacp, channel, dacp->config->init);
 337              		.loc 1 441 29 discriminator 1 view .LVU99
 338 004c 3360     		str	r3, [r6]
 442:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 339              		.loc 1 442 7 discriminator 1 view .LVU100
 340 004e 2A88     		ldrh	r2, [r5]
 341              	.LBE54:
 389:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 342              		.loc 1 389 15 discriminator 1 view .LVU101
 343 0050 08BF     		it	eq
 344 0052 0121     		moveq	r1, #1
 345              	.LBE52:
 457:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 346              		.loc 1 457 1 discriminator 1 view .LVU102
 347 0054 70BC     		pop	{r4, r5, r6}
 348              		.cfi_remember_state
 349              		.cfi_restore 6
 350              		.cfi_restore 5
 351              		.cfi_restore 4
 352              		.cfi_def_cfa_offset 0
 353              	.LBB56:
 377:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 354              		.loc 1 377 18 discriminator 1 view .LVU103
 355 0056 18BF     		it	ne
 356 0058 0021     		movne	r1, #0
 357              	.LVL14:
 358              	.LBB55:
 436:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 359              		.loc 1 436 7 is_stmt 1 discriminator 1 view .LVU104
 438:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr &= dacp->params->regmask;
 360              		.loc 1 438 7 discriminator 1 view .LVU105
 439:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       cr |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 361              		.loc 1 439 7 discriminator 1 view .LVU106
 440:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = cr;
 362              		.loc 1 440 7 discriminator 1 view .LVU107
 441:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dac_lld_put_channel(dacp, channel, dacp->config->init);
 363              		.loc 1 441 7 discriminator 1 view .LVU108
 442:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 364              		.loc 1 442 7 discriminator 1 view .LVU109
 365 005a FFF7FEBF 		b	dac_lld_put_channel
 366              	.LVL15:
 367              	.L19:
 368              		.cfi_restore_state
 442:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 369              		.loc 1 442 7 is_stmt 0 discriminator 1 view .LVU110
 370              	.LBE55:
 371              	.LBE56:
 457:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 372              		.loc 1 457 1 view .LVU111
 373 005e 70BC     		pop	{r4, r5, r6}
 374              		.cfi_restore 6
 375              		.cfi_restore 5
 376              		.cfi_restore 4
 377              		.cfi_def_cfa_offset 0
 378 0060 7047     		bx	lr
 379              	.L25:
 380 0062 00BF     		.align	2
 381              	.L24:
 382 0064 00000000 		.word	DACD1
 383 0068 00100240 		.word	1073876992
 384 006c 00000000 		.word	DACD2
 385              		.cfi_endproc
 386              	.LFE330:
 388              		.section	.text.dac_lld_start_conversion,"ax",%progbits
 389              		.align	1
 390              		.global	dac_lld_start_conversion
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	dac_lld_start_conversion:
 396              	.LVL16:
 397              	.LFB333:
 613:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 614:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 615:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Starts a DAC conversion.
 616:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @details Starts an asynchronous conversion operation.
 617:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @note    In @p DAC_DHRM_8BIT_RIGHT mode the parameters passed to the
 618:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          callback are wrong because two samples are packed in a single
 619:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          dacsample_t element. This will not be corrected, do not rely
 620:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          on those parameters.
 621:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @note    In @p DAC_DHRM_8BIT_RIGHT_DUAL mode two samples are treated
 622:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          as a single 16 bits sample and packed into a single dacsample_t
 623:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          element. The num_channels must be set to one in the group
 624:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          conversion configuration structure.
 625:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 626:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 627:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 628:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @notapi
 629:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 630:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_start_conversion(DACDriver *dacp) {
 398              		.loc 1 630 48 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 631:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t n, cr, dmamode;
 402              		.loc 1 631 3 view .LVU113
 632:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 633:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* Number of DMA operations per buffer.*/
 634:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   n = dacp->depth * dacp->grpp->num_channels;
 403              		.loc 1 634 3 view .LVU114
 630:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t n, cr, dmamode;
 404              		.loc 1 630 48 is_stmt 0 view .LVU115
 405 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 406              		.cfi_def_cfa_offset 24
 407              		.cfi_offset 3, -24
 408              		.cfi_offset 4, -20
 409              		.cfi_offset 5, -16
 410              		.cfi_offset 6, -12
 411              		.cfi_offset 7, -8
 412              		.cfi_offset 14, -4
 413              		.loc 1 634 31 view .LVU116
 414 0002 4368     		ldr	r3, [r0, #4]
 635:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 636:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* Allocating the DMA channel.*/
 637:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->dma = dmaStreamAllocI(dacp->params->dmastream,
 415              		.loc 1 637 15 view .LVU117
 416 0004 264A     		ldr	r2, .L32
 634:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 417              		.loc 1 634 5 view .LVU118
 418 0006 1D68     		ldr	r5, [r3]
 419 0008 C368     		ldr	r3, [r0, #12]
 630:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t n, cr, dmamode;
 420              		.loc 1 630 48 view .LVU119
 421 000a 0446     		mov	r4, r0
 422              		.loc 1 637 35 view .LVU120
 423 000c 806A     		ldr	r0, [r0, #40]
 424              	.LVL17:
 634:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 425              		.loc 1 634 5 view .LVU121
 426 000e 5D43     		muls	r5, r3, r5
 427              	.LVL18:
 428              		.loc 1 637 3 is_stmt 1 view .LVU122
 429              		.loc 1 637 15 is_stmt 0 view .LVU123
 430 0010 8169     		ldr	r1, [r0, #24]
 431 0012 0069     		ldr	r0, [r0, #16]
 432 0014 2346     		mov	r3, r4
 433 0016 FFF7FEFF 		bl	dmaStreamAllocI
 434              	.LVL19:
 638:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                               dacp->params->dmairqprio,
 639:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                               (stm32_dmaisr_t)dac_lld_serve_tx_interrupt,
 640:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                               (void *)dacp);
 641:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   osalDbgAssert(dacp->dma != NULL, "unable to allocate stream");
 642:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 643:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaSetRequestSource(dacp->dma, dacp->params->peripheral);
 644:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 645:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 646:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* DMA settings depend on the chosen DAC mode.*/
 647:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   switch (dacp->config->datamode) {
 435              		.loc 1 647 15 view .LVU124
 436 001a 2169     		ldr	r1, [r4, #16]
 637:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                               dacp->params->dmairqprio,
 437              		.loc 1 637 13 view .LVU125
 438 001c E062     		str	r0, [r4, #44]
 641:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 439              		.loc 1 641 3 is_stmt 1 view .LVU126
 641:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 440              		.loc 1 641 3 view .LVU127
 641:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 441              		.loc 1 641 3 view .LVU128
 442              		.loc 1 647 3 view .LVU129
 443              		.loc 1 647 23 is_stmt 0 view .LVU130
 444 001e 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 445              		.loc 1 647 3 view .LVU131
 446 0020 012B     		cmp	r3, #1
 447 0022 2BD0     		beq	.L27
 448 0024 022B     		cmp	r3, #2
 449 0026 2ED0     		beq	.L28
 450 0028 3BBB     		cbnz	r3, .L26
 648:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* Sets the DAC data register */
 649:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_RIGHT:
 650:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 1, "invalid number of channels");
 451              		.loc 1 650 5 is_stmt 1 discriminator 5 view .LVU132
 452              		.loc 1 650 5 discriminator 5 view .LVU133
 453              		.loc 1 650 5 discriminator 5 view .LVU134
 651:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 652:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->dma, &dacp->params->dac->DHR12R1 +
 454              		.loc 1 652 5 discriminator 5 view .LVU135
 455 002a A66A     		ldr	r6, [r4, #40]
 456 002c 4268     		ldr	r2, [r0, #4]
 457 002e 3368     		ldr	r3, [r6]
 458 0030 0833     		adds	r3, r3, #8
 459              	.L31:
 653:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       dacp->params->dataoffset);
 654:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 655:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 656:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 657:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_LEFT:
 658:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 1, "invalid number of channels");
 659:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 660:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->dma, &dacp->params->dac->DHR12L1 +
 460              		.loc 1 660 5 is_stmt 0 discriminator 5 view .LVU136
 461 0032 7768     		ldr	r7, [r6, #4]
 462 0034 03EB8703 		add	r3, r3, r7, lsl #2
 463 0038 9360     		str	r3, [r2, #8]
 661:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       dacp->params->dataoffset);
 464              		.loc 1 661 64 is_stmt 1 discriminator 5 view .LVU137
 662:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 465              		.loc 1 662 5 discriminator 5 view .LVU138
 466              		.loc 1 662 13 is_stmt 0 discriminator 5 view .LVU139
 467 003a 7369     		ldr	r3, [r6, #20]
 468 003c 43F4A063 		orr	r3, r3, #1280
 469              	.LVL20:
 663:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 664:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 470              		.loc 1 664 5 is_stmt 1 discriminator 5 view .LVU140
 471              	.L30:
 665:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_8BIT_RIGHT:
 666:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 1, "invalid number of channels");
 667:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 668:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->dma, &dacp->params->dac->DHR8R1 +
 669:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       dacp->params->dataoffset);
 670:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 671:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE;
 672:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 673:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* In this mode the size of the buffer is halved because two samples
 674:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****        packed in a single dacsample_t element.*/
 675:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     n = (n + 1) / 2;
 676:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 677:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == TRUE
 678:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_RIGHT_DUAL:
 679:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 2, "invalid number of channels");
 680:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 681:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->dma, &dacp->params->dac->DHR12RD);
 682:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 683:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_WORD | STM32_DMA_CR_MSIZE_WORD;
 684:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     n /= 2;
 685:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 686:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_LEFT_DUAL:
 687:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 2, "invalid number of channels");
 688:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 689:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->dma, &dacp->params->dac->DHR12LD);
 690:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 691:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_WORD | STM32_DMA_CR_MSIZE_WORD;
 692:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     n /= 2;
 693:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 694:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_8BIT_RIGHT_DUAL:
 695:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 1, "invalid number of channels");
 696:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 697:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->dma, &dacp->params->dac->DHR8RD);
 698:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 699:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 700:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     n /= 2;
 701:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 702:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 703:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   default:
 704:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(false, "unexpected DAC mode");
 705:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     return;
 706:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 707:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 708:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetMemory0(dacp->dma, dacp->samples);
 472              		.loc 1 708 3 view .LVU141
 473 0040 4268     		ldr	r2, [r0, #4]
 474 0042 A068     		ldr	r0, [r4, #8]
 475 0044 D060     		str	r0, [r2, #12]
 476              		.loc 1 708 48 view .LVU142
 709:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetTransactionSize(dacp->dma, n);
 477              		.loc 1 709 3 view .LVU143
 710:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetMode(dacp->dma, dmamode            |
 478              		.loc 1 710 3 is_stmt 0 view .LVU144
 479 0046 43F00E03 		orr	r3, r3, #14
 480              	.LVL21:
 709:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetTransactionSize(dacp->dma, n);
 481              		.loc 1 709 3 view .LVU145
 482 004a 5560     		str	r5, [r2, #4]
 709:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetTransactionSize(dacp->dma, n);
 483              		.loc 1 709 44 is_stmt 1 view .LVU146
 484              		.loc 1 710 3 view .LVU147
 485 004c 1360     		str	r3, [r2]
 711:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                               STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE |
 712:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                               STM32_DMA_CR_HTIE  | STM32_DMA_CR_TCIE);
 486              		.loc 1 712 70 view .LVU148
 713:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamEnable(dacp->dma);
 487              		.loc 1 713 3 view .LVU149
 714:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 715:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* DAC configuration.*/
 716:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr = dacp->params->dac->CR;
 488              		.loc 1 716 12 is_stmt 0 view .LVU150
 489 004e A06A     		ldr	r0, [r4, #40]
 713:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamEnable(dacp->dma);
 490              		.loc 1 713 3 view .LVU151
 491 0050 1368     		ldr	r3, [r2]
 492              		.loc 1 716 20 view .LVU152
 493 0052 0568     		ldr	r5, [r0]
 494              	.LVL22:
 713:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamEnable(dacp->dma);
 495              		.loc 1 713 3 view .LVU153
 496 0054 43F00103 		orr	r3, r3, #1
 497 0058 1360     		str	r3, [r2]
 713:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamEnable(dacp->dma);
 498              		.loc 1 713 29 is_stmt 1 view .LVU154
 499              		.loc 1 716 3 view .LVU155
 500              		.loc 1 716 6 is_stmt 0 view .LVU156
 501 005a 2A68     		ldr	r2, [r5]
 502              	.LVL23:
 717:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 718:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == FALSE
 719:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr &= dacp->params->regmask;
 503              		.loc 1 719 3 is_stmt 1 view .LVU157
 504              		.loc 1 719 6 is_stmt 0 view .LVU158
 505 005c C368     		ldr	r3, [r0, #12]
 506 005e 1A40     		ands	r2, r2, r3
 507              	.LVL24:
 720:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr |= (DAC_CR_DMAEN1 | (dacp->grpp->trigger << DAC_CR_TSEL1_Pos) | DAC_CR_TEN1 | DAC_CR_EN1 | dac
 508              		.loc 1 720 3 is_stmt 1 view .LVU159
 509              		.loc 1 720 37 is_stmt 0 view .LVU160
 510 0060 6368     		ldr	r3, [r4, #4]
 511              		.loc 1 720 47 view .LVU161
 512 0062 DC68     		ldr	r4, [r3, #12]
 513              	.LVL25:
 514              		.loc 1 720 95 view .LVU162
 515 0064 4B68     		ldr	r3, [r1, #4]
 516              		.loc 1 720 115 view .LVU163
 517 0066 8168     		ldr	r1, [r0, #8]
 518              		.loc 1 720 95 view .LVU164
 519 0068 43EAC403 		orr	r3, r3, r4, lsl #3
 520 006c 43F48053 		orr	r3, r3, #4096
 521 0070 43F00503 		orr	r3, r3, #5
 522              		.loc 1 720 115 view .LVU165
 523 0074 8B40     		lsls	r3, r3, r1
 524              		.loc 1 720 6 view .LVU166
 525 0076 1343     		orrs	r3, r3, r2
 526              	.LVL26:
 721:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 722:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr = DAC_CR_DMAEN1 | (dacp->grpp->trigger << DAC_CR_TSEL1_Pos) | DAC_CR_TEN1 | DAC_CR_EN1 | dacp-
 723:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                      | (dacp->grpp->trigger << DAC_CR_TSEL2_Pos) | DAC_CR_TEN2 | DAC_CR_EN2 | (dacp
 724:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 725:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 726:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR = cr;
 527              		.loc 1 726 3 is_stmt 1 view .LVU167
 528              		.loc 1 726 25 is_stmt 0 view .LVU168
 529 0078 2B60     		str	r3, [r5]
 530              	.LVL27:
 531              	.L26:
 727:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 532              		.loc 1 727 1 view .LVU169
 533 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 534              	.LVL28:
 535              	.L27:
 658:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 536              		.loc 1 658 5 is_stmt 1 discriminator 5 view .LVU170
 658:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 537              		.loc 1 658 5 discriminator 5 view .LVU171
 658:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 538              		.loc 1 658 5 discriminator 5 view .LVU172
 660:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       dacp->params->dataoffset);
 539              		.loc 1 660 5 discriminator 5 view .LVU173
 540 007c A66A     		ldr	r6, [r4, #40]
 541 007e 4268     		ldr	r2, [r0, #4]
 542 0080 3368     		ldr	r3, [r6]
 543 0082 0C33     		adds	r3, r3, #12
 544 0084 D5E7     		b	.L31
 545              	.L28:
 666:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 546              		.loc 1 666 5 discriminator 5 view .LVU174
 666:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 547              		.loc 1 666 5 discriminator 5 view .LVU175
 666:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 548              		.loc 1 666 5 discriminator 5 view .LVU176
 668:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       dacp->params->dataoffset);
 549              		.loc 1 668 5 discriminator 5 view .LVU177
 550 0086 A66A     		ldr	r6, [r4, #40]
 551 0088 4268     		ldr	r2, [r0, #4]
 552 008a 3368     		ldr	r3, [r6]
 553 008c 7768     		ldr	r7, [r6, #4]
 554 008e 1033     		adds	r3, r3, #16
 555 0090 03EB8703 		add	r3, r3, r7, lsl #2
 675:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 556              		.loc 1 675 12 is_stmt 0 discriminator 5 view .LVU178
 557 0094 0135     		adds	r5, r5, #1
 558              	.LVL29:
 668:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       dacp->params->dataoffset);
 559              		.loc 1 668 5 discriminator 5 view .LVU179
 560 0096 9360     		str	r3, [r2, #8]
 669:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 561              		.loc 1 669 64 is_stmt 1 discriminator 5 view .LVU180
 670:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE;
 562              		.loc 1 670 5 discriminator 5 view .LVU181
 675:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 563              		.loc 1 675 7 is_stmt 0 discriminator 5 view .LVU182
 564 0098 6D08     		lsrs	r5, r5, #1
 565              	.LVL30:
 670:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE;
 566              		.loc 1 670 13 discriminator 5 view .LVU183
 567 009a 7369     		ldr	r3, [r6, #20]
 568              	.LVL31:
 675:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 569              		.loc 1 675 5 is_stmt 1 discriminator 5 view .LVU184
 676:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == TRUE
 570              		.loc 1 676 5 discriminator 5 view .LVU185
 571 009c D0E7     		b	.L30
 572              	.L33:
 573 009e 00BF     		.align	2
 574              	.L32:
 575 00a0 00000000 		.word	dac_lld_serve_tx_interrupt
 576              		.cfi_endproc
 577              	.LFE333:
 579              		.section	.text.dac_lld_stop_conversion,"ax",%progbits
 580              		.align	1
 581              		.global	dac_lld_stop_conversion
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	dac_lld_stop_conversion:
 587              	.LVL32:
 588              	.LFB334:
 728:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 729:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 730:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Stops an ongoing conversion.
 731:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @details This function stops the currently ongoing conversion and returns
 732:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          the driver in the @p DAC_READY state. If there was no conversion
 733:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          being processed then the function does nothing.
 734:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 735:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 736:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 737:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @iclass
 738:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 739:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_stop_conversion(DACDriver *dacp) {
 589              		.loc 1 739 47 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 740:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t cr;
 593              		.loc 1 740 3 view .LVU187
 741:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 742:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* DMA channel disabled and released.*/
 743:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamDisable(dacp->dma);
 594              		.loc 1 743 3 view .LVU188
 739:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t cr;
 595              		.loc 1 739 47 is_stmt 0 view .LVU189
 596 0000 10B5     		push	{r4, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 4, -8
 599              		.cfi_offset 14, -4
 739:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t cr;
 600              		.loc 1 739 47 view .LVU190
 601 0002 0446     		mov	r4, r0
 602              		.loc 1 743 3 view .LVU191
 603 0004 C06A     		ldr	r0, [r0, #44]
 604              	.LVL33:
 605              		.loc 1 743 3 view .LVU192
 606 0006 4268     		ldr	r2, [r0, #4]
 607 0008 1368     		ldr	r3, [r2]
 608 000a 23F00F03 		bic	r3, r3, #15
 609 000e 1360     		str	r3, [r2]
 610              		.loc 1 743 3 is_stmt 1 view .LVU193
 611 0010 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 612 0012 0268     		ldr	r2, [r0]
 613 0014 0E23     		movs	r3, #14
 614 0016 8B40     		lsls	r3, r3, r1
 615 0018 5360     		str	r3, [r2, #4]
 616              		.loc 1 743 3 view .LVU194
 617              		.loc 1 743 30 view .LVU195
 744:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamFreeI(dacp->dma);
 618              		.loc 1 744 3 view .LVU196
 619 001a FFF7FEFF 		bl	dmaStreamFreeI
 620              	.LVL34:
 745:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->dma = NULL;
 621              		.loc 1 745 3 view .LVU197
 746:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 747:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr = dacp->params->dac->CR;
 622              		.loc 1 747 12 is_stmt 0 view .LVU198
 623 001e A16A     		ldr	r1, [r4, #40]
 624              		.loc 1 747 20 view .LVU199
 625 0020 0868     		ldr	r0, [r1]
 745:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->dma = NULL;
 626              		.loc 1 745 13 view .LVU200
 627 0022 0023     		movs	r3, #0
 628              		.loc 1 747 6 view .LVU201
 629 0024 0268     		ldr	r2, [r0]
 745:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->dma = NULL;
 630              		.loc 1 745 13 view .LVU202
 631 0026 E362     		str	r3, [r4, #44]
 632              		.loc 1 747 3 is_stmt 1 view .LVU203
 633              	.LVL35:
 748:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 749:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == FALSE
 750:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr &= dacp->params->regmask;
 634              		.loc 1 750 3 view .LVU204
 635              		.loc 1 750 6 is_stmt 0 view .LVU205
 636 0028 CB68     		ldr	r3, [r1, #12]
 751:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 637              		.loc 1 751 41 view .LVU206
 638 002a 8968     		ldr	r1, [r1, #8]
 750:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 639              		.loc 1 750 6 view .LVU207
 640 002c 1A40     		ands	r2, r2, r3
 641              	.LVL36:
 642              		.loc 1 751 3 is_stmt 1 view .LVU208
 643              		.loc 1 751 35 is_stmt 0 view .LVU209
 644 002e 2369     		ldr	r3, [r4, #16]
 645              		.loc 1 751 21 view .LVU210
 646 0030 5B68     		ldr	r3, [r3, #4]
 647 0032 43F00103 		orr	r3, r3, #1
 648              		.loc 1 751 41 view .LVU211
 649 0036 8B40     		lsls	r3, r3, r1
 650              		.loc 1 751 6 view .LVU212
 651 0038 1343     		orrs	r3, r3, r2
 652              	.LVL37:
 752:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 753:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   if ((dacp->config->datamode == DAC_DHRM_12BIT_RIGHT_DUAL) ||
 754:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       (dacp->config->datamode == DAC_DHRM_12BIT_LEFT_DUAL) ||
 755:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       (dacp->config->datamode == DAC_DHRM_8BIT_RIGHT_DUAL)) {
 756:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     cr = DAC_CR_EN2 | (dacp->config->cr << 16) |
 757:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****          DAC_CR_EN1 | dacp->config->cr;
 758:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 759:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   else {
 760:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     cr = DAC_CR_EN1 | dacp->config->cr;
 761:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 762:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 763:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 764:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR = cr;
 653              		.loc 1 764 3 is_stmt 1 view .LVU213
 654              		.loc 1 764 25 is_stmt 0 view .LVU214
 655 003a 0360     		str	r3, [r0]
 765:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 656              		.loc 1 765 1 view .LVU215
 657 003c 10BD     		pop	{r4, pc}
 658              		.loc 1 765 1 view .LVU216
 659              		.cfi_endproc
 660              	.LFE334:
 662              		.section	.text.dac_lld_serve_tx_interrupt,"ax",%progbits
 663              		.align	1
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 668              	dac_lld_serve_tx_interrupt:
 669              	.LVL38:
 670              	.LFB328:
 282:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 671              		.loc 1 282 73 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 284:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* DMA errors handling.*/
 675              		.loc 1 284 3 view .LVU218
 282:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 676              		.loc 1 282 73 is_stmt 0 view .LVU219
 677 0000 38B5     		push	{r3, r4, r5, lr}
 678              		.cfi_def_cfa_offset 16
 679              		.cfi_offset 3, -16
 680              		.cfi_offset 4, -12
 681              		.cfi_offset 5, -8
 682              		.cfi_offset 14, -4
 282:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 683              		.loc 1 282 73 view .LVU220
 684 0002 0D46     		mov	r5, r1
 284:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* DMA errors handling.*/
 685              		.loc 1 284 6 view .LVU221
 686 0004 2907     		lsls	r1, r5, #28
 687              	.LVL39:
 282:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 688              		.loc 1 282 73 view .LVU222
 689 0006 0446     		mov	r4, r0
 284:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* DMA errors handling.*/
 690              		.loc 1 284 6 view .LVU223
 691 0008 1FD5     		bpl	.L36
 286:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     _dac_isr_error_code(dacp, DAC_ERR_DMAFAILURE);
 692              		.loc 1 286 5 is_stmt 1 view .LVU224
 693 000a FFF7FEFF 		bl	dac_lld_stop_conversion
 694              	.LVL40:
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 695              		.loc 1 287 5 view .LVU225
 696 000e 2046     		mov	r0, r4
 697 0010 FFF7FEFF 		bl	dac_lld_stop_conversion
 698              	.LVL41:
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 699              		.loc 1 287 5 view .LVU226
 700 0014 6368     		ldr	r3, [r4, #4]
 701 0016 9B68     		ldr	r3, [r3, #8]
 702 0018 4BB1     		cbz	r3, .L38
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 703              		.loc 1 287 5 discriminator 1 view .LVU227
 704 001a 0522     		movs	r2, #5
 705 001c 2270     		strb	r2, [r4]
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 706              		.loc 1 287 5 discriminator 1 view .LVU228
 707 001e 0021     		movs	r1, #0
 708 0020 2046     		mov	r0, r4
 709 0022 9847     		blx	r3
 710              	.LVL42:
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 711              		.loc 1 287 5 discriminator 1 view .LVU229
 712 0024 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 713 0026 052B     		cmp	r3, #5
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 714              		.loc 1 287 5 discriminator 1 view .LVU230
 715 0028 04BF     		itt	eq
 716 002a 0223     		moveq	r3, #2
 717 002c 2370     		strbeq	r3, [r4]
 718              	.L38:
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 719              		.loc 1 287 5 discriminator 5 view .LVU231
 720 002e 0025     		movs	r5, #0
 721              	.LVL43:
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 722              		.loc 1 287 5 is_stmt 0 discriminator 5 view .LVU232
 723 0030 6560     		str	r5, [r4, #4]
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 724              		.loc 1 287 5 is_stmt 1 discriminator 5 view .LVU233
 725              	.LBB57:
 726              	.LBI57:
 727              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
 728              		.loc 2 595 20 discriminator 5 view .LVU234
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
 729              		.loc 2 597 3 discriminator 5 view .LVU235
 730              	.LBB58:
 731              	.LBI58:
 732              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 381:./lib/chibios/os/rt/include/chsys.h **** }
 382:./lib/chibios/os/rt/include/chsys.h **** 
 383:./lib/chibios/os/rt/include/chsys.h **** /**
 384:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 385:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 386:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 387:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 388:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 389:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 390:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 391:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 392:./lib/chibios/os/rt/include/chsys.h ****  *
 393:./lib/chibios/os/rt/include/chsys.h ****  * @special
 394:./lib/chibios/os/rt/include/chsys.h ****  */
 395:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 733              		.loc 3 395 20 discriminator 5 view .LVU236
 396:./lib/chibios/os/rt/include/chsys.h **** 
 397:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 734              		.loc 3 397 3 discriminator 5 view .LVU237
 735              	.LBB59:
 736              	.LBI59:
 737              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 697:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 698:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 699:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 700:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 701:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 702:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 703:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 704:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 705:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 706:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_lock() in this port.
 707:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock_from_isr(void) {
 738              		.loc 4 708 27 discriminator 5 view .LVU238
 709:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_lock();
 739              		.loc 4 710 3 discriminator 5 view .LVU239
 740              	.LBB60:
 741              	.LBI60:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 742              		.loc 4 669 27 discriminator 5 view .LVU240
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 743              		.loc 4 677 3 discriminator 5 view .LVU241
 744              	.LVL44:
 745              	.LBB61:
 746              	.LBI61:
 747              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 748              		.loc 5 491 27 discriminator 5 view .LVU242
 749              	.LBB62:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 750              		.loc 5 493 3 discriminator 5 view .LVU243
 751 0032 2023     		movs	r3, #32
 752              		.syntax unified
 753              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 754 0034 83F31188 		MSR basepri, r3
 755              	@ 0 "" 2
 756              	.LVL45:
 757              		.loc 5 493 3 is_stmt 0 discriminator 5 view .LVU244
 758              		.thumb
 759              		.syntax unified
 760              	.LBE62:
 761              	.LBE61:
 762              	.LBE60:
 763              	.LBE59:
 398:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 764              		.loc 3 398 34 is_stmt 1 discriminator 5 view .LVU245
 399:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 765              		.loc 3 399 29 discriminator 5 view .LVU246
 766              	.LBE58:
 767              	.LBE57:
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 768              		.loc 1 287 5 discriminator 5 view .LVU247
 769              	.LBB63:
 770              	.LBI63:
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 761:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 762:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 763:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 764:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 765:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 766:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 767:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 768:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 769:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 770:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 771:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 772:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 774:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 775:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 776:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 777:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 778:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 779:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 780:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 781:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 782:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 783:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 784:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 785:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 786:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 787:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 788:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 789:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 790:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 791:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 792:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 793:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 794:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 795:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 796:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 797:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 798:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 799:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 800:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 801:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 803:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 804:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 805:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 806:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 807:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 808:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 809:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 810:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 811:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 812:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 813:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 814:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 815:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 816:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 817:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 818:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 819:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 820:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 822:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 823:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 825:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 826:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 827:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 828:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 829:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must not reschedule because it can be called from
 830:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          ISR context.
 831:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 832:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 833:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 834:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 835:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 836:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 837:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 771              		.loc 2 837 20 discriminator 5 view .LVU248
 772              	.LBB64:
 838:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 839:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeI(trp, msg);
 773              		.loc 2 839 3 discriminator 5 view .LVU249
 774 0038 4FF0FF31 		mov	r1, #-1
 775 003c 04F11400 		add	r0, r4, #20
 776              	.LVL46:
 777              		.loc 2 839 3 is_stmt 0 discriminator 5 view .LVU250
 778 0040 FFF7FEFF 		bl	chThdResumeI
 779              	.LVL47:
 780              		.loc 2 839 3 discriminator 5 view .LVU251
 781              	.LBE64:
 782              	.LBE63:
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 783              		.loc 1 287 5 is_stmt 1 discriminator 5 view .LVU252
 784              	.LBB65:
 785              	.LBI65:
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 786              		.loc 2 606 20 discriminator 5 view .LVU253
 787              	.LBB66:
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 788              		.loc 2 608 3 discriminator 5 view .LVU254
 789              	.LBB67:
 790              	.LBI67:
 400:./lib/chibios/os/rt/include/chsys.h **** }
 401:./lib/chibios/os/rt/include/chsys.h **** 
 402:./lib/chibios/os/rt/include/chsys.h **** /**
 403:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 404:./lib/chibios/os/rt/include/chsys.h ****  *
 405:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 406:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 407:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 408:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 409:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 410:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 411:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 412:./lib/chibios/os/rt/include/chsys.h ****  *
 413:./lib/chibios/os/rt/include/chsys.h ****  * @special
 414:./lib/chibios/os/rt/include/chsys.h ****  */
 415:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 791              		.loc 3 415 20 discriminator 5 view .LVU255
 416:./lib/chibios/os/rt/include/chsys.h **** 
 417:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 792              		.loc 3 417 31 discriminator 5 view .LVU256
 418:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 793              		.loc 3 418 33 discriminator 5 view .LVU257
 419:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 794              		.loc 3 419 3 discriminator 5 view .LVU258
 795              	.LBB68:
 796              	.LBI68:
 711:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 712:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 713:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 714:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 715:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 716:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 717:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_unlock() in this port.
 718:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock_from_isr(void) {
 797              		.loc 4 719 27 discriminator 5 view .LVU259
 720:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 721:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_unlock();
 798              		.loc 4 721 3 discriminator 5 view .LVU260
 799              	.LBB69:
 800              	.LBI69:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 801              		.loc 4 693 27 discriminator 5 view .LVU261
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 802              		.loc 4 696 3 discriminator 5 view .LVU262
 803              	.LBB70:
 804              	.LBI70:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 805              		.loc 5 491 27 discriminator 5 view .LVU263
 806              	.LBB71:
 807              		.loc 5 493 3 discriminator 5 view .LVU264
 808              		.syntax unified
 809              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 810 0044 85F31188 		MSR basepri, r5
 811              	@ 0 "" 2
 812              	.LVL48:
 813              		.thumb
 814              		.syntax unified
 815              	.L35:
 816              		.loc 5 493 3 is_stmt 0 discriminator 5 view .LVU265
 817              	.LBE71:
 818              	.LBE70:
 819              	.LBE69:
 820              	.LBE68:
 821              	.LBE67:
 822              	.LBE66:
 823              	.LBE65:
 299:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 824              		.loc 1 299 1 view .LVU266
 825 0048 38BD     		pop	{r3, r4, r5, pc}
 826              	.LVL49:
 827              	.L36:
 290:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Half transfer processing.*/
 828              		.loc 1 290 5 is_stmt 1 view .LVU267
 290:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Half transfer processing.*/
 829              		.loc 1 290 8 is_stmt 0 view .LVU268
 830 004a 6A07     		lsls	r2, r5, #29
 831 004c 03D5     		bpl	.L41
 292:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 832              		.loc 1 292 7 is_stmt 1 view .LVU269
 833 004e 4368     		ldr	r3, [r0, #4]
 834 0050 5B68     		ldr	r3, [r3, #4]
 835 0052 03B1     		cbz	r3, .L41
 292:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 836              		.loc 1 292 7 discriminator 1 view .LVU270
 837 0054 9847     		blx	r3
 838              	.LVL50:
 839              	.L41:
 292:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 840              		.loc 1 292 31 discriminator 3 view .LVU271
 294:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Transfer complete processing.*/
 841              		.loc 1 294 5 discriminator 3 view .LVU272
 294:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Transfer complete processing.*/
 842              		.loc 1 294 8 is_stmt 0 discriminator 3 view .LVU273
 843 0056 AB07     		lsls	r3, r5, #30
 844 0058 F6D5     		bpl	.L35
 296:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 845              		.loc 1 296 7 is_stmt 1 view .LVU274
 846 005a 6368     		ldr	r3, [r4, #4]
 847 005c 5B68     		ldr	r3, [r3, #4]
 848 005e 002B     		cmp	r3, #0
 849 0060 F2D0     		beq	.L35
 296:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 850              		.loc 1 296 7 discriminator 1 view .LVU275
 851 0062 0422     		movs	r2, #4
 852 0064 2270     		strb	r2, [r4]
 296:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 853              		.loc 1 296 7 discriminator 1 view .LVU276
 854 0066 2046     		mov	r0, r4
 855 0068 9847     		blx	r3
 856              	.LVL51:
 296:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 857              		.loc 1 296 7 discriminator 1 view .LVU277
 858 006a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 859 006c 042B     		cmp	r3, #4
 296:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 860              		.loc 1 296 7 discriminator 1 view .LVU278
 861 006e 04BF     		itt	eq
 862 0070 0323     		moveq	r3, #3
 863 0072 2370     		strbeq	r3, [r4]
 296:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 864              		.loc 1 296 31 discriminator 1 view .LVU279
 299:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 865              		.loc 1 299 1 is_stmt 0 discriminator 1 view .LVU280
 866 0074 E8E7     		b	.L35
 867              		.cfi_endproc
 868              	.LFE328:
 870              		.section	.rodata.dac1_ch2_params,"a"
 871              		.align	2
 874              	dac1_ch2_params:
 875 0000 00740040 		.word	1073771520
 876 0004 03000000 		.word	3
 877 0008 10000000 		.word	16
 878 000c FFFF0000 		.word	65535
 879 0010 0A000000 		.word	10
 880 0014 BE200000 		.word	8382
 881 0018 0A000000 		.word	10
 882              		.section	.rodata.dac1_ch1_params,"a"
 883              		.align	2
 886              	dac1_ch1_params:
 887 0000 00740040 		.word	1073771520
 888 0004 00000000 		.word	0
 889 0008 00000000 		.word	0
 890 000c 0000FFFF 		.word	-65536
 891 0010 09000000 		.word	9
 892 0014 BE200000 		.word	8382
 893 0018 0A000000 		.word	10
 894              		.comm	DACD2,48,4
 895              		.comm	DACD1,48,4
 896              		.text
 897              	.Letext0:
 898              		.file 6 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 899              		.file 7 "/usr/arm-none-eabi/include/machine/_default_types.h"
 900              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 901              		.file 9 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 902              		.file 10 "./lib/chibios/os/rt/include/chsystypes.h"
 903              		.file 11 "./lib/chibios/os/rt/include/chschd.h"
 904              		.file 12 "./lib/chibios/os/rt/include/chlists.h"
 905              		.file 13 "./lib/chibios/os/common/ext/ST/STM32F3xx/stm32f303xc.h"
 906              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 907              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 908              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
 909              		.file 17 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 910              		.file 18 "./lib/chibios/os/hal/include/hal_dac.h"
 911              		.file 19 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 912              		.file 20 "./lib/chibios/os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_dac_lld.c
     /tmp/cc0pJz1C.s:21     .text.dac_lld_init:0000000000000000 $t
     /tmp/cc0pJz1C.s:27     .text.dac_lld_init:0000000000000000 dac_lld_init
     /tmp/cc0pJz1C.s:70     .text.dac_lld_init:0000000000000024 $d
                            *COM*:0000000000000030 DACD1
     /tmp/cc0pJz1C.s:886    .rodata.dac1_ch1_params:0000000000000000 dac1_ch1_params
                            *COM*:0000000000000030 DACD2
     /tmp/cc0pJz1C.s:874    .rodata.dac1_ch2_params:0000000000000000 dac1_ch2_params
     /tmp/cc0pJz1C.s:78     .text.dac_lld_stop:0000000000000000 $t
     /tmp/cc0pJz1C.s:84     .text.dac_lld_stop:0000000000000000 dac_lld_stop
     /tmp/cc0pJz1C.s:154    .text.dac_lld_stop:0000000000000044 $d
     /tmp/cc0pJz1C.s:161    .text.dac_lld_put_channel:0000000000000000 $t
     /tmp/cc0pJz1C.s:167    .text.dac_lld_put_channel:0000000000000000 dac_lld_put_channel
     /tmp/cc0pJz1C.s:253    .text.dac_lld_start:0000000000000000 $t
     /tmp/cc0pJz1C.s:259    .text.dac_lld_start:0000000000000000 dac_lld_start
     /tmp/cc0pJz1C.s:382    .text.dac_lld_start:0000000000000064 $d
     /tmp/cc0pJz1C.s:389    .text.dac_lld_start_conversion:0000000000000000 $t
     /tmp/cc0pJz1C.s:395    .text.dac_lld_start_conversion:0000000000000000 dac_lld_start_conversion
     /tmp/cc0pJz1C.s:575    .text.dac_lld_start_conversion:00000000000000a0 $d
     /tmp/cc0pJz1C.s:668    .text.dac_lld_serve_tx_interrupt:0000000000000000 dac_lld_serve_tx_interrupt
     /tmp/cc0pJz1C.s:580    .text.dac_lld_stop_conversion:0000000000000000 $t
     /tmp/cc0pJz1C.s:586    .text.dac_lld_stop_conversion:0000000000000000 dac_lld_stop_conversion
     /tmp/cc0pJz1C.s:663    .text.dac_lld_serve_tx_interrupt:0000000000000000 $t
     /tmp/cc0pJz1C.s:871    .rodata.dac1_ch2_params:0000000000000000 $d
     /tmp/cc0pJz1C.s:883    .rodata.dac1_ch1_params:0000000000000000 $d

UNDEFINED SYMBOLS
dacObjectInit
dmaStreamAllocI
dmaStreamFreeI
chThdResumeI
