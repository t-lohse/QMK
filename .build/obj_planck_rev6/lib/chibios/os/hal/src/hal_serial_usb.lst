   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"hal_serial_usb.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/chibios/os/hal/src/hal_serial_usb.c"
  20              		.section	.text.obnotify,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	obnotify:
  27              	.LVL0:
  28              	.LFB339:
   1:lib/chibios/os/hal/src/hal_serial_usb.c **** /*
   2:lib/chibios/os/hal/src/hal_serial_usb.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_serial_usb.c **** 
   4:lib/chibios/os/hal/src/hal_serial_usb.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_serial_usb.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_serial_usb.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_serial_usb.c **** 
   8:lib/chibios/os/hal/src/hal_serial_usb.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  10:lib/chibios/os/hal/src/hal_serial_usb.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_serial_usb.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_serial_usb.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_serial_usb.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_serial_usb.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_serial_usb.c **** */
  16:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  17:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
  18:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @file    hal_serial_usb.c
  19:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Serial over USB Driver code.
  20:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
  21:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @addtogroup SERIAL_USB
  22:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @{
  23:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
  24:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  25:lib/chibios/os/hal/src/hal_serial_usb.c **** #include "hal.h"
  26:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  27:lib/chibios/os/hal/src/hal_serial_usb.c **** #if (HAL_USE_SERIAL_USB == TRUE) || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  29:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/src/hal_serial_usb.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  33:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
  34:lib/chibios/os/hal/src/hal_serial_usb.c **** /* Driver exported variables.                                                */
  35:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
  36:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  37:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
  38:lib/chibios/os/hal/src/hal_serial_usb.c **** /* Driver local variables and types.                                         */
  39:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
  40:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  41:lib/chibios/os/hal/src/hal_serial_usb.c **** /*
  42:lib/chibios/os/hal/src/hal_serial_usb.c ****  * Current Line Coding.
  43:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
  44:lib/chibios/os/hal/src/hal_serial_usb.c **** static cdc_linecoding_t linecoding = {
  45:lib/chibios/os/hal/src/hal_serial_usb.c ****   {0x00, 0x96, 0x00, 0x00},             /* 38400.                           */
  46:lib/chibios/os/hal/src/hal_serial_usb.c ****   LC_STOP_1, LC_PARITY_NONE, 8
  47:lib/chibios/os/hal/src/hal_serial_usb.c **** };
  48:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  49:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
  50:lib/chibios/os/hal/src/hal_serial_usb.c **** /* Driver local functions.                                                   */
  51:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
  52:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  53:lib/chibios/os/hal/src/hal_serial_usb.c **** static bool sdu_start_receive(SerialUSBDriver *sdup) {
  54:lib/chibios/os/hal/src/hal_serial_usb.c ****   uint8_t *buf;
  55:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  56:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* If the USB driver is not in the appropriate state then transactions
  57:lib/chibios/os/hal/src/hal_serial_usb.c ****      must not be started.*/
  58:lib/chibios/os/hal/src/hal_serial_usb.c ****   if ((usbGetDriverStateI(sdup->config->usbp) != USB_ACTIVE) ||
  59:lib/chibios/os/hal/src/hal_serial_usb.c ****       (sdup->state != SDU_READY)) {
  60:lib/chibios/os/hal/src/hal_serial_usb.c ****     return true;
  61:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
  62:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  63:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Checking if there is already a transaction ongoing on the endpoint.*/
  64:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (usbGetReceiveStatusI(sdup->config->usbp, sdup->config->bulk_in)) {
  65:lib/chibios/os/hal/src/hal_serial_usb.c ****     return true;
  66:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
  67:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  68:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Checking if there is a buffer ready for incoming data.*/
  69:lib/chibios/os/hal/src/hal_serial_usb.c ****   buf = ibqGetEmptyBufferI(&sdup->ibqueue);
  70:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (buf == NULL) {
  71:lib/chibios/os/hal/src/hal_serial_usb.c ****     return true;
  72:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
  73:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  74:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Buffer found, starting a new transaction.*/
  75:lib/chibios/os/hal/src/hal_serial_usb.c ****   usbStartReceiveI(sdup->config->usbp, sdup->config->bulk_out,
  76:lib/chibios/os/hal/src/hal_serial_usb.c ****                    buf, SERIAL_USB_BUFFERS_SIZE);
  77:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  78:lib/chibios/os/hal/src/hal_serial_usb.c ****   return false;
  79:lib/chibios/os/hal/src/hal_serial_usb.c **** }
  80:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  81:lib/chibios/os/hal/src/hal_serial_usb.c **** /*
  82:lib/chibios/os/hal/src/hal_serial_usb.c ****  * Interface implementation.
  83:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
  84:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  85:lib/chibios/os/hal/src/hal_serial_usb.c **** static size_t _write(void *ip, const uint8_t *bp, size_t n) {
  86:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  87:lib/chibios/os/hal/src/hal_serial_usb.c ****   return obqWriteTimeout(&((SerialUSBDriver *)ip)->obqueue, bp,
  88:lib/chibios/os/hal/src/hal_serial_usb.c ****                          n, TIME_INFINITE);
  89:lib/chibios/os/hal/src/hal_serial_usb.c **** }
  90:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  91:lib/chibios/os/hal/src/hal_serial_usb.c **** static size_t _read(void *ip, uint8_t *bp, size_t n) {
  92:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  93:lib/chibios/os/hal/src/hal_serial_usb.c ****   return ibqReadTimeout(&((SerialUSBDriver *)ip)->ibqueue, bp,
  94:lib/chibios/os/hal/src/hal_serial_usb.c ****                         n, TIME_INFINITE);
  95:lib/chibios/os/hal/src/hal_serial_usb.c **** }
  96:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  97:lib/chibios/os/hal/src/hal_serial_usb.c **** static msg_t _put(void *ip, uint8_t b) {
  98:lib/chibios/os/hal/src/hal_serial_usb.c **** 
  99:lib/chibios/os/hal/src/hal_serial_usb.c ****   return obqPutTimeout(&((SerialUSBDriver *)ip)->obqueue, b, TIME_INFINITE);
 100:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 101:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 102:lib/chibios/os/hal/src/hal_serial_usb.c **** static msg_t _get(void *ip) {
 103:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 104:lib/chibios/os/hal/src/hal_serial_usb.c ****   return ibqGetTimeout(&((SerialUSBDriver *)ip)->ibqueue, TIME_INFINITE);
 105:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 106:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 107:lib/chibios/os/hal/src/hal_serial_usb.c **** static msg_t _putt(void *ip, uint8_t b, sysinterval_t timeout) {
 108:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 109:lib/chibios/os/hal/src/hal_serial_usb.c ****   return obqPutTimeout(&((SerialUSBDriver *)ip)->obqueue, b, timeout);
 110:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 111:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 112:lib/chibios/os/hal/src/hal_serial_usb.c **** static msg_t _gett(void *ip, sysinterval_t timeout) {
 113:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 114:lib/chibios/os/hal/src/hal_serial_usb.c ****   return ibqGetTimeout(&((SerialUSBDriver *)ip)->ibqueue, timeout);
 115:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 116:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 117:lib/chibios/os/hal/src/hal_serial_usb.c **** static size_t _writet(void *ip, const uint8_t *bp, size_t n,
 118:lib/chibios/os/hal/src/hal_serial_usb.c ****                       sysinterval_t timeout) {
 119:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 120:lib/chibios/os/hal/src/hal_serial_usb.c ****   return obqWriteTimeout(&((SerialUSBDriver *)ip)->obqueue, bp, n, timeout);
 121:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 122:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 123:lib/chibios/os/hal/src/hal_serial_usb.c **** static size_t _readt(void *ip, uint8_t *bp, size_t n,
 124:lib/chibios/os/hal/src/hal_serial_usb.c ****                      sysinterval_t timeout) {
 125:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 126:lib/chibios/os/hal/src/hal_serial_usb.c ****   return ibqReadTimeout(&((SerialUSBDriver *)ip)->ibqueue, bp, n, timeout);
 127:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 128:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 129:lib/chibios/os/hal/src/hal_serial_usb.c **** static msg_t _ctl(void *ip, unsigned int operation, void *arg) {
 130:lib/chibios/os/hal/src/hal_serial_usb.c ****   SerialUSBDriver *sdup = (SerialUSBDriver *)ip;
 131:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 132:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalDbgCheck(sdup != NULL);
 133:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 134:lib/chibios/os/hal/src/hal_serial_usb.c ****   switch (operation) {
 135:lib/chibios/os/hal/src/hal_serial_usb.c ****   case CHN_CTL_NOP:
 136:lib/chibios/os/hal/src/hal_serial_usb.c ****     osalDbgCheck(arg == NULL);
 137:lib/chibios/os/hal/src/hal_serial_usb.c ****     break;
 138:lib/chibios/os/hal/src/hal_serial_usb.c ****   case CHN_CTL_INVALID:
 139:lib/chibios/os/hal/src/hal_serial_usb.c ****     osalDbgAssert(false, "invalid CTL operation");
 140:lib/chibios/os/hal/src/hal_serial_usb.c ****     break;
 141:lib/chibios/os/hal/src/hal_serial_usb.c ****   default:
 142:lib/chibios/os/hal/src/hal_serial_usb.c **** #if defined(SDU_LLD_IMPLEMENTS_CTL)
 143:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* The SDU driver does not have a LLD but the application can use this
 144:lib/chibios/os/hal/src/hal_serial_usb.c ****        hook to implement extra controls by supplying this function.*/
 145:lib/chibios/os/hal/src/hal_serial_usb.c ****     extern msg_t sdu_lld_control(SerialUSBDriver *sdup,
 146:lib/chibios/os/hal/src/hal_serial_usb.c ****                                  unsigned int operation,
 147:lib/chibios/os/hal/src/hal_serial_usb.c ****                                  void *arg);
 148:lib/chibios/os/hal/src/hal_serial_usb.c ****     return sdu_lld_control(sdup, operation, arg);
 149:lib/chibios/os/hal/src/hal_serial_usb.c **** #else
 150:lib/chibios/os/hal/src/hal_serial_usb.c ****     break;
 151:lib/chibios/os/hal/src/hal_serial_usb.c **** #endif
 152:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 153:lib/chibios/os/hal/src/hal_serial_usb.c ****   return MSG_OK;
 154:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 155:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 156:lib/chibios/os/hal/src/hal_serial_usb.c **** static const struct SerialUSBDriverVMT vmt = {
 157:lib/chibios/os/hal/src/hal_serial_usb.c ****   (size_t)0,
 158:lib/chibios/os/hal/src/hal_serial_usb.c ****   _write, _read, _put, _get,
 159:lib/chibios/os/hal/src/hal_serial_usb.c ****   _putt, _gett, _writet, _readt,
 160:lib/chibios/os/hal/src/hal_serial_usb.c ****   _ctl
 161:lib/chibios/os/hal/src/hal_serial_usb.c **** };
 162:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 163:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 164:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Notification of empty buffer released into the input buffers queue.
 165:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 166:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] bqp       the buffers queue pointer.
 167:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 168:lib/chibios/os/hal/src/hal_serial_usb.c **** static void ibnotify(io_buffers_queue_t *bqp) {
 169:lib/chibios/os/hal/src/hal_serial_usb.c ****   SerialUSBDriver *sdup = bqGetLinkX(bqp);
 170:lib/chibios/os/hal/src/hal_serial_usb.c ****   (void) sdu_start_receive(sdup);
 171:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 172:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 173:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 174:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Notification of filled buffer inserted into the output buffers queue.
 175:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 176:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] bqp       the buffers queue pointer.
 177:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 178:lib/chibios/os/hal/src/hal_serial_usb.c **** static void obnotify(io_buffers_queue_t *bqp) {
  29              		.loc 1 178 47 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 179:lib/chibios/os/hal/src/hal_serial_usb.c ****   size_t n;
  33              		.loc 1 179 3 view .LVU1
 180:lib/chibios/os/hal/src/hal_serial_usb.c ****   SerialUSBDriver *sdup = bqGetLinkX(bqp);
  34              		.loc 1 180 3 view .LVU2
 178:lib/chibios/os/hal/src/hal_serial_usb.c ****   size_t n;
  35              		.loc 1 178 47 is_stmt 0 view .LVU3
  36 0000 13B5     		push	{r0, r1, r4, lr}
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 180 20 view .LVU4
  41 0002 446B     		ldr	r4, [r0, #52]
  42              	.LVL1:
 181:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 182:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* If the USB driver is not in the appropriate state then transactions
 183:lib/chibios/os/hal/src/hal_serial_usb.c ****      must not be started.*/
 184:lib/chibios/os/hal/src/hal_serial_usb.c ****   if ((usbGetDriverStateI(sdup->config->usbp) != USB_ACTIVE) ||
  43              		.loc 1 184 3 is_stmt 1 view .LVU5
  44              		.loc 1 184 8 is_stmt 0 view .LVU6
  45 0004 D4F89030 		ldr	r3, [r4, #144]
  46 0008 1A68     		ldr	r2, [r3]
  47              		.loc 1 184 6 view .LVU7
  48 000a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
  49 000c 0429     		cmp	r1, #4
  50 000e 15D1     		bne	.L1
  51              		.loc 1 184 62 discriminator 1 view .LVU8
  52 0010 217A     		ldrb	r1, [r4, #8]	@ zero_extendqisi2
  53 0012 0229     		cmp	r1, #2
  54 0014 12D1     		bne	.L1
 185:lib/chibios/os/hal/src/hal_serial_usb.c ****       (sdup->state != SDU_READY)) {
 186:lib/chibios/os/hal/src/hal_serial_usb.c ****     return;
 187:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 188:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 189:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Checking if there is already a transaction ongoing on the endpoint.*/
 190:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (!usbGetTransmitStatusI(sdup->config->usbp, sdup->config->bulk_in)) {
  55              		.loc 1 190 3 is_stmt 1 view .LVU9
  56              		.loc 1 190 8 is_stmt 0 view .LVU10
  57 0016 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
  58              		.loc 1 190 7 view .LVU11
  59 0018 1289     		ldrh	r2, [r2, #8]
  60              		.loc 1 190 8 view .LVU12
  61 001a 0123     		movs	r3, #1
  62 001c 8B40     		lsls	r3, r3, r1
  63              		.loc 1 190 6 view .LVU13
  64 001e 1342     		tst	r3, r2
  65 0020 0CD1     		bne	.L1
  66              	.LBB134:
 191:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* Getting a full buffer, a buffer is available for sure because this
 192:lib/chibios/os/hal/src/hal_serial_usb.c ****        callback is invoked when one has been inserted.*/
 193:lib/chibios/os/hal/src/hal_serial_usb.c ****     uint8_t *buf = obqGetFullBufferI(&sdup->obqueue, &n);
  67              		.loc 1 193 5 is_stmt 1 view .LVU14
  68              		.loc 1 193 20 is_stmt 0 view .LVU15
  69 0022 01A9     		add	r1, sp, #4
  70 0024 04F14400 		add	r0, r4, #68
  71              	.LVL2:
  72              		.loc 1 193 20 view .LVU16
  73 0028 FFF7FEFF 		bl	obqGetFullBufferI
  74              	.LVL3:
 194:lib/chibios/os/hal/src/hal_serial_usb.c ****     osalDbgAssert(buf != NULL, "buffer not found");
 195:lib/chibios/os/hal/src/hal_serial_usb.c ****     usbStartTransmitI(sdup->config->usbp, sdup->config->bulk_in, buf, n);
  75              		.loc 1 195 27 view .LVU17
  76 002c D4F89040 		ldr	r4, [r4, #144]
  77              	.LVL4:
  78              		.loc 1 195 5 view .LVU18
  79 0030 019B     		ldr	r3, [sp, #4]
  80 0032 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 193:lib/chibios/os/hal/src/hal_serial_usb.c ****     osalDbgAssert(buf != NULL, "buffer not found");
  81              		.loc 1 193 20 view .LVU19
  82 0034 0246     		mov	r2, r0
  83              	.LVL5:
 194:lib/chibios/os/hal/src/hal_serial_usb.c ****     osalDbgAssert(buf != NULL, "buffer not found");
  84              		.loc 1 194 5 is_stmt 1 view .LVU20
 194:lib/chibios/os/hal/src/hal_serial_usb.c ****     osalDbgAssert(buf != NULL, "buffer not found");
  85              		.loc 1 194 5 view .LVU21
 194:lib/chibios/os/hal/src/hal_serial_usb.c ****     osalDbgAssert(buf != NULL, "buffer not found");
  86              		.loc 1 194 5 view .LVU22
  87              		.loc 1 195 5 view .LVU23
  88 0036 2068     		ldr	r0, [r4]
  89              	.LVL6:
  90              		.loc 1 195 5 is_stmt 0 view .LVU24
  91 0038 FFF7FEFF 		bl	usbStartTransmitI
  92              	.LVL7:
  93              	.L1:
  94              		.loc 1 195 5 view .LVU25
  95              	.LBE134:
 196:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 197:lib/chibios/os/hal/src/hal_serial_usb.c **** }
  96              		.loc 1 197 1 view .LVU26
  97 003c 02B0     		add	sp, sp, #8
  98              		.cfi_def_cfa_offset 8
  99              		@ sp needed
 100 003e 10BD     		pop	{r4, pc}
 101              		.cfi_endproc
 102              	.LFE339:
 104              		.section	.text._readt,"ax",%progbits
 105              		.align	1
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	_readt:
 111              	.LVL8:
 112              	.LFB336:
 124:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 113              		.loc 1 124 45 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 126:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 118              		.loc 1 126 3 view .LVU28
 126:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 119              		.loc 1 126 10 is_stmt 0 view .LVU29
 120 0000 0C30     		adds	r0, r0, #12
 121              	.LVL9:
 126:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 122              		.loc 1 126 10 view .LVU30
 123 0002 FFF7FEBF 		b	ibqReadTimeout
 124              	.LVL10:
 126:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 125              		.loc 1 126 10 view .LVU31
 126              		.cfi_endproc
 127              	.LFE336:
 129              		.section	.text._read,"ax",%progbits
 130              		.align	1
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	_read:
 136              	.LVL11:
 137              	.LFB330:
  91:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 138              		.loc 1 91 54 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
  93:lib/chibios/os/hal/src/hal_serial_usb.c ****                         n, TIME_INFINITE);
 143              		.loc 1 93 3 view .LVU33
  93:lib/chibios/os/hal/src/hal_serial_usb.c ****                         n, TIME_INFINITE);
 144              		.loc 1 93 10 is_stmt 0 view .LVU34
 145 0000 4FF0FF33 		mov	r3, #-1
 146 0004 0C30     		adds	r0, r0, #12
 147              	.LVL12:
  93:lib/chibios/os/hal/src/hal_serial_usb.c ****                         n, TIME_INFINITE);
 148              		.loc 1 93 10 view .LVU35
 149 0006 FFF7FEBF 		b	ibqReadTimeout
 150              	.LVL13:
  93:lib/chibios/os/hal/src/hal_serial_usb.c ****                         n, TIME_INFINITE);
 151              		.loc 1 93 10 view .LVU36
 152              		.cfi_endproc
 153              	.LFE330:
 155              		.section	.text._writet,"ax",%progbits
 156              		.align	1
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_writet:
 162              	.LVL14:
 163              	.LFB335:
 118:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 164              		.loc 1 118 46 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 120:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 169              		.loc 1 120 3 view .LVU38
 120:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 170              		.loc 1 120 10 is_stmt 0 view .LVU39
 171 0000 4430     		adds	r0, r0, #68
 172              	.LVL15:
 120:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 173              		.loc 1 120 10 view .LVU40
 174 0002 FFF7FEBF 		b	obqWriteTimeout
 175              	.LVL16:
 120:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 176              		.loc 1 120 10 view .LVU41
 177              		.cfi_endproc
 178              	.LFE335:
 180              		.section	.text._write,"ax",%progbits
 181              		.align	1
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	_write:
 187              	.LVL17:
 188              	.LFB329:
  85:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 189              		.loc 1 85 61 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
  87:lib/chibios/os/hal/src/hal_serial_usb.c ****                          n, TIME_INFINITE);
 194              		.loc 1 87 3 view .LVU43
  87:lib/chibios/os/hal/src/hal_serial_usb.c ****                          n, TIME_INFINITE);
 195              		.loc 1 87 10 is_stmt 0 view .LVU44
 196 0000 4FF0FF33 		mov	r3, #-1
 197 0004 4430     		adds	r0, r0, #68
 198              	.LVL18:
  87:lib/chibios/os/hal/src/hal_serial_usb.c ****                          n, TIME_INFINITE);
 199              		.loc 1 87 10 view .LVU45
 200 0006 FFF7FEBF 		b	obqWriteTimeout
 201              	.LVL19:
  87:lib/chibios/os/hal/src/hal_serial_usb.c ****                          n, TIME_INFINITE);
 202              		.loc 1 87 10 view .LVU46
 203              		.cfi_endproc
 204              	.LFE329:
 206              		.section	.text._gett,"ax",%progbits
 207              		.align	1
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	_gett:
 213              	.LVL20:
 214              	.LFB334:
 112:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 215              		.loc 1 112 53 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 114:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 220              		.loc 1 114 3 view .LVU48
 114:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 221              		.loc 1 114 10 is_stmt 0 view .LVU49
 222 0000 0C30     		adds	r0, r0, #12
 223              	.LVL21:
 114:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 224              		.loc 1 114 10 view .LVU50
 225 0002 FFF7FEBF 		b	ibqGetTimeout
 226              	.LVL22:
 114:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 227              		.loc 1 114 10 view .LVU51
 228              		.cfi_endproc
 229              	.LFE334:
 231              		.section	.text._get,"ax",%progbits
 232              		.align	1
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	_get:
 238              	.LVL23:
 239              	.LFB332:
 102:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 240              		.loc 1 102 29 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 104:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 245              		.loc 1 104 3 view .LVU53
 104:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 246              		.loc 1 104 10 is_stmt 0 view .LVU54
 247 0000 4FF0FF31 		mov	r1, #-1
 248 0004 0C30     		adds	r0, r0, #12
 249              	.LVL24:
 104:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 250              		.loc 1 104 10 view .LVU55
 251 0006 FFF7FEBF 		b	ibqGetTimeout
 252              	.LVL25:
 104:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 253              		.loc 1 104 10 view .LVU56
 254              		.cfi_endproc
 255              	.LFE332:
 257              		.section	.text._putt,"ax",%progbits
 258              		.align	1
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	_putt:
 264              	.LVL26:
 265              	.LFB333:
 107:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 266              		.loc 1 107 64 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 109:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 271              		.loc 1 109 3 view .LVU58
 109:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 272              		.loc 1 109 10 is_stmt 0 view .LVU59
 273 0000 4430     		adds	r0, r0, #68
 274              	.LVL27:
 109:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 275              		.loc 1 109 10 view .LVU60
 276 0002 FFF7FEBF 		b	obqPutTimeout
 277              	.LVL28:
 109:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 278              		.loc 1 109 10 view .LVU61
 279              		.cfi_endproc
 280              	.LFE333:
 282              		.section	.text._put,"ax",%progbits
 283              		.align	1
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	_put:
 289              	.LVL29:
 290              	.LFB331:
  97:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 291              		.loc 1 97 40 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
  99:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 296              		.loc 1 99 3 view .LVU63
  99:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 297              		.loc 1 99 10 is_stmt 0 view .LVU64
 298 0000 4FF0FF32 		mov	r2, #-1
 299 0004 4430     		adds	r0, r0, #68
 300              	.LVL30:
  99:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 301              		.loc 1 99 10 view .LVU65
 302 0006 FFF7FEBF 		b	obqPutTimeout
 303              	.LVL31:
  99:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 304              		.loc 1 99 10 view .LVU66
 305              		.cfi_endproc
 306              	.LFE331:
 308              		.section	.text._ctl,"ax",%progbits
 309              		.align	1
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	_ctl:
 315              	.LFB354:
 316              		.cfi_startproc
 129:lib/chibios/os/hal/src/hal_serial_usb.c ****   SerialUSBDriver *sdup = (SerialUSBDriver *)ip;
 317              		.loc 1 129 14 is_stmt 1 view -0
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 0000 0020     		movs	r0, #0
 322 0002 7047     		bx	lr
 323              		.cfi_endproc
 324              	.LFE354:
 326              		.section	.text.sdu_start_receive.isra.0,"ax",%progbits
 327              		.align	1
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	sdu_start_receive.isra.0:
 333              	.LVL32:
 334              	.LFB356:
  53:lib/chibios/os/hal/src/hal_serial_usb.c ****   uint8_t *buf;
 335              		.loc 1 53 13 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
  54:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 339              		.loc 1 54 3 view .LVU69
  58:lib/chibios/os/hal/src/hal_serial_usb.c ****       (sdup->state != SDU_READY)) {
 340              		.loc 1 58 3 view .LVU70
  53:lib/chibios/os/hal/src/hal_serial_usb.c ****   uint8_t *buf;
 341              		.loc 1 53 13 is_stmt 0 view .LVU71
 342 0000 70B5     		push	{r4, r5, r6, lr}
 343              		.cfi_def_cfa_offset 16
 344              		.cfi_offset 4, -16
 345              		.cfi_offset 5, -12
 346              		.cfi_offset 6, -8
 347              		.cfi_offset 14, -4
  58:lib/chibios/os/hal/src/hal_serial_usb.c ****       (sdup->state != SDU_READY)) {
 348              		.loc 1 58 8 view .LVU72
 349 0002 D0F89020 		ldr	r2, [r0, #144]
 350 0006 1368     		ldr	r3, [r2]
  58:lib/chibios/os/hal/src/hal_serial_usb.c ****       (sdup->state != SDU_READY)) {
 351              		.loc 1 58 6 view .LVU73
 352 0008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 353 000a 0429     		cmp	r1, #4
  53:lib/chibios/os/hal/src/hal_serial_usb.c ****   uint8_t *buf;
 354              		.loc 1 53 13 view .LVU74
 355 000c 0446     		mov	r4, r0
  58:lib/chibios/os/hal/src/hal_serial_usb.c ****       (sdup->state != SDU_READY)) {
 356              		.loc 1 58 6 view .LVU75
 357 000e 17D1     		bne	.L13
  58:lib/chibios/os/hal/src/hal_serial_usb.c ****       (sdup->state != SDU_READY)) {
 358              		.loc 1 58 62 view .LVU76
 359 0010 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 360 0012 0229     		cmp	r1, #2
 361 0014 14D1     		bne	.L13
  64:lib/chibios/os/hal/src/hal_serial_usb.c ****     return true;
 362              		.loc 1 64 3 is_stmt 1 view .LVU77
  64:lib/chibios/os/hal/src/hal_serial_usb.c ****     return true;
 363              		.loc 1 64 7 is_stmt 0 view .LVU78
 364 0016 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 365 0018 5B89     		ldrh	r3, [r3, #10]
 366 001a 0125     		movs	r5, #1
 367 001c 05FA02F2 		lsl	r2, r5, r2
  64:lib/chibios/os/hal/src/hal_serial_usb.c ****     return true;
 368              		.loc 1 64 6 view .LVU79
 369 0020 1A42     		tst	r2, r3
 370 0022 0DD1     		bne	.L13
  69:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (buf == NULL) {
 371              		.loc 1 69 3 is_stmt 1 view .LVU80
  69:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (buf == NULL) {
 372              		.loc 1 69 9 is_stmt 0 view .LVU81
 373 0024 0C30     		adds	r0, r0, #12
 374              	.LVL33:
  69:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (buf == NULL) {
 375              		.loc 1 69 9 view .LVU82
 376 0026 FFF7FEFF 		bl	ibqGetEmptyBufferI
 377              	.LVL34:
  70:lib/chibios/os/hal/src/hal_serial_usb.c ****     return true;
 378              		.loc 1 70 3 is_stmt 1 view .LVU83
  70:lib/chibios/os/hal/src/hal_serial_usb.c ****     return true;
 379              		.loc 1 70 6 is_stmt 0 view .LVU84
 380 002a 0246     		mov	r2, r0
 381 002c 40B1     		cbz	r0, .L13
  75:lib/chibios/os/hal/src/hal_serial_usb.c ****                    buf, SERIAL_USB_BUFFERS_SIZE);
 382              		.loc 1 75 3 is_stmt 1 view .LVU85
  75:lib/chibios/os/hal/src/hal_serial_usb.c ****                    buf, SERIAL_USB_BUFFERS_SIZE);
 383              		.loc 1 75 24 is_stmt 0 view .LVU86
 384 002e D4F89000 		ldr	r0, [r4, #144]
 385              	.LVL35:
  75:lib/chibios/os/hal/src/hal_serial_usb.c ****                    buf, SERIAL_USB_BUFFERS_SIZE);
 386              		.loc 1 75 3 view .LVU87
 387 0032 2B46     		mov	r3, r5
 388 0034 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
 389 0036 0068     		ldr	r0, [r0]
  79:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 390              		.loc 1 79 1 view .LVU88
 391 0038 BDE87040 		pop	{r4, r5, r6, lr}
 392              		.cfi_remember_state
 393              		.cfi_restore 14
 394              		.cfi_restore 6
 395              		.cfi_restore 5
 396              		.cfi_restore 4
 397              		.cfi_def_cfa_offset 0
 398              	.LVL36:
  75:lib/chibios/os/hal/src/hal_serial_usb.c ****                    buf, SERIAL_USB_BUFFERS_SIZE);
 399              		.loc 1 75 3 view .LVU89
 400 003c FFF7FEBF 		b	usbStartReceiveI
 401              	.LVL37:
 402              	.L13:
 403              		.cfi_restore_state
  79:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 404              		.loc 1 79 1 view .LVU90
 405 0040 70BD     		pop	{r4, r5, r6, pc}
  79:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 406              		.loc 1 79 1 view .LVU91
 407              		.cfi_endproc
 408              	.LFE356:
 410              		.section	.text.ibnotify,"ax",%progbits
 411              		.align	1
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	ibnotify:
 417              	.LVL38:
 418              	.LFB338:
 168:lib/chibios/os/hal/src/hal_serial_usb.c ****   SerialUSBDriver *sdup = bqGetLinkX(bqp);
 419              		.loc 1 168 47 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 169:lib/chibios/os/hal/src/hal_serial_usb.c ****   (void) sdu_start_receive(sdup);
 424              		.loc 1 169 3 view .LVU93
 170:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 425              		.loc 1 170 3 view .LVU94
 170:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 426              		.loc 1 170 10 is_stmt 0 view .LVU95
 427 0000 406B     		ldr	r0, [r0, #52]
 428              	.LVL39:
 170:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 429              		.loc 1 170 10 view .LVU96
 430 0002 FFF7FEBF 		b	sdu_start_receive.isra.0
 431              	.LVL40:
 170:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 432              		.loc 1 170 10 view .LVU97
 433              		.cfi_endproc
 434              	.LFE338:
 436              		.section	.text.sduInit,"ax",%progbits
 437              		.align	1
 438              		.global	sduInit
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 443              	sduInit:
 444              	.LFB340:
 198:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 199:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
 200:lib/chibios/os/hal/src/hal_serial_usb.c **** /* Driver exported functions.                                                */
 201:lib/chibios/os/hal/src/hal_serial_usb.c **** /*===========================================================================*/
 202:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 203:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 204:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Serial Driver initialization.
 205:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
 206:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          no need to explicitly initialize the driver.
 207:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 208:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @init
 209:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 210:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduInit(void) {
 445              		.loc 1 210 20 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 211:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 450              		.loc 1 211 1 view .LVU99
 451 0000 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE340:
 455              		.section	.text.sduObjectInit,"ax",%progbits
 456              		.align	1
 457              		.global	sduObjectInit
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 462              	sduObjectInit:
 463              	.LVL41:
 464              	.LFB341:
 212:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 213:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 214:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Initializes a generic full duplex driver object.
 215:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details The HW dependent part of the initialization has to be performed
 216:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          outside, usually in the hardware initialization code.
 217:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 218:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[out] sdup     pointer to a @p SerialUSBDriver structure
 219:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 220:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @init
 221:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 222:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduObjectInit(SerialUSBDriver *sdup) {
 465              		.loc 1 222 43 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 223:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 224:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->vmt = &vmt;
 469              		.loc 1 224 3 view .LVU101
 222:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 470              		.loc 1 222 43 is_stmt 0 view .LVU102
 471 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 472              		.cfi_def_cfa_offset 32
 473              		.cfi_offset 4, -16
 474              		.cfi_offset 5, -12
 475              		.cfi_offset 6, -8
 476              		.cfi_offset 14, -4
 477              		.loc 1 224 13 view .LVU103
 478 0002 0346     		mov	r3, r0
 479 0004 104A     		ldr	r2, .L23
 480 0006 43F8042B 		str	r2, [r3], #4
 225:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalEventObjectInit(&sdup->event);
 481              		.loc 1 225 3 is_stmt 1 view .LVU104
 482              	.LVL42:
 483              	.LBB135:
 484              	.LBI135:
 485              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 761:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 762:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 763:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 764:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 765:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 766:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 767:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 768:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 769:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 770:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 771:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 772:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 774:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 775:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 776:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 777:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 778:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 779:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 780:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 781:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 782:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 783:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 784:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 785:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 786:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 787:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 788:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 789:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 790:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 791:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 792:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 793:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 794:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 795:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 796:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 797:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 798:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 799:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 800:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 801:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 803:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 804:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 805:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 806:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 807:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 808:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 809:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 810:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 811:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 812:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 813:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 814:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 815:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 816:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 817:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 818:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 819:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 820:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 822:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 823:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 825:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 826:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 827:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 828:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 829:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must not reschedule because it can be called from
 830:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          ISR context.
 831:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 832:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 833:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 834:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 835:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 836:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 837:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 838:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 839:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeI(trp, msg);
 840:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 841:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 842:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 843:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 844:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 845:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 846:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 847:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 848:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 849:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 850:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 851:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 852:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 853:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 854:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeS(trp, msg);
 855:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 856:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 858:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Initializes a threads queue object.
 859:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 860:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 861:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 862:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @init
 863:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 864:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
 865:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 866:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdQueueObjectInit(tqp);
 867:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 868:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 869:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 870:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enqueues the caller thread.
 871:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 872:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          dequeued or the specified timeouts expires.
 873:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 874:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 875:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 876:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 877:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 878:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 879:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 880:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 881:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 882:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 883:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 884:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 885:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 886:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      specified timeout or if the function has been
 887:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 888:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      specification.
 889:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 890:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 891:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 893:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 894:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 896:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 897:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 898:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 899:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 900:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 901:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 902:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 903:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 904:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 905:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 906:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 907:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdDequeueNextI(tqp, msg);
 909:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 910:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 911:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 912:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 913:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 914:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 915:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 916:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 917:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 918:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 919:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 920:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdDequeueAllI(tqp, msg);
 922:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 923:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 924:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 925:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 926:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Initializes an event source object.
 927:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 928:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[out] esp      pointer to the event source object
 929:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 930:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @init
 931:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 932:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 486              		.loc 2 932 20 view .LVU105
 933:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 934:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chEvtObjectInit(esp);
 487              		.loc 2 934 3 view .LVU106
 488              	.LBB136:
 489              	.LBI136:
 490              		.file 3 "./lib/chibios/os/rt/include/chevents.h"
   1:./lib/chibios/os/rt/include/chevents.h **** /*
   2:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chevents.h **** 
   4:./lib/chibios/os/rt/include/chevents.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chevents.h **** 
   6:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chevents.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chevents.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chevents.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chevents.h **** 
  11:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chevents.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chevents.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chevents.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chevents.h **** 
  16:./lib/chibios/os/rt/include/chevents.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chevents.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chevents.h **** */
  19:./lib/chibios/os/rt/include/chevents.h **** /*
  20:./lib/chibios/os/rt/include/chevents.h ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:./lib/chibios/os/rt/include/chevents.h ****  */
  22:./lib/chibios/os/rt/include/chevents.h **** 
  23:./lib/chibios/os/rt/include/chevents.h **** /**
  24:./lib/chibios/os/rt/include/chevents.h ****  * @file    rt/include/chevents.h
  25:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Events macros and structures.
  26:./lib/chibios/os/rt/include/chevents.h ****  *
  27:./lib/chibios/os/rt/include/chevents.h ****  * @addtogroup events
  28:./lib/chibios/os/rt/include/chevents.h ****  * @{
  29:./lib/chibios/os/rt/include/chevents.h ****  */
  30:./lib/chibios/os/rt/include/chevents.h **** 
  31:./lib/chibios/os/rt/include/chevents.h **** #ifndef CHEVENTS_H
  32:./lib/chibios/os/rt/include/chevents.h **** #define CHEVENTS_H
  33:./lib/chibios/os/rt/include/chevents.h **** 
  34:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  35:./lib/chibios/os/rt/include/chevents.h **** 
  36:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  37:./lib/chibios/os/rt/include/chevents.h **** /* Module constants.                                                         */
  38:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  39:./lib/chibios/os/rt/include/chevents.h **** 
  40:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  41:./lib/chibios/os/rt/include/chevents.h **** /* Module pre-compile time settings.                                         */
  42:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  43:./lib/chibios/os/rt/include/chevents.h **** 
  44:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  45:./lib/chibios/os/rt/include/chevents.h **** /* Derived constants and error checks.                                       */
  46:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  47:./lib/chibios/os/rt/include/chevents.h **** 
  48:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  49:./lib/chibios/os/rt/include/chevents.h **** /* Module data structures and types.                                         */
  50:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  51:./lib/chibios/os/rt/include/chevents.h **** 
  52:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_listener event_listener_t;
  53:./lib/chibios/os/rt/include/chevents.h **** 
  54:./lib/chibios/os/rt/include/chevents.h **** /**
  55:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Listener structure.
  56:./lib/chibios/os/rt/include/chevents.h ****  */
  57:./lib/chibios/os/rt/include/chevents.h **** struct event_listener {
  58:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief Next Event Listener
  59:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the event
  60:./lib/chibios/os/rt/include/chevents.h ****                                                     source.                 */
  61:./lib/chibios/os/rt/include/chevents.h ****   thread_t              *listener;      /**< @brief Thread interested in the
  62:./lib/chibios/os/rt/include/chevents.h ****                                                     event source.           */
  63:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t           events;         /**< @brief Events to be set in
  64:./lib/chibios/os/rt/include/chevents.h ****                                                     the listening thread.   */
  65:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          flags;          /**< @brief Flags added to the listener
  66:./lib/chibios/os/rt/include/chevents.h ****                                                     by the event source.    */
  67:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          wflags;         /**< @brief Flags that this listener
  68:./lib/chibios/os/rt/include/chevents.h ****                                                     interested in.          */
  69:./lib/chibios/os/rt/include/chevents.h **** };
  70:./lib/chibios/os/rt/include/chevents.h **** 
  71:./lib/chibios/os/rt/include/chevents.h **** /**
  72:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Source structure.
  73:./lib/chibios/os/rt/include/chevents.h ****  */
  74:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_source {
  75:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief First Event Listener
  76:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the Event
  77:./lib/chibios/os/rt/include/chevents.h ****                                                     Source.                 */
  78:./lib/chibios/os/rt/include/chevents.h **** } event_source_t;
  79:./lib/chibios/os/rt/include/chevents.h **** 
  80:./lib/chibios/os/rt/include/chevents.h **** /**
  81:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Handler callback function.
  82:./lib/chibios/os/rt/include/chevents.h ****  */
  83:./lib/chibios/os/rt/include/chevents.h **** typedef void (*evhandler_t)(eventid_t id);
  84:./lib/chibios/os/rt/include/chevents.h **** 
  85:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chevents.h **** /* Module macros.                                                            */
  87:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  88:./lib/chibios/os/rt/include/chevents.h **** 
  89:./lib/chibios/os/rt/include/chevents.h **** /**
  90:./lib/chibios/os/rt/include/chevents.h ****  * @brief   All events allowed mask.
  91:./lib/chibios/os/rt/include/chevents.h ****  */
  92:./lib/chibios/os/rt/include/chevents.h **** #define ALL_EVENTS      ((eventmask_t)-1)
  93:./lib/chibios/os/rt/include/chevents.h **** 
  94:./lib/chibios/os/rt/include/chevents.h **** /**
  95:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Returns an event mask from an event identifier.
  96:./lib/chibios/os/rt/include/chevents.h ****  */
  97:./lib/chibios/os/rt/include/chevents.h **** #define EVENT_MASK(eid) ((eventmask_t)1 << (eventmask_t)(eid))
  98:./lib/chibios/os/rt/include/chevents.h **** 
  99:./lib/chibios/os/rt/include/chevents.h **** /**
 100:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Data part of a static event source initializer.
 101:./lib/chibios/os/rt/include/chevents.h ****  * @details This macro should be used when statically initializing an event
 102:./lib/chibios/os/rt/include/chevents.h ****  *          source that is part of a bigger structure.
 103:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 104:./lib/chibios/os/rt/include/chevents.h ****  */
 105:./lib/chibios/os/rt/include/chevents.h **** #define _EVENTSOURCE_DATA(name) {(event_listener_t *)(&name)}
 106:./lib/chibios/os/rt/include/chevents.h **** 
 107:./lib/chibios/os/rt/include/chevents.h **** /**
 108:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Static event source initializer.
 109:./lib/chibios/os/rt/include/chevents.h ****  * @details Statically initialized event sources require no explicit
 110:./lib/chibios/os/rt/include/chevents.h ****  *          initialization using @p chEvtInit().
 111:./lib/chibios/os/rt/include/chevents.h ****  *
 112:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 113:./lib/chibios/os/rt/include/chevents.h ****  */
 114:./lib/chibios/os/rt/include/chevents.h **** #define EVENTSOURCE_DECL(name) event_source_t name = _EVENTSOURCE_DATA(name)
 115:./lib/chibios/os/rt/include/chevents.h **** 
 116:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chevents.h **** /* External declarations.                                                    */
 118:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 119:./lib/chibios/os/rt/include/chevents.h **** 
 120:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 121:./lib/chibios/os/rt/include/chevents.h **** extern "C" {
 122:./lib/chibios/os/rt/include/chevents.h **** #endif
 123:./lib/chibios/os/rt/include/chevents.h ****   void chEvtRegisterMaskWithFlags(event_source_t *esp,
 124:./lib/chibios/os/rt/include/chevents.h ****                                   event_listener_t *elp,
 125:./lib/chibios/os/rt/include/chevents.h ****                                   eventmask_t events,
 126:./lib/chibios/os/rt/include/chevents.h ****                                   eventflags_t wflags);
 127:./lib/chibios/os/rt/include/chevents.h ****   void chEvtUnregister(event_source_t *esp, event_listener_t *elp);
 128:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEventsI(eventmask_t events);
 129:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEvents(eventmask_t events);
 130:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtAddEvents(eventmask_t events);
 131:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlags(event_listener_t *elp);
 132:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp);
 133:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignal(thread_t *tp, eventmask_t events);
 134:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignalI(thread_t *tp, eventmask_t events);
 135:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags);
 136:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags);
 137:./lib/chibios/os/rt/include/chevents.h ****   void chEvtDispatch(const evhandler_t *handlers, eventmask_t events);
 138:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) || (CH_CFG_USE_EVENTS_TIMEOUT == FALSE)
 139:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOne(eventmask_t events);
 140:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAny(eventmask_t events);
 141:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAll(eventmask_t events);
 142:./lib/chibios/os/rt/include/chevents.h **** #endif
 143:./lib/chibios/os/rt/include/chevents.h **** #if CH_CFG_USE_EVENTS_TIMEOUT == TRUE
 144:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout);
 145:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout);
 146:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout);
 147:./lib/chibios/os/rt/include/chevents.h **** #endif
 148:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 149:./lib/chibios/os/rt/include/chevents.h **** }
 150:./lib/chibios/os/rt/include/chevents.h **** #endif
 151:./lib/chibios/os/rt/include/chevents.h **** 
 152:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == FALSE) && (CH_CFG_USE_EVENTS_TIMEOUT == TRUE)
 153:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitOne(mask) chEvtWaitOneTimeout(mask, TIME_INFINITE)
 154:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAny(mask) chEvtWaitAnyTimeout(mask, TIME_INFINITE)
 155:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAll(mask) chEvtWaitAllTimeout(mask, TIME_INFINITE)
 156:./lib/chibios/os/rt/include/chevents.h **** #endif
 157:./lib/chibios/os/rt/include/chevents.h **** 
 158:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 159:./lib/chibios/os/rt/include/chevents.h **** /* Module inline functions.                                                  */
 160:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 161:./lib/chibios/os/rt/include/chevents.h **** 
 162:./lib/chibios/os/rt/include/chevents.h **** /**
 163:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Initializes an Event Source.
 164:./lib/chibios/os/rt/include/chevents.h ****  * @note    This function can be invoked before the kernel is initialized
 165:./lib/chibios/os/rt/include/chevents.h ****  *          because it just prepares a @p event_source_t structure.
 166:./lib/chibios/os/rt/include/chevents.h ****  *
 167:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 168:./lib/chibios/os/rt/include/chevents.h ****  *
 169:./lib/chibios/os/rt/include/chevents.h ****  * @init
 170:./lib/chibios/os/rt/include/chevents.h ****  */
 171:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtObjectInit(event_source_t *esp) {
 491              		.loc 3 171 20 view .LVU107
 492              	.LBB137:
 172:./lib/chibios/os/rt/include/chevents.h **** 
 173:./lib/chibios/os/rt/include/chevents.h ****   esp->next = (event_listener_t *)esp;
 493              		.loc 3 173 3 view .LVU108
 494              	.LBE137:
 495              	.LBE136:
 496              	.LBE135:
 226:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->state = SDU_STOP;
 497              		.loc 1 226 15 is_stmt 0 view .LVU109
 498 000a 0125     		movs	r5, #1
 499              	.LBB140:
 500              	.LBB139:
 501              	.LBB138:
 502              		.loc 3 173 13 view .LVU110
 503 000c 4360     		str	r3, [r0, #4]
 504              	.LVL43:
 505              		.loc 3 173 13 view .LVU111
 506              	.LBE138:
 507              	.LBE139:
 508              	.LBE140:
 509              		.loc 1 226 3 is_stmt 1 view .LVU112
 227:lib/chibios/os/hal/src/hal_serial_usb.c ****   ibqObjectInit(&sdup->ibqueue, true, sdup->ib,
 510              		.loc 1 227 3 is_stmt 0 view .LVU113
 511 000e 0226     		movs	r6, #2
 512 0010 0E4B     		ldr	r3, .L23+4
 226:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->state = SDU_STOP;
 513              		.loc 1 226 15 view .LVU114
 514 0012 0572     		strb	r5, [r0, #8]
 515              		.loc 1 227 3 is_stmt 1 view .LVU115
 222:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 516              		.loc 1 222 43 is_stmt 0 view .LVU116
 517 0014 0446     		mov	r4, r0
 518              		.loc 1 227 3 view .LVU117
 519 0016 0290     		str	r0, [sp, #8]
 520 0018 0193     		str	r3, [sp, #4]
 521 001a 00F17C02 		add	r2, r0, #124
 522 001e 2B46     		mov	r3, r5
 523 0020 2946     		mov	r1, r5
 524 0022 0096     		str	r6, [sp]
 525 0024 0C30     		adds	r0, r0, #12
 526              	.LVL44:
 527              		.loc 1 227 3 view .LVU118
 528 0026 FFF7FEFF 		bl	ibqObjectInit
 529              	.LVL45:
 228:lib/chibios/os/hal/src/hal_serial_usb.c ****                 SERIAL_USB_BUFFERS_SIZE, SERIAL_USB_BUFFERS_NUMBER,
 229:lib/chibios/os/hal/src/hal_serial_usb.c ****                 ibnotify, sdup);
 230:lib/chibios/os/hal/src/hal_serial_usb.c ****   obqObjectInit(&sdup->obqueue, true, sdup->ob,
 530              		.loc 1 230 3 is_stmt 1 view .LVU119
 531 002a 094B     		ldr	r3, .L23+8
 532 002c 0294     		str	r4, [sp, #8]
 533 002e CDE90063 		strd	r6, r3, [sp]
 534 0032 04F18602 		add	r2, r4, #134
 535 0036 2B46     		mov	r3, r5
 536 0038 2946     		mov	r1, r5
 537 003a 04F14400 		add	r0, r4, #68
 538 003e FFF7FEFF 		bl	obqObjectInit
 539              	.LVL46:
 231:lib/chibios/os/hal/src/hal_serial_usb.c ****                 SERIAL_USB_BUFFERS_SIZE, SERIAL_USB_BUFFERS_NUMBER,
 232:lib/chibios/os/hal/src/hal_serial_usb.c ****                 obnotify, sdup);
 233:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 540              		.loc 1 233 1 is_stmt 0 view .LVU120
 541 0042 04B0     		add	sp, sp, #16
 542              		.cfi_def_cfa_offset 16
 543              		@ sp needed
 544 0044 70BD     		pop	{r4, r5, r6, pc}
 545              	.LVL47:
 546              	.L24:
 547              		.loc 1 233 1 view .LVU121
 548 0046 00BF     		.align	2
 549              	.L23:
 550 0048 00000000 		.word	vmt
 551 004c 00000000 		.word	ibnotify
 552 0050 00000000 		.word	obnotify
 553              		.cfi_endproc
 554              	.LFE341:
 556              		.section	.text.sduStart,"ax",%progbits
 557              		.align	1
 558              		.global	sduStart
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 563              	sduStart:
 564              	.LVL48:
 565              	.LFB342:
 234:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 235:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 236:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Configures and starts the driver.
 237:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 238:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] sdup      pointer to a @p SerialUSBDriver object
 239:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] config    the serial over USB driver configuration
 240:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 241:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @api
 242:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 243:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduStart(SerialUSBDriver *sdup, const SerialUSBConfig *config) {
 566              		.loc 1 243 69 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 244:lib/chibios/os/hal/src/hal_serial_usb.c ****   USBDriver *usbp = config->usbp;
 571              		.loc 1 244 3 view .LVU123
 572              		.loc 1 244 14 is_stmt 0 view .LVU124
 573 0000 0B68     		ldr	r3, [r1]
 574              	.LVL49:
 245:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 246:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalDbgCheck(sdup != NULL);
 575              		.loc 1 246 3 is_stmt 1 view .LVU125
 576              		.loc 1 246 3 view .LVU126
 577              		.loc 1 246 3 view .LVU127
 247:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 248:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalSysLock();
 578              		.loc 1 248 3 view .LVU128
 579              	.LBB141:
 580              	.LBI141:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 581              		.loc 2 573 20 view .LVU129
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 582              		.loc 2 575 3 view .LVU130
 583              	.LBB142:
 584              	.LBI142:
 585              		.file 4 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 586              		.loc 4 355 20 view .LVU131
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 587              		.loc 4 357 3 view .LVU132
 588              	.LBB143:
 589              	.LBI143:
 590              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 591              		.loc 5 669 27 view .LVU133
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 592              		.loc 5 677 3 view .LVU134
 593              	.LBB144:
 594              	.LBI144:
 595              		.file 6 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 596              		.loc 6 491 27 view .LVU135
 597              	.LBB145:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 598              		.loc 6 493 3 view .LVU136
 599 0002 2022     		movs	r2, #32
 600              		.syntax unified
 601              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 602 0004 82F31188 		MSR basepri, r2
 603              	@ 0 "" 2
 604              	.LVL50:
 605              		.loc 6 493 3 is_stmt 0 view .LVU137
 606              		.thumb
 607              		.syntax unified
 608              	.LBE145:
 609              	.LBE144:
 610              	.LBE143:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 611              		.loc 4 358 34 is_stmt 1 view .LVU138
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 612              		.loc 4 359 20 view .LVU139
 613              	.LBE142:
 614              	.LBE141:
 249:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalDbgAssert((sdup->state == SDU_STOP) || (sdup->state == SDU_READY),
 615              		.loc 1 249 3 view .LVU140
 616              		.loc 1 249 3 view .LVU141
 617              		.loc 1 249 3 view .LVU142
 250:lib/chibios/os/hal/src/hal_serial_usb.c ****                 "invalid state");
 251:lib/chibios/os/hal/src/hal_serial_usb.c ****   usbp->in_params[config->bulk_in - 1U]   = sdup;
 618              		.loc 1 251 3 view .LVU143
 619              		.loc 1 251 25 is_stmt 0 view .LVU144
 620 0008 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 621              		.loc 1 251 43 view .LVU145
 622 000a 03EB8202 		add	r2, r3, r2, lsl #2
 623 000e 9062     		str	r0, [r2, #40]
 252:lib/chibios/os/hal/src/hal_serial_usb.c ****   usbp->out_params[config->bulk_out - 1U] = sdup;
 624              		.loc 1 252 3 is_stmt 1 view .LVU146
 625              		.loc 1 252 26 is_stmt 0 view .LVU147
 626 0010 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 627              		.loc 1 252 43 view .LVU148
 628 0012 1132     		adds	r2, r2, #17
 629 0014 43F82200 		str	r0, [r3, r2, lsl #2]
 253:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (config->int_in > 0U) {
 630              		.loc 1 253 3 is_stmt 1 view .LVU149
 631              		.loc 1 253 13 is_stmt 0 view .LVU150
 632 0018 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 633              		.loc 1 253 6 view .LVU151
 634 001a 12B1     		cbz	r2, .L26
 254:lib/chibios/os/hal/src/hal_serial_usb.c ****     usbp->in_params[config->int_in - 1U]  = sdup;
 635              		.loc 1 254 5 is_stmt 1 view .LVU152
 636              		.loc 1 254 43 is_stmt 0 view .LVU153
 637 001c 03EB8203 		add	r3, r3, r2, lsl #2
 638              	.LVL51:
 639              		.loc 1 254 43 view .LVU154
 640 0020 9862     		str	r0, [r3, #40]
 641              	.L26:
 255:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 256:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->config = config;
 642              		.loc 1 256 3 is_stmt 1 view .LVU155
 257:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->state = SDU_READY;
 643              		.loc 1 257 15 is_stmt 0 view .LVU156
 644 0022 0223     		movs	r3, #2
 645 0024 0372     		strb	r3, [r0, #8]
 646              	.LVL52:
 256:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->state = SDU_READY;
 647              		.loc 1 256 16 view .LVU157
 648 0026 C0F89010 		str	r1, [r0, #144]
 649              		.loc 1 257 3 is_stmt 1 view .LVU158
 258:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalSysUnlock();
 650              		.loc 1 258 3 view .LVU159
 651              	.LBB146:
 652              	.LBI146:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 653              		.loc 2 584 20 view .LVU160
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 654              		.loc 2 586 3 view .LVU161
 655              	.LBB147:
 656              	.LBI147:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 657              		.loc 4 367 20 view .LVU162
 658              	.LBB148:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 659              		.loc 4 369 22 view .LVU163
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 660              		.loc 4 370 33 view .LVU164
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 661              		.loc 4 376 3 view .LVU165
 662              		.loc 4 376 3 view .LVU166
 663              		.loc 4 376 3 view .LVU167
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 664              		.loc 4 380 3 view .LVU168
 665              	.LBB149:
 666              	.LBI149:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 667              		.loc 5 693 27 view .LVU169
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 668              		.loc 5 696 3 view .LVU170
 669              	.LVL53:
 670              	.LBB150:
 671              	.LBI150:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 672              		.loc 6 491 27 view .LVU171
 673              	.LBB151:
 674              		.loc 6 493 3 view .LVU172
 675 002a 0023     		movs	r3, #0
 676              		.syntax unified
 677              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 678 002c 83F31188 		MSR basepri, r3
 679              	@ 0 "" 2
 680              	.LVL54:
 681              		.loc 6 493 3 is_stmt 0 view .LVU173
 682              		.thumb
 683              		.syntax unified
 684              	.LBE151:
 685              	.LBE150:
 686              	.LBE149:
 687              	.LBE148:
 688              	.LBE147:
 689              	.LBE146:
 259:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 690              		.loc 1 259 1 view .LVU174
 691 0030 7047     		bx	lr
 692              		.cfi_endproc
 693              	.LFE342:
 695              		.section	.text.sduStop,"ax",%progbits
 696              		.align	1
 697              		.global	sduStop
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 702              	sduStop:
 703              	.LVL55:
 704              	.LFB343:
 260:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 261:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 262:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Stops the driver.
 263:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details Any thread waiting on the driver's queues will be awakened with
 264:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          the message @p MSG_RESET.
 265:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 266:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] sdup      pointer to a @p SerialUSBDriver object
 267:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 268:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @api
 269:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 270:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduStop(SerialUSBDriver *sdup) {
 705              		.loc 1 270 37 is_stmt 1 view -0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 271:lib/chibios/os/hal/src/hal_serial_usb.c ****   USBDriver *usbp = sdup->config->usbp;
 709              		.loc 1 271 3 view .LVU176
 270:lib/chibios/os/hal/src/hal_serial_usb.c ****   USBDriver *usbp = sdup->config->usbp;
 710              		.loc 1 270 37 is_stmt 0 view .LVU177
 711 0000 38B5     		push	{r3, r4, r5, lr}
 712              		.cfi_def_cfa_offset 16
 713              		.cfi_offset 3, -16
 714              		.cfi_offset 4, -12
 715              		.cfi_offset 5, -8
 716              		.cfi_offset 14, -4
 717              		.loc 1 271 14 view .LVU178
 718 0002 D0F89030 		ldr	r3, [r0, #144]
 270:lib/chibios/os/hal/src/hal_serial_usb.c ****   USBDriver *usbp = sdup->config->usbp;
 719              		.loc 1 270 37 view .LVU179
 720 0006 0446     		mov	r4, r0
 721              		.loc 1 271 14 view .LVU180
 722 0008 1B68     		ldr	r3, [r3]
 723              	.LVL56:
 272:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 273:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalDbgCheck(sdup != NULL);
 724              		.loc 1 273 3 is_stmt 1 view .LVU181
 725              		.loc 1 273 3 view .LVU182
 726              		.loc 1 273 3 view .LVU183
 274:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 275:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalSysLock();
 727              		.loc 1 275 3 view .LVU184
 728              	.LBB152:
 729              	.LBI152:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 730              		.loc 2 573 20 view .LVU185
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 731              		.loc 2 575 3 view .LVU186
 732              	.LBB153:
 733              	.LBI153:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 734              		.loc 4 355 20 view .LVU187
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 735              		.loc 4 357 3 view .LVU188
 736              	.LBB154:
 737              	.LBI154:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 738              		.loc 5 669 27 view .LVU189
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 739              		.loc 5 677 3 view .LVU190
 740              	.LBB155:
 741              	.LBI155:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 742              		.loc 6 491 27 view .LVU191
 743              	.LBB156:
 744              		.loc 6 493 3 view .LVU192
 745 000a 2022     		movs	r2, #32
 746              		.syntax unified
 747              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 748 000c 82F31188 		MSR basepri, r2
 749              	@ 0 "" 2
 750              	.LVL57:
 751              		.loc 6 493 3 is_stmt 0 view .LVU193
 752              		.thumb
 753              		.syntax unified
 754              	.LBE156:
 755              	.LBE155:
 756              	.LBE154:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 757              		.loc 4 358 34 is_stmt 1 view .LVU194
 359:./lib/chibios/os/rt/include/chsys.h **** }
 758              		.loc 4 359 20 view .LVU195
 759              	.LBE153:
 760              	.LBE152:
 276:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 277:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalDbgAssert((sdup->state == SDU_STOP) || (sdup->state == SDU_READY),
 761              		.loc 1 277 3 view .LVU196
 762              		.loc 1 277 3 view .LVU197
 763              		.loc 1 277 3 view .LVU198
 278:lib/chibios/os/hal/src/hal_serial_usb.c ****                 "invalid state");
 279:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 280:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Driver in stopped state.*/
 281:lib/chibios/os/hal/src/hal_serial_usb.c ****   usbp->in_params[sdup->config->bulk_in - 1U]   = NULL;
 764              		.loc 1 281 3 view .LVU199
 765              		.loc 1 281 23 is_stmt 0 view .LVU200
 766 0010 D0F89000 		ldr	r0, [r0, #144]
 767              	.LVL58:
 768              		.loc 1 281 31 view .LVU201
 769 0014 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 770              		.loc 1 281 49 view .LVU202
 771 0016 0932     		adds	r2, r2, #9
 772 0018 03EB8202 		add	r2, r3, r2, lsl #2
 773 001c 0021     		movs	r1, #0
 774 001e 5160     		str	r1, [r2, #4]
 282:lib/chibios/os/hal/src/hal_serial_usb.c ****   usbp->out_params[sdup->config->bulk_out - 1U] = NULL;
 775              		.loc 1 282 3 is_stmt 1 view .LVU203
 776              		.loc 1 282 32 is_stmt 0 view .LVU204
 777 0020 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 778              		.loc 1 282 49 view .LVU205
 779 0022 1132     		adds	r2, r2, #17
 780 0024 43F82210 		str	r1, [r3, r2, lsl #2]
 283:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (sdup->config->int_in > 0U) {
 781              		.loc 1 283 3 is_stmt 1 view .LVU206
 782              		.loc 1 283 19 is_stmt 0 view .LVU207
 783 0028 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 784              		.loc 1 283 6 view .LVU208
 785 002a 1AB1     		cbz	r2, .L31
 284:lib/chibios/os/hal/src/hal_serial_usb.c ****     usbp->in_params[sdup->config->int_in - 1U]  = NULL;
 786              		.loc 1 284 5 is_stmt 1 view .LVU209
 787              		.loc 1 284 49 is_stmt 0 view .LVU210
 788 002c 0932     		adds	r2, r2, #9
 789 002e 03EB8203 		add	r3, r3, r2, lsl #2
 790              	.LVL59:
 791              		.loc 1 284 49 view .LVU211
 792 0032 5960     		str	r1, [r3, #4]
 793              	.L31:
 285:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 286:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->config = NULL;
 794              		.loc 1 286 3 is_stmt 1 view .LVU212
 287:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->state  = SDU_STOP;
 795              		.loc 1 287 16 is_stmt 0 view .LVU213
 796 0034 0123     		movs	r3, #1
 286:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->state  = SDU_STOP;
 797              		.loc 1 286 16 view .LVU214
 798 0036 0025     		movs	r5, #0
 799              		.loc 1 287 16 view .LVU215
 800 0038 2372     		strb	r3, [r4, #8]
 801              	.LVL60:
 802              	.LBB157:
 803              	.LBB158:
 935:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 936:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 937:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 938:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 939:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   osalDbgCheck(esp != NULL);
 940:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 941:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   esp->flags = (eventflags_t)0;
 942:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   esp->cb    = NULL;
 943:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   esp->param = NULL;
 944:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 945:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 946:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 947:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 948:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 949:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Add flags to an event source object.
 950:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 951:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] esp       pointer to the event flags object
 952:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] flags     flags to be ORed to the flags mask
 953:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 954:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 955:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 956:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalEventBroadcastFlagsI(event_source_t *esp,
 957:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 958:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 959:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chEvtBroadcastFlagsI(esp, flags);
 804              		.loc 2 959 3 view .LVU216
 805 003a 0221     		movs	r1, #2
 806 003c 201D     		adds	r0, r4, #4
 807              	.LBE158:
 808              	.LBE157:
 286:lib/chibios/os/hal/src/hal_serial_usb.c ****   sdup->state  = SDU_STOP;
 809              		.loc 1 286 16 view .LVU217
 810 003e C4F89050 		str	r5, [r4, #144]
 811              		.loc 1 287 3 is_stmt 1 view .LVU218
 288:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 289:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Enforces a disconnection.*/
 290:lib/chibios/os/hal/src/hal_serial_usb.c ****   chnAddFlagsI(sdup, CHN_DISCONNECTED);
 812              		.loc 1 290 3 view .LVU219
 813              	.LVL61:
 814              	.LBB160:
 815              	.LBI157:
 956:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 816              		.loc 2 956 20 view .LVU220
 817              	.LBB159:
 818              		.loc 2 959 3 view .LVU221
 819 0042 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 820              	.LVL62:
 821              		.loc 2 959 3 is_stmt 0 view .LVU222
 822              	.LBE159:
 823              	.LBE160:
 824              		.loc 1 290 39 is_stmt 1 view .LVU223
 291:lib/chibios/os/hal/src/hal_serial_usb.c ****   ibqResetI(&sdup->ibqueue);
 825              		.loc 1 291 3 view .LVU224
 826 0046 04F10C00 		add	r0, r4, #12
 827 004a FFF7FEFF 		bl	ibqResetI
 828              	.LVL63:
 292:lib/chibios/os/hal/src/hal_serial_usb.c ****   obqResetI(&sdup->obqueue);
 829              		.loc 1 292 3 view .LVU225
 830 004e 04F14400 		add	r0, r4, #68
 831 0052 FFF7FEFF 		bl	obqResetI
 832              	.LVL64:
 293:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalOsRescheduleS();
 833              		.loc 1 293 3 view .LVU226
 834              	.LBB161:
 835              	.LBI161:
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 836              		.loc 2 680 20 view .LVU227
 837              	.LBB162:
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 838              		.loc 2 682 3 view .LVU228
 839 0056 FFF7FEFF 		bl	chSchRescheduleS
 840              	.LVL65:
 841              	.LBE162:
 842              	.LBE161:
 294:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 295:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalSysUnlock();
 843              		.loc 1 295 3 view .LVU229
 844              	.LBB163:
 845              	.LBI163:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 846              		.loc 2 584 20 view .LVU230
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 847              		.loc 2 586 3 view .LVU231
 848              	.LBB164:
 849              	.LBI164:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 850              		.loc 4 367 20 view .LVU232
 851              	.LBB165:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 852              		.loc 4 369 22 view .LVU233
 370:./lib/chibios/os/rt/include/chsys.h **** 
 853              		.loc 4 370 33 view .LVU234
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 854              		.loc 4 376 3 view .LVU235
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 855              		.loc 4 376 3 view .LVU236
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 856              		.loc 4 376 3 view .LVU237
 857              		.loc 4 380 3 view .LVU238
 858              	.LBB166:
 859              	.LBI166:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 860              		.loc 5 693 27 view .LVU239
 861              		.loc 5 696 3 view .LVU240
 862              	.LBB167:
 863              	.LBI167:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 864              		.loc 6 491 27 view .LVU241
 865              	.LBB168:
 866              		.loc 6 493 3 view .LVU242
 867              		.syntax unified
 868              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 869 005a 85F31188 		MSR basepri, r5
 870              	@ 0 "" 2
 871              	.LVL66:
 872              		.loc 6 493 3 is_stmt 0 view .LVU243
 873              		.thumb
 874              		.syntax unified
 875              	.LBE168:
 876              	.LBE167:
 877              	.LBE166:
 878              	.LBE165:
 879              	.LBE164:
 880              	.LBE163:
 296:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 881              		.loc 1 296 1 view .LVU244
 882 005e 38BD     		pop	{r3, r4, r5, pc}
 883              		.loc 1 296 1 view .LVU245
 884              		.cfi_endproc
 885              	.LFE343:
 887              		.section	.text.sduSuspendHookI,"ax",%progbits
 888              		.align	1
 889              		.global	sduSuspendHookI
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	sduSuspendHookI:
 895              	.LVL67:
 896              	.LFB344:
 297:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 298:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 299:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   USB device suspend handler.
 300:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details Generates a @p CHN_DISCONNECT event and puts queues in
 301:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          non-blocking mode, this way the application cannot get stuck
 302:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          in the middle of an I/O operations.
 303:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @note    If this function is not called from an ISR then an explicit call
 304:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          to @p osalOsRescheduleS() in necessary afterward.
 305:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 306:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] sdup      pointer to a @p SerialUSBDriver object
 307:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 308:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @iclass
 309:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 310:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduSuspendHookI(SerialUSBDriver *sdup) {
 897              		.loc 1 310 45 is_stmt 1 view -0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 311:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 312:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Avoiding events spam.*/
 313:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (bqIsSuspendedX(&sdup->ibqueue) && bqIsSuspendedX(&sdup->obqueue)) {
 901              		.loc 1 313 3 view .LVU247
 310:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 902              		.loc 1 310 45 is_stmt 0 view .LVU248
 903 0000 38B5     		push	{r3, r4, r5, lr}
 904              		.cfi_def_cfa_offset 16
 905              		.cfi_offset 3, -16
 906              		.cfi_offset 4, -12
 907              		.cfi_offset 5, -8
 908              		.cfi_offset 14, -4
 909              		.loc 1 313 6 view .LVU249
 910 0002 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 310:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 911              		.loc 1 310 45 view .LVU250
 912 0004 0446     		mov	r4, r0
 913              		.loc 1 313 6 view .LVU251
 914 0006 13B1     		cbz	r3, .L36
 915              		.loc 1 313 38 discriminator 1 view .LVU252
 916 0008 90F84C30 		ldrb	r3, [r0, #76]	@ zero_extendqisi2
 917 000c ABB9     		cbnz	r3, .L35
 918              	.L36:
 314:lib/chibios/os/hal/src/hal_serial_usb.c ****     return;
 315:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 316:lib/chibios/os/hal/src/hal_serial_usb.c ****   chnAddFlagsI(sdup, CHN_DISCONNECTED);
 919              		.loc 1 316 3 is_stmt 1 view .LVU253
 920              	.LVL68:
 921              	.LBB169:
 922              	.LBI169:
 956:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 923              		.loc 2 956 20 view .LVU254
 924              	.LBB170:
 925              		.loc 2 959 3 view .LVU255
 926 000e 201D     		adds	r0, r4, #4
 927              	.LVL69:
 928              		.loc 2 959 3 is_stmt 0 view .LVU256
 929              	.LBE170:
 930              	.LBE169:
 317:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqSuspendI(&sdup->ibqueue);
 931              		.loc 1 317 3 view .LVU257
 932 0010 0125     		movs	r5, #1
 933              	.LBB172:
 934              	.LBB171:
 935              		.loc 2 959 3 view .LVU258
 936 0012 0221     		movs	r1, #2
 937 0014 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 938              	.LVL70:
 939              		.loc 2 959 3 view .LVU259
 940              	.LBE171:
 941              	.LBE172:
 316:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqSuspendI(&sdup->ibqueue);
 942              		.loc 1 316 39 is_stmt 1 view .LVU260
 943              		.loc 1 317 3 view .LVU261
 944              	.LBB173:
 945              	.LBB174:
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 946              		.loc 2 921 3 is_stmt 0 view .LVU262
 947 0018 04F10C00 		add	r0, r4, #12
 948              	.LBE174:
 949              	.LBE173:
 950              		.loc 1 317 3 view .LVU263
 951 001c 2575     		strb	r5, [r4, #20]
 952              		.loc 1 317 3 is_stmt 1 view .LVU264
 953              	.LVL71:
 954              	.LBB176:
 955              	.LBI173:
 919:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 956              		.loc 2 919 20 view .LVU265
 957              	.LBB175:
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 958              		.loc 2 921 3 view .LVU266
 959 001e 6FF00101 		mvn	r1, #1
 960 0022 FFF7FEFF 		bl	chThdDequeueAllI
 961              	.LVL72:
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 962              		.loc 2 921 3 is_stmt 0 view .LVU267
 963              	.LBE175:
 964              	.LBE176:
 965              		.loc 1 317 29 is_stmt 1 view .LVU268
 318:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqSuspendI(&sdup->obqueue);
 966              		.loc 1 318 3 view .LVU269
 967 0026 84F84C50 		strb	r5, [r4, #76]
 968              		.loc 1 318 3 view .LVU270
 969              	.LVL73:
 970              	.LBB177:
 971              	.LBI177:
 919:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 972              		.loc 2 919 20 view .LVU271
 973              	.LBB178:
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 974              		.loc 2 921 3 view .LVU272
 975 002a 04F14400 		add	r0, r4, #68
 976              	.LVL74:
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 977              		.loc 2 921 3 is_stmt 0 view .LVU273
 978 002e 6FF00101 		mvn	r1, #1
 979              	.LBE178:
 980              	.LBE177:
 319:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 981              		.loc 1 319 1 view .LVU274
 982 0032 BDE83840 		pop	{r3, r4, r5, lr}
 983              		.cfi_remember_state
 984              		.cfi_restore 14
 985              		.cfi_restore 5
 986              		.cfi_restore 4
 987              		.cfi_restore 3
 988              		.cfi_def_cfa_offset 0
 989              	.LVL75:
 990              	.LBB180:
 991              	.LBB179:
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 992              		.loc 2 921 3 view .LVU275
 993 0036 FFF7FEBF 		b	chThdDequeueAllI
 994              	.LVL76:
 995              	.L35:
 996              		.cfi_restore_state
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 997              		.loc 2 921 3 view .LVU276
 998              	.LBE179:
 999              	.LBE180:
 1000              		.loc 1 319 1 view .LVU277
 1001 003a 38BD     		pop	{r3, r4, r5, pc}
 1002              		.cfi_endproc
 1003              	.LFE344:
 1005              		.section	.text.sduWakeupHookI,"ax",%progbits
 1006              		.align	1
 1007              		.global	sduWakeupHookI
 1008              		.syntax unified
 1009              		.thumb
 1010              		.thumb_func
 1012              	sduWakeupHookI:
 1013              	.LVL77:
 1014              	.LFB345:
 320:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 321:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 322:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   USB device wakeup handler.
 323:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details Generates a @p CHN_CONNECT event and resumes normal queues
 324:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          operations.
 325:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 326:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @note    If this function is not called from an ISR then an explicit call
 327:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          to @p osalOsRescheduleS() in necessary afterward.
 328:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 329:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] sdup      pointer to a @p SerialUSBDriver object
 330:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 331:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @iclass
 332:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 333:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduWakeupHookI(SerialUSBDriver *sdup) {
 1015              		.loc 1 333 44 is_stmt 1 view -0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 334:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 335:lib/chibios/os/hal/src/hal_serial_usb.c ****   chnAddFlagsI(sdup, CHN_CONNECTED);
 1019              		.loc 1 335 3 view .LVU279
 1020              	.LBB181:
 1021              	.LBI181:
 956:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 1022              		.loc 2 956 20 view .LVU280
 1023              	.LBB182:
 1024              		.loc 2 959 3 view .LVU281
 1025              	.LBE182:
 1026              	.LBE181:
 333:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1027              		.loc 1 333 44 is_stmt 0 view .LVU282
 1028 0000 10B5     		push	{r4, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 4, -8
 1031              		.cfi_offset 14, -4
 1032              	.LBB185:
 1033              	.LBB183:
 1034              		.loc 2 959 3 view .LVU283
 1035 0002 0121     		movs	r1, #1
 1036              	.LBE183:
 1037              	.LBE185:
 333:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1038              		.loc 1 333 44 view .LVU284
 1039 0004 0446     		mov	r4, r0
 1040              	.LBB186:
 1041              	.LBB184:
 1042              		.loc 2 959 3 view .LVU285
 1043 0006 0430     		adds	r0, r0, #4
 1044              	.LVL78:
 1045              		.loc 2 959 3 view .LVU286
 1046 0008 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1047              	.LVL79:
 1048              		.loc 2 959 3 view .LVU287
 1049              	.LBE184:
 1050              	.LBE186:
 1051              		.loc 1 335 36 is_stmt 1 view .LVU288
 336:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqResumeX(&sdup->ibqueue);
 1052              		.loc 1 336 3 view .LVU289
 1053 000c 0023     		movs	r3, #0
 1054 000e 2375     		strb	r3, [r4, #20]
 1055              		.loc 1 336 28 view .LVU290
 337:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqResumeX(&sdup->obqueue);
 1056              		.loc 1 337 3 view .LVU291
 1057 0010 84F84C30 		strb	r3, [r4, #76]
 1058              		.loc 1 337 28 view .LVU292
 338:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 1059              		.loc 1 338 1 is_stmt 0 view .LVU293
 1060 0014 10BD     		pop	{r4, pc}
 1061              		.loc 1 338 1 view .LVU294
 1062              		.cfi_endproc
 1063              	.LFE345:
 1065              		.section	.text.sduConfigureHookI,"ax",%progbits
 1066              		.align	1
 1067              		.global	sduConfigureHookI
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1072              	sduConfigureHookI:
 1073              	.LVL80:
 1074              	.LFB346:
 339:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 340:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 341:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   USB device configured handler.
 342:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 343:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] sdup      pointer to a @p SerialUSBDriver object
 344:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 345:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @iclass
 346:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 347:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduConfigureHookI(SerialUSBDriver *sdup) {
 1075              		.loc 1 347 47 is_stmt 1 view -0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 348:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 349:lib/chibios/os/hal/src/hal_serial_usb.c ****   ibqResetI(&sdup->ibqueue);
 1079              		.loc 1 349 3 view .LVU296
 347:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1080              		.loc 1 347 47 is_stmt 0 view .LVU297
 1081 0000 38B5     		push	{r3, r4, r5, lr}
 1082              		.cfi_def_cfa_offset 16
 1083              		.cfi_offset 3, -16
 1084              		.cfi_offset 4, -12
 1085              		.cfi_offset 5, -8
 1086              		.cfi_offset 14, -4
 347:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1087              		.loc 1 347 47 view .LVU298
 1088 0002 0446     		mov	r4, r0
 350:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqResumeX(&sdup->ibqueue);
 1089              		.loc 1 350 3 view .LVU299
 1090 0004 0025     		movs	r5, #0
 349:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqResumeX(&sdup->ibqueue);
 1091              		.loc 1 349 3 view .LVU300
 1092 0006 0C30     		adds	r0, r0, #12
 1093              	.LVL81:
 349:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqResumeX(&sdup->ibqueue);
 1094              		.loc 1 349 3 view .LVU301
 1095 0008 FFF7FEFF 		bl	ibqResetI
 1096              	.LVL82:
 1097              		.loc 1 350 3 is_stmt 1 view .LVU302
 351:lib/chibios/os/hal/src/hal_serial_usb.c ****   obqResetI(&sdup->obqueue);
 1098              		.loc 1 351 3 is_stmt 0 view .LVU303
 1099 000c 04F14400 		add	r0, r4, #68
 350:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqResumeX(&sdup->ibqueue);
 1100              		.loc 1 350 3 view .LVU304
 1101 0010 2575     		strb	r5, [r4, #20]
 350:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqResumeX(&sdup->ibqueue);
 1102              		.loc 1 350 28 is_stmt 1 view .LVU305
 1103              		.loc 1 351 3 view .LVU306
 1104 0012 FFF7FEFF 		bl	obqResetI
 1105              	.LVL83:
 352:lib/chibios/os/hal/src/hal_serial_usb.c ****   bqResumeX(&sdup->obqueue);
 1106              		.loc 1 352 3 view .LVU307
 1107              	.LBB187:
 1108              	.LBB188:
 1109              		.loc 2 959 3 is_stmt 0 view .LVU308
 1110 0016 201D     		adds	r0, r4, #4
 1111              	.LBE188:
 1112              	.LBE187:
 1113              		.loc 1 352 3 view .LVU309
 1114 0018 84F84C50 		strb	r5, [r4, #76]
 1115              		.loc 1 352 28 is_stmt 1 view .LVU310
 353:lib/chibios/os/hal/src/hal_serial_usb.c ****   chnAddFlagsI(sdup, CHN_CONNECTED);
 1116              		.loc 1 353 3 view .LVU311
 1117              	.LVL84:
 1118              	.LBB190:
 1119              	.LBI187:
 956:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 1120              		.loc 2 956 20 view .LVU312
 1121              	.LBB189:
 1122              		.loc 2 959 3 view .LVU313
 1123 001c 0121     		movs	r1, #1
 1124 001e FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1125              	.LVL85:
 1126              		.loc 2 959 3 is_stmt 0 view .LVU314
 1127              	.LBE189:
 1128              	.LBE190:
 1129              		.loc 1 353 36 is_stmt 1 view .LVU315
 354:lib/chibios/os/hal/src/hal_serial_usb.c ****   (void) sdu_start_receive(sdup);
 1130              		.loc 1 354 3 view .LVU316
 1131              		.loc 1 354 10 is_stmt 0 view .LVU317
 1132 0022 2046     		mov	r0, r4
 355:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 1133              		.loc 1 355 1 view .LVU318
 1134 0024 BDE83840 		pop	{r3, r4, r5, lr}
 1135              		.cfi_restore 14
 1136              		.cfi_restore 5
 1137              		.cfi_restore 4
 1138              		.cfi_restore 3
 1139              		.cfi_def_cfa_offset 0
 1140              	.LVL86:
 354:lib/chibios/os/hal/src/hal_serial_usb.c ****   (void) sdu_start_receive(sdup);
 1141              		.loc 1 354 10 view .LVU319
 1142 0028 FFF7FEBF 		b	sdu_start_receive.isra.0
 1143              	.LVL87:
 354:lib/chibios/os/hal/src/hal_serial_usb.c ****   (void) sdu_start_receive(sdup);
 1144              		.loc 1 354 10 view .LVU320
 1145              		.cfi_endproc
 1146              	.LFE346:
 1148              		.section	.text.sduRequestsHook,"ax",%progbits
 1149              		.align	1
 1150              		.global	sduRequestsHook
 1151              		.syntax unified
 1152              		.thumb
 1153              		.thumb_func
 1155              	sduRequestsHook:
 1156              	.LVL88:
 1157              	.LFB347:
 356:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 357:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 358:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Default requests hook.
 359:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details Applications wanting to use the Serial over USB driver can use
 360:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          this function as requests hook in the USB configuration.
 361:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          The following requests are emulated:
 362:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          - CDC_GET_LINE_CODING.
 363:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          - CDC_SET_LINE_CODING.
 364:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          - CDC_SET_CONTROL_LINE_STATE.
 365:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          .
 366:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 367:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 368:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @return              The hook status.
 369:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @retval true         Message handled internally.
 370:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @retval false        Message not handled.
 371:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 372:lib/chibios/os/hal/src/hal_serial_usb.c **** bool sduRequestsHook(USBDriver *usbp) {
 1158              		.loc 1 372 39 is_stmt 1 view -0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              		@ link register save eliminated.
 373:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 374:lib/chibios/os/hal/src/hal_serial_usb.c ****   if ((usbp->setup[0] & USB_RTYPE_TYPE_MASK) == USB_RTYPE_TYPE_CLASS) {
 1163              		.loc 1 374 3 view .LVU322
 1164              		.loc 1 374 6 is_stmt 0 view .LVU323
 1165 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 1166 0004 03F06003 		and	r3, r3, #96
 1167 0008 202B     		cmp	r3, #32
 1168 000a 05D1     		bne	.L49
 375:lib/chibios/os/hal/src/hal_serial_usb.c ****     switch (usbp->setup[1]) {
 1169              		.loc 1 375 5 is_stmt 1 view .LVU324
 1170              		.loc 1 375 24 is_stmt 0 view .LVU325
 1171 000c 90F87530 		ldrb	r3, [r0, #117]	@ zero_extendqisi2
 1172              		.loc 1 375 5 view .LVU326
 1173 0010 212B     		cmp	r3, #33
 1174 0012 03D8     		bhi	.L45
 1175 0014 1F2B     		cmp	r3, #31
 1176 0016 0BD8     		bhi	.L48
 1177              	.L49:
 376:lib/chibios/os/hal/src/hal_serial_usb.c ****     case CDC_GET_LINE_CODING:
 377:lib/chibios/os/hal/src/hal_serial_usb.c ****       usbSetupTransfer(usbp, (uint8_t *)&linecoding, sizeof(linecoding), NULL);
 378:lib/chibios/os/hal/src/hal_serial_usb.c ****       return true;
 379:lib/chibios/os/hal/src/hal_serial_usb.c ****     case CDC_SET_LINE_CODING:
 380:lib/chibios/os/hal/src/hal_serial_usb.c ****       usbSetupTransfer(usbp, (uint8_t *)&linecoding, sizeof(linecoding), NULL);
 381:lib/chibios/os/hal/src/hal_serial_usb.c ****       return true;
 382:lib/chibios/os/hal/src/hal_serial_usb.c ****     case CDC_SET_CONTROL_LINE_STATE:
 383:lib/chibios/os/hal/src/hal_serial_usb.c ****       /* Nothing to do, there are no control lines.*/
 384:lib/chibios/os/hal/src/hal_serial_usb.c ****       usbSetupTransfer(usbp, NULL, 0, NULL);
 385:lib/chibios/os/hal/src/hal_serial_usb.c ****       return true;
 386:lib/chibios/os/hal/src/hal_serial_usb.c ****     default:
 387:lib/chibios/os/hal/src/hal_serial_usb.c ****       return false;
 1178              		.loc 1 387 14 view .LVU327
 1179 0018 0020     		movs	r0, #0
 1180              	.LVL89:
 388:lib/chibios/os/hal/src/hal_serial_usb.c ****     }
 389:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 390:lib/chibios/os/hal/src/hal_serial_usb.c ****   return false;
 391:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 1181              		.loc 1 391 1 view .LVU328
 1182 001a 7047     		bx	lr
 1183              	.LVL90:
 1184              	.L45:
 375:lib/chibios/os/hal/src/hal_serial_usb.c ****     case CDC_GET_LINE_CODING:
 1185              		.loc 1 375 5 view .LVU329
 1186 001c 222B     		cmp	r3, #34
 1187 001e FBD1     		bne	.L49
 1188 0020 0023     		movs	r3, #0
 1189 0022 1A46     		mov	r2, r3
 1190              	.L46:
 384:lib/chibios/os/hal/src/hal_serial_usb.c ****       return true;
 1191              		.loc 1 384 7 view .LVU330
 1192 0024 C0E91A32 		strd	r3, r2, [r0, #104]
 1193 0028 0023     		movs	r3, #0
 1194 002a 0367     		str	r3, [r0, #112]
 378:lib/chibios/os/hal/src/hal_serial_usb.c ****     case CDC_SET_LINE_CODING:
 1195              		.loc 1 378 14 view .LVU331
 1196 002c 0120     		movs	r0, #1
 1197              	.LVL91:
 378:lib/chibios/os/hal/src/hal_serial_usb.c ****     case CDC_SET_LINE_CODING:
 1198              		.loc 1 378 14 view .LVU332
 1199 002e 7047     		bx	lr
 1200              	.LVL92:
 1201              	.L48:
 375:lib/chibios/os/hal/src/hal_serial_usb.c ****     case CDC_GET_LINE_CODING:
 1202              		.loc 1 375 5 view .LVU333
 1203 0030 014B     		ldr	r3, .L50
 1204 0032 0722     		movs	r2, #7
 1205 0034 F6E7     		b	.L46
 1206              	.L51:
 1207 0036 00BF     		.align	2
 1208              	.L50:
 1209 0038 00000000 		.word	linecoding
 1210              		.cfi_endproc
 1211              	.LFE347:
 1213              		.section	.text.sduSOFHookI,"ax",%progbits
 1214              		.align	1
 1215              		.global	sduSOFHookI
 1216              		.syntax unified
 1217              		.thumb
 1218              		.thumb_func
 1220              	sduSOFHookI:
 1221              	.LVL93:
 1222              	.LFB348:
 392:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 393:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 394:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   SOF handler.
 395:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details The SOF interrupt is used for automatic flushing of incomplete
 396:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          buffers pending in the output queue.
 397:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 398:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] sdup      pointer to a @p SerialUSBDriver object
 399:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 400:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @iclass
 401:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 402:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduSOFHookI(SerialUSBDriver *sdup) {
 1223              		.loc 1 402 41 is_stmt 1 view -0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 8
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 403:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 404:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* If the USB driver is not in the appropriate state then transactions
 405:lib/chibios/os/hal/src/hal_serial_usb.c ****      must not be started.*/
 406:lib/chibios/os/hal/src/hal_serial_usb.c ****   if ((usbGetDriverStateI(sdup->config->usbp) != USB_ACTIVE) ||
 1227              		.loc 1 406 3 view .LVU335
 402:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1228              		.loc 1 402 41 is_stmt 0 view .LVU336
 1229 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1230              		.cfi_def_cfa_offset 24
 1231              		.cfi_offset 4, -12
 1232              		.cfi_offset 5, -8
 1233              		.cfi_offset 14, -4
 1234              		.loc 1 406 8 view .LVU337
 1235 0002 D0F89030 		ldr	r3, [r0, #144]
 1236 0006 1A68     		ldr	r2, [r3]
 1237              		.loc 1 406 6 view .LVU338
 1238 0008 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1239 000a 0429     		cmp	r1, #4
 402:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1240              		.loc 1 402 41 view .LVU339
 1241 000c 0446     		mov	r4, r0
 1242              		.loc 1 406 6 view .LVU340
 1243 000e 1AD1     		bne	.L52
 1244              		.loc 1 406 62 discriminator 1 view .LVU341
 1245 0010 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 1246 0012 0229     		cmp	r1, #2
 1247 0014 17D1     		bne	.L52
 407:lib/chibios/os/hal/src/hal_serial_usb.c ****       (sdup->state != SDU_READY)) {
 408:lib/chibios/os/hal/src/hal_serial_usb.c ****     return;
 409:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 410:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 411:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* If there is already a transaction ongoing then another one cannot be
 412:lib/chibios/os/hal/src/hal_serial_usb.c ****      started.*/
 413:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (usbGetTransmitStatusI(sdup->config->usbp, sdup->config->bulk_in)) {
 1248              		.loc 1 413 3 is_stmt 1 view .LVU342
 1249              		.loc 1 413 7 is_stmt 0 view .LVU343
 1250 0016 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1251 0018 1289     		ldrh	r2, [r2, #8]
 1252 001a 0123     		movs	r3, #1
 1253 001c 8B40     		lsls	r3, r3, r1
 1254              		.loc 1 413 6 view .LVU344
 1255 001e 1342     		tst	r3, r2
 1256 0020 11D1     		bne	.L52
 414:lib/chibios/os/hal/src/hal_serial_usb.c ****     return;
 415:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 416:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 417:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Checking if there only a buffer partially filled, if so then it is
 418:lib/chibios/os/hal/src/hal_serial_usb.c ****      enforced in the queue and transmitted.*/
 419:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (obqTryFlushI(&sdup->obqueue)) {
 1257              		.loc 1 419 3 is_stmt 1 view .LVU345
 1258              		.loc 1 419 7 is_stmt 0 view .LVU346
 1259 0022 00F14405 		add	r5, r0, #68
 1260 0026 2846     		mov	r0, r5
 1261              	.LVL94:
 1262              		.loc 1 419 7 view .LVU347
 1263 0028 FFF7FEFF 		bl	obqTryFlushI
 1264              	.LVL95:
 1265              		.loc 1 419 6 view .LVU348
 1266 002c 58B1     		cbz	r0, .L52
 1267              	.LBB191:
 420:lib/chibios/os/hal/src/hal_serial_usb.c ****     size_t n;
 1268              		.loc 1 420 5 is_stmt 1 view .LVU349
 421:lib/chibios/os/hal/src/hal_serial_usb.c ****     uint8_t *buf = obqGetFullBufferI(&sdup->obqueue, &n);
 1269              		.loc 1 421 5 view .LVU350
 1270              		.loc 1 421 20 is_stmt 0 view .LVU351
 1271 002e 01A9     		add	r1, sp, #4
 1272 0030 2846     		mov	r0, r5
 1273 0032 FFF7FEFF 		bl	obqGetFullBufferI
 1274              	.LVL96:
 422:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 423:lib/chibios/os/hal/src/hal_serial_usb.c ****     osalDbgAssert(buf != NULL, "queue is empty");
 424:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 425:lib/chibios/os/hal/src/hal_serial_usb.c ****     usbStartTransmitI(sdup->config->usbp, sdup->config->bulk_in, buf, n);
 1275              		.loc 1 425 27 view .LVU352
 1276 0036 D4F89040 		ldr	r4, [r4, #144]
 1277              	.LVL97:
 1278              		.loc 1 425 5 view .LVU353
 1279 003a 019B     		ldr	r3, [sp, #4]
 1280 003c 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 421:lib/chibios/os/hal/src/hal_serial_usb.c ****     uint8_t *buf = obqGetFullBufferI(&sdup->obqueue, &n);
 1281              		.loc 1 421 20 view .LVU354
 1282 003e 0246     		mov	r2, r0
 1283              	.LVL98:
 423:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1284              		.loc 1 423 5 is_stmt 1 view .LVU355
 423:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1285              		.loc 1 423 5 view .LVU356
 423:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1286              		.loc 1 423 5 view .LVU357
 1287              		.loc 1 425 5 view .LVU358
 1288 0040 2068     		ldr	r0, [r4]
 1289              	.LVL99:
 1290              		.loc 1 425 5 is_stmt 0 view .LVU359
 1291 0042 FFF7FEFF 		bl	usbStartTransmitI
 1292              	.LVL100:
 1293              	.L52:
 1294              		.loc 1 425 5 view .LVU360
 1295              	.LBE191:
 426:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 427:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 1296              		.loc 1 427 1 view .LVU361
 1297 0046 03B0     		add	sp, sp, #12
 1298              		.cfi_def_cfa_offset 12
 1299              		@ sp needed
 1300 0048 30BD     		pop	{r4, r5, pc}
 1301              		.cfi_endproc
 1302              	.LFE348:
 1304              		.section	.text.sduDataTransmitted,"ax",%progbits
 1305              		.align	1
 1306              		.global	sduDataTransmitted
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1311              	sduDataTransmitted:
 1312              	.LVL101:
 1313              	.LFB349:
 428:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 429:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 430:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Default data transmitted callback.
 431:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details The application must use this function as callback for the IN
 432:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          data endpoint.
 433:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 434:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 435:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] ep        IN endpoint number
 436:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 437:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduDataTransmitted(USBDriver *usbp, usbep_t ep) {
 1314              		.loc 1 437 54 is_stmt 1 view -0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 8
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 438:lib/chibios/os/hal/src/hal_serial_usb.c ****   uint8_t *buf;
 1318              		.loc 1 438 3 view .LVU363
 439:lib/chibios/os/hal/src/hal_serial_usb.c ****   size_t n;
 1319              		.loc 1 439 3 view .LVU364
 440:lib/chibios/os/hal/src/hal_serial_usb.c ****   SerialUSBDriver *sdup = usbp->in_params[ep - 1U];
 1320              		.loc 1 440 3 view .LVU365
 1321              		.loc 1 440 20 is_stmt 0 view .LVU366
 1322 0000 00EB8103 		add	r3, r0, r1, lsl #2
 437:lib/chibios/os/hal/src/hal_serial_usb.c ****   uint8_t *buf;
 1323              		.loc 1 437 54 view .LVU367
 1324 0004 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1325              		.cfi_def_cfa_offset 32
 1326              		.cfi_offset 4, -20
 1327              		.cfi_offset 5, -16
 1328              		.cfi_offset 6, -12
 1329              		.cfi_offset 7, -8
 1330              		.cfi_offset 14, -4
 1331              		.loc 1 440 20 view .LVU368
 1332 0006 9E6A     		ldr	r6, [r3, #40]
 1333              	.LVL102:
 441:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 442:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (sdup == NULL) {
 1334              		.loc 1 442 3 is_stmt 1 view .LVU369
 437:lib/chibios/os/hal/src/hal_serial_usb.c ****   uint8_t *buf;
 1335              		.loc 1 437 54 is_stmt 0 view .LVU370
 1336 0008 0446     		mov	r4, r0
 1337 000a 0D46     		mov	r5, r1
 1338              		.loc 1 442 6 view .LVU371
 1339 000c F6B1     		cbz	r6, .L59
 443:lib/chibios/os/hal/src/hal_serial_usb.c ****     return;
 444:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 445:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 446:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalSysLockFromISR();
 1340              		.loc 1 446 3 is_stmt 1 view .LVU372
 1341              	.LBB192:
 1342              	.LBI192:
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1343              		.loc 2 595 20 view .LVU373
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1344              		.loc 2 597 3 view .LVU374
 1345              	.LBB193:
 1346              	.LBI193:
 381:./lib/chibios/os/rt/include/chsys.h **** }
 382:./lib/chibios/os/rt/include/chsys.h **** 
 383:./lib/chibios/os/rt/include/chsys.h **** /**
 384:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 385:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 386:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 387:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 388:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 389:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 390:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 391:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 392:./lib/chibios/os/rt/include/chsys.h ****  *
 393:./lib/chibios/os/rt/include/chsys.h ****  * @special
 394:./lib/chibios/os/rt/include/chsys.h ****  */
 395:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 1347              		.loc 4 395 20 view .LVU375
 396:./lib/chibios/os/rt/include/chsys.h **** 
 397:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 1348              		.loc 4 397 3 view .LVU376
 1349              	.LBB194:
 1350              	.LBI194:
 697:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 698:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 699:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 700:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 701:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 702:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 703:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 704:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 705:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 706:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_lock() in this port.
 707:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock_from_isr(void) {
 1351              		.loc 5 708 27 view .LVU377
 709:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_lock();
 1352              		.loc 5 710 3 view .LVU378
 1353              	.LBB195:
 1354              	.LBI195:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1355              		.loc 5 669 27 view .LVU379
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1356              		.loc 5 677 3 view .LVU380
 1357              	.LVL103:
 1358              	.LBB196:
 1359              	.LBI196:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1360              		.loc 6 491 27 view .LVU381
 1361              	.LBB197:
 1362              		.loc 6 493 3 view .LVU382
 1363 000e 2023     		movs	r3, #32
 1364              		.syntax unified
 1365              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1366 0010 83F31188 		MSR basepri, r3
 1367              	@ 0 "" 2
 1368              	.LVL104:
 1369              		.loc 6 493 3 is_stmt 0 view .LVU383
 1370              		.thumb
 1371              		.syntax unified
 1372              	.LBE197:
 1373              	.LBE196:
 1374              	.LBE195:
 1375              	.LBE194:
 398:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1376              		.loc 4 398 34 is_stmt 1 view .LVU384
 399:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1377              		.loc 4 399 29 view .LVU385
 1378              	.LBE193:
 1379              	.LBE192:
 447:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 448:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Signaling that space is available in the output queue.*/
 449:lib/chibios/os/hal/src/hal_serial_usb.c ****   chnAddFlagsI(sdup, CHN_OUTPUT_EMPTY);
 1380              		.loc 1 449 3 view .LVU386
 1381              	.LBB198:
 1382              	.LBI198:
 956:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 1383              		.loc 2 956 20 view .LVU387
 1384              	.LBB199:
 1385              		.loc 2 959 3 view .LVU388
 1386 0014 04EB8507 		add	r7, r4, r5, lsl #2
 1387 0018 301D     		adds	r0, r6, #4
 1388              	.LVL105:
 1389              		.loc 2 959 3 is_stmt 0 view .LVU389
 1390 001a 0821     		movs	r1, #8
 1391              	.LVL106:
 1392              		.loc 2 959 3 view .LVU390
 1393 001c FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1394              	.LVL107:
 1395              		.loc 2 959 3 view .LVU391
 1396              	.LBE199:
 1397              	.LBE198:
 1398              		.loc 1 449 39 is_stmt 1 view .LVU392
 450:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 451:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Freeing the buffer just transmitted, if it was not a zero size packet.*/
 452:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (usbp->epc[ep]->in_state->txsize > 0U) {
 1399              		.loc 1 452 3 view .LVU393
 1400              		.loc 1 452 20 is_stmt 0 view .LVU394
 1401 0020 FB68     		ldr	r3, [r7, #12]
 1402              		.loc 1 452 30 view .LVU395
 1403 0022 5B69     		ldr	r3, [r3, #20]
 1404              		.loc 1 452 6 view .LVU396
 1405 0024 1B68     		ldr	r3, [r3]
 453:lib/chibios/os/hal/src/hal_serial_usb.c ****     obqReleaseEmptyBufferI(&sdup->obqueue);
 1406              		.loc 1 453 5 view .LVU397
 1407 0026 4436     		adds	r6, r6, #68
 1408              	.LVL108:
 452:lib/chibios/os/hal/src/hal_serial_usb.c ****     obqReleaseEmptyBufferI(&sdup->obqueue);
 1409              		.loc 1 452 6 view .LVU398
 1410 0028 13B1     		cbz	r3, .L61
 1411              		.loc 1 453 5 is_stmt 1 view .LVU399
 1412 002a 3046     		mov	r0, r6
 1413 002c FFF7FEFF 		bl	obqReleaseEmptyBufferI
 1414              	.LVL109:
 1415              	.L61:
 454:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 455:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 456:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Checking if there is a buffer ready for transmission.*/
 457:lib/chibios/os/hal/src/hal_serial_usb.c ****   buf = obqGetFullBufferI(&sdup->obqueue, &n);
 1416              		.loc 1 457 3 view .LVU400
 1417              		.loc 1 457 9 is_stmt 0 view .LVU401
 1418 0030 01A9     		add	r1, sp, #4
 1419 0032 3046     		mov	r0, r6
 1420 0034 FFF7FEFF 		bl	obqGetFullBufferI
 1421              	.LVL110:
 458:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 459:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (buf != NULL) {
 1422              		.loc 1 459 3 is_stmt 1 view .LVU402
 1423              		.loc 1 459 6 is_stmt 0 view .LVU403
 1424 0038 0246     		mov	r2, r0
 1425 003a 48B1     		cbz	r0, .L62
 460:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* The endpoint cannot be busy, we are in the context of the callback,
 461:lib/chibios/os/hal/src/hal_serial_usb.c ****        so it is safe to transmit without a check.*/
 462:lib/chibios/os/hal/src/hal_serial_usb.c ****     usbStartTransmitI(usbp, ep, buf, n);
 1426              		.loc 1 462 5 is_stmt 1 view .LVU404
 1427 003c 019B     		ldr	r3, [sp, #4]
 1428              	.L73:
 463:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 464:lib/chibios/os/hal/src/hal_serial_usb.c ****   else if ((usbp->epc[ep]->in_state->txsize > 0U) &&
 465:lib/chibios/os/hal/src/hal_serial_usb.c ****            ((usbp->epc[ep]->in_state->txsize &
 466:lib/chibios/os/hal/src/hal_serial_usb.c ****             ((size_t)usbp->epc[ep]->in_maxsize - 1U)) == 0U)) {
 467:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* Transmit zero sized packet in case the last one has maximum allowed
 468:lib/chibios/os/hal/src/hal_serial_usb.c ****        size. Otherwise the recipient may expect more data coming soon and
 469:lib/chibios/os/hal/src/hal_serial_usb.c ****        not return buffered data to app. See section 5.8.3 Bulk Transfer
 470:lib/chibios/os/hal/src/hal_serial_usb.c ****        Packet Size Constraints of the USB Specification document.*/
 471:lib/chibios/os/hal/src/hal_serial_usb.c ****     usbStartTransmitI(usbp, ep, usbp->setup, 0);
 1429              		.loc 1 471 5 is_stmt 0 view .LVU405
 1430 003e 2946     		mov	r1, r5
 1431 0040 2046     		mov	r0, r4
 1432              	.LVL111:
 1433              		.loc 1 471 5 view .LVU406
 1434 0042 FFF7FEFF 		bl	usbStartTransmitI
 1435              	.LVL112:
 1436              	.L63:
 472:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 473:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 474:lib/chibios/os/hal/src/hal_serial_usb.c ****   else {
 475:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* Nothing to transmit.*/
 476:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 1437              		.loc 1 476 3 is_stmt 1 view .LVU407
 477:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 478:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalSysUnlockFromISR();
 1438              		.loc 1 478 3 view .LVU408
 1439              	.LBB200:
 1440              	.LBI200:
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1441              		.loc 2 606 20 view .LVU409
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1442              		.loc 2 608 3 view .LVU410
 1443              	.LBB201:
 1444              	.LBI201:
 400:./lib/chibios/os/rt/include/chsys.h **** }
 401:./lib/chibios/os/rt/include/chsys.h **** 
 402:./lib/chibios/os/rt/include/chsys.h **** /**
 403:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 404:./lib/chibios/os/rt/include/chsys.h ****  *
 405:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 406:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 407:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 408:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 409:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 410:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 411:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 412:./lib/chibios/os/rt/include/chsys.h ****  *
 413:./lib/chibios/os/rt/include/chsys.h ****  * @special
 414:./lib/chibios/os/rt/include/chsys.h ****  */
 415:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 1445              		.loc 4 415 20 view .LVU411
 416:./lib/chibios/os/rt/include/chsys.h **** 
 417:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 1446              		.loc 4 417 31 view .LVU412
 418:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1447              		.loc 4 418 33 view .LVU413
 419:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1448              		.loc 4 419 3 view .LVU414
 1449              	.LBB202:
 1450              	.LBI202:
 711:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 712:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 713:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 714:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 715:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 716:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 717:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_unlock() in this port.
 718:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock_from_isr(void) {
 1451              		.loc 5 719 27 view .LVU415
 720:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 721:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_unlock();
 1452              		.loc 5 721 3 view .LVU416
 1453              	.LBB203:
 1454              	.LBI203:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1455              		.loc 5 693 27 view .LVU417
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1456              		.loc 5 696 3 view .LVU418
 1457              	.LBB204:
 1458              	.LBI204:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1459              		.loc 6 491 27 view .LVU419
 1460              	.LBB205:
 1461              		.loc 6 493 3 view .LVU420
 1462 0046 0023     		movs	r3, #0
 1463              		.syntax unified
 1464              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1465 0048 83F31188 		MSR basepri, r3
 1466              	@ 0 "" 2
 1467              	.LVL113:
 1468              		.thumb
 1469              		.syntax unified
 1470              	.L59:
 1471              		.loc 6 493 3 is_stmt 0 view .LVU421
 1472              	.LBE205:
 1473              	.LBE204:
 1474              	.LBE203:
 1475              	.LBE202:
 1476              	.LBE201:
 1477              	.LBE200:
 479:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 1478              		.loc 1 479 1 view .LVU422
 1479 004c 03B0     		add	sp, sp, #12
 1480              		.cfi_remember_state
 1481              		.cfi_def_cfa_offset 20
 1482              		@ sp needed
 1483 004e F0BD     		pop	{r4, r5, r6, r7, pc}
 1484              	.LVL114:
 1485              	.L62:
 1486              		.cfi_restore_state
 464:lib/chibios/os/hal/src/hal_serial_usb.c ****            ((usbp->epc[ep]->in_state->txsize &
 1487              		.loc 1 464 8 is_stmt 1 view .LVU423
 464:lib/chibios/os/hal/src/hal_serial_usb.c ****            ((usbp->epc[ep]->in_state->txsize &
 1488              		.loc 1 464 22 is_stmt 0 view .LVU424
 1489 0050 FB68     		ldr	r3, [r7, #12]
 464:lib/chibios/os/hal/src/hal_serial_usb.c ****            ((usbp->epc[ep]->in_state->txsize &
 1490              		.loc 1 464 36 view .LVU425
 1491 0052 5A69     		ldr	r2, [r3, #20]
 1492 0054 1268     		ldr	r2, [r2]
 464:lib/chibios/os/hal/src/hal_serial_usb.c ****            ((usbp->epc[ep]->in_state->txsize &
 1493              		.loc 1 464 11 view .LVU426
 1494 0056 002A     		cmp	r2, #0
 1495 0058 F5D0     		beq	.L63
 466:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* Transmit zero sized packet in case the last one has maximum allowed
 1496              		.loc 1 466 14 discriminator 1 view .LVU427
 1497 005a 1B8A     		ldrh	r3, [r3, #16]
 466:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* Transmit zero sized packet in case the last one has maximum allowed
 1498              		.loc 1 466 48 discriminator 1 view .LVU428
 1499 005c 013B     		subs	r3, r3, #1
 464:lib/chibios/os/hal/src/hal_serial_usb.c ****            ((usbp->epc[ep]->in_state->txsize &
 1500              		.loc 1 464 51 discriminator 1 view .LVU429
 1501 005e 1340     		ands	r3, r3, r2
 1502 0060 F1D1     		bne	.L63
 471:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 1503              		.loc 1 471 5 is_stmt 1 view .LVU430
 1504 0062 04F17402 		add	r2, r4, #116
 1505 0066 EAE7     		b	.L73
 1506              		.cfi_endproc
 1507              	.LFE349:
 1509              		.section	.text.sduDataReceived,"ax",%progbits
 1510              		.align	1
 1511              		.global	sduDataReceived
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1516              	sduDataReceived:
 1517              	.LVL115:
 1518              	.LFB350:
 480:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 481:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 482:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Default data received callback.
 483:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details The application must use this function as callback for the OUT
 484:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          data endpoint.
 485:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 486:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 487:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] ep        OUT endpoint number
 488:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 489:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduDataReceived(USBDriver *usbp, usbep_t ep) {
 1519              		.loc 1 489 51 view -0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 490:lib/chibios/os/hal/src/hal_serial_usb.c ****   size_t size;
 1523              		.loc 1 490 3 view .LVU432
 491:lib/chibios/os/hal/src/hal_serial_usb.c ****   SerialUSBDriver *sdup = usbp->out_params[ep - 1U];
 1524              		.loc 1 491 3 view .LVU433
 1525              		.loc 1 491 20 is_stmt 0 view .LVU434
 1526 0000 1131     		adds	r1, r1, #17
 1527              	.LVL116:
 489:lib/chibios/os/hal/src/hal_serial_usb.c ****   size_t size;
 1528              		.loc 1 489 51 view .LVU435
 1529 0002 38B5     		push	{r3, r4, r5, lr}
 1530              		.cfi_def_cfa_offset 16
 1531              		.cfi_offset 3, -16
 1532              		.cfi_offset 4, -12
 1533              		.cfi_offset 5, -8
 1534              		.cfi_offset 14, -4
 1535              		.loc 1 491 20 view .LVU436
 1536 0004 50F82140 		ldr	r4, [r0, r1, lsl #2]
 1537              	.LVL117:
 492:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 493:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (sdup == NULL) {
 1538              		.loc 1 493 3 is_stmt 1 view .LVU437
 1539              		.loc 1 493 6 is_stmt 0 view .LVU438
 1540 0008 DCB1     		cbz	r4, .L74
 494:lib/chibios/os/hal/src/hal_serial_usb.c ****     return;
 495:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 496:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 497:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalSysLockFromISR();
 1541              		.loc 1 497 3 is_stmt 1 view .LVU439
 1542              	.LBB206:
 1543              	.LBI206:
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1544              		.loc 2 595 20 view .LVU440
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1545              		.loc 2 597 3 view .LVU441
 1546              	.LBB207:
 1547              	.LBI207:
 395:./lib/chibios/os/rt/include/chsys.h **** 
 1548              		.loc 4 395 20 view .LVU442
 397:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1549              		.loc 4 397 3 view .LVU443
 1550              	.LBB208:
 1551              	.LBI208:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1552              		.loc 5 708 27 view .LVU444
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1553              		.loc 5 710 3 view .LVU445
 1554              	.LBB209:
 1555              	.LBI209:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1556              		.loc 5 669 27 view .LVU446
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1557              		.loc 5 677 3 view .LVU447
 1558              	.LVL118:
 1559              	.LBB210:
 1560              	.LBI210:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1561              		.loc 6 491 27 view .LVU448
 1562              	.LBB211:
 1563              		.loc 6 493 3 view .LVU449
 1564 000a 2023     		movs	r3, #32
 1565              		.syntax unified
 1566              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1567 000c 83F31188 		MSR basepri, r3
 1568              	@ 0 "" 2
 1569              	.LVL119:
 1570              		.loc 6 493 3 is_stmt 0 view .LVU450
 1571              		.thumb
 1572              		.syntax unified
 1573              	.LBE211:
 1574              	.LBE210:
 1575              	.LBE209:
 1576              	.LBE208:
 398:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1577              		.loc 4 398 34 is_stmt 1 view .LVU451
 399:./lib/chibios/os/rt/include/chsys.h **** }
 1578              		.loc 4 399 29 view .LVU452
 1579              	.LBE207:
 1580              	.LBE206:
 498:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 499:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* Checking for zero-size transactions.*/
 500:lib/chibios/os/hal/src/hal_serial_usb.c ****   size = usbGetReceiveTransactionSizeX(sdup->config->usbp,
 1581              		.loc 1 500 3 view .LVU453
 1582              		.loc 1 500 10 is_stmt 0 view .LVU454
 1583 0010 D4F89020 		ldr	r2, [r4, #144]
 1584 0014 1368     		ldr	r3, [r2]
 1585 0016 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 1586 0018 03EB8203 		add	r3, r3, r2, lsl #2
 1587 001c DB68     		ldr	r3, [r3, #12]
 1588              		.loc 1 500 8 view .LVU455
 1589 001e 9B69     		ldr	r3, [r3, #24]
 1590 0020 5D68     		ldr	r5, [r3, #4]
 1591              	.LVL120:
 501:lib/chibios/os/hal/src/hal_serial_usb.c ****                                        sdup->config->bulk_out);
 502:lib/chibios/os/hal/src/hal_serial_usb.c ****   if (size > (size_t)0) {
 1592              		.loc 1 502 3 is_stmt 1 view .LVU456
 1593              		.loc 1 502 6 is_stmt 0 view .LVU457
 1594 0022 45B1     		cbz	r5, .L76
 503:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* Signaling that data is available in the input queue.*/
 504:lib/chibios/os/hal/src/hal_serial_usb.c ****     chnAddFlagsI(sdup, CHN_INPUT_AVAILABLE);
 1595              		.loc 1 504 5 is_stmt 1 view .LVU458
 1596              	.LVL121:
 1597              	.LBB212:
 1598              	.LBI212:
 956:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 1599              		.loc 2 956 20 view .LVU459
 1600              	.LBB213:
 1601              		.loc 2 959 3 view .LVU460
 1602 0024 0421     		movs	r1, #4
 1603 0026 6018     		adds	r0, r4, r1
 1604              	.LVL122:
 1605              		.loc 2 959 3 is_stmt 0 view .LVU461
 1606 0028 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1607              	.LVL123:
 1608              		.loc 2 959 3 view .LVU462
 1609              	.LBE213:
 1610              	.LBE212:
 1611              		.loc 1 504 44 is_stmt 1 view .LVU463
 505:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 506:lib/chibios/os/hal/src/hal_serial_usb.c ****     /* Posting the filled buffer in the queue.*/
 507:lib/chibios/os/hal/src/hal_serial_usb.c ****     ibqPostFullBufferI(&sdup->ibqueue, size);
 1612              		.loc 1 507 5 view .LVU464
 1613 002c 2946     		mov	r1, r5
 1614 002e 04F10C00 		add	r0, r4, #12
 1615 0032 FFF7FEFF 		bl	ibqPostFullBufferI
 1616              	.LVL124:
 1617              	.L76:
 508:lib/chibios/os/hal/src/hal_serial_usb.c ****   }
 509:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 510:lib/chibios/os/hal/src/hal_serial_usb.c ****   /* The endpoint cannot be busy, we are in the context of the callback,
 511:lib/chibios/os/hal/src/hal_serial_usb.c ****      so a packet is in the buffer for sure. Trying to get a free buffer
 512:lib/chibios/os/hal/src/hal_serial_usb.c ****      for the next transaction.*/
 513:lib/chibios/os/hal/src/hal_serial_usb.c ****   (void) sdu_start_receive(sdup);
 1618              		.loc 1 513 3 view .LVU465
 1619              		.loc 1 513 10 is_stmt 0 view .LVU466
 1620 0036 2046     		mov	r0, r4
 1621 0038 FFF7FEFF 		bl	sdu_start_receive.isra.0
 1622              	.LVL125:
 514:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 515:lib/chibios/os/hal/src/hal_serial_usb.c ****   osalSysUnlockFromISR();
 1623              		.loc 1 515 3 is_stmt 1 view .LVU467
 1624              	.LBB214:
 1625              	.LBI214:
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1626              		.loc 2 606 20 view .LVU468
 1627              	.LBB215:
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1628              		.loc 2 608 3 view .LVU469
 1629              	.LBB216:
 1630              	.LBI216:
 415:./lib/chibios/os/rt/include/chsys.h **** 
 1631              		.loc 4 415 20 view .LVU470
 417:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1632              		.loc 4 417 31 view .LVU471
 418:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1633              		.loc 4 418 33 view .LVU472
 1634              		.loc 4 419 3 view .LVU473
 1635              	.LBB217:
 1636              	.LBI217:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1637              		.loc 5 719 27 view .LVU474
 1638              		.loc 5 721 3 view .LVU475
 1639              	.LBB218:
 1640              	.LBI218:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1641              		.loc 5 693 27 view .LVU476
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1642              		.loc 5 696 3 view .LVU477
 1643              	.LBB219:
 1644              	.LBI219:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1645              		.loc 6 491 27 view .LVU478
 1646              	.LBB220:
 1647              		.loc 6 493 3 view .LVU479
 1648 003c 0023     		movs	r3, #0
 1649              		.syntax unified
 1650              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1651 003e 83F31188 		MSR basepri, r3
 1652              	@ 0 "" 2
 1653              	.LVL126:
 1654              		.thumb
 1655              		.syntax unified
 1656              	.L74:
 1657              		.loc 6 493 3 is_stmt 0 view .LVU480
 1658              	.LBE220:
 1659              	.LBE219:
 1660              	.LBE218:
 1661              	.LBE217:
 1662              	.LBE216:
 1663              	.LBE215:
 1664              	.LBE214:
 516:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 1665              		.loc 1 516 1 view .LVU481
 1666 0042 38BD     		pop	{r3, r4, r5, pc}
 1667              		.loc 1 516 1 view .LVU482
 1668              		.cfi_endproc
 1669              	.LFE350:
 1671              		.section	.text.sduInterruptTransmitted,"ax",%progbits
 1672              		.align	1
 1673              		.global	sduInterruptTransmitted
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1678              	sduInterruptTransmitted:
 1679              	.LVL127:
 1680              	.LFB351:
 517:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 518:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 519:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Default data received callback.
 520:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @details The application must use this function as callback for the IN
 521:lib/chibios/os/hal/src/hal_serial_usb.c ****  *          interrupt endpoint.
 522:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 523:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 524:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] ep        endpoint number
 525:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 526:lib/chibios/os/hal/src/hal_serial_usb.c **** void sduInterruptTransmitted(USBDriver *usbp, usbep_t ep) {
 1681              		.loc 1 526 59 is_stmt 1 view -0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685              		@ link register save eliminated.
 527:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 528:lib/chibios/os/hal/src/hal_serial_usb.c ****   (void)usbp;
 1686              		.loc 1 528 3 view .LVU484
 529:lib/chibios/os/hal/src/hal_serial_usb.c ****   (void)ep;
 1687              		.loc 1 529 3 view .LVU485
 530:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 1688              		.loc 1 530 1 is_stmt 0 view .LVU486
 1689 0000 7047     		bx	lr
 1690              		.cfi_endproc
 1691              	.LFE351:
 1693              		.section	.text.sduControl,"ax",%progbits
 1694              		.align	1
 1695              		.global	sduControl
 1696              		.syntax unified
 1697              		.thumb
 1698              		.thumb_func
 1700              	sduControl:
 1701              	.LVL128:
 1702              	.LFB352:
 531:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 532:lib/chibios/os/hal/src/hal_serial_usb.c **** /**
 533:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @brief   Control operation on a serial USB port.
 534:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 535:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] usbp       pointer to a @p USBDriver object
 536:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in] operation control operation code
 537:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @param[in,out] arg   operation argument
 538:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 539:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @return              The control operation status.
 540:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @retval MSG_OK       in case of success.
 541:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @retval MSG_TIMEOUT  in case of operation timeout.
 542:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @retval MSG_RESET    in case of operation reset.
 543:lib/chibios/os/hal/src/hal_serial_usb.c ****  *
 544:lib/chibios/os/hal/src/hal_serial_usb.c ****  * @api
 545:lib/chibios/os/hal/src/hal_serial_usb.c ****  */
 546:lib/chibios/os/hal/src/hal_serial_usb.c **** msg_t sduControl(USBDriver *usbp, unsigned int operation, void *arg) {
 1703              		.loc 1 546 70 is_stmt 1 view -0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
 1707              		@ link register save eliminated.
 547:lib/chibios/os/hal/src/hal_serial_usb.c **** 
 548:lib/chibios/os/hal/src/hal_serial_usb.c ****   return _ctl((void *)usbp, operation, arg);
 1708              		.loc 1 548 3 view .LVU488
 549:lib/chibios/os/hal/src/hal_serial_usb.c **** }
 1709              		.loc 1 549 1 is_stmt 0 view .LVU489
 1710 0000 0020     		movs	r0, #0
 1711              	.LVL129:
 1712              		.loc 1 549 1 view .LVU490
 1713 0002 7047     		bx	lr
 1714              		.cfi_endproc
 1715              	.LFE352:
 1717              		.section	.rodata.vmt,"a"
 1718              		.align	2
 1721              	vmt:
 1722 0000 00000000 		.word	0
 1723 0004 00000000 		.word	_write
 1724 0008 00000000 		.word	_read
 1725 000c 00000000 		.word	_put
 1726 0010 00000000 		.word	_get
 1727 0014 00000000 		.word	_putt
 1728 0018 00000000 		.word	_gett
 1729 001c 00000000 		.word	_writet
 1730 0020 00000000 		.word	_readt
 1731 0024 00000000 		.word	_ctl
 1732              		.section	.data.linecoding,"aw"
 1735              	linecoding:
 1736 0000 00960000 		.ascii	"\000\226\000\000"
 1737 0004 00       		.byte	0
 1738 0005 00       		.byte	0
 1739 0006 08       		.byte	8
 1740              		.text
 1741              	.Letext0:
 1742              		.file 7 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 1743              		.file 8 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1744              		.file 9 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1745              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1746              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 1747              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 1748              		.file 13 "./lib/chibios/os/rt/include/chlists.h"
 1749              		.file 14 "./lib/chibios/os/rt/include/chtime.h"
 1750              		.file 15 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1751              		.file 16 "./lib/chibios/os/rt/include/chsem.h"
 1752              		.file 17 "./lib/chibios/os/rt/include/chmtx.h"
 1753              		.file 18 "./lib/chibios/os/hal/include/hal_buffers.h"
 1754              		.file 19 "./lib/chibios/os/hal/include/hal_usb.h"
 1755              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 1756              		.file 21 "./lib/chibios/os/hal/include/hal_usb_cdc.h"
 1757              		.file 22 "./lib/chibios/os/hal/include/hal_serial_usb.h"
 1758              		.file 23 "./lib/chibios/os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_serial_usb.c
     /tmp/ccBR2iFR.s:21     .text.obnotify:0000000000000000 $t
     /tmp/ccBR2iFR.s:26     .text.obnotify:0000000000000000 obnotify
     /tmp/ccBR2iFR.s:105    .text._readt:0000000000000000 $t
     /tmp/ccBR2iFR.s:110    .text._readt:0000000000000000 _readt
     /tmp/ccBR2iFR.s:130    .text._read:0000000000000000 $t
     /tmp/ccBR2iFR.s:135    .text._read:0000000000000000 _read
     /tmp/ccBR2iFR.s:156    .text._writet:0000000000000000 $t
     /tmp/ccBR2iFR.s:161    .text._writet:0000000000000000 _writet
     /tmp/ccBR2iFR.s:181    .text._write:0000000000000000 $t
     /tmp/ccBR2iFR.s:186    .text._write:0000000000000000 _write
     /tmp/ccBR2iFR.s:207    .text._gett:0000000000000000 $t
     /tmp/ccBR2iFR.s:212    .text._gett:0000000000000000 _gett
     /tmp/ccBR2iFR.s:232    .text._get:0000000000000000 $t
     /tmp/ccBR2iFR.s:237    .text._get:0000000000000000 _get
     /tmp/ccBR2iFR.s:258    .text._putt:0000000000000000 $t
     /tmp/ccBR2iFR.s:263    .text._putt:0000000000000000 _putt
     /tmp/ccBR2iFR.s:283    .text._put:0000000000000000 $t
     /tmp/ccBR2iFR.s:288    .text._put:0000000000000000 _put
     /tmp/ccBR2iFR.s:309    .text._ctl:0000000000000000 $t
     /tmp/ccBR2iFR.s:314    .text._ctl:0000000000000000 _ctl
     /tmp/ccBR2iFR.s:327    .text.sdu_start_receive.isra.0:0000000000000000 $t
     /tmp/ccBR2iFR.s:332    .text.sdu_start_receive.isra.0:0000000000000000 sdu_start_receive.isra.0
     /tmp/ccBR2iFR.s:411    .text.ibnotify:0000000000000000 $t
     /tmp/ccBR2iFR.s:416    .text.ibnotify:0000000000000000 ibnotify
     /tmp/ccBR2iFR.s:437    .text.sduInit:0000000000000000 $t
     /tmp/ccBR2iFR.s:443    .text.sduInit:0000000000000000 sduInit
     /tmp/ccBR2iFR.s:456    .text.sduObjectInit:0000000000000000 $t
     /tmp/ccBR2iFR.s:462    .text.sduObjectInit:0000000000000000 sduObjectInit
     /tmp/ccBR2iFR.s:550    .text.sduObjectInit:0000000000000048 $d
     /tmp/ccBR2iFR.s:1721   .rodata.vmt:0000000000000000 vmt
     /tmp/ccBR2iFR.s:557    .text.sduStart:0000000000000000 $t
     /tmp/ccBR2iFR.s:563    .text.sduStart:0000000000000000 sduStart
     /tmp/ccBR2iFR.s:696    .text.sduStop:0000000000000000 $t
     /tmp/ccBR2iFR.s:702    .text.sduStop:0000000000000000 sduStop
     /tmp/ccBR2iFR.s:888    .text.sduSuspendHookI:0000000000000000 $t
     /tmp/ccBR2iFR.s:894    .text.sduSuspendHookI:0000000000000000 sduSuspendHookI
     /tmp/ccBR2iFR.s:1006   .text.sduWakeupHookI:0000000000000000 $t
     /tmp/ccBR2iFR.s:1012   .text.sduWakeupHookI:0000000000000000 sduWakeupHookI
     /tmp/ccBR2iFR.s:1066   .text.sduConfigureHookI:0000000000000000 $t
     /tmp/ccBR2iFR.s:1072   .text.sduConfigureHookI:0000000000000000 sduConfigureHookI
     /tmp/ccBR2iFR.s:1149   .text.sduRequestsHook:0000000000000000 $t
     /tmp/ccBR2iFR.s:1155   .text.sduRequestsHook:0000000000000000 sduRequestsHook
     /tmp/ccBR2iFR.s:1209   .text.sduRequestsHook:0000000000000038 $d
     /tmp/ccBR2iFR.s:1735   .data.linecoding:0000000000000000 linecoding
     /tmp/ccBR2iFR.s:1214   .text.sduSOFHookI:0000000000000000 $t
     /tmp/ccBR2iFR.s:1220   .text.sduSOFHookI:0000000000000000 sduSOFHookI
     /tmp/ccBR2iFR.s:1305   .text.sduDataTransmitted:0000000000000000 $t
     /tmp/ccBR2iFR.s:1311   .text.sduDataTransmitted:0000000000000000 sduDataTransmitted
     /tmp/ccBR2iFR.s:1510   .text.sduDataReceived:0000000000000000 $t
     /tmp/ccBR2iFR.s:1516   .text.sduDataReceived:0000000000000000 sduDataReceived
     /tmp/ccBR2iFR.s:1672   .text.sduInterruptTransmitted:0000000000000000 $t
     /tmp/ccBR2iFR.s:1678   .text.sduInterruptTransmitted:0000000000000000 sduInterruptTransmitted
     /tmp/ccBR2iFR.s:1694   .text.sduControl:0000000000000000 $t
     /tmp/ccBR2iFR.s:1700   .text.sduControl:0000000000000000 sduControl
     /tmp/ccBR2iFR.s:1718   .rodata.vmt:0000000000000000 $d

UNDEFINED SYMBOLS
obqGetFullBufferI
usbStartTransmitI
ibqReadTimeout
obqWriteTimeout
ibqGetTimeout
obqPutTimeout
ibqGetEmptyBufferI
usbStartReceiveI
ibqObjectInit
obqObjectInit
chEvtBroadcastFlagsI
ibqResetI
obqResetI
chSchRescheduleS
chThdDequeueAllI
obqTryFlushI
obqReleaseEmptyBufferI
ibqPostFullBufferI
