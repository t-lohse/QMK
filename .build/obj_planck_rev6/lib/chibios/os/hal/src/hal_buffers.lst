   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 2
  15              		.file	"hal_buffers.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lib/chibios/os/hal/src/hal_buffers.c"
  20              		.section	.text.ibqObjectInit,"ax",%progbits
  21              		.align	1
  22              		.global	ibqObjectInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	ibqObjectInit:
  28              	.LVL0:
  29              	.LFB328:
   1:lib/chibios/os/hal/src/hal_buffers.c **** /*
   2:lib/chibios/os/hal/src/hal_buffers.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_buffers.c **** 
   4:lib/chibios/os/hal/src/hal_buffers.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_buffers.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_buffers.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_buffers.c **** 
   8:lib/chibios/os/hal/src/hal_buffers.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_buffers.c **** 
  10:lib/chibios/os/hal/src/hal_buffers.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_buffers.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_buffers.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_buffers.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_buffers.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_buffers.c **** */
  16:lib/chibios/os/hal/src/hal_buffers.c **** 
  17:lib/chibios/os/hal/src/hal_buffers.c **** /**
  18:lib/chibios/os/hal/src/hal_buffers.c ****  * @file    hal_buffers.c
  19:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   I/O Buffers code.
  20:lib/chibios/os/hal/src/hal_buffers.c ****  *
  21:lib/chibios/os/hal/src/hal_buffers.c ****  * @addtogroup HAL_BUFFERS
  22:lib/chibios/os/hal/src/hal_buffers.c ****  * @details Buffers Queues are used when there is the need to exchange
  23:lib/chibios/os/hal/src/hal_buffers.c ****  *          fixed-length data buffers between ISRs and threads.
  24:lib/chibios/os/hal/src/hal_buffers.c ****  *          On the ISR side data can be exchanged only using buffers,
  25:lib/chibios/os/hal/src/hal_buffers.c ****  *          on the thread side data can be exchanged both using buffers and/or
  26:lib/chibios/os/hal/src/hal_buffers.c ****  *          using an emulation of regular byte queues.
  27:lib/chibios/os/hal/src/hal_buffers.c ****  *          There are several kind of buffers queues:<br>
  28:lib/chibios/os/hal/src/hal_buffers.c ****  *          - <b>Input queue</b>, unidirectional queue where the writer is the
  29:lib/chibios/os/hal/src/hal_buffers.c ****  *            ISR side and the reader is the thread side.
  30:lib/chibios/os/hal/src/hal_buffers.c ****  *          - <b>Output queue</b>, unidirectional queue where the writer is the
  31:lib/chibios/os/hal/src/hal_buffers.c ****  *            thread side and the reader is the ISR side.
  32:lib/chibios/os/hal/src/hal_buffers.c ****  *          - <b>Full duplex queue</b>, bidirectional queue. Full duplex queues
  33:lib/chibios/os/hal/src/hal_buffers.c ****  *            are implemented by pairing an input queue and an output queue
  34:lib/chibios/os/hal/src/hal_buffers.c ****  *            together.
  35:lib/chibios/os/hal/src/hal_buffers.c ****  *          .
  36:lib/chibios/os/hal/src/hal_buffers.c ****  * @{
  37:lib/chibios/os/hal/src/hal_buffers.c ****  */
  38:lib/chibios/os/hal/src/hal_buffers.c **** 
  39:lib/chibios/os/hal/src/hal_buffers.c **** #include <string.h>
  40:lib/chibios/os/hal/src/hal_buffers.c **** 
  41:lib/chibios/os/hal/src/hal_buffers.c **** #include "hal.h"
  42:lib/chibios/os/hal/src/hal_buffers.c **** 
  43:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  44:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver local definitions.                                                 */
  45:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  46:lib/chibios/os/hal/src/hal_buffers.c **** 
  47:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  48:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver exported variables.                                                */
  49:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  50:lib/chibios/os/hal/src/hal_buffers.c **** 
  51:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  52:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver local variables and types.                                         */
  53:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  54:lib/chibios/os/hal/src/hal_buffers.c **** 
  55:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  56:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver local functions.                                                   */
  57:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  58:lib/chibios/os/hal/src/hal_buffers.c **** 
  59:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  60:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver exported functions.                                                */
  61:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  62:lib/chibios/os/hal/src/hal_buffers.c **** 
  63:lib/chibios/os/hal/src/hal_buffers.c **** /**
  64:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Initializes an input buffers queue object.
  65:lib/chibios/os/hal/src/hal_buffers.c ****  *
  66:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[out] ibqp     pointer to the @p input_buffers_queue_t object
  67:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] suspended initial state of the queue
  68:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to a memory area allocated for buffers
  69:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      buffers size
  70:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] n         number of buffers
  71:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] infy      callback called when a buffer is returned to the queue
  72:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] link      application defined pointer
  73:lib/chibios/os/hal/src/hal_buffers.c ****  *
  74:lib/chibios/os/hal/src/hal_buffers.c ****  * @init
  75:lib/chibios/os/hal/src/hal_buffers.c ****  */
  76:lib/chibios/os/hal/src/hal_buffers.c **** void ibqObjectInit(input_buffers_queue_t *ibqp, bool suspended, uint8_t *bp,
  77:lib/chibios/os/hal/src/hal_buffers.c ****                    size_t size, size_t n, bqnotify_t infy, void *link) {
  30              		.loc 1 77 72 view -0
  31              		.cfi_startproc
  32              		@ args = 12, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  78:lib/chibios/os/hal/src/hal_buffers.c **** 
  79:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck((ibqp != NULL) && (bp != NULL) && (size >= 2U));
  34              		.loc 1 79 3 view .LVU1
  35              		.loc 1 79 3 view .LVU2
  36              		.loc 1 79 3 view .LVU3
  80:lib/chibios/os/hal/src/hal_buffers.c **** 
  81:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadQueueObjectInit(&ibqp->waiting);
  37              		.loc 1 81 3 view .LVU4
  38              	.LBB224:
  39              	.LBI224:
  40              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 761:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 762:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 763:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 764:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 765:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 766:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 767:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 768:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 769:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 770:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 771:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 772:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 774:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 775:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 776:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 777:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 778:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 779:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 780:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 781:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 782:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 783:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 784:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 785:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 786:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 787:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 788:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 789:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 790:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 791:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 792:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 793:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 794:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 795:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 796:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 797:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 798:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 799:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 800:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 801:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 803:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 804:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 805:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 806:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 807:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 808:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 809:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 810:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 811:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 812:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 813:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 814:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 815:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 816:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 817:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 818:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 819:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 820:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 822:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 823:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 825:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 826:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 827:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 828:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 829:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must not reschedule because it can be called from
 830:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          ISR context.
 831:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 832:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 833:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 834:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 835:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 836:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 837:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 838:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 839:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeI(trp, msg);
 840:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 841:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 842:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 843:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 844:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 845:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 846:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 847:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 848:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 849:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 850:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 851:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 852:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 853:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 854:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeS(trp, msg);
 855:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 856:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 858:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Initializes a threads queue object.
 859:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 860:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 861:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 862:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @init
 863:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 864:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
  41              		.loc 2 864 20 view .LVU5
 865:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 866:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdQueueObjectInit(tqp);
  42              		.loc 2 866 3 view .LVU6
  43              	.LBB225:
  44              	.LBI225:
  45              		.file 3 "./lib/chibios/os/rt/include/chthreads.h"
   1:./lib/chibios/os/rt/include/chthreads.h **** /*
   2:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chthreads.h **** 
   4:./lib/chibios/os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chthreads.h **** 
   6:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chthreads.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chthreads.h **** 
  11:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chthreads.h **** 
  16:./lib/chibios/os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chthreads.h **** */
  19:./lib/chibios/os/rt/include/chthreads.h **** 
  20:./lib/chibios/os/rt/include/chthreads.h **** /**
  21:./lib/chibios/os/rt/include/chthreads.h ****  * @file    rt/include/chthreads.h
  22:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:./lib/chibios/os/rt/include/chthreads.h ****  *
  24:./lib/chibios/os/rt/include/chthreads.h ****  * @addtogroup threads
  25:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  26:./lib/chibios/os/rt/include/chthreads.h ****  */
  27:./lib/chibios/os/rt/include/chthreads.h **** 
  28:./lib/chibios/os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:./lib/chibios/os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:./lib/chibios/os/rt/include/chthreads.h **** 
  31:./lib/chibios/os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:./lib/chibios/os/rt/include/chthreads.h **** 
  33:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chthreads.h **** 
  37:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chthreads.h **** 
  41:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chthreads.h **** 
  45:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chthreads.h **** 
  49:./lib/chibios/os/rt/include/chthreads.h **** /**
  50:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:./lib/chibios/os/rt/include/chthreads.h ****  */
  52:./lib/chibios/os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:./lib/chibios/os/rt/include/chthreads.h **** 
  54:./lib/chibios/os/rt/include/chthreads.h **** /**
  55:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:./lib/chibios/os/rt/include/chthreads.h ****  */
  57:./lib/chibios/os/rt/include/chthreads.h **** typedef struct {
  58:./lib/chibios/os/rt/include/chthreads.h ****   /**
  59:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:./lib/chibios/os/rt/include/chthreads.h ****    */
  61:./lib/chibios/os/rt/include/chthreads.h ****   const char        *name;
  62:./lib/chibios/os/rt/include/chthreads.h ****   /**
  63:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:./lib/chibios/os/rt/include/chthreads.h ****    */
  65:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:./lib/chibios/os/rt/include/chthreads.h ****   /**
  67:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:./lib/chibios/os/rt/include/chthreads.h ****    */
  69:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:./lib/chibios/os/rt/include/chthreads.h ****   /**
  71:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:./lib/chibios/os/rt/include/chthreads.h ****    */
  73:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t           prio;
  74:./lib/chibios/os/rt/include/chthreads.h ****   /**
  75:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:./lib/chibios/os/rt/include/chthreads.h ****    */
  77:./lib/chibios/os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:./lib/chibios/os/rt/include/chthreads.h ****   /**
  79:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:./lib/chibios/os/rt/include/chthreads.h ****    */
  81:./lib/chibios/os/rt/include/chthreads.h ****   void              *arg;
  82:./lib/chibios/os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:./lib/chibios/os/rt/include/chthreads.h **** 
  84:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  87:./lib/chibios/os/rt/include/chthreads.h **** 
  88:./lib/chibios/os/rt/include/chthreads.h **** /**
  89:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads queues
  90:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  91:./lib/chibios/os/rt/include/chthreads.h ****  */
  92:./lib/chibios/os/rt/include/chthreads.h **** /**
  93:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  94:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  95:./lib/chibios/os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  96:./lib/chibios/os/rt/include/chthreads.h ****  *
  97:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  98:./lib/chibios/os/rt/include/chthreads.h ****  */
  99:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {_CH_QUEUE_DATA(name)}
 100:./lib/chibios/os/rt/include/chthreads.h **** 
 101:./lib/chibios/os/rt/include/chthreads.h **** /**
 102:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 103:./lib/chibios/os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 104:./lib/chibios/os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 105:./lib/chibios/os/rt/include/chthreads.h ****  *
 106:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 107:./lib/chibios/os/rt/include/chthreads.h ****  */
 108:./lib/chibios/os/rt/include/chthreads.h **** #define THREADS_QUEUE_DECL(name)                                            \
 109:./lib/chibios/os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 110:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 111:./lib/chibios/os/rt/include/chthreads.h **** 
 112:./lib/chibios/os/rt/include/chthreads.h **** /**
 113:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Working Areas
 114:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 115:./lib/chibios/os/rt/include/chthreads.h ****  */
 116:./lib/chibios/os/rt/include/chthreads.h **** /**
 117:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 118:./lib/chibios/os/rt/include/chthreads.h ****  *
 119:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 120:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 121:./lib/chibios/os/rt/include/chthreads.h ****  *
 122:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 123:./lib/chibios/os/rt/include/chthreads.h ****  */
 124:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 125:./lib/chibios/os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 126:./lib/chibios/os/rt/include/chthreads.h **** 
 127:./lib/chibios/os/rt/include/chthreads.h **** /**
 128:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 129:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 130:./lib/chibios/os/rt/include/chthreads.h ****  *          aligned as both position and size.
 131:./lib/chibios/os/rt/include/chthreads.h ****  *
 132:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 133:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 134:./lib/chibios/os/rt/include/chthreads.h ****  *
 135:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 136:./lib/chibios/os/rt/include/chthreads.h ****  */
 137:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 138:./lib/chibios/os/rt/include/chthreads.h **** 
 139:./lib/chibios/os/rt/include/chthreads.h **** /**
 140:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 141:./lib/chibios/os/rt/include/chthreads.h ****  *
 142:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 143:./lib/chibios/os/rt/include/chthreads.h ****  */
 144:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 145:./lib/chibios/os/rt/include/chthreads.h **** 
 146:./lib/chibios/os/rt/include/chthreads.h **** /**
 147:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 148:./lib/chibios/os/rt/include/chthreads.h ****  *
 149:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 150:./lib/chibios/os/rt/include/chthreads.h ****  */
 151:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 152:./lib/chibios/os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 153:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 154:./lib/chibios/os/rt/include/chthreads.h **** 
 155:./lib/chibios/os/rt/include/chthreads.h **** /**
 156:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 157:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 158:./lib/chibios/os/rt/include/chthreads.h ****  */
 159:./lib/chibios/os/rt/include/chthreads.h **** /**
 160:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 161:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 162:./lib/chibios/os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 163:./lib/chibios/os/rt/include/chthreads.h ****  */
 164:./lib/chibios/os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 165:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 166:./lib/chibios/os/rt/include/chthreads.h **** 
 167:./lib/chibios/os/rt/include/chthreads.h **** /**
 168:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Macro Functions
 169:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 170:./lib/chibios/os/rt/include/chthreads.h ****  */
 171:./lib/chibios/os/rt/include/chthreads.h **** /**
 172:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 173:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 174:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 175:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 176:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 177:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 178:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 179:./lib/chibios/os/rt/include/chthreads.h ****  *
 180:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 181:./lib/chibios/os/rt/include/chthreads.h ****  *
 182:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 183:./lib/chibios/os/rt/include/chthreads.h ****  */
 184:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 185:./lib/chibios/os/rt/include/chthreads.h **** 
 186:./lib/chibios/os/rt/include/chthreads.h **** /**
 187:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 188:./lib/chibios/os/rt/include/chthreads.h ****  *          milliseconds.
 189:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 190:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 191:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 192:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 193:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 194:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 195:./lib/chibios/os/rt/include/chthreads.h ****  *
 196:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 197:./lib/chibios/os/rt/include/chthreads.h ****  *
 198:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 199:./lib/chibios/os/rt/include/chthreads.h ****  */
 200:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 201:./lib/chibios/os/rt/include/chthreads.h **** 
 202:./lib/chibios/os/rt/include/chthreads.h **** /**
 203:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 204:./lib/chibios/os/rt/include/chthreads.h ****  *          microseconds.
 205:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 206:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 207:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 208:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 209:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 210:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 211:./lib/chibios/os/rt/include/chthreads.h ****  *
 212:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 213:./lib/chibios/os/rt/include/chthreads.h ****  *
 214:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 215:./lib/chibios/os/rt/include/chthreads.h ****  */
 216:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 217:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 218:./lib/chibios/os/rt/include/chthreads.h **** 
 219:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 220:./lib/chibios/os/rt/include/chthreads.h **** /* External declarations.                                                    */
 221:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 222:./lib/chibios/os/rt/include/chthreads.h **** 
 223:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 224:./lib/chibios/os/rt/include/chthreads.h **** extern "C" {
 225:./lib/chibios/os/rt/include/chthreads.h **** #endif
 226:./lib/chibios/os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 227:./lib/chibios/os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 228:./lib/chibios/os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 229:./lib/chibios/os/rt/include/chthreads.h **** #endif
 230:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 231:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 232:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 233:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 234:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 235:./lib/chibios/os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 236:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 237:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 238:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 239:./lib/chibios/os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 240:./lib/chibios/os/rt/include/chthreads.h **** #endif
 241:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 242:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 243:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 244:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 245:./lib/chibios/os/rt/include/chthreads.h **** #endif
 246:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 247:./lib/chibios/os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 248:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 249:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 250:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 251:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 252:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 253:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 254:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 255:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 256:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 257:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 258:./lib/chibios/os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 259:./lib/chibios/os/rt/include/chthreads.h ****   void chThdYield(void);
 260:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 261:./lib/chibios/os/rt/include/chthreads.h **** }
 262:./lib/chibios/os/rt/include/chthreads.h **** #endif
 263:./lib/chibios/os/rt/include/chthreads.h **** 
 264:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 265:./lib/chibios/os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 266:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 267:./lib/chibios/os/rt/include/chthreads.h **** 
 268:./lib/chibios/os/rt/include/chthreads.h **** /**
 269:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns a pointer to the current @p thread_t.
 270:./lib/chibios/os/rt/include/chthreads.h ****  *
 271:./lib/chibios/os/rt/include/chthreads.h ****  * @return              A pointer to the current thread.
 272:./lib/chibios/os/rt/include/chthreads.h ****  *
 273:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 274:./lib/chibios/os/rt/include/chthreads.h ****  */
 275:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 276:./lib/chibios/os/rt/include/chthreads.h **** 
 277:./lib/chibios/os/rt/include/chthreads.h ****   return ch.rlist.current;
 278:./lib/chibios/os/rt/include/chthreads.h **** }
 279:./lib/chibios/os/rt/include/chthreads.h **** 
 280:./lib/chibios/os/rt/include/chthreads.h **** /**
 281:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 282:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 283:./lib/chibios/os/rt/include/chthreads.h ****  *
 284:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The current thread priority.
 285:./lib/chibios/os/rt/include/chthreads.h ****  *
 286:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 287:./lib/chibios/os/rt/include/chthreads.h ****  */
 288:./lib/chibios/os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 289:./lib/chibios/os/rt/include/chthreads.h **** 
 290:./lib/chibios/os/rt/include/chthreads.h ****   return chThdGetSelfX()->hdr.pqueue.prio;
 291:./lib/chibios/os/rt/include/chthreads.h **** }
 292:./lib/chibios/os/rt/include/chthreads.h **** 
 293:./lib/chibios/os/rt/include/chthreads.h **** /**
 294:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 295:./lib/chibios/os/rt/include/chthreads.h ****  * @note    This function is only available when the
 296:./lib/chibios/os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 297:./lib/chibios/os/rt/include/chthreads.h ****  *
 298:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 299:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 300:./lib/chibios/os/rt/include/chthreads.h ****  *
 301:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 302:./lib/chibios/os/rt/include/chthreads.h ****  */
 303:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 305:./lib/chibios/os/rt/include/chthreads.h **** 
 306:./lib/chibios/os/rt/include/chthreads.h ****   return tp->time;
 307:./lib/chibios/os/rt/include/chthreads.h **** }
 308:./lib/chibios/os/rt/include/chthreads.h **** #endif
 309:./lib/chibios/os/rt/include/chthreads.h **** 
 310:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 311:./lib/chibios/os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 312:./lib/chibios/os/rt/include/chthreads.h **** /**
 313:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 314:./lib/chibios/os/rt/include/chthreads.h ****  *
 315:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 316:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 317:./lib/chibios/os/rt/include/chthreads.h ****  *
 318:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 319:./lib/chibios/os/rt/include/chthreads.h ****  */
 320:./lib/chibios/os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 321:./lib/chibios/os/rt/include/chthreads.h **** 
 322:./lib/chibios/os/rt/include/chthreads.h ****   return tp->wabase;
 323:./lib/chibios/os/rt/include/chthreads.h **** }
 324:./lib/chibios/os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 325:./lib/chibios/os/rt/include/chthreads.h **** 
 326:./lib/chibios/os/rt/include/chthreads.h **** /**
 327:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 328:./lib/chibios/os/rt/include/chthreads.h ****  *
 329:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 330:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 331:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 332:./lib/chibios/os/rt/include/chthreads.h ****  *
 333:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 334:./lib/chibios/os/rt/include/chthreads.h ****  */
 335:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 336:./lib/chibios/os/rt/include/chthreads.h **** 
 337:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 338:./lib/chibios/os/rt/include/chthreads.h **** }
 339:./lib/chibios/os/rt/include/chthreads.h **** 
 340:./lib/chibios/os/rt/include/chthreads.h **** /**
 341:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 342:./lib/chibios/os/rt/include/chthreads.h ****  *
 343:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 344:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 345:./lib/chibios/os/rt/include/chthreads.h ****  *
 346:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 347:./lib/chibios/os/rt/include/chthreads.h ****  */
 348:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 349:./lib/chibios/os/rt/include/chthreads.h **** 
 350:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 351:./lib/chibios/os/rt/include/chthreads.h **** }
 352:./lib/chibios/os/rt/include/chthreads.h **** 
 353:./lib/chibios/os/rt/include/chthreads.h **** /**
 354:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 355:./lib/chibios/os/rt/include/chthreads.h ****  *
 356:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 357:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 358:./lib/chibios/os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 359:./lib/chibios/os/rt/include/chthreads.h ****  *
 360:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 361:./lib/chibios/os/rt/include/chthreads.h ****  */
 362:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 363:./lib/chibios/os/rt/include/chthreads.h **** 
 364:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 365:./lib/chibios/os/rt/include/chthreads.h **** 
 366:./lib/chibios/os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 367:./lib/chibios/os/rt/include/chthreads.h **** }
 368:./lib/chibios/os/rt/include/chthreads.h **** 
 369:./lib/chibios/os/rt/include/chthreads.h **** /**
 370:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 371:./lib/chibios/os/rt/include/chthreads.h ****  *
 372:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 373:./lib/chibios/os/rt/include/chthreads.h ****  *                      handled as follow:
 374:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 375:./lib/chibios/os/rt/include/chthreads.h ****  *                        state.
 376:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 377:./lib/chibios/os/rt/include/chthreads.h ****  *                      .
 378:./lib/chibios/os/rt/include/chthreads.h ****  *
 379:./lib/chibios/os/rt/include/chthreads.h ****  * @sclass
 380:./lib/chibios/os/rt/include/chthreads.h ****  */
 381:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 382:./lib/chibios/os/rt/include/chthreads.h **** 
 383:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 384:./lib/chibios/os/rt/include/chthreads.h **** 
 385:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 386:./lib/chibios/os/rt/include/chthreads.h **** }
 387:./lib/chibios/os/rt/include/chthreads.h **** 
 388:./lib/chibios/os/rt/include/chthreads.h **** /**
 389:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 390:./lib/chibios/os/rt/include/chthreads.h ****  *
 391:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 392:./lib/chibios/os/rt/include/chthreads.h ****  *
 393:./lib/chibios/os/rt/include/chthreads.h ****  * @init
 394:./lib/chibios/os/rt/include/chthreads.h ****  */
 395:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
  46              		.loc 3 395 20 view .LVU7
  47              	.LBB226:
 396:./lib/chibios/os/rt/include/chthreads.h **** 
 397:./lib/chibios/os/rt/include/chthreads.h ****   ch_queue_init(&tqp->queue);
  48              		.loc 3 397 3 view .LVU8
  49              	.LBB227:
  50              	.LBI227:
  51              		.file 4 "./lib/chibios/os/rt/include/chlists.h"
   1:./lib/chibios/os/rt/include/chlists.h **** /*
   2:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chlists.h **** 
   4:./lib/chibios/os/rt/include/chlists.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chlists.h **** 
   6:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chlists.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chlists.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chlists.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chlists.h **** 
  11:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chlists.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chlists.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chlists.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chlists.h **** 
  16:./lib/chibios/os/rt/include/chlists.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chlists.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chlists.h **** */
  19:./lib/chibios/os/rt/include/chlists.h **** 
  20:./lib/chibios/os/rt/include/chlists.h **** /**
  21:./lib/chibios/os/rt/include/chlists.h ****  * @file    chlists.h
  22:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Lists and Queues header.
  23:./lib/chibios/os/rt/include/chlists.h ****  *
  24:./lib/chibios/os/rt/include/chlists.h ****  * @addtogroup os_lists
  25:./lib/chibios/os/rt/include/chlists.h ****  * @{
  26:./lib/chibios/os/rt/include/chlists.h ****  */
  27:./lib/chibios/os/rt/include/chlists.h **** 
  28:./lib/chibios/os/rt/include/chlists.h **** #ifndef CHLISTS_H
  29:./lib/chibios/os/rt/include/chlists.h **** #define CHLISTS_H
  30:./lib/chibios/os/rt/include/chlists.h **** 
  31:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chlists.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chlists.h **** 
  35:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chlists.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chlists.h **** 
  39:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chlists.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chlists.h **** 
  43:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chlists.h **** /* Module data structures and types.                                         */
  45:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chlists.h **** 
  47:./lib/chibios/os/rt/include/chlists.h **** /**
  48:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic single link list header and element.
  49:./lib/chibios/os/rt/include/chlists.h ****  */
  50:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_list ch_list_t;
  51:./lib/chibios/os/rt/include/chlists.h **** 
  52:./lib/chibios/os/rt/include/chlists.h **** /**
  53:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic single link list header
  54:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  55:./lib/chibios/os/rt/include/chlists.h ****  */
  56:./lib/chibios/os/rt/include/chlists.h **** struct ch_list {
  57:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t             *next;      /**< @brief Next in the list/queue.     */
  58:./lib/chibios/os/rt/include/chlists.h **** };
  59:./lib/chibios/os/rt/include/chlists.h **** 
  60:./lib/chibios/os/rt/include/chlists.h **** /**
  61:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic bidirectional linked list header and element.
  62:./lib/chibios/os/rt/include/chlists.h ****  */
  63:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_queue ch_queue_t;
  64:./lib/chibios/os/rt/include/chlists.h **** 
  65:./lib/chibios/os/rt/include/chlists.h **** /**
  66:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic bidirectional linked list header
  67:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  68:./lib/chibios/os/rt/include/chlists.h ****  */
  69:./lib/chibios/os/rt/include/chlists.h **** struct ch_queue {
  70:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *next;      /**< @brief Next in the list/queue.     */
  71:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *prev;      /**< @brief Previous in the queue.      */
  72:./lib/chibios/os/rt/include/chlists.h **** };
  73:./lib/chibios/os/rt/include/chlists.h **** 
  74:./lib/chibios/os/rt/include/chlists.h **** /**
  75:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic priority-ordered bidirectional linked list
  76:./lib/chibios/os/rt/include/chlists.h ****  *          header and element.
  77:./lib/chibios/os/rt/include/chlists.h ****  */
  78:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_priority_queue ch_priority_queue_t;
  79:./lib/chibios/os/rt/include/chlists.h **** 
  80:./lib/chibios/os/rt/include/chlists.h **** /**
  81:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic priority-ordered bidirectional
  82:./lib/chibios/os/rt/include/chlists.h ****  *          linked list header and element.
  83:./lib/chibios/os/rt/include/chlists.h ****  * @note    Link fields are void pointers in order to avoid aliasing issues.
  84:./lib/chibios/os/rt/include/chlists.h ****  */
  85:./lib/chibios/os/rt/include/chlists.h **** struct ch_priority_queue {
  86:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *next;      /**< @brief Next in the list/queue.     */
  87:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *prev;      /**< @brief Previous in the queue.      */
  88:./lib/chibios/os/rt/include/chlists.h ****   tprio_t               prio;
  89:./lib/chibios/os/rt/include/chlists.h **** };
  90:./lib/chibios/os/rt/include/chlists.h **** 
  91:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  92:./lib/chibios/os/rt/include/chlists.h **** /* Module macros.                                                            */
  93:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  94:./lib/chibios/os/rt/include/chlists.h **** 
  95:./lib/chibios/os/rt/include/chlists.h **** /**
  96:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Data part of a static queue object initializer.
  97:./lib/chibios/os/rt/include/chlists.h ****  * @details This macro should be used when statically initializing a
  98:./lib/chibios/os/rt/include/chlists.h ****  *          queue that is part of a bigger structure.
  99:./lib/chibios/os/rt/include/chlists.h ****  *
 100:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 101:./lib/chibios/os/rt/include/chlists.h ****  */
 102:./lib/chibios/os/rt/include/chlists.h **** #define _CH_QUEUE_DATA(name) {(ch_queue_t *)&name, (ch_queue_t *)&name}
 103:./lib/chibios/os/rt/include/chlists.h **** 
 104:./lib/chibios/os/rt/include/chlists.h **** /**
 105:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Static queue object initializer.
 106:./lib/chibios/os/rt/include/chlists.h ****  * @details Statically initialized queues require no explicit
 107:./lib/chibios/os/rt/include/chlists.h ****  *          initialization using @p queue_init().
 108:./lib/chibios/os/rt/include/chlists.h ****  *
 109:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 110:./lib/chibios/os/rt/include/chlists.h ****  */
 111:./lib/chibios/os/rt/include/chlists.h **** #define CH_QUEUE_DECL(name)                                                 \
 112:./lib/chibios/os/rt/include/chlists.h ****     ch_queue_t name = _CH_QUEUE_DATA(name)
 113:./lib/chibios/os/rt/include/chlists.h **** 
 114:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 115:./lib/chibios/os/rt/include/chlists.h **** /* External declarations.                                                    */
 116:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chlists.h **** 
 118:./lib/chibios/os/rt/include/chlists.h **** /* Early function prototypes required by the following headers.*/
 119:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 120:./lib/chibios/os/rt/include/chlists.h **** extern "C" {
 121:./lib/chibios/os/rt/include/chlists.h **** #endif
 122:./lib/chibios/os/rt/include/chlists.h **** 
 123:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 124:./lib/chibios/os/rt/include/chlists.h **** }
 125:./lib/chibios/os/rt/include/chlists.h **** #endif
 126:./lib/chibios/os/rt/include/chlists.h **** 
 127:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 128:./lib/chibios/os/rt/include/chlists.h **** /* Module inline functions.                                                  */
 129:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 130:./lib/chibios/os/rt/include/chlists.h **** 
 131:./lib/chibios/os/rt/include/chlists.h **** /**
 132:./lib/chibios/os/rt/include/chlists.h ****  * @brief   List initialization.
 133:./lib/chibios/os/rt/include/chlists.h ****  *
 134:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] lp       pointer to the list header
 135:./lib/chibios/os/rt/include/chlists.h ****  *
 136:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 137:./lib/chibios/os/rt/include/chlists.h ****  */
 138:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_init(ch_list_t *lp) {
 139:./lib/chibios/os/rt/include/chlists.h **** 
 140:./lib/chibios/os/rt/include/chlists.h ****   lp->next = lp;
 141:./lib/chibios/os/rt/include/chlists.h **** }
 142:./lib/chibios/os/rt/include/chlists.h **** 
 143:./lib/chibios/os/rt/include/chlists.h **** /**
 144:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is empty.
 145:./lib/chibios/os/rt/include/chlists.h ****  *
 146:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 147:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 148:./lib/chibios/os/rt/include/chlists.h ****  *
 149:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 150:./lib/chibios/os/rt/include/chlists.h ****  */
 151:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_isempty(ch_list_t *lp) {
 152:./lib/chibios/os/rt/include/chlists.h **** 
 153:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next == lp);
 154:./lib/chibios/os/rt/include/chlists.h **** }
 155:./lib/chibios/os/rt/include/chlists.h **** 
 156:./lib/chibios/os/rt/include/chlists.h **** /**
 157:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is not empty.
 158:./lib/chibios/os/rt/include/chlists.h ****  *
 159:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 160:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 161:./lib/chibios/os/rt/include/chlists.h ****  *
 162:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 163:./lib/chibios/os/rt/include/chlists.h ****  */
 164:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_notempty(ch_list_t *lp) {
 165:./lib/chibios/os/rt/include/chlists.h **** 
 166:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next != lp);
 167:./lib/chibios/os/rt/include/chlists.h **** }
 168:./lib/chibios/os/rt/include/chlists.h **** 
 169:./lib/chibios/os/rt/include/chlists.h **** /**
 170:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pushes an element on top of a stack list.
 171:./lib/chibios/os/rt/include/chlists.h ****  *
 172:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] p     the pointer to the element to be inserted in the list
 173:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp    the pointer to the list header
 174:./lib/chibios/os/rt/include/chlists.h ****  *
 175:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 176:./lib/chibios/os/rt/include/chlists.h ****  */
 177:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_push(ch_list_t *p, ch_list_t *lp) {
 178:./lib/chibios/os/rt/include/chlists.h **** 
 179:./lib/chibios/os/rt/include/chlists.h ****   p->next = lp->next;
 180:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p;
 181:./lib/chibios/os/rt/include/chlists.h **** }
 182:./lib/chibios/os/rt/include/chlists.h **** 
 183:./lib/chibios/os/rt/include/chlists.h **** /**
 184:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pops an element from the top of a stack list and returns it.
 185:./lib/chibios/os/rt/include/chlists.h ****  * @pre     The list must be non-empty before calling this function.
 186:./lib/chibios/os/rt/include/chlists.h ****  *
 187:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        the pointer to the list header
 188:./lib/chibios/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 189:./lib/chibios/os/rt/include/chlists.h ****  *
 190:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 191:./lib/chibios/os/rt/include/chlists.h ****  */
 192:./lib/chibios/os/rt/include/chlists.h **** static inline ch_list_t *ch_list_pop(ch_list_t *lp) {
 193:./lib/chibios/os/rt/include/chlists.h **** 
 194:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t *p = lp->next;
 195:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p->next;
 196:./lib/chibios/os/rt/include/chlists.h **** 
 197:./lib/chibios/os/rt/include/chlists.h ****   return p;
 198:./lib/chibios/os/rt/include/chlists.h **** }
 199:./lib/chibios/os/rt/include/chlists.h **** 
 200:./lib/chibios/os/rt/include/chlists.h **** /**
 201:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Queue initialization.
 202:./lib/chibios/os/rt/include/chlists.h ****  *
 203:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] qp       pointer to the queue header
 204:./lib/chibios/os/rt/include/chlists.h ****  *
 205:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 206:./lib/chibios/os/rt/include/chlists.h ****  */
 207:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_queue_init(ch_queue_t *qp) {
  52              		.loc 4 207 20 view .LVU9
  53              	.LBB228:
 208:./lib/chibios/os/rt/include/chlists.h **** 
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->next = qp;
  54              		.loc 4 209 3 view .LVU10
  55              	.LBE228:
  56              	.LBE227:
  57              	.LBE226:
  58              	.LBE225:
  59              	.LBE224:
  77:lib/chibios/os/hal/src/hal_buffers.c **** 
  60              		.loc 1 77 72 is_stmt 0 view .LVU11
  61 0000 30B5     		push	{r4, r5, lr}
  62              		.cfi_def_cfa_offset 12
  63              		.cfi_offset 4, -12
  64              		.cfi_offset 5, -8
  65              		.cfi_offset 14, -4
  77:lib/chibios/os/hal/src/hal_buffers.c **** 
  66              		.loc 1 77 72 view .LVU12
  67 0002 039C     		ldr	r4, [sp, #12]
  82:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->suspended = suspended;
  68              		.loc 1 82 19 view .LVU13
  69 0004 0172     		strb	r1, [r0, #8]
  83:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
  84:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = bp;
  85:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = bp;
  86:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->btop      = bp + ((size + sizeof (size_t)) * n);
  70              		.loc 1 86 33 view .LVU14
  71 0006 0433     		adds	r3, r3, #4
  72              	.LVL1:
  73              		.loc 1 86 24 view .LVU15
  74 0008 04FB0325 		mla	r5, r4, r3, r2
  87:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bsize     = size + sizeof (size_t);
  75              		.loc 1 87 19 view .LVU16
  76 000c C0E90653 		strd	r5, r3, [r0, #24]
  88:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bn        = n;
  89:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->buffers   = bp;
  90:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
  91:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
  92:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->notify    = infy;
  77              		.loc 1 92 19 view .LVU17
  78 0010 049B     		ldr	r3, [sp, #16]
  79              	.LVL2:
  80              		.loc 1 92 19 view .LVU18
  81 0012 0363     		str	r3, [r0, #48]
  83:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = bp;
  82              		.loc 1 83 19 view .LVU19
  83 0014 0021     		movs	r1, #0
  84              	.LVL3:
  93:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->link      = link;
  85              		.loc 1 93 19 view .LVU20
  86 0016 059B     		ldr	r3, [sp, #20]
  83:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = bp;
  87              		.loc 1 83 19 view .LVU21
  88 0018 C160     		str	r1, [r0, #12]
  89              	.LBB233:
  90              	.LBB232:
  91              	.LBB231:
  92              	.LBB230:
  93              	.LBB229:
 210:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
  94              		.loc 4 210 12 view .LVU22
  95 001a C0E90000 		strd	r0, r0, [r0]
  96              	.LVL4:
  97              		.loc 4 210 12 view .LVU23
  98              	.LBE229:
  99              	.LBE230:
 100              	.LBE231:
 101              	.LBE232:
 102              	.LBE233:
  82:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
 103              		.loc 1 82 3 is_stmt 1 view .LVU24
  83:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = bp;
 104              		.loc 1 83 3 view .LVU25
  84:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = bp;
 105              		.loc 1 84 3 view .LVU26
  85:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->btop      = bp + ((size + sizeof (size_t)) * n);
 106              		.loc 1 85 19 is_stmt 0 view .LVU27
 107 001e C0E90422 		strd	r2, r2, [r0, #16]
  86:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bsize     = size + sizeof (size_t);
 108              		.loc 1 86 3 is_stmt 1 view .LVU28
  88:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->buffers   = bp;
 109              		.loc 1 88 3 view .LVU29
  89:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
 110              		.loc 1 89 19 is_stmt 0 view .LVU30
 111 0022 C0E90842 		strd	r4, r2, [r0, #32]
  90:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
 112              		.loc 1 90 3 is_stmt 1 view .LVU31
  91:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->notify    = infy;
 113              		.loc 1 91 19 is_stmt 0 view .LVU32
 114 0026 C0E90A11 		strd	r1, r1, [r0, #40]
  92:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->link      = link;
 115              		.loc 1 92 3 is_stmt 1 view .LVU33
 116              		.loc 1 93 3 view .LVU34
 117              		.loc 1 93 19 is_stmt 0 view .LVU35
 118 002a 4363     		str	r3, [r0, #52]
  94:lib/chibios/os/hal/src/hal_buffers.c **** }
 119              		.loc 1 94 1 view .LVU36
 120 002c 30BD     		pop	{r4, r5, pc}
 121              		.loc 1 94 1 view .LVU37
 122              		.cfi_endproc
 123              	.LFE328:
 125              		.section	.text.ibqResetI,"ax",%progbits
 126              		.align	1
 127              		.global	ibqResetI
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	ibqResetI:
 133              	.LVL5:
 134              	.LFB329:
  95:lib/chibios/os/hal/src/hal_buffers.c **** 
  96:lib/chibios/os/hal/src/hal_buffers.c **** /**
  97:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Resets an input buffers queue.
  98:lib/chibios/os/hal/src/hal_buffers.c ****  * @details All the data in the input buffers queue is erased and lost, any
  99:lib/chibios/os/hal/src/hal_buffers.c ****  *          waiting thread is resumed with status @p MSG_RESET.
 100:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    A reset operation can be used by a low level driver in order to
 101:lib/chibios/os/hal/src/hal_buffers.c ****  *          obtain immediate attention from the high level layers.
 102:lib/chibios/os/hal/src/hal_buffers.c ****  *
 103:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 104:lib/chibios/os/hal/src/hal_buffers.c ****  *
 105:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 106:lib/chibios/os/hal/src/hal_buffers.c ****  */
 107:lib/chibios/os/hal/src/hal_buffers.c **** void ibqResetI(input_buffers_queue_t *ibqp) {
 135              		.loc 1 107 45 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 108:lib/chibios/os/hal/src/hal_buffers.c **** 
 109:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 140              		.loc 1 109 23 view .LVU39
 110:lib/chibios/os/hal/src/hal_buffers.c **** 
 111:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
 141              		.loc 1 111 3 view .LVU40
 112:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = ibqp->buffers;
 142              		.loc 1 112 25 is_stmt 0 view .LVU41
 143 0000 416A     		ldr	r1, [r0, #36]
 111:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = ibqp->buffers;
 144              		.loc 1 111 19 view .LVU42
 145 0002 0022     		movs	r2, #0
 113:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = ibqp->buffers;
 146              		.loc 1 113 19 view .LVU43
 147 0004 C0E90411 		strd	r1, r1, [r0, #16]
 114:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
 115:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
 148              		.loc 1 115 19 view .LVU44
 149 0008 C0E90A22 		strd	r2, r2, [r0, #40]
 111:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = ibqp->buffers;
 150              		.loc 1 111 19 view .LVU45
 151 000c C260     		str	r2, [r0, #12]
 112:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = ibqp->buffers;
 152              		.loc 1 112 3 is_stmt 1 view .LVU46
 114:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
 153              		.loc 1 114 3 view .LVU47
 116:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadDequeueAllI(&ibqp->waiting, MSG_RESET);
 154              		.loc 1 116 3 view .LVU48
 155              	.LVL6:
 156              	.LBB234:
 157              	.LBI234:
 867:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 868:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 869:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 870:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enqueues the caller thread.
 871:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 872:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          dequeued or the specified timeouts expires.
 873:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 874:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 875:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 876:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 877:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 878:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 879:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 880:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 881:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 882:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 883:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 884:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 885:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 886:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      specified timeout or if the function has been
 887:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 888:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      specification.
 889:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 890:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 891:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 893:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 894:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 896:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 897:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 898:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 899:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 900:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 901:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 902:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 903:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 904:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 905:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 906:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 907:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdDequeueNextI(tqp, msg);
 909:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 910:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 911:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 912:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 913:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 914:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 915:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 916:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 917:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 918:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 919:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 158              		.loc 2 919 20 view .LVU49
 159              	.LBB235:
 920:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdDequeueAllI(tqp, msg);
 160              		.loc 2 921 3 view .LVU50
 161 000e 6FF00101 		mvn	r1, #1
 162 0012 FFF7FEBF 		b	chThdDequeueAllI
 163              	.LVL7:
 164              		.loc 2 921 3 is_stmt 0 view .LVU51
 165              	.LBE235:
 166              	.LBE234:
 167              		.cfi_endproc
 168              	.LFE329:
 170              		.section	.text.ibqGetEmptyBufferI,"ax",%progbits
 171              		.align	1
 172              		.global	ibqGetEmptyBufferI
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	ibqGetEmptyBufferI:
 178              	.LVL8:
 179              	.LFB330:
 117:lib/chibios/os/hal/src/hal_buffers.c **** }
 118:lib/chibios/os/hal/src/hal_buffers.c **** 
 119:lib/chibios/os/hal/src/hal_buffers.c **** /**
 120:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 121:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always returns the same buffer if called repeatedly.
 122:lib/chibios/os/hal/src/hal_buffers.c ****  *
 123:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 124:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              A pointer to the next buffer to be filled.
 125:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval NULL         if the queue is full.
 126:lib/chibios/os/hal/src/hal_buffers.c ****  *
 127:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 128:lib/chibios/os/hal/src/hal_buffers.c ****  */
 129:lib/chibios/os/hal/src/hal_buffers.c **** uint8_t *ibqGetEmptyBufferI(input_buffers_queue_t *ibqp) {
 180              		.loc 1 129 58 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 130:lib/chibios/os/hal/src/hal_buffers.c **** 
 131:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 185              		.loc 1 131 23 view .LVU53
 132:lib/chibios/os/hal/src/hal_buffers.c **** 
 133:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqIsFullI(ibqp)) {
 186              		.loc 1 133 3 view .LVU54
 187              		.loc 1 133 7 is_stmt 0 view .LVU55
 188 0000 D0E90432 		ldrd	r3, r2, [r0, #16]
 189 0004 9342     		cmp	r3, r2
 190 0006 01D1     		bne	.L4
 191              		.loc 1 133 7 discriminator 1 view .LVU56
 192 0008 C268     		ldr	r2, [r0, #12]
 193 000a 0AB9     		cbnz	r2, .L6
 194              	.L4:
 134:lib/chibios/os/hal/src/hal_buffers.c ****     return NULL;
 135:lib/chibios/os/hal/src/hal_buffers.c ****   }
 136:lib/chibios/os/hal/src/hal_buffers.c **** 
 137:lib/chibios/os/hal/src/hal_buffers.c ****   return ibqp->bwrptr + sizeof (size_t);
 195              		.loc 1 137 3 is_stmt 1 view .LVU57
 196              		.loc 1 137 23 is_stmt 0 view .LVU58
 197 000c 181D     		adds	r0, r3, #4
 198              	.LVL9:
 199              		.loc 1 137 23 view .LVU59
 200 000e 7047     		bx	lr
 201              	.LVL10:
 202              	.L6:
 134:lib/chibios/os/hal/src/hal_buffers.c ****     return NULL;
 203              		.loc 1 134 12 view .LVU60
 204 0010 0020     		movs	r0, #0
 205              	.LVL11:
 138:lib/chibios/os/hal/src/hal_buffers.c **** }
 206              		.loc 1 138 1 view .LVU61
 207 0012 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE330:
 211              		.section	.text.ibqPostFullBufferI,"ax",%progbits
 212              		.align	1
 213              		.global	ibqPostFullBufferI
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	ibqPostFullBufferI:
 219              	.LVL12:
 220              	.LFB331:
 139:lib/chibios/os/hal/src/hal_buffers.c **** 
 140:lib/chibios/os/hal/src/hal_buffers.c **** /**
 141:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 142:lib/chibios/os/hal/src/hal_buffers.c ****  *
 143:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 144:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 145:lib/chibios/os/hal/src/hal_buffers.c ****  *
 146:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 147:lib/chibios/os/hal/src/hal_buffers.c ****  */
 148:lib/chibios/os/hal/src/hal_buffers.c **** void ibqPostFullBufferI(input_buffers_queue_t *ibqp, size_t size) {
 221              		.loc 1 148 67 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 149:lib/chibios/os/hal/src/hal_buffers.c **** 
 150:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 226              		.loc 1 150 23 view .LVU63
 151:lib/chibios/os/hal/src/hal_buffers.c **** 
 152:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (ibqp->bsize - sizeof (size_t))));
 227              		.loc 1 152 3 view .LVU64
 228              		.loc 1 152 3 view .LVU65
 229              		.loc 1 152 3 view .LVU66
 153:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsFullI(ibqp), "buffers queue full");
 230              		.loc 1 153 3 view .LVU67
 231              		.loc 1 153 3 view .LVU68
 232              		.loc 1 153 3 view .LVU69
 154:lib/chibios/os/hal/src/hal_buffers.c **** 
 155:lib/chibios/os/hal/src/hal_buffers.c ****   /* Writing size field in the buffer.*/
 156:lib/chibios/os/hal/src/hal_buffers.c ****   *((size_t *)ibqp->bwrptr) = size;
 233              		.loc 1 156 3 view .LVU70
 234              		.loc 1 156 19 is_stmt 0 view .LVU71
 235 0000 0369     		ldr	r3, [r0, #16]
 236              		.loc 1 156 29 view .LVU72
 237 0002 1960     		str	r1, [r3]
 157:lib/chibios/os/hal/src/hal_buffers.c **** 
 158:lib/chibios/os/hal/src/hal_buffers.c ****   /* Posting the buffer in the queue.*/
 159:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter++;
 238              		.loc 1 159 3 is_stmt 1 view .LVU73
 239              		.loc 1 159 7 is_stmt 0 view .LVU74
 240 0004 C268     		ldr	r2, [r0, #12]
 241              		.loc 1 159 17 view .LVU75
 242 0006 0132     		adds	r2, r2, #1
 243 0008 C260     		str	r2, [r0, #12]
 160:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr += ibqp->bsize;
 244              		.loc 1 160 3 is_stmt 1 view .LVU76
 245              		.loc 1 160 16 is_stmt 0 view .LVU77
 246 000a C269     		ldr	r2, [r0, #28]
 247 000c 1344     		add	r3, r3, r2
 161:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->bwrptr >= ibqp->btop) {
 248              		.loc 1 161 6 view .LVU78
 249 000e 8269     		ldr	r2, [r0, #24]
 160:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr += ibqp->bsize;
 250              		.loc 1 160 16 view .LVU79
 251 0010 0361     		str	r3, [r0, #16]
 252              		.loc 1 161 3 is_stmt 1 view .LVU80
 253              		.loc 1 161 6 is_stmt 0 view .LVU81
 254 0012 9342     		cmp	r3, r2
 162:lib/chibios/os/hal/src/hal_buffers.c ****     ibqp->bwrptr = ibqp->buffers;
 255              		.loc 1 162 5 is_stmt 1 view .LVU82
 256              		.loc 1 162 18 is_stmt 0 view .LVU83
 257 0014 24BF     		itt	cs
 258 0016 436A     		ldrcs	r3, [r0, #36]
 259 0018 0361     		strcs	r3, [r0, #16]
 163:lib/chibios/os/hal/src/hal_buffers.c ****   }
 164:lib/chibios/os/hal/src/hal_buffers.c **** 
 165:lib/chibios/os/hal/src/hal_buffers.c ****   /* Waking up one waiting thread, if any.*/
 166:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadDequeueNextI(&ibqp->waiting, MSG_OK);
 260              		.loc 1 166 3 is_stmt 1 view .LVU84
 261              	.LVL13:
 262              	.LBB236:
 263              	.LBI236:
 906:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 264              		.loc 2 906 20 view .LVU85
 265              	.LBB237:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 266              		.loc 2 908 3 view .LVU86
 267 001a 0021     		movs	r1, #0
 268              	.LVL14:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 269              		.loc 2 908 3 is_stmt 0 view .LVU87
 270 001c FFF7FEBF 		b	chThdDequeueNextI
 271              	.LVL15:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 272              		.loc 2 908 3 view .LVU88
 273              	.LBE237:
 274              	.LBE236:
 275              		.cfi_endproc
 276              	.LFE331:
 278              		.section	.text.ibqGetFullBufferTimeoutS,"ax",%progbits
 279              		.align	1
 280              		.global	ibqGetFullBufferTimeoutS
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	ibqGetFullBufferTimeoutS:
 286              	.LVL16:
 287              	.LFB333:
 167:lib/chibios/os/hal/src/hal_buffers.c **** }
 168:lib/chibios/os/hal/src/hal_buffers.c **** 
 169:lib/chibios/os/hal/src/hal_buffers.c **** /**
 170:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next filled buffer from the queue.
 171:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 172:lib/chibios/os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 173:lib/chibios/os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 174:lib/chibios/os/hal/src/hal_buffers.c ****  *          is empty.
 175:lib/chibios/os/hal/src/hal_buffers.c ****  *
 176:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 177:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 178:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 179:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 180:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 181:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 182:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The operation status.
 183:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 184:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 185:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 186:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 187:lib/chibios/os/hal/src/hal_buffers.c ****  *
 188:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 189:lib/chibios/os/hal/src/hal_buffers.c ****  */
 190:lib/chibios/os/hal/src/hal_buffers.c **** msg_t ibqGetFullBufferTimeout(input_buffers_queue_t *ibqp,
 191:lib/chibios/os/hal/src/hal_buffers.c ****                               sysinterval_t timeout) {
 192:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 193:lib/chibios/os/hal/src/hal_buffers.c **** 
 194:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 195:lib/chibios/os/hal/src/hal_buffers.c ****   msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 196:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 197:lib/chibios/os/hal/src/hal_buffers.c **** 
 198:lib/chibios/os/hal/src/hal_buffers.c ****   return msg;
 199:lib/chibios/os/hal/src/hal_buffers.c **** }
 200:lib/chibios/os/hal/src/hal_buffers.c **** 
 201:lib/chibios/os/hal/src/hal_buffers.c ****   /**
 202:lib/chibios/os/hal/src/hal_buffers.c ****    * @brief   Gets the next filled buffer from the queue.
 203:lib/chibios/os/hal/src/hal_buffers.c ****    * @note    The function always acquires the same buffer if called repeatedly.
 204:lib/chibios/os/hal/src/hal_buffers.c ****    * @post    After calling the function the fields @p ptr and @p top are set
 205:lib/chibios/os/hal/src/hal_buffers.c ****    *          at beginning and end of the buffer data or @p NULL if the queue
 206:lib/chibios/os/hal/src/hal_buffers.c ****    *          is empty.
 207:lib/chibios/os/hal/src/hal_buffers.c ****    *
 208:lib/chibios/os/hal/src/hal_buffers.c ****    * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 209:lib/chibios/os/hal/src/hal_buffers.c ****    * @param[in] timeout   the number of ticks before the operation timeouts,
 210:lib/chibios/os/hal/src/hal_buffers.c ****    *                      the following special values are allowed:
 211:lib/chibios/os/hal/src/hal_buffers.c ****    *                      - @a TIME_IMMEDIATE immediate timeout.
 212:lib/chibios/os/hal/src/hal_buffers.c ****    *                      - @a TIME_INFINITE no timeout.
 213:lib/chibios/os/hal/src/hal_buffers.c ****    *                      .
 214:lib/chibios/os/hal/src/hal_buffers.c ****    * @return              The operation status.
 215:lib/chibios/os/hal/src/hal_buffers.c ****    * @retval MSG_OK       if a buffer has been acquired.
 216:lib/chibios/os/hal/src/hal_buffers.c ****    * @retval MSG_TIMEOUT  if the specified time expired.
 217:lib/chibios/os/hal/src/hal_buffers.c ****    * @retval MSG_RESET    if the queue has been reset or has been put in
 218:lib/chibios/os/hal/src/hal_buffers.c ****    *                      suspended state.
 219:lib/chibios/os/hal/src/hal_buffers.c ****    *
 220:lib/chibios/os/hal/src/hal_buffers.c ****    * @sclass
 221:lib/chibios/os/hal/src/hal_buffers.c ****    */
 222:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t ibqGetFullBufferTimeoutS(input_buffers_queue_t *ibqp,
 223:lib/chibios/os/hal/src/hal_buffers.c ****                                  sysinterval_t timeout) {
 288              		.loc 1 223 57 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		.loc 1 223 57 is_stmt 0 view .LVU90
 293 0000 38B5     		push	{r3, r4, r5, lr}
 294              		.cfi_def_cfa_offset 16
 295              		.cfi_offset 3, -16
 296              		.cfi_offset 4, -12
 297              		.cfi_offset 5, -8
 298              		.cfi_offset 14, -4
 299 0002 0446     		mov	r4, r0
 300 0004 0D46     		mov	r5, r1
 224:lib/chibios/os/hal/src/hal_buffers.c **** 
 225:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 301              		.loc 1 225 23 is_stmt 1 view .LVU91
 226:lib/chibios/os/hal/src/hal_buffers.c **** 
 227:lib/chibios/os/hal/src/hal_buffers.c ****   while (ibqIsEmptyI(ibqp)) {
 302              		.loc 1 227 3 view .LVU92
 303              	.LVL17:
 304              	.L10:
 305              		.loc 1 227 10 view .LVU93
 306 0006 E368     		ldr	r3, [r4, #12]
 307 0008 3BB1     		cbz	r3, .L12
 308              	.LVL18:
 309              	.LBB246:
 310              	.LBI246:
 222:lib/chibios/os/hal/src/hal_buffers.c ****                                  sysinterval_t timeout) {
 311              		.loc 1 222 9 view .LVU94
 312              	.LBB247:
 228:lib/chibios/os/hal/src/hal_buffers.c ****     if (ibqp->suspended) {
 229:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 230:lib/chibios/os/hal/src/hal_buffers.c ****     }
 231:lib/chibios/os/hal/src/hal_buffers.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&ibqp->waiting, timeout);
 232:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 233:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 234:lib/chibios/os/hal/src/hal_buffers.c ****     }
 235:lib/chibios/os/hal/src/hal_buffers.c ****   }
 236:lib/chibios/os/hal/src/hal_buffers.c **** 
 237:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "still empty");
 313              		.loc 1 237 3 view .LVU95
 314              		.loc 1 237 3 view .LVU96
 315              		.loc 1 237 3 view .LVU97
 238:lib/chibios/os/hal/src/hal_buffers.c **** 
 239:lib/chibios/os/hal/src/hal_buffers.c ****   /* Setting up the "current" buffer and its boundary.*/
 240:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr = ibqp->brdptr + sizeof (size_t);
 316              		.loc 1 240 3 view .LVU98
 317              		.loc 1 240 19 is_stmt 0 view .LVU99
 318 000a 6269     		ldr	r2, [r4, #20]
 319              		.loc 1 240 28 view .LVU100
 320 000c 131D     		adds	r3, r2, #4
 241:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top = ibqp->ptr + *((size_t *)ibqp->brdptr);
 321              		.loc 1 241 25 view .LVU101
 322 000e 1268     		ldr	r2, [r2]
 240:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top = ibqp->ptr + *((size_t *)ibqp->brdptr);
 323              		.loc 1 240 13 view .LVU102
 324 0010 A362     		str	r3, [r4, #40]
 325              		.loc 1 241 3 is_stmt 1 view .LVU103
 326              		.loc 1 241 25 is_stmt 0 view .LVU104
 327 0012 1344     		add	r3, r3, r2
 328              		.loc 1 241 13 view .LVU105
 329 0014 E362     		str	r3, [r4, #44]
 242:lib/chibios/os/hal/src/hal_buffers.c **** 
 243:lib/chibios/os/hal/src/hal_buffers.c ****   return MSG_OK;
 330              		.loc 1 243 3 is_stmt 1 view .LVU106
 331              	.LVL19:
 241:lib/chibios/os/hal/src/hal_buffers.c **** 
 332              		.loc 1 241 13 is_stmt 0 view .LVU107
 333 0016 0020     		movs	r0, #0
 334 0018 07E0     		b	.L9
 335              	.L12:
 241:lib/chibios/os/hal/src/hal_buffers.c **** 
 336              		.loc 1 241 13 view .LVU108
 337              	.LBE247:
 338              	.LBE246:
 339              	.LBB248:
 228:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 340              		.loc 1 228 5 is_stmt 1 view .LVU109
 228:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 341              		.loc 1 228 8 is_stmt 0 view .LVU110
 342 001a 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 343 001c 33B9     		cbnz	r3, .L13
 231:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 344              		.loc 1 231 5 is_stmt 1 view .LVU111
 345              	.LVL20:
 346              	.LBB249:
 347              	.LBI249:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 348              		.loc 2 892 21 view .LVU112
 349              	.LBB250:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 350              		.loc 2 895 3 view .LVU113
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 351              		.loc 2 895 10 is_stmt 0 view .LVU114
 352 001e 2946     		mov	r1, r5
 353 0020 2046     		mov	r0, r4
 354 0022 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 355              	.LVL21:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 356              		.loc 2 895 10 view .LVU115
 357              	.LBE250:
 358              	.LBE249:
 232:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 359              		.loc 1 232 5 is_stmt 1 view .LVU116
 232:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 360              		.loc 1 232 8 is_stmt 0 view .LVU117
 361 0026 0028     		cmp	r0, #0
 232:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 362              		.loc 1 232 8 view .LVU118
 363 0028 EDDA     		bge	.L10
 364              	.LVL22:
 365              	.L9:
 232:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 366              		.loc 1 232 8 view .LVU119
 367              	.LBE248:
 244:lib/chibios/os/hal/src/hal_buffers.c **** }
 368              		.loc 1 244 1 view .LVU120
 369 002a 38BD     		pop	{r3, r4, r5, pc}
 370              	.LVL23:
 371              	.L13:
 372              	.LBB251:
 229:lib/chibios/os/hal/src/hal_buffers.c ****     }
 373              		.loc 1 229 14 view .LVU121
 374 002c 6FF00100 		mvn	r0, #1
 375 0030 FBE7     		b	.L9
 376              	.LBE251:
 377              		.cfi_endproc
 378              	.LFE333:
 380              		.section	.text.ibqGetFullBufferTimeout,"ax",%progbits
 381              		.align	1
 382              		.global	ibqGetFullBufferTimeout
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 387              	ibqGetFullBufferTimeout:
 388              	.LVL24:
 389              	.LFB332:
 191:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 390              		.loc 1 191 54 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 192:lib/chibios/os/hal/src/hal_buffers.c **** 
 394              		.loc 1 192 3 view .LVU123
 194:lib/chibios/os/hal/src/hal_buffers.c ****   msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 395              		.loc 1 194 3 view .LVU124
 396              	.LBB252:
 397              	.LBI252:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 398              		.loc 2 573 20 view .LVU125
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 399              		.loc 2 575 3 view .LVU126
 400              	.LBB253:
 401              	.LBI253:
 402              		.file 5 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 403              		.loc 5 355 20 view .LVU127
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 404              		.loc 5 357 3 view .LVU128
 405              	.LBB254:
 406              	.LBI254:
 407              		.file 6 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 408              		.loc 6 669 27 view .LVU129
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 409              		.loc 6 677 3 view .LVU130
 410              	.LBB255:
 411              	.LBI255:
 412              		.file 7 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 413              		.loc 7 491 27 view .LVU131
 414              	.LBB256:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 415              		.loc 7 493 3 view .LVU132
 416              	.LBE256:
 417              	.LBE255:
 418              	.LBE254:
 419              	.LBE253:
 420              	.LBE252:
 191:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 421              		.loc 1 191 54 is_stmt 0 view .LVU133
 422 0000 08B5     		push	{r3, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
 426              	.LBB261:
 427              	.LBB260:
 428              	.LBB259:
 429              	.LBB258:
 430              	.LBB257:
 431              		.loc 7 493 3 view .LVU134
 432 0002 2023     		movs	r3, #32
 433              		.syntax unified
 434              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 435 0004 83F31188 		MSR basepri, r3
 436              	@ 0 "" 2
 437              	.LVL25:
 438              		.loc 7 493 3 view .LVU135
 439              		.thumb
 440              		.syntax unified
 441              	.LBE257:
 442              	.LBE258:
 443              	.LBE259:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 444              		.loc 5 358 34 is_stmt 1 view .LVU136
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 445              		.loc 5 359 20 view .LVU137
 446              	.LBE260:
 447              	.LBE261:
 195:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 448              		.loc 1 195 3 view .LVU138
 195:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 449              		.loc 1 195 9 is_stmt 0 view .LVU139
 450 0008 FFF7FEFF 		bl	ibqGetFullBufferTimeoutS
 451              	.LVL26:
 196:lib/chibios/os/hal/src/hal_buffers.c **** 
 452              		.loc 1 196 3 is_stmt 1 view .LVU140
 453              	.LBB262:
 454              	.LBI262:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 455              		.loc 2 584 20 view .LVU141
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 456              		.loc 2 586 3 view .LVU142
 457              	.LBB263:
 458              	.LBI263:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 459              		.loc 5 367 20 view .LVU143
 460              	.LBB264:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 461              		.loc 5 369 22 view .LVU144
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 462              		.loc 5 370 33 view .LVU145
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 463              		.loc 5 376 3 view .LVU146
 464              		.loc 5 376 3 view .LVU147
 465              		.loc 5 376 3 view .LVU148
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 466              		.loc 5 380 3 view .LVU149
 467              	.LBB265:
 468              	.LBI265:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 469              		.loc 6 693 27 view .LVU150
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 470              		.loc 6 696 3 view .LVU151
 471              	.LBB266:
 472              	.LBI266:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 473              		.loc 7 491 27 view .LVU152
 474              	.LBB267:
 475              		.loc 7 493 3 view .LVU153
 476 000c 0023     		movs	r3, #0
 477              		.syntax unified
 478              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 479 000e 83F31188 		MSR basepri, r3
 480              	@ 0 "" 2
 481              	.LVL27:
 482              		.loc 7 493 3 is_stmt 0 view .LVU154
 483              		.thumb
 484              		.syntax unified
 485              	.LBE267:
 486              	.LBE266:
 487              	.LBE265:
 488              	.LBE264:
 489              	.LBE263:
 490              	.LBE262:
 198:lib/chibios/os/hal/src/hal_buffers.c **** }
 491              		.loc 1 198 3 is_stmt 1 view .LVU155
 199:lib/chibios/os/hal/src/hal_buffers.c **** 
 492              		.loc 1 199 1 is_stmt 0 view .LVU156
 493 0012 08BD     		pop	{r3, pc}
 494              		.cfi_endproc
 495              	.LFE332:
 497              		.section	.text.ibqReleaseEmptyBufferS,"ax",%progbits
 498              		.align	1
 499              		.global	ibqReleaseEmptyBufferS
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 504              	ibqReleaseEmptyBufferS:
 505              	.LVL28:
 506              	.LFB335:
 245:lib/chibios/os/hal/src/hal_buffers.c **** 
 246:lib/chibios/os/hal/src/hal_buffers.c **** /**
 247:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Releases the buffer back in the queue.
 248:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 249:lib/chibios/os/hal/src/hal_buffers.c ****  *
 250:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 251:lib/chibios/os/hal/src/hal_buffers.c ****  *
 252:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 253:lib/chibios/os/hal/src/hal_buffers.c ****  */
 254:lib/chibios/os/hal/src/hal_buffers.c **** void ibqReleaseEmptyBuffer(input_buffers_queue_t *ibqp) {
 255:lib/chibios/os/hal/src/hal_buffers.c **** 
 256:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 257:lib/chibios/os/hal/src/hal_buffers.c ****   ibqReleaseEmptyBufferS(ibqp);
 258:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 259:lib/chibios/os/hal/src/hal_buffers.c **** }
 260:lib/chibios/os/hal/src/hal_buffers.c **** 
 261:lib/chibios/os/hal/src/hal_buffers.c ****   /**
 262:lib/chibios/os/hal/src/hal_buffers.c ****    * @brief   Releases the buffer back in the queue.
 263:lib/chibios/os/hal/src/hal_buffers.c ****    * @note    The object callback is called after releasing the buffer.
 264:lib/chibios/os/hal/src/hal_buffers.c ****    *
 265:lib/chibios/os/hal/src/hal_buffers.c ****    * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 266:lib/chibios/os/hal/src/hal_buffers.c ****    *
 267:lib/chibios/os/hal/src/hal_buffers.c ****    * @sclass
 268:lib/chibios/os/hal/src/hal_buffers.c ****    */
 269:lib/chibios/os/hal/src/hal_buffers.c ****   void ibqReleaseEmptyBufferS(input_buffers_queue_t *ibqp) {
 507              		.loc 1 269 60 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 270:lib/chibios/os/hal/src/hal_buffers.c **** 
 271:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 512              		.loc 1 271 23 view .LVU158
 272:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "buffers queue empty");
 513              		.loc 1 272 3 view .LVU159
 514              		.loc 1 272 3 view .LVU160
 515              		.loc 1 272 3 view .LVU161
 273:lib/chibios/os/hal/src/hal_buffers.c **** 
 274:lib/chibios/os/hal/src/hal_buffers.c ****   /* Freeing a buffer slot in the queue.*/
 275:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter--;
 516              		.loc 1 275 3 view .LVU162
 517              		.loc 1 275 7 is_stmt 0 view .LVU163
 518 0000 C368     		ldr	r3, [r0, #12]
 276:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 519              		.loc 1 276 16 view .LVU164
 520 0002 C269     		ldr	r2, [r0, #28]
 275:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 521              		.loc 1 275 17 view .LVU165
 522 0004 013B     		subs	r3, r3, #1
 523 0006 C360     		str	r3, [r0, #12]
 524              		.loc 1 276 3 is_stmt 1 view .LVU166
 525              		.loc 1 276 16 is_stmt 0 view .LVU167
 526 0008 4369     		ldr	r3, [r0, #20]
 527 000a 1344     		add	r3, r3, r2
 277:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 528              		.loc 1 277 6 view .LVU168
 529 000c 8269     		ldr	r2, [r0, #24]
 276:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 530              		.loc 1 276 16 view .LVU169
 531 000e 4361     		str	r3, [r0, #20]
 532              		.loc 1 277 3 is_stmt 1 view .LVU170
 533              		.loc 1 277 6 is_stmt 0 view .LVU171
 534 0010 9342     		cmp	r3, r2
 278:lib/chibios/os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 535              		.loc 1 278 5 is_stmt 1 view .LVU172
 536              		.loc 1 278 18 is_stmt 0 view .LVU173
 537 0012 24BF     		itt	cs
 538 0014 436A     		ldrcs	r3, [r0, #36]
 539 0016 4361     		strcs	r3, [r0, #20]
 279:lib/chibios/os/hal/src/hal_buffers.c ****   }
 280:lib/chibios/os/hal/src/hal_buffers.c **** 
 281:lib/chibios/os/hal/src/hal_buffers.c ****   /* No "current" buffer.*/
 282:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr = NULL;
 540              		.loc 1 282 3 is_stmt 1 view .LVU174
 541              		.loc 1 282 13 is_stmt 0 view .LVU175
 542 0018 0023     		movs	r3, #0
 543 001a 8362     		str	r3, [r0, #40]
 283:lib/chibios/os/hal/src/hal_buffers.c **** 
 284:lib/chibios/os/hal/src/hal_buffers.c ****   /* Notifying the buffer release.*/
 285:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->notify != NULL) {
 544              		.loc 1 285 3 is_stmt 1 view .LVU176
 545              		.loc 1 285 11 is_stmt 0 view .LVU177
 546 001c 036B     		ldr	r3, [r0, #48]
 547              		.loc 1 285 6 view .LVU178
 548 001e 03B1     		cbz	r3, .L15
 286:lib/chibios/os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 549              		.loc 1 286 5 is_stmt 1 view .LVU179
 550 0020 1847     		bx	r3	@ indirect register sibling call
 551              	.LVL29:
 552              	.L15:
 287:lib/chibios/os/hal/src/hal_buffers.c ****   }
 288:lib/chibios/os/hal/src/hal_buffers.c **** }
 553              		.loc 1 288 1 is_stmt 0 view .LVU180
 554 0022 7047     		bx	lr
 555              		.cfi_endproc
 556              	.LFE335:
 558              		.section	.text.ibqReleaseEmptyBuffer,"ax",%progbits
 559              		.align	1
 560              		.global	ibqReleaseEmptyBuffer
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	ibqReleaseEmptyBuffer:
 566              	.LVL30:
 567              	.LFB334:
 254:lib/chibios/os/hal/src/hal_buffers.c **** 
 568              		.loc 1 254 57 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 256:lib/chibios/os/hal/src/hal_buffers.c ****   ibqReleaseEmptyBufferS(ibqp);
 572              		.loc 1 256 3 view .LVU182
 573              	.LBB268:
 574              	.LBI268:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575              		.loc 2 573 20 view .LVU183
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 576              		.loc 2 575 3 view .LVU184
 577              	.LBB269:
 578              	.LBI269:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 579              		.loc 5 355 20 view .LVU185
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 580              		.loc 5 357 3 view .LVU186
 581              	.LBB270:
 582              	.LBI270:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 583              		.loc 6 669 27 view .LVU187
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 584              		.loc 6 677 3 view .LVU188
 585              	.LBB271:
 586              	.LBI271:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 587              		.loc 7 491 27 view .LVU189
 588              	.LBB272:
 589              		.loc 7 493 3 view .LVU190
 590              	.LBE272:
 591              	.LBE271:
 592              	.LBE270:
 593              	.LBE269:
 594              	.LBE268:
 254:lib/chibios/os/hal/src/hal_buffers.c **** 
 595              		.loc 1 254 57 is_stmt 0 view .LVU191
 596 0000 08B5     		push	{r3, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 3, -8
 599              		.cfi_offset 14, -4
 600              	.LBB277:
 601              	.LBB276:
 602              	.LBB275:
 603              	.LBB274:
 604              	.LBB273:
 605              		.loc 7 493 3 view .LVU192
 606 0002 2023     		movs	r3, #32
 607              		.syntax unified
 608              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 609 0004 83F31188 		MSR basepri, r3
 610              	@ 0 "" 2
 611              	.LVL31:
 612              		.loc 7 493 3 view .LVU193
 613              		.thumb
 614              		.syntax unified
 615              	.LBE273:
 616              	.LBE274:
 617              	.LBE275:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 618              		.loc 5 358 34 is_stmt 1 view .LVU194
 359:./lib/chibios/os/rt/include/chsys.h **** }
 619              		.loc 5 359 20 view .LVU195
 620              	.LBE276:
 621              	.LBE277:
 257:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 622              		.loc 1 257 3 view .LVU196
 623 0008 FFF7FEFF 		bl	ibqReleaseEmptyBufferS
 624              	.LVL32:
 258:lib/chibios/os/hal/src/hal_buffers.c **** }
 625              		.loc 1 258 3 view .LVU197
 626              	.LBB278:
 627              	.LBI278:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 628              		.loc 2 584 20 view .LVU198
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 629              		.loc 2 586 3 view .LVU199
 630              	.LBB279:
 631              	.LBI279:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 632              		.loc 5 367 20 view .LVU200
 633              	.LBB280:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 634              		.loc 5 369 22 view .LVU201
 370:./lib/chibios/os/rt/include/chsys.h **** 
 635              		.loc 5 370 33 view .LVU202
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 636              		.loc 5 376 3 view .LVU203
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 637              		.loc 5 376 3 view .LVU204
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 638              		.loc 5 376 3 view .LVU205
 639              		.loc 5 380 3 view .LVU206
 640              	.LBB281:
 641              	.LBI281:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 642              		.loc 6 693 27 view .LVU207
 643              		.loc 6 696 3 view .LVU208
 644              	.LBB282:
 645              	.LBI282:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 646              		.loc 7 491 27 view .LVU209
 647              	.LBB283:
 648              		.loc 7 493 3 view .LVU210
 649 000c 0023     		movs	r3, #0
 650              		.syntax unified
 651              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 652 000e 83F31188 		MSR basepri, r3
 653              	@ 0 "" 2
 654              	.LVL33:
 655              		.loc 7 493 3 is_stmt 0 view .LVU211
 656              		.thumb
 657              		.syntax unified
 658              	.LBE283:
 659              	.LBE282:
 660              	.LBE281:
 661              	.LBE280:
 662              	.LBE279:
 663              	.LBE278:
 259:lib/chibios/os/hal/src/hal_buffers.c **** 
 664              		.loc 1 259 1 view .LVU212
 665 0012 08BD     		pop	{r3, pc}
 666              		.cfi_endproc
 667              	.LFE334:
 669              		.section	.text.ibqGetTimeout,"ax",%progbits
 670              		.align	1
 671              		.global	ibqGetTimeout
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 676              	ibqGetTimeout:
 677              	.LVL34:
 678              	.LFB336:
 289:lib/chibios/os/hal/src/hal_buffers.c **** 
 290:lib/chibios/os/hal/src/hal_buffers.c **** /**
 291:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Input queue read with timeout.
 292:lib/chibios/os/hal/src/hal_buffers.c ****  * @details This function reads a byte value from an input queue. If
 293:lib/chibios/os/hal/src/hal_buffers.c ****  *          the queue is empty then the calling thread is suspended until a
 294:lib/chibios/os/hal/src/hal_buffers.c ****  *          new buffer arrives in the queue or a timeout occurs.
 295:lib/chibios/os/hal/src/hal_buffers.c ****  *
 296:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 297:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 298:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 299:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 300:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 301:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 302:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              A byte value from the queue.
 303:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 304:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 305:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 306:lib/chibios/os/hal/src/hal_buffers.c ****  *
 307:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 308:lib/chibios/os/hal/src/hal_buffers.c ****  */
 309:lib/chibios/os/hal/src/hal_buffers.c **** msg_t ibqGetTimeout(input_buffers_queue_t *ibqp, sysinterval_t timeout) {
 679              		.loc 1 309 73 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 310:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 683              		.loc 1 310 3 view .LVU214
 311:lib/chibios/os/hal/src/hal_buffers.c **** 
 312:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 684              		.loc 1 312 3 view .LVU215
 685              	.LBB284:
 686              	.LBI284:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 687              		.loc 2 573 20 view .LVU216
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 688              		.loc 2 575 3 view .LVU217
 689              	.LBB285:
 690              	.LBI285:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 691              		.loc 5 355 20 view .LVU218
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 692              		.loc 5 357 3 view .LVU219
 693              	.LBB286:
 694              	.LBI286:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695              		.loc 6 669 27 view .LVU220
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 696              		.loc 6 677 3 view .LVU221
 697              	.LBB287:
 698              	.LBI287:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 699              		.loc 7 491 27 view .LVU222
 700              	.LBB288:
 701              		.loc 7 493 3 view .LVU223
 702              	.LBE288:
 703              	.LBE287:
 704              	.LBE286:
 705              	.LBE285:
 706              	.LBE284:
 309:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 707              		.loc 1 309 73 is_stmt 0 view .LVU224
 708 0000 70B5     		push	{r4, r5, r6, lr}
 709              		.cfi_def_cfa_offset 16
 710              		.cfi_offset 4, -16
 711              		.cfi_offset 5, -12
 712              		.cfi_offset 6, -8
 713              		.cfi_offset 14, -4
 714              	.LBB297:
 715              	.LBB295:
 716              	.LBB293:
 717              	.LBB291:
 718              	.LBB289:
 719              		.loc 7 493 3 view .LVU225
 720 0002 2023     		movs	r3, #32
 721              	.LBE289:
 722              	.LBE291:
 723              	.LBE293:
 724              	.LBE295:
 725              	.LBE297:
 309:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 726              		.loc 1 309 73 view .LVU226
 727 0004 0446     		mov	r4, r0
 728              	.LBB298:
 729              	.LBB296:
 730              	.LBB294:
 731              	.LBB292:
 732              	.LBB290:
 733              		.loc 7 493 3 view .LVU227
 734              		.syntax unified
 735              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 736 0006 83F31188 		MSR basepri, r3
 737              	@ 0 "" 2
 738              	.LVL35:
 739              		.loc 7 493 3 view .LVU228
 740              		.thumb
 741              		.syntax unified
 742              	.LBE290:
 743              	.LBE292:
 744              	.LBE294:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 745              		.loc 5 358 34 is_stmt 1 view .LVU229
 359:./lib/chibios/os/rt/include/chsys.h **** }
 746              		.loc 5 359 20 view .LVU230
 747              	.LBE296:
 748              	.LBE298:
 313:lib/chibios/os/hal/src/hal_buffers.c **** 
 314:lib/chibios/os/hal/src/hal_buffers.c ****   /* This condition indicates that a new buffer must be acquired.*/
 315:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->ptr == NULL) {
 749              		.loc 1 315 3 view .LVU231
 750              		.loc 1 315 6 is_stmt 0 view .LVU232
 751 000a 866A     		ldr	r6, [r0, #40]
 752 000c 3EB9     		cbnz	r6, .L20
 316:lib/chibios/os/hal/src/hal_buffers.c ****     msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 753              		.loc 1 316 5 is_stmt 1 view .LVU233
 754              		.loc 1 316 11 is_stmt 0 view .LVU234
 755 000e FFF7FEFF 		bl	ibqGetFullBufferTimeoutS
 756              	.LVL36:
 317:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 757              		.loc 1 317 5 is_stmt 1 view .LVU235
 758              		.loc 1 317 8 is_stmt 0 view .LVU236
 759 0012 0546     		mov	r5, r0
 760 0014 18B1     		cbz	r0, .L20
 318:lib/chibios/os/hal/src/hal_buffers.c ****       osalSysUnlock();
 761              		.loc 1 318 7 is_stmt 1 view .LVU237
 762              	.LBB299:
 763              	.LBI299:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 764              		.loc 2 584 20 view .LVU238
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 765              		.loc 2 586 3 view .LVU239
 766              	.LBB300:
 767              	.LBI300:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 768              		.loc 5 367 20 view .LVU240
 769              	.LBB301:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 770              		.loc 5 369 22 view .LVU241
 370:./lib/chibios/os/rt/include/chsys.h **** 
 771              		.loc 5 370 33 view .LVU242
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 772              		.loc 5 376 3 view .LVU243
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 773              		.loc 5 376 3 view .LVU244
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 774              		.loc 5 376 3 view .LVU245
 775              		.loc 5 380 3 view .LVU246
 776              	.LBB302:
 777              	.LBI302:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 778              		.loc 6 693 27 view .LVU247
 779              		.loc 6 696 3 view .LVU248
 780              	.LVL37:
 781              	.LBB303:
 782              	.LBI303:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 783              		.loc 7 491 27 view .LVU249
 784              	.LBB304:
 785              		.loc 7 493 3 view .LVU250
 786              		.syntax unified
 787              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 788 0016 86F31188 		MSR basepri, r6
 789              	@ 0 "" 2
 790              	.LVL38:
 791              		.loc 7 493 3 is_stmt 0 view .LVU251
 792              		.thumb
 793              		.syntax unified
 794              	.LBE304:
 795              	.LBE303:
 796              	.LBE302:
 797              	.LBE301:
 798              	.LBE300:
 799              	.LBE299:
 319:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 800              		.loc 1 319 7 is_stmt 1 view .LVU252
 801              	.L19:
 320:lib/chibios/os/hal/src/hal_buffers.c ****     }
 321:lib/chibios/os/hal/src/hal_buffers.c ****   }
 322:lib/chibios/os/hal/src/hal_buffers.c **** 
 323:lib/chibios/os/hal/src/hal_buffers.c ****   /* Next byte from the buffer.*/
 324:lib/chibios/os/hal/src/hal_buffers.c ****   msg = (msg_t)*ibqp->ptr;
 325:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 326:lib/chibios/os/hal/src/hal_buffers.c **** 
 327:lib/chibios/os/hal/src/hal_buffers.c ****   /* If the current buffer has been fully read then it is returned as
 328:lib/chibios/os/hal/src/hal_buffers.c ****      empty in the queue.*/
 329:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->ptr >= ibqp->top) {
 330:lib/chibios/os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 331:lib/chibios/os/hal/src/hal_buffers.c ****   }
 332:lib/chibios/os/hal/src/hal_buffers.c **** 
 333:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 334:lib/chibios/os/hal/src/hal_buffers.c ****   return msg;
 335:lib/chibios/os/hal/src/hal_buffers.c **** }
 802              		.loc 1 335 1 is_stmt 0 view .LVU253
 803 001a 2846     		mov	r0, r5
 804 001c 70BD     		pop	{r4, r5, r6, pc}
 805              	.LVL39:
 806              	.L20:
 324:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 807              		.loc 1 324 3 is_stmt 1 view .LVU254
 324:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 808              		.loc 1 324 7 is_stmt 0 view .LVU255
 809 001e A36A     		ldr	r3, [r4, #40]
 329:lib/chibios/os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 810              		.loc 1 329 6 view .LVU256
 811 0020 E26A     		ldr	r2, [r4, #44]
 324:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 812              		.loc 1 324 7 view .LVU257
 813 0022 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 814              	.LVL40:
 325:lib/chibios/os/hal/src/hal_buffers.c **** 
 815              		.loc 1 325 3 is_stmt 1 view .LVU258
 325:lib/chibios/os/hal/src/hal_buffers.c **** 
 816              		.loc 1 325 12 is_stmt 0 view .LVU259
 817 0026 A362     		str	r3, [r4, #40]
 329:lib/chibios/os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 818              		.loc 1 329 3 is_stmt 1 view .LVU260
 329:lib/chibios/os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 819              		.loc 1 329 6 is_stmt 0 view .LVU261
 820 0028 9342     		cmp	r3, r2
 821 002a 02D3     		bcc	.L22
 330:lib/chibios/os/hal/src/hal_buffers.c ****   }
 822              		.loc 1 330 5 is_stmt 1 view .LVU262
 823 002c 2046     		mov	r0, r4
 824 002e FFF7FEFF 		bl	ibqReleaseEmptyBufferS
 825              	.LVL41:
 826              	.L22:
 333:lib/chibios/os/hal/src/hal_buffers.c ****   return msg;
 827              		.loc 1 333 3 view .LVU263
 828              	.LBB305:
 829              	.LBI305:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 830              		.loc 2 584 20 view .LVU264
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 831              		.loc 2 586 3 view .LVU265
 832              	.LBB306:
 833              	.LBI306:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 834              		.loc 5 367 20 view .LVU266
 835              	.LBB307:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 836              		.loc 5 369 22 view .LVU267
 370:./lib/chibios/os/rt/include/chsys.h **** 
 837              		.loc 5 370 33 view .LVU268
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 838              		.loc 5 376 3 view .LVU269
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 839              		.loc 5 376 3 view .LVU270
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 840              		.loc 5 376 3 view .LVU271
 841              		.loc 5 380 3 view .LVU272
 842              	.LBB308:
 843              	.LBI308:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 844              		.loc 6 693 27 view .LVU273
 845              		.loc 6 696 3 view .LVU274
 846              	.LBB309:
 847              	.LBI309:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 848              		.loc 7 491 27 view .LVU275
 849              	.LBB310:
 850              		.loc 7 493 3 view .LVU276
 851 0032 0023     		movs	r3, #0
 852              		.syntax unified
 853              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 854 0034 83F31188 		MSR basepri, r3
 855              	@ 0 "" 2
 856              	.LVL42:
 857              		.loc 7 493 3 is_stmt 0 view .LVU277
 858              		.thumb
 859              		.syntax unified
 860              	.LBE310:
 861              	.LBE309:
 862              	.LBE308:
 863              	.LBE307:
 864              	.LBE306:
 865              	.LBE305:
 334:lib/chibios/os/hal/src/hal_buffers.c **** }
 866              		.loc 1 334 3 is_stmt 1 view .LVU278
 334:lib/chibios/os/hal/src/hal_buffers.c **** }
 867              		.loc 1 334 10 is_stmt 0 view .LVU279
 868 0038 EFE7     		b	.L19
 869              		.cfi_endproc
 870              	.LFE336:
 872              		.section	.text.ibqReadTimeout,"ax",%progbits
 873              		.align	1
 874              		.global	ibqReadTimeout
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 879              	ibqReadTimeout:
 880              	.LVL43:
 881              	.LFB337:
 336:lib/chibios/os/hal/src/hal_buffers.c **** 
 337:lib/chibios/os/hal/src/hal_buffers.c **** /**
 338:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Input queue read with timeout.
 339:lib/chibios/os/hal/src/hal_buffers.c ****  * @details The function reads data from an input queue into a buffer.
 340:lib/chibios/os/hal/src/hal_buffers.c ****  *          The operation completes when the specified amount of data has been
 341:lib/chibios/os/hal/src/hal_buffers.c ****  *          transferred or after the specified timeout or if the queue has
 342:lib/chibios/os/hal/src/hal_buffers.c ****  *          been reset.
 343:lib/chibios/os/hal/src/hal_buffers.c ****  *
 344:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 345:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[out] bp       pointer to the data buffer
 346:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 347:lib/chibios/os/hal/src/hal_buffers.c ****  *                      value 0 is reserved
 348:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 349:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 350:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 351:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 352:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 353:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The number of bytes effectively transferred.
 354:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval 0            if a timeout occurred.
 355:lib/chibios/os/hal/src/hal_buffers.c ****  *
 356:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 357:lib/chibios/os/hal/src/hal_buffers.c ****  */
 358:lib/chibios/os/hal/src/hal_buffers.c **** size_t ibqReadTimeout(input_buffers_queue_t *ibqp, uint8_t *bp,
 359:lib/chibios/os/hal/src/hal_buffers.c ****                       size_t n, sysinterval_t timeout) {
 882              		.loc 1 359 56 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 360:lib/chibios/os/hal/src/hal_buffers.c ****   size_t r = 0;
 886              		.loc 1 360 3 view .LVU281
 361:lib/chibios/os/hal/src/hal_buffers.c **** 
 362:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck(n > 0U);
 887              		.loc 1 362 3 view .LVU282
 888              		.loc 1 362 3 view .LVU283
 889              		.loc 1 362 3 view .LVU284
 363:lib/chibios/os/hal/src/hal_buffers.c **** 
 364:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 890              		.loc 1 364 3 view .LVU285
 891              	.LBB311:
 892              	.LBI311:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 893              		.loc 2 573 20 view .LVU286
 894              	.LBB312:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 895              		.loc 2 575 3 view .LVU287
 896              	.LBB313:
 897              	.LBI313:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 898              		.loc 5 355 20 view .LVU288
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 899              		.loc 5 357 3 view .LVU289
 900              	.LBB314:
 901              	.LBI314:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 902              		.loc 6 669 27 view .LVU290
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 903              		.loc 6 677 3 view .LVU291
 904              	.LBB315:
 905              	.LBI315:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 906              		.loc 7 491 27 view .LVU292
 907              	.LBB316:
 908              		.loc 7 493 3 view .LVU293
 909              	.LBE316:
 910              	.LBE315:
 911              	.LBE314:
 912              	.LBE313:
 913              	.LBE312:
 914              	.LBE311:
 359:lib/chibios/os/hal/src/hal_buffers.c ****   size_t r = 0;
 915              		.loc 1 359 56 is_stmt 0 view .LVU294
 916 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 917              		.cfi_def_cfa_offset 40
 918              		.cfi_offset 3, -40
 919              		.cfi_offset 4, -36
 920              		.cfi_offset 5, -32
 921              		.cfi_offset 6, -28
 922              		.cfi_offset 7, -24
 923              		.cfi_offset 8, -20
 924              		.cfi_offset 9, -16
 925              		.cfi_offset 10, -12
 926              		.cfi_offset 11, -8
 927              		.cfi_offset 14, -4
 359:lib/chibios/os/hal/src/hal_buffers.c ****   size_t r = 0;
 928              		.loc 1 359 56 view .LVU295
 929 0004 0446     		mov	r4, r0
 930 0006 0F46     		mov	r7, r1
 931 0008 9146     		mov	r9, r2
 932 000a 9A46     		mov	r10, r3
 933              	.LBB322:
 934              	.LBB321:
 935              	.LBB320:
 936              	.LBB319:
 937              	.LBB318:
 938              	.LBB317:
 939              		.loc 7 493 3 view .LVU296
 940 000c 4FF02008 		mov	r8, #32
 941              		.syntax unified
 942              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 943 0010 88F31188 		MSR basepri, r8
 944              	@ 0 "" 2
 945              	.LVL44:
 946              		.loc 7 493 3 view .LVU297
 947              		.thumb
 948              		.syntax unified
 949              	.LBE317:
 950              	.LBE318:
 951              	.LBE319:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 952              		.loc 5 358 34 is_stmt 1 view .LVU298
 359:./lib/chibios/os/rt/include/chsys.h **** }
 953              		.loc 5 359 20 view .LVU299
 954              	.LBE320:
 955              	.LBE321:
 956              	.LBE322:
 360:lib/chibios/os/hal/src/hal_buffers.c **** 
 957              		.loc 1 360 10 is_stmt 0 view .LVU300
 958 0014 0026     		movs	r6, #0
 959              	.LBB323:
 960              	.LBB324:
 961              	.LBB325:
 962              	.LBB326:
 963              	.LBB327:
 964              	.LBB328:
 965              	.LBB329:
 966              		.loc 7 493 3 view .LVU301
 967 0016 B346     		mov	fp, r6
 968              	.LVL45:
 969              	.L33:
 970              		.loc 7 493 3 view .LVU302
 971              	.LBE329:
 972              	.LBE328:
 973              	.LBE327:
 974              	.LBE326:
 975              	.LBE325:
 976              	.LBE324:
 977              	.LBE323:
 365:lib/chibios/os/hal/src/hal_buffers.c **** 
 366:lib/chibios/os/hal/src/hal_buffers.c ****   while (true) {
 978              		.loc 1 366 3 is_stmt 1 view .LVU303
 979              	.LBB349:
 367:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size;
 980              		.loc 1 367 5 view .LVU304
 368:lib/chibios/os/hal/src/hal_buffers.c **** 
 369:lib/chibios/os/hal/src/hal_buffers.c ****     /* This condition indicates that a new buffer must be acquired.*/
 370:lib/chibios/os/hal/src/hal_buffers.c ****     if (ibqp->ptr == NULL) {
 981              		.loc 1 370 5 view .LVU305
 982              		.loc 1 370 8 is_stmt 0 view .LVU306
 983 0018 A56A     		ldr	r5, [r4, #40]
 984 001a 4DB9     		cbnz	r5, .L27
 985              	.LBB335:
 371:lib/chibios/os/hal/src/hal_buffers.c ****       msg_t msg;
 986              		.loc 1 371 7 is_stmt 1 view .LVU307
 372:lib/chibios/os/hal/src/hal_buffers.c **** 
 373:lib/chibios/os/hal/src/hal_buffers.c ****       /* Getting a data buffer using the specified timeout.*/
 374:lib/chibios/os/hal/src/hal_buffers.c ****       msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 987              		.loc 1 374 7 view .LVU308
 988              		.loc 1 374 13 is_stmt 0 view .LVU309
 989 001c 5146     		mov	r1, r10
 990 001e 2046     		mov	r0, r4
 991 0020 FFF7FEFF 		bl	ibqGetFullBufferTimeoutS
 992              	.LVL46:
 375:lib/chibios/os/hal/src/hal_buffers.c **** 
 376:lib/chibios/os/hal/src/hal_buffers.c ****       /* Anything except MSG_OK interrupts the operation.*/
 377:lib/chibios/os/hal/src/hal_buffers.c ****       if (msg != MSG_OK) {
 993              		.loc 1 377 7 is_stmt 1 view .LVU310
 994              		.loc 1 377 10 is_stmt 0 view .LVU311
 995 0024 20B1     		cbz	r0, .L27
 378:lib/chibios/os/hal/src/hal_buffers.c ****         osalSysUnlock();
 996              		.loc 1 378 9 is_stmt 1 view .LVU312
 997              	.LBB336:
 998              	.LBI336:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 999              		.loc 2 584 20 view .LVU313
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1000              		.loc 2 586 3 view .LVU314
 1001              	.LBB337:
 1002              	.LBI337:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1003              		.loc 5 367 20 view .LVU315
 1004              	.LBB338:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1005              		.loc 5 369 22 view .LVU316
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1006              		.loc 5 370 33 view .LVU317
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1007              		.loc 5 376 3 view .LVU318
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1008              		.loc 5 376 3 view .LVU319
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1009              		.loc 5 376 3 view .LVU320
 1010              		.loc 5 380 3 view .LVU321
 1011              	.LBB339:
 1012              	.LBI339:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1013              		.loc 6 693 27 view .LVU322
 1014              		.loc 6 696 3 view .LVU323
 1015              	.LVL47:
 1016              	.LBB340:
 1017              	.LBI340:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1018              		.loc 7 491 27 view .LVU324
 1019              	.LBB341:
 1020              		.loc 7 493 3 view .LVU325
 1021              		.syntax unified
 1022              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1023 0026 85F31188 		MSR basepri, r5
 1024              	@ 0 "" 2
 1025              	.LVL48:
 1026              		.loc 7 493 3 is_stmt 0 view .LVU326
 1027              		.thumb
 1028              		.syntax unified
 1029              	.LBE341:
 1030              	.LBE340:
 1031              	.LBE339:
 1032              	.LBE338:
 1033              	.LBE337:
 1034              	.LBE336:
 379:lib/chibios/os/hal/src/hal_buffers.c ****         return r;
 1035              		.loc 1 379 9 is_stmt 1 view .LVU327
 1036              	.L26:
 1037              		.loc 1 379 9 is_stmt 0 view .LVU328
 1038              	.LBE335:
 1039              	.LBE349:
 380:lib/chibios/os/hal/src/hal_buffers.c ****       }
 381:lib/chibios/os/hal/src/hal_buffers.c ****     }
 382:lib/chibios/os/hal/src/hal_buffers.c **** 
 383:lib/chibios/os/hal/src/hal_buffers.c ****     /* Size of the data chunk present in the current buffer.*/
 384:lib/chibios/os/hal/src/hal_buffers.c ****     size = (size_t)ibqp->top - (size_t)ibqp->ptr;
 385:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 386:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - r;
 387:lib/chibios/os/hal/src/hal_buffers.c ****     }
 388:lib/chibios/os/hal/src/hal_buffers.c **** 
 389:lib/chibios/os/hal/src/hal_buffers.c ****     /* Smaller chunks in order to not make the critical zone too long,
 390:lib/chibios/os/hal/src/hal_buffers.c ****        this impacts throughput however.*/
 391:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (size_t)BUFFERS_CHUNKS_SIZE) {
 392:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 393:lib/chibios/os/hal/src/hal_buffers.c ****       memcpy(bp, ibqp->ptr, BUFFERS_CHUNKS_SIZE);
 394:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 395:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 396:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 397:lib/chibios/os/hal/src/hal_buffers.c ****     }
 398:lib/chibios/os/hal/src/hal_buffers.c ****     else {
 399:lib/chibios/os/hal/src/hal_buffers.c ****       memcpy(bp, ibqp->ptr, size);
 400:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += size;
 401:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 402:lib/chibios/os/hal/src/hal_buffers.c ****       r         += size;
 403:lib/chibios/os/hal/src/hal_buffers.c ****     }
 404:lib/chibios/os/hal/src/hal_buffers.c **** 
 405:lib/chibios/os/hal/src/hal_buffers.c ****     /* Has the current data buffer been finished? if so then release it.*/
 406:lib/chibios/os/hal/src/hal_buffers.c ****     if (ibqp->ptr >= ibqp->top) {
 407:lib/chibios/os/hal/src/hal_buffers.c ****       ibqReleaseEmptyBufferS(ibqp);
 408:lib/chibios/os/hal/src/hal_buffers.c ****     }
 409:lib/chibios/os/hal/src/hal_buffers.c **** 
 410:lib/chibios/os/hal/src/hal_buffers.c ****     /* Giving a preemption chance.*/
 411:lib/chibios/os/hal/src/hal_buffers.c ****     osalSysUnlock();
 412:lib/chibios/os/hal/src/hal_buffers.c ****     if (r >= n) {
 413:lib/chibios/os/hal/src/hal_buffers.c ****       return r;
 414:lib/chibios/os/hal/src/hal_buffers.c ****     }
 415:lib/chibios/os/hal/src/hal_buffers.c ****     osalSysLock();
 416:lib/chibios/os/hal/src/hal_buffers.c ****   }
 417:lib/chibios/os/hal/src/hal_buffers.c **** }
 1040              		.loc 1 417 1 view .LVU329
 1041 002a 3046     		mov	r0, r6
 1042 002c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1043              	.LVL49:
 1044              	.L27:
 1045              	.LBB350:
 384:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1046              		.loc 1 384 5 is_stmt 1 view .LVU330
 384:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1047              		.loc 1 384 10 is_stmt 0 view .LVU331
 1048 0030 D4E90A15 		ldrd	r1, r5, [r4, #40]
 385:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - r;
 1049              		.loc 1 385 19 view .LVU332
 1050 0034 A9EB0603 		sub	r3, r9, r6
 384:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1051              		.loc 1 384 10 view .LVU333
 1052 0038 6D1A     		subs	r5, r5, r1
 1053 003a 9D42     		cmp	r5, r3
 1054 003c 28BF     		it	cs
 1055 003e 1D46     		movcs	r5, r3
 1056              	.LVL50:
 391:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 1057              		.loc 1 391 5 is_stmt 1 view .LVU334
 391:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 1058              		.loc 1 391 8 is_stmt 0 view .LVU335
 1059 0040 402D     		cmp	r5, #64
 1060 0042 1AD9     		bls	.L29
 393:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 1061              		.loc 1 393 7 is_stmt 1 view .LVU336
 1062 0044 3B46     		mov	r3, r7
 1063 0046 01F14002 		add	r2, r1, #64
 1064              	.L30:
 393:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 1065              		.loc 1 393 7 is_stmt 0 view .LVU337
 1066 004a 51F8040B 		ldr	r0, [r1], #4	@ unaligned
 1067 004e 43F8040B 		str	r0, [r3], #4	@ unaligned
 1068 0052 9142     		cmp	r1, r2
 1069 0054 F9D1     		bne	.L30
 394:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 1070              		.loc 1 394 7 is_stmt 1 view .LVU338
 395:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 1071              		.loc 1 395 17 is_stmt 0 view .LVU339
 1072 0056 A36A     		ldr	r3, [r4, #40]
 394:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 1073              		.loc 1 394 17 view .LVU340
 1074 0058 4037     		adds	r7, r7, #64
 1075              	.LVL51:
 395:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 1076              		.loc 1 395 7 is_stmt 1 view .LVU341
 395:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 1077              		.loc 1 395 17 is_stmt 0 view .LVU342
 1078 005a 4033     		adds	r3, r3, #64
 396:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1079              		.loc 1 396 7 is_stmt 1 view .LVU343
 396:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1080              		.loc 1 396 17 is_stmt 0 view .LVU344
 1081 005c 4036     		adds	r6, r6, #64
 1082              	.LVL52:
 1083              	.L31:
 406:lib/chibios/os/hal/src/hal_buffers.c ****       ibqReleaseEmptyBufferS(ibqp);
 1084              		.loc 1 406 8 view .LVU345
 1085 005e E26A     		ldr	r2, [r4, #44]
 395:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 1086              		.loc 1 395 17 view .LVU346
 1087 0060 A362     		str	r3, [r4, #40]
 406:lib/chibios/os/hal/src/hal_buffers.c ****       ibqReleaseEmptyBufferS(ibqp);
 1088              		.loc 1 406 5 is_stmt 1 view .LVU347
 406:lib/chibios/os/hal/src/hal_buffers.c ****       ibqReleaseEmptyBufferS(ibqp);
 1089              		.loc 1 406 8 is_stmt 0 view .LVU348
 1090 0062 9A42     		cmp	r2, r3
 1091 0064 02D8     		bhi	.L32
 407:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1092              		.loc 1 407 7 is_stmt 1 view .LVU349
 1093 0066 2046     		mov	r0, r4
 1094 0068 FFF7FEFF 		bl	ibqReleaseEmptyBufferS
 1095              	.LVL53:
 1096              	.L32:
 411:lib/chibios/os/hal/src/hal_buffers.c ****     if (r >= n) {
 1097              		.loc 1 411 5 view .LVU350
 1098              	.LBB342:
 1099              	.LBI324:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1100              		.loc 2 584 20 view .LVU351
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1101              		.loc 2 586 3 view .LVU352
 1102              	.LBB334:
 1103              	.LBI325:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1104              		.loc 5 367 20 view .LVU353
 1105              	.LBB333:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1106              		.loc 5 369 22 view .LVU354
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1107              		.loc 5 370 33 view .LVU355
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1108              		.loc 5 376 3 view .LVU356
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1109              		.loc 5 376 3 view .LVU357
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1110              		.loc 5 376 3 view .LVU358
 1111              		.loc 5 380 3 view .LVU359
 1112              	.LBB332:
 1113              	.LBI327:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1114              		.loc 6 693 27 view .LVU360
 1115              		.loc 6 696 3 view .LVU361
 1116              	.LBB331:
 1117              	.LBI328:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1118              		.loc 7 491 27 view .LVU362
 1119              	.LBB330:
 1120              		.loc 7 493 3 view .LVU363
 1121              		.syntax unified
 1122              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1123 006c 8BF31188 		MSR basepri, fp
 1124              	@ 0 "" 2
 1125              	.LVL54:
 1126              		.loc 7 493 3 is_stmt 0 view .LVU364
 1127              		.thumb
 1128              		.syntax unified
 1129              	.LBE330:
 1130              	.LBE331:
 1131              	.LBE332:
 1132              	.LBE333:
 1133              	.LBE334:
 1134              	.LBE342:
 412:lib/chibios/os/hal/src/hal_buffers.c ****       return r;
 1135              		.loc 1 412 5 is_stmt 1 view .LVU365
 412:lib/chibios/os/hal/src/hal_buffers.c ****       return r;
 1136              		.loc 1 412 8 is_stmt 0 view .LVU366
 1137 0070 4E45     		cmp	r6, r9
 1138 0072 DAD2     		bcs	.L26
 415:lib/chibios/os/hal/src/hal_buffers.c ****   }
 1139              		.loc 1 415 5 is_stmt 1 view .LVU367
 1140              	.LBB343:
 1141              	.LBI343:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1142              		.loc 2 573 20 view .LVU368
 1143              	.LBB344:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1144              		.loc 2 575 3 view .LVU369
 1145              	.LBB345:
 1146              	.LBI345:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1147              		.loc 5 355 20 view .LVU370
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1148              		.loc 5 357 3 view .LVU371
 1149              	.LBB346:
 1150              	.LBI346:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1151              		.loc 6 669 27 view .LVU372
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1152              		.loc 6 677 3 view .LVU373
 1153              	.LVL55:
 1154              	.LBB347:
 1155              	.LBI347:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1156              		.loc 7 491 27 view .LVU374
 1157              	.LBB348:
 1158              		.loc 7 493 3 view .LVU375
 1159              		.syntax unified
 1160              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1161 0074 88F31188 		MSR basepri, r8
 1162              	@ 0 "" 2
 1163              	.LVL56:
 1164              		.loc 7 493 3 is_stmt 0 view .LVU376
 1165              		.thumb
 1166              		.syntax unified
 1167              	.LBE348:
 1168              	.LBE347:
 1169              	.LBE346:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1170              		.loc 5 358 34 is_stmt 1 view .LVU377
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1171              		.loc 5 359 20 view .LVU378
 1172              	.LBE345:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1173              		.loc 2 576 1 is_stmt 0 view .LVU379
 1174 0078 CEE7     		b	.L33
 1175              	.L29:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1176              		.loc 2 576 1 view .LVU380
 1177              	.LBE344:
 1178              	.LBE343:
 399:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += size;
 1179              		.loc 1 399 7 is_stmt 1 view .LVU381
 1180 007a 3846     		mov	r0, r7
 1181 007c 2A46     		mov	r2, r5
 1182 007e FFF7FEFF 		bl	memcpy
 1183              	.LVL57:
 400:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 1184              		.loc 1 400 7 view .LVU382
 401:lib/chibios/os/hal/src/hal_buffers.c ****       r         += size;
 1185              		.loc 1 401 17 is_stmt 0 view .LVU383
 1186 0082 A36A     		ldr	r3, [r4, #40]
 400:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 1187              		.loc 1 400 17 view .LVU384
 1188 0084 2F44     		add	r7, r7, r5
 1189              	.LVL58:
 401:lib/chibios/os/hal/src/hal_buffers.c ****       r         += size;
 1190              		.loc 1 401 7 is_stmt 1 view .LVU385
 401:lib/chibios/os/hal/src/hal_buffers.c ****       r         += size;
 1191              		.loc 1 401 17 is_stmt 0 view .LVU386
 1192 0086 2B44     		add	r3, r3, r5
 402:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1193              		.loc 1 402 7 is_stmt 1 view .LVU387
 402:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1194              		.loc 1 402 17 is_stmt 0 view .LVU388
 1195 0088 2E44     		add	r6, r6, r5
 1196              	.LVL59:
 402:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1197              		.loc 1 402 17 view .LVU389
 1198 008a E8E7     		b	.L31
 1199              	.LBE350:
 1200              		.cfi_endproc
 1201              	.LFE337:
 1203              		.section	.text.obqObjectInit,"ax",%progbits
 1204              		.align	1
 1205              		.global	obqObjectInit
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1210              	obqObjectInit:
 1211              	.LVL60:
 1212              	.LFB338:
 418:lib/chibios/os/hal/src/hal_buffers.c **** 
 419:lib/chibios/os/hal/src/hal_buffers.c **** /**
 420:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Initializes an output buffers queue object.
 421:lib/chibios/os/hal/src/hal_buffers.c ****  *
 422:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[out] obqp     pointer to the @p output_buffers_queue_t object
 423:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] suspended initial state of the queue
 424:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to a memory area allocated for buffers
 425:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      buffers size
 426:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] n         number of buffers
 427:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] onfy      callback called when a buffer is posted in the queue
 428:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] link      application defined pointer
 429:lib/chibios/os/hal/src/hal_buffers.c ****  *
 430:lib/chibios/os/hal/src/hal_buffers.c ****  * @init
 431:lib/chibios/os/hal/src/hal_buffers.c ****  */
 432:lib/chibios/os/hal/src/hal_buffers.c **** void obqObjectInit(output_buffers_queue_t *obqp, bool suspended, uint8_t *bp,
 433:lib/chibios/os/hal/src/hal_buffers.c ****                    size_t size, size_t n, bqnotify_t onfy, void *link) {
 1213              		.loc 1 433 72 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 12, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 434:lib/chibios/os/hal/src/hal_buffers.c **** 
 435:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck((obqp != NULL) && (bp != NULL) && (size >= 2U));
 1217              		.loc 1 435 3 view .LVU391
 1218              		.loc 1 435 3 view .LVU392
 1219              		.loc 1 435 3 view .LVU393
 436:lib/chibios/os/hal/src/hal_buffers.c **** 
 437:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadQueueObjectInit(&obqp->waiting);
 1220              		.loc 1 437 3 view .LVU394
 1221              	.LBB351:
 1222              	.LBI351:
 864:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1223              		.loc 2 864 20 view .LVU395
 866:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1224              		.loc 2 866 3 view .LVU396
 1225              	.LBB352:
 1226              	.LBI352:
 395:./lib/chibios/os/rt/include/chthreads.h **** 
 1227              		.loc 3 395 20 view .LVU397
 1228              	.LBB353:
 1229              		.loc 3 397 3 view .LVU398
 1230              	.LBB354:
 1231              	.LBI354:
 207:./lib/chibios/os/rt/include/chlists.h **** 
 1232              		.loc 4 207 20 view .LVU399
 1233              	.LBB355:
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
 1234              		.loc 4 209 3 view .LVU400
 1235              	.LBE355:
 1236              	.LBE354:
 1237              	.LBE353:
 1238              	.LBE352:
 1239              	.LBE351:
 433:lib/chibios/os/hal/src/hal_buffers.c **** 
 1240              		.loc 1 433 72 is_stmt 0 view .LVU401
 1241 0000 10B5     		push	{r4, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 4, -8
 1244              		.cfi_offset 14, -4
 433:lib/chibios/os/hal/src/hal_buffers.c **** 
 1245              		.loc 1 433 72 view .LVU402
 1246 0002 029C     		ldr	r4, [sp, #8]
 438:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->suspended = suspended;
 1247              		.loc 1 438 19 view .LVU403
 1248 0004 0172     		strb	r1, [r0, #8]
 439:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter  = n;
 440:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr    = bp;
 441:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr    = bp;
 442:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->btop      = bp + ((size + sizeof (size_t)) * n);
 1249              		.loc 1 442 33 view .LVU404
 1250 0006 0433     		adds	r3, r3, #4
 1251              	.LVL61:
 1252              		.loc 1 442 24 view .LVU405
 1253 0008 04FB0321 		mla	r1, r4, r3, r2
 1254              	.LVL62:
 443:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bsize     = size + sizeof (size_t);
 1255              		.loc 1 443 19 view .LVU406
 1256 000c C0E90613 		strd	r1, r3, [r0, #24]
 444:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bn        = n;
 445:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->buffers   = bp;
 446:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1257              		.loc 1 446 19 view .LVU407
 1258 0010 0023     		movs	r3, #0
 1259              	.LVL63:
 447:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top       = NULL;
 1260              		.loc 1 447 19 view .LVU408
 1261 0012 C0E90A33 		strd	r3, r3, [r0, #40]
 448:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->notify    = onfy;
 1262              		.loc 1 448 19 view .LVU409
 1263 0016 039B     		ldr	r3, [sp, #12]
 1264 0018 0363     		str	r3, [r0, #48]
 449:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->link      = link;
 1265              		.loc 1 449 19 view .LVU410
 1266 001a 049B     		ldr	r3, [sp, #16]
 439:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr    = bp;
 1267              		.loc 1 439 19 view .LVU411
 1268 001c C460     		str	r4, [r0, #12]
 1269              	.LBB360:
 1270              	.LBB359:
 1271              	.LBB358:
 1272              	.LBB357:
 1273              	.LBB356:
 1274              		.loc 4 210 12 view .LVU412
 1275 001e C0E90000 		strd	r0, r0, [r0]
 1276              	.LVL64:
 1277              		.loc 4 210 12 view .LVU413
 1278              	.LBE356:
 1279              	.LBE357:
 1280              	.LBE358:
 1281              	.LBE359:
 1282              	.LBE360:
 438:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter  = n;
 1283              		.loc 1 438 3 is_stmt 1 view .LVU414
 439:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr    = bp;
 1284              		.loc 1 439 3 view .LVU415
 440:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr    = bp;
 1285              		.loc 1 440 3 view .LVU416
 441:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->btop      = bp + ((size + sizeof (size_t)) * n);
 1286              		.loc 1 441 19 is_stmt 0 view .LVU417
 1287 0022 C0E90422 		strd	r2, r2, [r0, #16]
 442:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bsize     = size + sizeof (size_t);
 1288              		.loc 1 442 3 is_stmt 1 view .LVU418
 444:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->buffers   = bp;
 1289              		.loc 1 444 3 view .LVU419
 445:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1290              		.loc 1 445 19 is_stmt 0 view .LVU420
 1291 0026 C0E90842 		strd	r4, r2, [r0, #32]
 446:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top       = NULL;
 1292              		.loc 1 446 3 is_stmt 1 view .LVU421
 448:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->link      = link;
 1293              		.loc 1 448 3 view .LVU422
 1294              		.loc 1 449 3 view .LVU423
 1295              		.loc 1 449 19 is_stmt 0 view .LVU424
 1296 002a 4363     		str	r3, [r0, #52]
 450:lib/chibios/os/hal/src/hal_buffers.c **** }
 1297              		.loc 1 450 1 view .LVU425
 1298 002c 10BD     		pop	{r4, pc}
 1299              		.loc 1 450 1 view .LVU426
 1300              		.cfi_endproc
 1301              	.LFE338:
 1303              		.section	.text.obqResetI,"ax",%progbits
 1304              		.align	1
 1305              		.global	obqResetI
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
 1310              	obqResetI:
 1311              	.LVL65:
 1312              	.LFB339:
 451:lib/chibios/os/hal/src/hal_buffers.c **** 
 452:lib/chibios/os/hal/src/hal_buffers.c **** /**
 453:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Resets an output buffers queue.
 454:lib/chibios/os/hal/src/hal_buffers.c ****  * @details All the data in the output buffers queue is erased and lost, any
 455:lib/chibios/os/hal/src/hal_buffers.c ****  *          waiting thread is resumed with status @p MSG_RESET.
 456:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    A reset operation can be used by a low level driver in order to
 457:lib/chibios/os/hal/src/hal_buffers.c ****  *          obtain immediate attention from the high level layers.
 458:lib/chibios/os/hal/src/hal_buffers.c ****  *
 459:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 460:lib/chibios/os/hal/src/hal_buffers.c ****  *
 461:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 462:lib/chibios/os/hal/src/hal_buffers.c ****  */
 463:lib/chibios/os/hal/src/hal_buffers.c **** void obqResetI(output_buffers_queue_t *obqp) {
 1313              		.loc 1 463 46 is_stmt 1 view -0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 0
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 1317              		@ link register save eliminated.
 464:lib/chibios/os/hal/src/hal_buffers.c **** 
 465:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1318              		.loc 1 465 23 view .LVU428
 466:lib/chibios/os/hal/src/hal_buffers.c **** 
 467:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter  = bqSizeX(obqp);
 1319              		.loc 1 467 3 view .LVU429
 1320              		.loc 1 467 21 is_stmt 0 view .LVU430
 1321 0000 026A     		ldr	r2, [r0, #32]
 1322              		.loc 1 467 19 view .LVU431
 1323 0002 C260     		str	r2, [r0, #12]
 468:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr    = obqp->buffers;
 1324              		.loc 1 468 3 is_stmt 1 view .LVU432
 1325              		.loc 1 468 25 is_stmt 0 view .LVU433
 1326 0004 426A     		ldr	r2, [r0, #36]
 469:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr    = obqp->buffers;
 1327              		.loc 1 469 19 view .LVU434
 1328 0006 C0E90422 		strd	r2, r2, [r0, #16]
 470:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1329              		.loc 1 470 3 is_stmt 1 view .LVU435
 1330              		.loc 1 470 19 is_stmt 0 view .LVU436
 1331 000a 0022     		movs	r2, #0
 471:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top       = NULL;
 1332              		.loc 1 471 19 view .LVU437
 1333 000c C0E90A22 		strd	r2, r2, [r0, #40]
 472:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadDequeueAllI(&obqp->waiting, MSG_RESET);
 1334              		.loc 1 472 3 is_stmt 1 view .LVU438
 1335              	.LVL66:
 1336              	.LBB361:
 1337              	.LBI361:
 919:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1338              		.loc 2 919 20 view .LVU439
 1339              	.LBB362:
 1340              		.loc 2 921 3 view .LVU440
 1341 0010 6FF00101 		mvn	r1, #1
 1342 0014 FFF7FEBF 		b	chThdDequeueAllI
 1343              	.LVL67:
 1344              		.loc 2 921 3 is_stmt 0 view .LVU441
 1345              	.LBE362:
 1346              	.LBE361:
 1347              		.cfi_endproc
 1348              	.LFE339:
 1350              		.section	.text.obqGetFullBufferI,"ax",%progbits
 1351              		.align	1
 1352              		.global	obqGetFullBufferI
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1357              	obqGetFullBufferI:
 1358              	.LVL68:
 1359              	.LFB340:
 473:lib/chibios/os/hal/src/hal_buffers.c **** }
 474:lib/chibios/os/hal/src/hal_buffers.c **** 
 475:lib/chibios/os/hal/src/hal_buffers.c **** /**
 476:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next filled buffer from the queue.
 477:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always returns the same buffer if called repeatedly.
 478:lib/chibios/os/hal/src/hal_buffers.c ****  *
 479:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 480:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[out] sizep    pointer to the filled buffer size
 481:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              A pointer to the filled buffer.
 482:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval NULL         if the queue is empty.
 483:lib/chibios/os/hal/src/hal_buffers.c ****  *
 484:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 485:lib/chibios/os/hal/src/hal_buffers.c ****  */
 486:lib/chibios/os/hal/src/hal_buffers.c **** uint8_t *obqGetFullBufferI(output_buffers_queue_t *obqp,
 487:lib/chibios/os/hal/src/hal_buffers.c ****                            size_t *sizep) {
 1360              		.loc 1 487 43 is_stmt 1 view -0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364              		@ link register save eliminated.
 488:lib/chibios/os/hal/src/hal_buffers.c **** 
 489:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1365              		.loc 1 489 23 view .LVU443
 490:lib/chibios/os/hal/src/hal_buffers.c **** 
 491:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqIsEmptyI(obqp)) {
 1366              		.loc 1 491 3 view .LVU444
 487:lib/chibios/os/hal/src/hal_buffers.c **** 
 1367              		.loc 1 487 43 is_stmt 0 view .LVU445
 1368 0000 0346     		mov	r3, r0
 1369              		.loc 1 491 7 view .LVU446
 1370 0002 D0E90420 		ldrd	r2, r0, [r0, #16]
 1371              	.LVL69:
 1372              		.loc 1 491 7 view .LVU447
 1373 0006 8242     		cmp	r2, r0
 1374 0008 01D1     		bne	.L41
 1375              		.loc 1 491 7 discriminator 1 view .LVU448
 1376 000a DB68     		ldr	r3, [r3, #12]
 1377              	.LVL70:
 1378              		.loc 1 491 7 discriminator 1 view .LVU449
 1379 000c 1BB9     		cbnz	r3, .L43
 1380              	.L41:
 492:lib/chibios/os/hal/src/hal_buffers.c ****     return NULL;
 493:lib/chibios/os/hal/src/hal_buffers.c ****   }
 494:lib/chibios/os/hal/src/hal_buffers.c **** 
 495:lib/chibios/os/hal/src/hal_buffers.c ****   /* Buffer size.*/
 496:lib/chibios/os/hal/src/hal_buffers.c ****   *sizep = *((size_t *)obqp->brdptr);
 1381              		.loc 1 496 3 is_stmt 1 view .LVU450
 1382              		.loc 1 496 12 is_stmt 0 view .LVU451
 1383 000e 50F8043B 		ldr	r3, [r0], #4
 1384              		.loc 1 496 10 view .LVU452
 1385 0012 0B60     		str	r3, [r1]
 497:lib/chibios/os/hal/src/hal_buffers.c **** 
 498:lib/chibios/os/hal/src/hal_buffers.c ****   return obqp->brdptr + sizeof (size_t);
 1386              		.loc 1 498 3 is_stmt 1 view .LVU453
 1387              		.loc 1 498 23 is_stmt 0 view .LVU454
 1388 0014 7047     		bx	lr
 1389              	.L43:
 492:lib/chibios/os/hal/src/hal_buffers.c ****     return NULL;
 1390              		.loc 1 492 12 view .LVU455
 1391 0016 0020     		movs	r0, #0
 499:lib/chibios/os/hal/src/hal_buffers.c **** }
 1392              		.loc 1 499 1 view .LVU456
 1393 0018 7047     		bx	lr
 1394              		.cfi_endproc
 1395              	.LFE340:
 1397              		.section	.text.obqReleaseEmptyBufferI,"ax",%progbits
 1398              		.align	1
 1399              		.global	obqReleaseEmptyBufferI
 1400              		.syntax unified
 1401              		.thumb
 1402              		.thumb_func
 1404              	obqReleaseEmptyBufferI:
 1405              	.LVL71:
 1406              	.LFB341:
 500:lib/chibios/os/hal/src/hal_buffers.c **** 
 501:lib/chibios/os/hal/src/hal_buffers.c **** /**
 502:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Releases the next filled buffer back in the queue.
 503:lib/chibios/os/hal/src/hal_buffers.c ****  *
 504:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 505:lib/chibios/os/hal/src/hal_buffers.c ****  *
 506:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 507:lib/chibios/os/hal/src/hal_buffers.c ****  */
 508:lib/chibios/os/hal/src/hal_buffers.c **** void obqReleaseEmptyBufferI(output_buffers_queue_t *obqp) {
 1407              		.loc 1 508 59 is_stmt 1 view -0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411              		@ link register save eliminated.
 509:lib/chibios/os/hal/src/hal_buffers.c **** 
 510:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1412              		.loc 1 510 23 view .LVU458
 511:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsEmptyI(obqp), "buffers queue empty");
 1413              		.loc 1 511 3 view .LVU459
 1414              		.loc 1 511 3 view .LVU460
 1415              		.loc 1 511 3 view .LVU461
 512:lib/chibios/os/hal/src/hal_buffers.c **** 
 513:lib/chibios/os/hal/src/hal_buffers.c ****   /* Freeing a buffer slot in the queue.*/
 514:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter++;
 1416              		.loc 1 514 3 view .LVU462
 1417              		.loc 1 514 7 is_stmt 0 view .LVU463
 1418 0000 C368     		ldr	r3, [r0, #12]
 515:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr += obqp->bsize;
 1419              		.loc 1 515 16 view .LVU464
 1420 0002 C269     		ldr	r2, [r0, #28]
 514:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr += obqp->bsize;
 1421              		.loc 1 514 17 view .LVU465
 1422 0004 0133     		adds	r3, r3, #1
 1423 0006 C360     		str	r3, [r0, #12]
 1424              		.loc 1 515 3 is_stmt 1 view .LVU466
 1425              		.loc 1 515 16 is_stmt 0 view .LVU467
 1426 0008 4369     		ldr	r3, [r0, #20]
 1427 000a 1344     		add	r3, r3, r2
 516:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->brdptr >= obqp->btop) {
 1428              		.loc 1 516 6 view .LVU468
 1429 000c 8269     		ldr	r2, [r0, #24]
 515:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr += obqp->bsize;
 1430              		.loc 1 515 16 view .LVU469
 1431 000e 4361     		str	r3, [r0, #20]
 1432              		.loc 1 516 3 is_stmt 1 view .LVU470
 1433              		.loc 1 516 6 is_stmt 0 view .LVU471
 1434 0010 9342     		cmp	r3, r2
 517:lib/chibios/os/hal/src/hal_buffers.c ****     obqp->brdptr = obqp->buffers;
 1435              		.loc 1 517 5 is_stmt 1 view .LVU472
 1436              		.loc 1 517 18 is_stmt 0 view .LVU473
 1437 0012 24BF     		itt	cs
 1438 0014 436A     		ldrcs	r3, [r0, #36]
 1439 0016 4361     		strcs	r3, [r0, #20]
 518:lib/chibios/os/hal/src/hal_buffers.c ****   }
 519:lib/chibios/os/hal/src/hal_buffers.c **** 
 520:lib/chibios/os/hal/src/hal_buffers.c ****   /* Waking up one waiting thread, if any.*/
 521:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadDequeueNextI(&obqp->waiting, MSG_OK);
 1440              		.loc 1 521 3 is_stmt 1 view .LVU474
 1441              	.LVL72:
 1442              	.LBB363:
 1443              	.LBI363:
 906:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1444              		.loc 2 906 20 view .LVU475
 1445              	.LBB364:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1446              		.loc 2 908 3 view .LVU476
 1447 0018 0021     		movs	r1, #0
 1448 001a FFF7FEBF 		b	chThdDequeueNextI
 1449              	.LVL73:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1450              		.loc 2 908 3 is_stmt 0 view .LVU477
 1451              	.LBE364:
 1452              	.LBE363:
 1453              		.cfi_endproc
 1454              	.LFE341:
 1456              		.section	.text.obqGetEmptyBufferTimeoutS,"ax",%progbits
 1457              		.align	1
 1458              		.global	obqGetEmptyBufferTimeoutS
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1463              	obqGetEmptyBufferTimeoutS:
 1464              	.LVL74:
 1465              	.LFB343:
 522:lib/chibios/os/hal/src/hal_buffers.c **** }
 523:lib/chibios/os/hal/src/hal_buffers.c **** 
 524:lib/chibios/os/hal/src/hal_buffers.c **** /**
 525:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 526:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 527:lib/chibios/os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 528:lib/chibios/os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 529:lib/chibios/os/hal/src/hal_buffers.c ****  *          is empty.
 530:lib/chibios/os/hal/src/hal_buffers.c ****  *
 531:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 532:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 533:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 534:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 535:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 536:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 537:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The operation status.
 538:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 539:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 540:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 541:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 542:lib/chibios/os/hal/src/hal_buffers.c ****  *
 543:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 544:lib/chibios/os/hal/src/hal_buffers.c ****  */
 545:lib/chibios/os/hal/src/hal_buffers.c **** msg_t obqGetEmptyBufferTimeout(output_buffers_queue_t *obqp,
 546:lib/chibios/os/hal/src/hal_buffers.c ****                                sysinterval_t timeout) {
 547:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 548:lib/chibios/os/hal/src/hal_buffers.c **** 
 549:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 550:lib/chibios/os/hal/src/hal_buffers.c ****   msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 551:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 552:lib/chibios/os/hal/src/hal_buffers.c **** 
 553:lib/chibios/os/hal/src/hal_buffers.c ****   return msg;
 554:lib/chibios/os/hal/src/hal_buffers.c **** }
 555:lib/chibios/os/hal/src/hal_buffers.c **** 
 556:lib/chibios/os/hal/src/hal_buffers.c **** /**
 557:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 558:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 559:lib/chibios/os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 560:lib/chibios/os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 561:lib/chibios/os/hal/src/hal_buffers.c ****  *          is empty.
 562:lib/chibios/os/hal/src/hal_buffers.c ****  *
 563:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 564:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 565:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 566:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 567:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 568:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 569:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The operation status.
 570:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 571:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 572:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 573:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 574:lib/chibios/os/hal/src/hal_buffers.c ****  *
 575:lib/chibios/os/hal/src/hal_buffers.c ****  * @sclass
 576:lib/chibios/os/hal/src/hal_buffers.c ****  */
 577:lib/chibios/os/hal/src/hal_buffers.c **** msg_t obqGetEmptyBufferTimeoutS(output_buffers_queue_t *obqp,
 578:lib/chibios/os/hal/src/hal_buffers.c ****                                 sysinterval_t timeout) {
 1466              		.loc 1 578 56 is_stmt 1 view -0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              		.loc 1 578 56 is_stmt 0 view .LVU479
 1471 0000 38B5     		push	{r3, r4, r5, lr}
 1472              		.cfi_def_cfa_offset 16
 1473              		.cfi_offset 3, -16
 1474              		.cfi_offset 4, -12
 1475              		.cfi_offset 5, -8
 1476              		.cfi_offset 14, -4
 1477 0002 0446     		mov	r4, r0
 1478 0004 0D46     		mov	r5, r1
 579:lib/chibios/os/hal/src/hal_buffers.c **** 
 580:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 1479              		.loc 1 580 23 is_stmt 1 view .LVU480
 581:lib/chibios/os/hal/src/hal_buffers.c **** 
 582:lib/chibios/os/hal/src/hal_buffers.c ****   while (obqIsFullI(obqp)) {
 1480              		.loc 1 582 3 view .LVU481
 1481              	.LVL75:
 1482              	.L47:
 1483              		.loc 1 582 10 view .LVU482
 1484 0006 E368     		ldr	r3, [r4, #12]
 1485 0008 3BB1     		cbz	r3, .L49
 1486              	.LVL76:
 1487              	.LBB373:
 1488              	.LBI373:
 577:lib/chibios/os/hal/src/hal_buffers.c ****                                 sysinterval_t timeout) {
 1489              		.loc 1 577 7 view .LVU483
 1490              	.LBB374:
 583:lib/chibios/os/hal/src/hal_buffers.c ****     if (obqp->suspended) {
 584:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 585:lib/chibios/os/hal/src/hal_buffers.c ****     }
 586:lib/chibios/os/hal/src/hal_buffers.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&obqp->waiting, timeout);
 587:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 588:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 589:lib/chibios/os/hal/src/hal_buffers.c ****     }
 590:lib/chibios/os/hal/src/hal_buffers.c ****   }
 591:lib/chibios/os/hal/src/hal_buffers.c **** 
 592:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "still full");
 1491              		.loc 1 592 3 view .LVU484
 1492              		.loc 1 592 3 view .LVU485
 1493              		.loc 1 592 3 view .LVU486
 593:lib/chibios/os/hal/src/hal_buffers.c **** 
 594:lib/chibios/os/hal/src/hal_buffers.c ****   /* Setting up the "current" buffer and its boundary.*/
 595:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr = obqp->bwrptr + sizeof (size_t);
 1494              		.loc 1 595 3 view .LVU487
 1495              		.loc 1 595 19 is_stmt 0 view .LVU488
 1496 000a 2369     		ldr	r3, [r4, #16]
 1497              		.loc 1 595 28 view .LVU489
 1498 000c 1A1D     		adds	r2, r3, #4
 1499              		.loc 1 595 13 view .LVU490
 1500 000e A262     		str	r2, [r4, #40]
 596:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 1501              		.loc 1 596 3 is_stmt 1 view .LVU491
 1502              		.loc 1 596 28 is_stmt 0 view .LVU492
 1503 0010 E269     		ldr	r2, [r4, #28]
 1504 0012 1344     		add	r3, r3, r2
 1505              		.loc 1 596 13 view .LVU493
 1506 0014 E362     		str	r3, [r4, #44]
 597:lib/chibios/os/hal/src/hal_buffers.c **** 
 598:lib/chibios/os/hal/src/hal_buffers.c ****   return MSG_OK;
 1507              		.loc 1 598 3 is_stmt 1 view .LVU494
 1508              	.LVL77:
 596:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 1509              		.loc 1 596 13 is_stmt 0 view .LVU495
 1510 0016 0020     		movs	r0, #0
 1511 0018 07E0     		b	.L46
 1512              	.L49:
 596:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 1513              		.loc 1 596 13 view .LVU496
 1514              	.LBE374:
 1515              	.LBE373:
 1516              	.LBB375:
 583:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 1517              		.loc 1 583 5 is_stmt 1 view .LVU497
 583:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 1518              		.loc 1 583 8 is_stmt 0 view .LVU498
 1519 001a 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 1520 001c 33B9     		cbnz	r3, .L50
 586:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 1521              		.loc 1 586 5 is_stmt 1 view .LVU499
 1522              	.LVL78:
 1523              	.LBB376:
 1524              	.LBI376:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 1525              		.loc 2 892 21 view .LVU500
 1526              	.LBB377:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1527              		.loc 2 895 3 view .LVU501
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1528              		.loc 2 895 10 is_stmt 0 view .LVU502
 1529 001e 2946     		mov	r1, r5
 1530 0020 2046     		mov	r0, r4
 1531 0022 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 1532              	.LVL79:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1533              		.loc 2 895 10 view .LVU503
 1534              	.LBE377:
 1535              	.LBE376:
 587:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 1536              		.loc 1 587 5 is_stmt 1 view .LVU504
 587:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 1537              		.loc 1 587 8 is_stmt 0 view .LVU505
 1538 0026 0028     		cmp	r0, #0
 587:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 1539              		.loc 1 587 8 view .LVU506
 1540 0028 EDDA     		bge	.L47
 1541              	.LVL80:
 1542              	.L46:
 587:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 1543              		.loc 1 587 8 view .LVU507
 1544              	.LBE375:
 599:lib/chibios/os/hal/src/hal_buffers.c **** }
 1545              		.loc 1 599 1 view .LVU508
 1546 002a 38BD     		pop	{r3, r4, r5, pc}
 1547              	.LVL81:
 1548              	.L50:
 1549              	.LBB378:
 584:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1550              		.loc 1 584 14 view .LVU509
 1551 002c 6FF00100 		mvn	r0, #1
 1552 0030 FBE7     		b	.L46
 1553              	.LBE378:
 1554              		.cfi_endproc
 1555              	.LFE343:
 1557              		.section	.text.obqGetEmptyBufferTimeout,"ax",%progbits
 1558              		.align	1
 1559              		.global	obqGetEmptyBufferTimeout
 1560              		.syntax unified
 1561              		.thumb
 1562              		.thumb_func
 1564              	obqGetEmptyBufferTimeout:
 1565              	.LVL82:
 1566              	.LFB342:
 546:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 1567              		.loc 1 546 55 is_stmt 1 view -0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 547:lib/chibios/os/hal/src/hal_buffers.c **** 
 1571              		.loc 1 547 3 view .LVU511
 549:lib/chibios/os/hal/src/hal_buffers.c ****   msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 1572              		.loc 1 549 3 view .LVU512
 1573              	.LBB379:
 1574              	.LBI379:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1575              		.loc 2 573 20 view .LVU513
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1576              		.loc 2 575 3 view .LVU514
 1577              	.LBB380:
 1578              	.LBI380:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1579              		.loc 5 355 20 view .LVU515
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1580              		.loc 5 357 3 view .LVU516
 1581              	.LBB381:
 1582              	.LBI381:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1583              		.loc 6 669 27 view .LVU517
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1584              		.loc 6 677 3 view .LVU518
 1585              	.LBB382:
 1586              	.LBI382:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1587              		.loc 7 491 27 view .LVU519
 1588              	.LBB383:
 1589              		.loc 7 493 3 view .LVU520
 1590              	.LBE383:
 1591              	.LBE382:
 1592              	.LBE381:
 1593              	.LBE380:
 1594              	.LBE379:
 546:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 1595              		.loc 1 546 55 is_stmt 0 view .LVU521
 1596 0000 08B5     		push	{r3, lr}
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 3, -8
 1599              		.cfi_offset 14, -4
 1600              	.LBB388:
 1601              	.LBB387:
 1602              	.LBB386:
 1603              	.LBB385:
 1604              	.LBB384:
 1605              		.loc 7 493 3 view .LVU522
 1606 0002 2023     		movs	r3, #32
 1607              		.syntax unified
 1608              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1609 0004 83F31188 		MSR basepri, r3
 1610              	@ 0 "" 2
 1611              	.LVL83:
 1612              		.loc 7 493 3 view .LVU523
 1613              		.thumb
 1614              		.syntax unified
 1615              	.LBE384:
 1616              	.LBE385:
 1617              	.LBE386:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1618              		.loc 5 358 34 is_stmt 1 view .LVU524
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1619              		.loc 5 359 20 view .LVU525
 1620              	.LBE387:
 1621              	.LBE388:
 550:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 1622              		.loc 1 550 3 view .LVU526
 550:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 1623              		.loc 1 550 9 is_stmt 0 view .LVU527
 1624 0008 FFF7FEFF 		bl	obqGetEmptyBufferTimeoutS
 1625              	.LVL84:
 551:lib/chibios/os/hal/src/hal_buffers.c **** 
 1626              		.loc 1 551 3 is_stmt 1 view .LVU528
 1627              	.LBB389:
 1628              	.LBI389:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1629              		.loc 2 584 20 view .LVU529
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1630              		.loc 2 586 3 view .LVU530
 1631              	.LBB390:
 1632              	.LBI390:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1633              		.loc 5 367 20 view .LVU531
 1634              	.LBB391:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1635              		.loc 5 369 22 view .LVU532
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1636              		.loc 5 370 33 view .LVU533
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1637              		.loc 5 376 3 view .LVU534
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1638              		.loc 5 376 3 view .LVU535
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1639              		.loc 5 376 3 view .LVU536
 1640              		.loc 5 380 3 view .LVU537
 1641              	.LBB392:
 1642              	.LBI392:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1643              		.loc 6 693 27 view .LVU538
 1644              		.loc 6 696 3 view .LVU539
 1645              	.LBB393:
 1646              	.LBI393:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1647              		.loc 7 491 27 view .LVU540
 1648              	.LBB394:
 1649              		.loc 7 493 3 view .LVU541
 1650 000c 0023     		movs	r3, #0
 1651              		.syntax unified
 1652              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1653 000e 83F31188 		MSR basepri, r3
 1654              	@ 0 "" 2
 1655              	.LVL85:
 1656              		.loc 7 493 3 is_stmt 0 view .LVU542
 1657              		.thumb
 1658              		.syntax unified
 1659              	.LBE394:
 1660              	.LBE393:
 1661              	.LBE392:
 1662              	.LBE391:
 1663              	.LBE390:
 1664              	.LBE389:
 553:lib/chibios/os/hal/src/hal_buffers.c **** }
 1665              		.loc 1 553 3 is_stmt 1 view .LVU543
 554:lib/chibios/os/hal/src/hal_buffers.c **** 
 1666              		.loc 1 554 1 is_stmt 0 view .LVU544
 1667 0012 08BD     		pop	{r3, pc}
 1668              		.cfi_endproc
 1669              	.LFE342:
 1671              		.section	.text.obqPostFullBufferS,"ax",%progbits
 1672              		.align	1
 1673              		.global	obqPostFullBufferS
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1678              	obqPostFullBufferS:
 1679              	.LVL86:
 1680              	.LFB345:
 600:lib/chibios/os/hal/src/hal_buffers.c **** 
 601:lib/chibios/os/hal/src/hal_buffers.c **** /**
 602:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 603:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 604:lib/chibios/os/hal/src/hal_buffers.c ****  *
 605:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 606:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 607:lib/chibios/os/hal/src/hal_buffers.c ****  *
 608:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 609:lib/chibios/os/hal/src/hal_buffers.c ****  */
 610:lib/chibios/os/hal/src/hal_buffers.c **** void obqPostFullBuffer(output_buffers_queue_t *obqp, size_t size) {
 611:lib/chibios/os/hal/src/hal_buffers.c **** 
 612:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 613:lib/chibios/os/hal/src/hal_buffers.c ****   obqPostFullBufferS(obqp, size);
 614:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 615:lib/chibios/os/hal/src/hal_buffers.c **** }
 616:lib/chibios/os/hal/src/hal_buffers.c **** 
 617:lib/chibios/os/hal/src/hal_buffers.c **** /**
 618:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 619:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 620:lib/chibios/os/hal/src/hal_buffers.c ****  *
 621:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 622:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 623:lib/chibios/os/hal/src/hal_buffers.c ****  *
 624:lib/chibios/os/hal/src/hal_buffers.c ****  * @sclass
 625:lib/chibios/os/hal/src/hal_buffers.c ****  */
 626:lib/chibios/os/hal/src/hal_buffers.c **** void obqPostFullBufferS(output_buffers_queue_t *obqp, size_t size) {
 1681              		.loc 1 626 68 is_stmt 1 view -0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685              		@ link register save eliminated.
 627:lib/chibios/os/hal/src/hal_buffers.c **** 
 628:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 1686              		.loc 1 628 23 view .LVU546
 629:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (obqp->bsize - sizeof (size_t))));
 1687              		.loc 1 629 3 view .LVU547
 1688              		.loc 1 629 3 view .LVU548
 1689              		.loc 1 629 3 view .LVU549
 630:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 1690              		.loc 1 630 3 view .LVU550
 1691              		.loc 1 630 3 view .LVU551
 1692              		.loc 1 630 3 view .LVU552
 631:lib/chibios/os/hal/src/hal_buffers.c **** 
 632:lib/chibios/os/hal/src/hal_buffers.c ****   /* Writing size field in the buffer.*/
 633:lib/chibios/os/hal/src/hal_buffers.c ****   *((size_t *)obqp->bwrptr) = size;
 1693              		.loc 1 633 3 view .LVU553
 1694              		.loc 1 633 19 is_stmt 0 view .LVU554
 1695 0000 0369     		ldr	r3, [r0, #16]
 1696              		.loc 1 633 29 view .LVU555
 1697 0002 1960     		str	r1, [r3]
 634:lib/chibios/os/hal/src/hal_buffers.c **** 
 635:lib/chibios/os/hal/src/hal_buffers.c ****   /* Posting the buffer in the queue.*/
 636:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter--;
 1698              		.loc 1 636 3 is_stmt 1 view .LVU556
 1699              		.loc 1 636 7 is_stmt 0 view .LVU557
 1700 0004 C268     		ldr	r2, [r0, #12]
 1701              		.loc 1 636 17 view .LVU558
 1702 0006 013A     		subs	r2, r2, #1
 1703 0008 C260     		str	r2, [r0, #12]
 637:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 1704              		.loc 1 637 3 is_stmt 1 view .LVU559
 1705              		.loc 1 637 16 is_stmt 0 view .LVU560
 1706 000a C269     		ldr	r2, [r0, #28]
 1707 000c 1344     		add	r3, r3, r2
 638:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 1708              		.loc 1 638 6 view .LVU561
 1709 000e 8269     		ldr	r2, [r0, #24]
 637:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 1710              		.loc 1 637 16 view .LVU562
 1711 0010 0361     		str	r3, [r0, #16]
 1712              		.loc 1 638 3 is_stmt 1 view .LVU563
 1713              		.loc 1 638 6 is_stmt 0 view .LVU564
 1714 0012 9342     		cmp	r3, r2
 639:lib/chibios/os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 1715              		.loc 1 639 5 is_stmt 1 view .LVU565
 1716              		.loc 1 639 18 is_stmt 0 view .LVU566
 1717 0014 24BF     		itt	cs
 1718 0016 436A     		ldrcs	r3, [r0, #36]
 1719 0018 0361     		strcs	r3, [r0, #16]
 640:lib/chibios/os/hal/src/hal_buffers.c ****   }
 641:lib/chibios/os/hal/src/hal_buffers.c **** 
 642:lib/chibios/os/hal/src/hal_buffers.c ****   /* No "current" buffer.*/
 643:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr = NULL;
 1720              		.loc 1 643 3 is_stmt 1 view .LVU567
 1721              		.loc 1 643 13 is_stmt 0 view .LVU568
 1722 001a 0023     		movs	r3, #0
 1723 001c 8362     		str	r3, [r0, #40]
 644:lib/chibios/os/hal/src/hal_buffers.c **** 
 645:lib/chibios/os/hal/src/hal_buffers.c ****   /* Notifying the buffer release.*/
 646:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->notify != NULL) {
 1724              		.loc 1 646 3 is_stmt 1 view .LVU569
 1725              		.loc 1 646 11 is_stmt 0 view .LVU570
 1726 001e 036B     		ldr	r3, [r0, #48]
 1727              		.loc 1 646 6 view .LVU571
 1728 0020 03B1     		cbz	r3, .L52
 647:lib/chibios/os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 1729              		.loc 1 647 5 is_stmt 1 view .LVU572
 1730 0022 1847     		bx	r3	@ indirect register sibling call
 1731              	.LVL87:
 1732              	.L52:
 648:lib/chibios/os/hal/src/hal_buffers.c ****   }
 649:lib/chibios/os/hal/src/hal_buffers.c **** }
 1733              		.loc 1 649 1 is_stmt 0 view .LVU573
 1734 0024 7047     		bx	lr
 1735              		.cfi_endproc
 1736              	.LFE345:
 1738              		.section	.text.obqPostFullBuffer,"ax",%progbits
 1739              		.align	1
 1740              		.global	obqPostFullBuffer
 1741              		.syntax unified
 1742              		.thumb
 1743              		.thumb_func
 1745              	obqPostFullBuffer:
 1746              	.LVL88:
 1747              	.LFB344:
 610:lib/chibios/os/hal/src/hal_buffers.c **** 
 1748              		.loc 1 610 67 is_stmt 1 view -0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 0
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 612:lib/chibios/os/hal/src/hal_buffers.c ****   obqPostFullBufferS(obqp, size);
 1752              		.loc 1 612 3 view .LVU575
 1753              	.LBB395:
 1754              	.LBI395:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1755              		.loc 2 573 20 view .LVU576
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1756              		.loc 2 575 3 view .LVU577
 1757              	.LBB396:
 1758              	.LBI396:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1759              		.loc 5 355 20 view .LVU578
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1760              		.loc 5 357 3 view .LVU579
 1761              	.LBB397:
 1762              	.LBI397:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1763              		.loc 6 669 27 view .LVU580
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1764              		.loc 6 677 3 view .LVU581
 1765              	.LBB398:
 1766              	.LBI398:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1767              		.loc 7 491 27 view .LVU582
 1768              	.LBB399:
 1769              		.loc 7 493 3 view .LVU583
 1770              	.LBE399:
 1771              	.LBE398:
 1772              	.LBE397:
 1773              	.LBE396:
 1774              	.LBE395:
 610:lib/chibios/os/hal/src/hal_buffers.c **** 
 1775              		.loc 1 610 67 is_stmt 0 view .LVU584
 1776 0000 08B5     		push	{r3, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 3, -8
 1779              		.cfi_offset 14, -4
 1780              	.LBB404:
 1781              	.LBB403:
 1782              	.LBB402:
 1783              	.LBB401:
 1784              	.LBB400:
 1785              		.loc 7 493 3 view .LVU585
 1786 0002 2023     		movs	r3, #32
 1787              		.syntax unified
 1788              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1789 0004 83F31188 		MSR basepri, r3
 1790              	@ 0 "" 2
 1791              	.LVL89:
 1792              		.loc 7 493 3 view .LVU586
 1793              		.thumb
 1794              		.syntax unified
 1795              	.LBE400:
 1796              	.LBE401:
 1797              	.LBE402:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1798              		.loc 5 358 34 is_stmt 1 view .LVU587
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1799              		.loc 5 359 20 view .LVU588
 1800              	.LBE403:
 1801              	.LBE404:
 613:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 1802              		.loc 1 613 3 view .LVU589
 1803 0008 FFF7FEFF 		bl	obqPostFullBufferS
 1804              	.LVL90:
 614:lib/chibios/os/hal/src/hal_buffers.c **** }
 1805              		.loc 1 614 3 view .LVU590
 1806              	.LBB405:
 1807              	.LBI405:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1808              		.loc 2 584 20 view .LVU591
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1809              		.loc 2 586 3 view .LVU592
 1810              	.LBB406:
 1811              	.LBI406:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1812              		.loc 5 367 20 view .LVU593
 1813              	.LBB407:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1814              		.loc 5 369 22 view .LVU594
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1815              		.loc 5 370 33 view .LVU595
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1816              		.loc 5 376 3 view .LVU596
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1817              		.loc 5 376 3 view .LVU597
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1818              		.loc 5 376 3 view .LVU598
 1819              		.loc 5 380 3 view .LVU599
 1820              	.LBB408:
 1821              	.LBI408:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1822              		.loc 6 693 27 view .LVU600
 1823              		.loc 6 696 3 view .LVU601
 1824              	.LBB409:
 1825              	.LBI409:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1826              		.loc 7 491 27 view .LVU602
 1827              	.LBB410:
 1828              		.loc 7 493 3 view .LVU603
 1829 000c 0023     		movs	r3, #0
 1830              		.syntax unified
 1831              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1832 000e 83F31188 		MSR basepri, r3
 1833              	@ 0 "" 2
 1834              	.LVL91:
 1835              		.loc 7 493 3 is_stmt 0 view .LVU604
 1836              		.thumb
 1837              		.syntax unified
 1838              	.LBE410:
 1839              	.LBE409:
 1840              	.LBE408:
 1841              	.LBE407:
 1842              	.LBE406:
 1843              	.LBE405:
 615:lib/chibios/os/hal/src/hal_buffers.c **** 
 1844              		.loc 1 615 1 view .LVU605
 1845 0012 08BD     		pop	{r3, pc}
 1846              		.cfi_endproc
 1847              	.LFE344:
 1849              		.section	.text.obqPutTimeout,"ax",%progbits
 1850              		.align	1
 1851              		.global	obqPutTimeout
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1856              	obqPutTimeout:
 1857              	.LVL92:
 1858              	.LFB346:
 650:lib/chibios/os/hal/src/hal_buffers.c **** 
 651:lib/chibios/os/hal/src/hal_buffers.c **** /**
 652:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Output queue write with timeout.
 653:lib/chibios/os/hal/src/hal_buffers.c ****  * @details This function writes a byte value to an output queue. If
 654:lib/chibios/os/hal/src/hal_buffers.c ****  *          the queue is full then the calling thread is suspended until a
 655:lib/chibios/os/hal/src/hal_buffers.c ****  *          new buffer is freed in the queue or a timeout occurs.
 656:lib/chibios/os/hal/src/hal_buffers.c ****  *
 657:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 658:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] b         byte value to be transferred
 659:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 660:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 661:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 662:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 663:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 664:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              A byte value from the queue.
 665:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 666:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 667:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 668:lib/chibios/os/hal/src/hal_buffers.c ****  *
 669:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 670:lib/chibios/os/hal/src/hal_buffers.c ****  */
 671:lib/chibios/os/hal/src/hal_buffers.c **** msg_t obqPutTimeout(output_buffers_queue_t *obqp, uint8_t b,
 672:lib/chibios/os/hal/src/hal_buffers.c ****                     sysinterval_t timeout) {
 1859              		.loc 1 672 44 is_stmt 1 view -0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 0
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
 673:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 1863              		.loc 1 673 3 view .LVU607
 674:lib/chibios/os/hal/src/hal_buffers.c **** 
 675:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 1864              		.loc 1 675 3 view .LVU608
 1865              	.LBB411:
 1866              	.LBI411:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1867              		.loc 2 573 20 view .LVU609
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1868              		.loc 2 575 3 view .LVU610
 1869              	.LBB412:
 1870              	.LBI412:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1871              		.loc 5 355 20 view .LVU611
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1872              		.loc 5 357 3 view .LVU612
 1873              	.LBB413:
 1874              	.LBI413:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1875              		.loc 6 669 27 view .LVU613
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1876              		.loc 6 677 3 view .LVU614
 1877              	.LBB414:
 1878              	.LBI414:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1879              		.loc 7 491 27 view .LVU615
 1880              	.LBB415:
 1881              		.loc 7 493 3 view .LVU616
 1882              	.LBE415:
 1883              	.LBE414:
 1884              	.LBE413:
 1885              	.LBE412:
 1886              	.LBE411:
 672:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 1887              		.loc 1 672 44 is_stmt 0 view .LVU617
 1888 0000 70B5     		push	{r4, r5, r6, lr}
 1889              		.cfi_def_cfa_offset 16
 1890              		.cfi_offset 4, -16
 1891              		.cfi_offset 5, -12
 1892              		.cfi_offset 6, -8
 1893              		.cfi_offset 14, -4
 1894              	.LBB424:
 1895              	.LBB422:
 1896              	.LBB420:
 1897              	.LBB418:
 1898              	.LBB416:
 1899              		.loc 7 493 3 view .LVU618
 1900 0002 2023     		movs	r3, #32
 1901              	.LBE416:
 1902              	.LBE418:
 1903              	.LBE420:
 1904              	.LBE422:
 1905              	.LBE424:
 672:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 1906              		.loc 1 672 44 view .LVU619
 1907 0004 0D46     		mov	r5, r1
 1908 0006 0446     		mov	r4, r0
 1909 0008 1146     		mov	r1, r2
 1910              	.LVL93:
 1911              	.LBB425:
 1912              	.LBB423:
 1913              	.LBB421:
 1914              	.LBB419:
 1915              	.LBB417:
 1916              		.loc 7 493 3 view .LVU620
 1917              		.syntax unified
 1918              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1919 000a 83F31188 		MSR basepri, r3
 1920              	@ 0 "" 2
 1921              	.LVL94:
 1922              		.loc 7 493 3 view .LVU621
 1923              		.thumb
 1924              		.syntax unified
 1925              	.LBE417:
 1926              	.LBE419:
 1927              	.LBE421:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1928              		.loc 5 358 34 is_stmt 1 view .LVU622
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1929              		.loc 5 359 20 view .LVU623
 1930              	.LBE423:
 1931              	.LBE425:
 676:lib/chibios/os/hal/src/hal_buffers.c **** 
 677:lib/chibios/os/hal/src/hal_buffers.c ****   /* This condition indicates that a new buffer must be acquired.*/
 678:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->ptr == NULL) {
 1932              		.loc 1 678 3 view .LVU624
 1933              		.loc 1 678 6 is_stmt 0 view .LVU625
 1934 000e 866A     		ldr	r6, [r0, #40]
 1935 0010 2EB9     		cbnz	r6, .L57
 679:lib/chibios/os/hal/src/hal_buffers.c ****     msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 1936              		.loc 1 679 5 is_stmt 1 view .LVU626
 1937              		.loc 1 679 11 is_stmt 0 view .LVU627
 1938 0012 FFF7FEFF 		bl	obqGetEmptyBufferTimeoutS
 1939              	.LVL95:
 680:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 1940              		.loc 1 680 5 is_stmt 1 view .LVU628
 1941              		.loc 1 680 8 is_stmt 0 view .LVU629
 1942 0016 10B1     		cbz	r0, .L57
 681:lib/chibios/os/hal/src/hal_buffers.c ****       osalSysUnlock();
 1943              		.loc 1 681 7 is_stmt 1 view .LVU630
 1944              	.LBB426:
 1945              	.LBI426:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1946              		.loc 2 584 20 view .LVU631
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1947              		.loc 2 586 3 view .LVU632
 1948              	.LBB427:
 1949              	.LBI427:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1950              		.loc 5 367 20 view .LVU633
 1951              	.LBB428:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1952              		.loc 5 369 22 view .LVU634
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1953              		.loc 5 370 33 view .LVU635
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1954              		.loc 5 376 3 view .LVU636
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1955              		.loc 5 376 3 view .LVU637
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1956              		.loc 5 376 3 view .LVU638
 1957              		.loc 5 380 3 view .LVU639
 1958              	.LBB429:
 1959              	.LBI429:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1960              		.loc 6 693 27 view .LVU640
 1961              		.loc 6 696 3 view .LVU641
 1962              	.LVL96:
 1963              	.LBB430:
 1964              	.LBI430:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1965              		.loc 7 491 27 view .LVU642
 1966              	.LBB431:
 1967              		.loc 7 493 3 view .LVU643
 1968              		.syntax unified
 1969              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1970 0018 86F31188 		MSR basepri, r6
 1971              	@ 0 "" 2
 1972              	.LVL97:
 1973              		.loc 7 493 3 is_stmt 0 view .LVU644
 1974              		.thumb
 1975              		.syntax unified
 1976              	.LBE431:
 1977              	.LBE430:
 1978              	.LBE429:
 1979              	.LBE428:
 1980              	.LBE427:
 1981              	.LBE426:
 682:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 1982              		.loc 1 682 7 is_stmt 1 view .LVU645
 1983              	.L56:
 683:lib/chibios/os/hal/src/hal_buffers.c ****     }
 684:lib/chibios/os/hal/src/hal_buffers.c ****   }
 685:lib/chibios/os/hal/src/hal_buffers.c **** 
 686:lib/chibios/os/hal/src/hal_buffers.c ****   /* Writing the byte to the buffer.*/
 687:lib/chibios/os/hal/src/hal_buffers.c ****   *obqp->ptr = b;
 688:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr++;
 689:lib/chibios/os/hal/src/hal_buffers.c **** 
 690:lib/chibios/os/hal/src/hal_buffers.c ****   /* If the current buffer has been fully written then it is posted as
 691:lib/chibios/os/hal/src/hal_buffers.c ****      full in the queue.*/
 692:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->ptr >= obqp->top) {
 693:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 694:lib/chibios/os/hal/src/hal_buffers.c ****   }
 695:lib/chibios/os/hal/src/hal_buffers.c **** 
 696:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 697:lib/chibios/os/hal/src/hal_buffers.c ****   return MSG_OK;
 698:lib/chibios/os/hal/src/hal_buffers.c **** }
 1984              		.loc 1 698 1 is_stmt 0 view .LVU646
 1985 001c 70BD     		pop	{r4, r5, r6, pc}
 1986              	.LVL98:
 1987              	.L57:
 687:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr++;
 1988              		.loc 1 687 3 is_stmt 1 view .LVU647
 687:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr++;
 1989              		.loc 1 687 8 is_stmt 0 view .LVU648
 1990 001e A36A     		ldr	r3, [r4, #40]
 687:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr++;
 1991              		.loc 1 687 14 view .LVU649
 1992 0020 1D70     		strb	r5, [r3]
 688:lib/chibios/os/hal/src/hal_buffers.c **** 
 1993              		.loc 1 688 3 is_stmt 1 view .LVU650
 688:lib/chibios/os/hal/src/hal_buffers.c **** 
 1994              		.loc 1 688 12 is_stmt 0 view .LVU651
 1995 0022 A36A     		ldr	r3, [r4, #40]
 692:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 1996              		.loc 1 692 6 view .LVU652
 1997 0024 E26A     		ldr	r2, [r4, #44]
 688:lib/chibios/os/hal/src/hal_buffers.c **** 
 1998              		.loc 1 688 12 view .LVU653
 1999 0026 0133     		adds	r3, r3, #1
 692:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2000              		.loc 1 692 6 view .LVU654
 2001 0028 9342     		cmp	r3, r2
 688:lib/chibios/os/hal/src/hal_buffers.c **** 
 2002              		.loc 1 688 12 view .LVU655
 2003 002a A362     		str	r3, [r4, #40]
 692:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2004              		.loc 1 692 3 is_stmt 1 view .LVU656
 692:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2005              		.loc 1 692 6 is_stmt 0 view .LVU657
 2006 002c 04D3     		bcc	.L59
 693:lib/chibios/os/hal/src/hal_buffers.c ****   }
 2007              		.loc 1 693 5 is_stmt 1 view .LVU658
 2008 002e E169     		ldr	r1, [r4, #28]
 2009 0030 2046     		mov	r0, r4
 2010 0032 0439     		subs	r1, r1, #4
 2011 0034 FFF7FEFF 		bl	obqPostFullBufferS
 2012              	.LVL99:
 2013              	.L59:
 696:lib/chibios/os/hal/src/hal_buffers.c ****   return MSG_OK;
 2014              		.loc 1 696 3 view .LVU659
 2015              	.LBB432:
 2016              	.LBI432:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2017              		.loc 2 584 20 view .LVU660
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2018              		.loc 2 586 3 view .LVU661
 2019              	.LBB433:
 2020              	.LBI433:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2021              		.loc 5 367 20 view .LVU662
 2022              	.LBB434:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2023              		.loc 5 369 22 view .LVU663
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2024              		.loc 5 370 33 view .LVU664
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2025              		.loc 5 376 3 view .LVU665
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2026              		.loc 5 376 3 view .LVU666
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2027              		.loc 5 376 3 view .LVU667
 2028              		.loc 5 380 3 view .LVU668
 2029              	.LBB435:
 2030              	.LBI435:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2031              		.loc 6 693 27 view .LVU669
 2032              		.loc 6 696 3 view .LVU670
 2033              	.LBB436:
 2034              	.LBI436:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2035              		.loc 7 491 27 view .LVU671
 2036              	.LBB437:
 2037              		.loc 7 493 3 view .LVU672
 2038 0038 0020     		movs	r0, #0
 2039              		.syntax unified
 2040              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2041 003a 80F31188 		MSR basepri, r0
 2042              	@ 0 "" 2
 2043              	.LVL100:
 2044              		.loc 7 493 3 is_stmt 0 view .LVU673
 2045              		.thumb
 2046              		.syntax unified
 2047              	.LBE437:
 2048              	.LBE436:
 2049              	.LBE435:
 2050              	.LBE434:
 2051              	.LBE433:
 2052              	.LBE432:
 697:lib/chibios/os/hal/src/hal_buffers.c **** }
 2053              		.loc 1 697 3 is_stmt 1 view .LVU674
 697:lib/chibios/os/hal/src/hal_buffers.c **** }
 2054              		.loc 1 697 10 is_stmt 0 view .LVU675
 2055 003e EDE7     		b	.L56
 2056              		.cfi_endproc
 2057              	.LFE346:
 2059              		.section	.text.obqWriteTimeout,"ax",%progbits
 2060              		.align	1
 2061              		.global	obqWriteTimeout
 2062              		.syntax unified
 2063              		.thumb
 2064              		.thumb_func
 2066              	obqWriteTimeout:
 2067              	.LVL101:
 2068              	.LFB347:
 699:lib/chibios/os/hal/src/hal_buffers.c **** 
 700:lib/chibios/os/hal/src/hal_buffers.c **** /**
 701:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Output queue write with timeout.
 702:lib/chibios/os/hal/src/hal_buffers.c ****  * @details The function writes data from a buffer to an output queue. The
 703:lib/chibios/os/hal/src/hal_buffers.c ****  *          operation completes when the specified amount of data has been
 704:lib/chibios/os/hal/src/hal_buffers.c ****  *          transferred or after the specified timeout or if the queue has
 705:lib/chibios/os/hal/src/hal_buffers.c ****  *          been reset.
 706:lib/chibios/os/hal/src/hal_buffers.c ****  *
 707:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 708:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to the data buffer
 709:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 710:lib/chibios/os/hal/src/hal_buffers.c ****  *                      value 0 is reserved
 711:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 712:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 713:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 714:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 715:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 716:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The number of bytes effectively transferred.
 717:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval 0            if a timeout occurred.
 718:lib/chibios/os/hal/src/hal_buffers.c ****  *
 719:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 720:lib/chibios/os/hal/src/hal_buffers.c ****  */
 721:lib/chibios/os/hal/src/hal_buffers.c **** size_t obqWriteTimeout(output_buffers_queue_t *obqp, const uint8_t *bp,
 722:lib/chibios/os/hal/src/hal_buffers.c ****                        size_t n, sysinterval_t timeout) {
 2069              		.loc 1 722 57 is_stmt 1 view -0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 0
 2072              		@ frame_needed = 0, uses_anonymous_args = 0
 2073              		.loc 1 722 57 is_stmt 0 view .LVU677
 2074 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2075              		.cfi_def_cfa_offset 40
 2076              		.cfi_offset 3, -40
 2077              		.cfi_offset 4, -36
 2078              		.cfi_offset 5, -32
 2079              		.cfi_offset 6, -28
 2080              		.cfi_offset 7, -24
 2081              		.cfi_offset 8, -20
 2082              		.cfi_offset 9, -16
 2083              		.cfi_offset 10, -12
 2084              		.cfi_offset 11, -8
 2085              		.cfi_offset 14, -4
 2086              		.loc 1 722 57 view .LVU678
 2087 0004 0546     		mov	r5, r0
 723:lib/chibios/os/hal/src/hal_buffers.c ****   size_t w = 0;
 2088              		.loc 1 723 3 is_stmt 1 view .LVU679
 2089              	.LVL102:
 724:lib/chibios/os/hal/src/hal_buffers.c **** 
 725:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck(n > 0U);
 2090              		.loc 1 725 3 view .LVU680
 2091              		.loc 1 725 3 view .LVU681
 2092              		.loc 1 725 3 view .LVU682
 726:lib/chibios/os/hal/src/hal_buffers.c **** 
 727:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 2093              		.loc 1 727 3 view .LVU683
 2094              	.LBB438:
 2095              	.LBI438:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2096              		.loc 2 573 20 view .LVU684
 2097              	.LBB439:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2098              		.loc 2 575 3 view .LVU685
 2099              	.LBB440:
 2100              	.LBI440:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 2101              		.loc 5 355 20 view .LVU686
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2102              		.loc 5 357 3 view .LVU687
 2103              	.LBB441:
 2104              	.LBI441:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2105              		.loc 6 669 27 view .LVU688
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2106              		.loc 6 677 3 view .LVU689
 2107              	.LBB442:
 2108              	.LBI442:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2109              		.loc 7 491 27 view .LVU690
 2110              	.LBB443:
 2111              		.loc 7 493 3 view .LVU691
 2112              	.LBE443:
 2113              	.LBE442:
 2114              	.LBE441:
 2115              	.LBE440:
 2116              	.LBE439:
 2117              	.LBE438:
 722:lib/chibios/os/hal/src/hal_buffers.c ****   size_t w = 0;
 2118              		.loc 1 722 57 is_stmt 0 view .LVU692
 2119 0006 0C46     		mov	r4, r1
 2120 0008 9146     		mov	r9, r2
 2121 000a 9A46     		mov	r10, r3
 2122              	.LBB449:
 2123              	.LBB448:
 2124              	.LBB447:
 2125              	.LBB446:
 2126              	.LBB445:
 2127              	.LBB444:
 2128              		.loc 7 493 3 view .LVU693
 2129 000c 4FF02008 		mov	r8, #32
 2130              		.syntax unified
 2131              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2132 0010 88F31188 		MSR basepri, r8
 2133              	@ 0 "" 2
 2134              	.LVL103:
 2135              		.loc 7 493 3 view .LVU694
 2136              		.thumb
 2137              		.syntax unified
 2138              	.LBE444:
 2139              	.LBE445:
 2140              	.LBE446:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2141              		.loc 5 358 34 is_stmt 1 view .LVU695
 359:./lib/chibios/os/rt/include/chsys.h **** }
 2142              		.loc 5 359 20 view .LVU696
 2143              	.LBE447:
 2144              	.LBE448:
 2145              	.LBE449:
 723:lib/chibios/os/hal/src/hal_buffers.c **** 
 2146              		.loc 1 723 10 is_stmt 0 view .LVU697
 2147 0014 0027     		movs	r7, #0
 2148              	.LBB450:
 2149              	.LBB451:
 2150              	.LBB452:
 2151              	.LBB453:
 2152              	.LBB454:
 2153              	.LBB455:
 2154              	.LBB456:
 2155              		.loc 7 493 3 view .LVU698
 2156 0016 BB46     		mov	fp, r7
 2157              	.LVL104:
 2158              	.L70:
 2159              		.loc 7 493 3 view .LVU699
 2160              	.LBE456:
 2161              	.LBE455:
 2162              	.LBE454:
 2163              	.LBE453:
 2164              	.LBE452:
 2165              	.LBE451:
 2166              	.LBE450:
 728:lib/chibios/os/hal/src/hal_buffers.c **** 
 729:lib/chibios/os/hal/src/hal_buffers.c ****   while (true) {
 2167              		.loc 1 729 3 is_stmt 1 view .LVU700
 2168              	.LBB476:
 730:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size;
 2169              		.loc 1 730 5 view .LVU701
 731:lib/chibios/os/hal/src/hal_buffers.c **** 
 732:lib/chibios/os/hal/src/hal_buffers.c ****     /* This condition indicates that a new buffer must be acquired.*/
 733:lib/chibios/os/hal/src/hal_buffers.c ****     if (obqp->ptr == NULL) {
 2170              		.loc 1 733 5 view .LVU702
 2171              		.loc 1 733 8 is_stmt 0 view .LVU703
 2172 0018 AE6A     		ldr	r6, [r5, #40]
 2173 001a 4EB9     		cbnz	r6, .L64
 2174              	.LBB462:
 734:lib/chibios/os/hal/src/hal_buffers.c ****       msg_t msg;
 2175              		.loc 1 734 7 is_stmt 1 view .LVU704
 735:lib/chibios/os/hal/src/hal_buffers.c **** 
 736:lib/chibios/os/hal/src/hal_buffers.c ****       /* Getting an empty buffer using the specified timeout.*/
 737:lib/chibios/os/hal/src/hal_buffers.c ****       msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 2176              		.loc 1 737 7 view .LVU705
 2177              		.loc 1 737 13 is_stmt 0 view .LVU706
 2178 001c 5146     		mov	r1, r10
 2179 001e 2846     		mov	r0, r5
 2180 0020 FFF7FEFF 		bl	obqGetEmptyBufferTimeoutS
 2181              	.LVL105:
 738:lib/chibios/os/hal/src/hal_buffers.c **** 
 739:lib/chibios/os/hal/src/hal_buffers.c ****       /* Anything except MSG_OK interrupts the operation.*/
 740:lib/chibios/os/hal/src/hal_buffers.c ****       if (msg != MSG_OK) {
 2182              		.loc 1 740 7 is_stmt 1 view .LVU707
 2183              		.loc 1 740 10 is_stmt 0 view .LVU708
 2184 0024 20B1     		cbz	r0, .L64
 741:lib/chibios/os/hal/src/hal_buffers.c ****         osalSysUnlock();
 2185              		.loc 1 741 9 is_stmt 1 view .LVU709
 2186              	.LBB463:
 2187              	.LBI463:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2188              		.loc 2 584 20 view .LVU710
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2189              		.loc 2 586 3 view .LVU711
 2190              	.LBB464:
 2191              	.LBI464:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2192              		.loc 5 367 20 view .LVU712
 2193              	.LBB465:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2194              		.loc 5 369 22 view .LVU713
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2195              		.loc 5 370 33 view .LVU714
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2196              		.loc 5 376 3 view .LVU715
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2197              		.loc 5 376 3 view .LVU716
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2198              		.loc 5 376 3 view .LVU717
 2199              		.loc 5 380 3 view .LVU718
 2200              	.LBB466:
 2201              	.LBI466:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2202              		.loc 6 693 27 view .LVU719
 2203              		.loc 6 696 3 view .LVU720
 2204              	.LVL106:
 2205              	.LBB467:
 2206              	.LBI467:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2207              		.loc 7 491 27 view .LVU721
 2208              	.LBB468:
 2209              		.loc 7 493 3 view .LVU722
 2210              		.syntax unified
 2211              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2212 0026 86F31188 		MSR basepri, r6
 2213              	@ 0 "" 2
 2214              	.LVL107:
 2215              		.loc 7 493 3 is_stmt 0 view .LVU723
 2216              		.thumb
 2217              		.syntax unified
 2218              	.LBE468:
 2219              	.LBE467:
 2220              	.LBE466:
 2221              	.LBE465:
 2222              	.LBE464:
 2223              	.LBE463:
 742:lib/chibios/os/hal/src/hal_buffers.c ****         return w;
 2224              		.loc 1 742 9 is_stmt 1 view .LVU724
 2225              	.L63:
 2226              		.loc 1 742 9 is_stmt 0 view .LVU725
 2227              	.LBE462:
 2228              	.LBE476:
 743:lib/chibios/os/hal/src/hal_buffers.c ****       }
 744:lib/chibios/os/hal/src/hal_buffers.c ****     }
 745:lib/chibios/os/hal/src/hal_buffers.c **** 
 746:lib/chibios/os/hal/src/hal_buffers.c ****     /* Size of the space available in the current buffer.*/
 747:lib/chibios/os/hal/src/hal_buffers.c ****     size = (size_t)obqp->top - (size_t)obqp->ptr;
 748:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 749:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - w;
 750:lib/chibios/os/hal/src/hal_buffers.c ****     }
 751:lib/chibios/os/hal/src/hal_buffers.c **** 
 752:lib/chibios/os/hal/src/hal_buffers.c ****     /* Smaller chunks in order to not make the critical zone too long,
 753:lib/chibios/os/hal/src/hal_buffers.c ****        this impacts throughput however.*/
 754:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (size_t)BUFFERS_CHUNKS_SIZE) {
 755:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 756:lib/chibios/os/hal/src/hal_buffers.c ****       memcpy(obqp->ptr, bp, (size_t)BUFFERS_CHUNKS_SIZE);
 757:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 758:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 759:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 760:lib/chibios/os/hal/src/hal_buffers.c ****     }
 761:lib/chibios/os/hal/src/hal_buffers.c ****     else {
 762:lib/chibios/os/hal/src/hal_buffers.c ****       memcpy(obqp->ptr, bp, size);
 763:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += size;
 764:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 765:lib/chibios/os/hal/src/hal_buffers.c ****       w         += size;
 766:lib/chibios/os/hal/src/hal_buffers.c ****     }
 767:lib/chibios/os/hal/src/hal_buffers.c **** 
 768:lib/chibios/os/hal/src/hal_buffers.c ****     /* Has the current data buffer been finished? if so then release it.*/
 769:lib/chibios/os/hal/src/hal_buffers.c ****     if (obqp->ptr >= obqp->top) {
 770:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 771:lib/chibios/os/hal/src/hal_buffers.c ****     }
 772:lib/chibios/os/hal/src/hal_buffers.c **** 
 773:lib/chibios/os/hal/src/hal_buffers.c ****     /* Giving a preemption chance.*/
 774:lib/chibios/os/hal/src/hal_buffers.c ****     osalSysUnlock();
 775:lib/chibios/os/hal/src/hal_buffers.c ****     if (w >= n) {
 776:lib/chibios/os/hal/src/hal_buffers.c ****       return w;
 777:lib/chibios/os/hal/src/hal_buffers.c ****     }
 778:lib/chibios/os/hal/src/hal_buffers.c ****     osalSysLock();
 779:lib/chibios/os/hal/src/hal_buffers.c ****   }
 780:lib/chibios/os/hal/src/hal_buffers.c **** }
 2229              		.loc 1 780 1 view .LVU726
 2230 002a 3846     		mov	r0, r7
 2231 002c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2232              	.LVL108:
 2233              	.L64:
 2234              	.LBB477:
 747:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 2235              		.loc 1 747 5 is_stmt 1 view .LVU727
 747:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 2236              		.loc 1 747 10 is_stmt 0 view .LVU728
 2237 0030 D5E90A06 		ldrd	r0, r6, [r5, #40]
 748:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - w;
 2238              		.loc 1 748 19 view .LVU729
 2239 0034 A9EB0703 		sub	r3, r9, r7
 747:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 2240              		.loc 1 747 10 view .LVU730
 2241 0038 361A     		subs	r6, r6, r0
 2242 003a 9E42     		cmp	r6, r3
 2243 003c 28BF     		it	cs
 2244 003e 1E46     		movcs	r6, r3
 2245              	.LVL109:
 754:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 2246              		.loc 1 754 5 is_stmt 1 view .LVU731
 754:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 2247              		.loc 1 754 8 is_stmt 0 view .LVU732
 2248 0040 402E     		cmp	r6, #64
 2249 0042 1AD9     		bls	.L66
 756:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 2250              		.loc 1 756 7 is_stmt 1 view .LVU733
 2251 0044 04F14003 		add	r3, r4, #64
 2252              	.LVL110:
 2253              	.L67:
 756:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 2254              		.loc 1 756 7 is_stmt 0 view .LVU734
 2255 0048 54F8042B 		ldr	r2, [r4], #4	@ unaligned
 2256 004c 40F8042B 		str	r2, [r0], #4	@ unaligned
 2257 0050 9C42     		cmp	r4, r3
 2258 0052 F9D1     		bne	.L67
 757:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 2259              		.loc 1 757 7 is_stmt 1 view .LVU735
 2260              	.LVL111:
 758:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 2261              		.loc 1 758 7 view .LVU736
 758:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 2262              		.loc 1 758 17 is_stmt 0 view .LVU737
 2263 0054 AB6A     		ldr	r3, [r5, #40]
 759:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2264              		.loc 1 759 17 view .LVU738
 2265 0056 4037     		adds	r7, r7, #64
 2266              	.LVL112:
 758:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 2267              		.loc 1 758 17 view .LVU739
 2268 0058 4033     		adds	r3, r3, #64
 759:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2269              		.loc 1 759 7 is_stmt 1 view .LVU740
 2270              	.LVL113:
 2271              	.L68:
 769:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2272              		.loc 1 769 8 is_stmt 0 view .LVU741
 2273 005a EA6A     		ldr	r2, [r5, #44]
 758:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 2274              		.loc 1 758 17 view .LVU742
 2275 005c AB62     		str	r3, [r5, #40]
 2276              	.LVL114:
 769:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2277              		.loc 1 769 5 is_stmt 1 view .LVU743
 769:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2278              		.loc 1 769 8 is_stmt 0 view .LVU744
 2279 005e 9A42     		cmp	r2, r3
 2280 0060 04D8     		bhi	.L69
 770:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2281              		.loc 1 770 7 is_stmt 1 view .LVU745
 2282 0062 E969     		ldr	r1, [r5, #28]
 2283 0064 2846     		mov	r0, r5
 2284 0066 0439     		subs	r1, r1, #4
 2285 0068 FFF7FEFF 		bl	obqPostFullBufferS
 2286              	.LVL115:
 2287              	.L69:
 774:lib/chibios/os/hal/src/hal_buffers.c ****     if (w >= n) {
 2288              		.loc 1 774 5 view .LVU746
 2289              	.LBB469:
 2290              	.LBI451:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2291              		.loc 2 584 20 view .LVU747
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2292              		.loc 2 586 3 view .LVU748
 2293              	.LBB461:
 2294              	.LBI452:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2295              		.loc 5 367 20 view .LVU749
 2296              	.LBB460:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2297              		.loc 5 369 22 view .LVU750
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2298              		.loc 5 370 33 view .LVU751
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2299              		.loc 5 376 3 view .LVU752
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2300              		.loc 5 376 3 view .LVU753
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2301              		.loc 5 376 3 view .LVU754
 2302              		.loc 5 380 3 view .LVU755
 2303              	.LBB459:
 2304              	.LBI454:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2305              		.loc 6 693 27 view .LVU756
 2306              		.loc 6 696 3 view .LVU757
 2307              	.LBB458:
 2308              	.LBI455:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2309              		.loc 7 491 27 view .LVU758
 2310              	.LBB457:
 2311              		.loc 7 493 3 view .LVU759
 2312              		.syntax unified
 2313              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2314 006c 8BF31188 		MSR basepri, fp
 2315              	@ 0 "" 2
 2316              	.LVL116:
 2317              		.loc 7 493 3 is_stmt 0 view .LVU760
 2318              		.thumb
 2319              		.syntax unified
 2320              	.LBE457:
 2321              	.LBE458:
 2322              	.LBE459:
 2323              	.LBE460:
 2324              	.LBE461:
 2325              	.LBE469:
 775:lib/chibios/os/hal/src/hal_buffers.c ****       return w;
 2326              		.loc 1 775 5 is_stmt 1 view .LVU761
 775:lib/chibios/os/hal/src/hal_buffers.c ****       return w;
 2327              		.loc 1 775 8 is_stmt 0 view .LVU762
 2328 0070 4F45     		cmp	r7, r9
 2329 0072 DAD2     		bcs	.L63
 778:lib/chibios/os/hal/src/hal_buffers.c ****   }
 2330              		.loc 1 778 5 is_stmt 1 view .LVU763
 2331              	.LBB470:
 2332              	.LBI470:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2333              		.loc 2 573 20 view .LVU764
 2334              	.LBB471:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2335              		.loc 2 575 3 view .LVU765
 2336              	.LBB472:
 2337              	.LBI472:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 2338              		.loc 5 355 20 view .LVU766
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2339              		.loc 5 357 3 view .LVU767
 2340              	.LBB473:
 2341              	.LBI473:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2342              		.loc 6 669 27 view .LVU768
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2343              		.loc 6 677 3 view .LVU769
 2344              	.LVL117:
 2345              	.LBB474:
 2346              	.LBI474:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2347              		.loc 7 491 27 view .LVU770
 2348              	.LBB475:
 2349              		.loc 7 493 3 view .LVU771
 2350              		.syntax unified
 2351              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2352 0074 88F31188 		MSR basepri, r8
 2353              	@ 0 "" 2
 2354              	.LVL118:
 2355              		.loc 7 493 3 is_stmt 0 view .LVU772
 2356              		.thumb
 2357              		.syntax unified
 2358              	.LBE475:
 2359              	.LBE474:
 2360              	.LBE473:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2361              		.loc 5 358 34 is_stmt 1 view .LVU773
 359:./lib/chibios/os/rt/include/chsys.h **** }
 2362              		.loc 5 359 20 view .LVU774
 2363              	.LBE472:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2364              		.loc 2 576 1 is_stmt 0 view .LVU775
 2365 0078 CEE7     		b	.L70
 2366              	.L66:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2367              		.loc 2 576 1 view .LVU776
 2368              	.LBE471:
 2369              	.LBE470:
 762:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += size;
 2370              		.loc 1 762 7 is_stmt 1 view .LVU777
 2371 007a 2146     		mov	r1, r4
 2372 007c 3246     		mov	r2, r6
 2373 007e FFF7FEFF 		bl	memcpy
 2374              	.LVL119:
 763:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 2375              		.loc 1 763 7 view .LVU778
 764:lib/chibios/os/hal/src/hal_buffers.c ****       w         += size;
 2376              		.loc 1 764 17 is_stmt 0 view .LVU779
 2377 0082 AB6A     		ldr	r3, [r5, #40]
 763:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 2378              		.loc 1 763 17 view .LVU780
 2379 0084 3444     		add	r4, r4, r6
 2380              	.LVL120:
 764:lib/chibios/os/hal/src/hal_buffers.c ****       w         += size;
 2381              		.loc 1 764 7 is_stmt 1 view .LVU781
 764:lib/chibios/os/hal/src/hal_buffers.c ****       w         += size;
 2382              		.loc 1 764 17 is_stmt 0 view .LVU782
 2383 0086 3344     		add	r3, r3, r6
 765:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2384              		.loc 1 765 7 is_stmt 1 view .LVU783
 765:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2385              		.loc 1 765 17 is_stmt 0 view .LVU784
 2386 0088 3744     		add	r7, r7, r6
 2387              	.LVL121:
 765:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2388              		.loc 1 765 17 view .LVU785
 2389 008a E6E7     		b	.L68
 2390              	.LBE477:
 2391              		.cfi_endproc
 2392              	.LFE347:
 2394              		.section	.text.obqTryFlushI,"ax",%progbits
 2395              		.align	1
 2396              		.global	obqTryFlushI
 2397              		.syntax unified
 2398              		.thumb
 2399              		.thumb_func
 2401              	obqTryFlushI:
 2402              	.LVL122:
 2403              	.LFB348:
 781:lib/chibios/os/hal/src/hal_buffers.c **** 
 782:lib/chibios/os/hal/src/hal_buffers.c **** /**
 783:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Flushes the current, partially filled, buffer to the queue.
 784:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The notification callback is not invoked because the function
 785:lib/chibios/os/hal/src/hal_buffers.c ****  *          is meant to be called from ISR context. An operation status is
 786:lib/chibios/os/hal/src/hal_buffers.c ****  *          returned instead.
 787:lib/chibios/os/hal/src/hal_buffers.c ****  *
 788:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 789:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The operation status.
 790:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval false        if no new filled buffer has been posted to the queue.
 791:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval true         if a new filled buffer has been posted to the queue.
 792:lib/chibios/os/hal/src/hal_buffers.c ****  *
 793:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 794:lib/chibios/os/hal/src/hal_buffers.c ****  */
 795:lib/chibios/os/hal/src/hal_buffers.c **** bool obqTryFlushI(output_buffers_queue_t *obqp) {
 2404              		.loc 1 795 49 is_stmt 1 view -0
 2405              		.cfi_startproc
 2406              		@ args = 0, pretend = 0, frame = 0
 2407              		@ frame_needed = 0, uses_anonymous_args = 0
 2408              		@ link register save eliminated.
 796:lib/chibios/os/hal/src/hal_buffers.c **** 
 797:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 2409              		.loc 1 797 23 view .LVU787
 798:lib/chibios/os/hal/src/hal_buffers.c **** 
 799:lib/chibios/os/hal/src/hal_buffers.c ****   /* If queue is empty and there is a buffer partially filled and
 800:lib/chibios/os/hal/src/hal_buffers.c ****      it is not being written.*/
 801:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqIsEmptyI(obqp) && (obqp->ptr != NULL)) {
 2410              		.loc 1 801 3 view .LVU788
 2411              		.loc 1 801 7 is_stmt 0 view .LVU789
 2412 0000 D0E90421 		ldrd	r2, r1, [r0, #16]
 2413 0004 8A42     		cmp	r2, r1
 795:lib/chibios/os/hal/src/hal_buffers.c **** 
 2414              		.loc 1 795 49 view .LVU790
 2415 0006 0346     		mov	r3, r0
 2416              		.loc 1 801 7 view .LVU791
 2417 0008 16D1     		bne	.L78
 2418              		.loc 1 801 7 discriminator 1 view .LVU792
 2419 000a C068     		ldr	r0, [r0, #12]
 2420              	.LVL123:
 2421              		.loc 1 801 7 discriminator 1 view .LVU793
 2422 000c A8B1     		cbz	r0, .L76
 2423              		.loc 1 801 33 view .LVU794
 2424 000e 986A     		ldr	r0, [r3, #40]
 2425              		.loc 1 801 25 view .LVU795
 2426 0010 98B1     		cbz	r0, .L76
 2427              	.LBB478:
 802:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 2428              		.loc 1 802 5 is_stmt 1 view .LVU796
 2429              		.loc 1 802 12 is_stmt 0 view .LVU797
 2430 0012 0438     		subs	r0, r0, #4
 2431              	.LVL124:
 803:lib/chibios/os/hal/src/hal_buffers.c **** 
 804:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > 0U) {
 2432              		.loc 1 804 5 is_stmt 1 view .LVU798
 2433              		.loc 1 804 8 is_stmt 0 view .LVU799
 2434 0014 801A     		subs	r0, r0, r2
 2435              	.LVL125:
 2436              		.loc 1 804 8 view .LVU800
 2437 0016 10D0     		beq	.L76
 805:lib/chibios/os/hal/src/hal_buffers.c **** 
 806:lib/chibios/os/hal/src/hal_buffers.c ****       /* Writing size field in the buffer.*/
 807:lib/chibios/os/hal/src/hal_buffers.c ****       *((size_t *)obqp->bwrptr) = size;
 2438              		.loc 1 807 7 is_stmt 1 view .LVU801
 2439              		.loc 1 807 33 is_stmt 0 view .LVU802
 2440 0018 1060     		str	r0, [r2]
 808:lib/chibios/os/hal/src/hal_buffers.c **** 
 809:lib/chibios/os/hal/src/hal_buffers.c ****       /* Posting the buffer in the queue.*/
 810:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->bcounter--;
 2441              		.loc 1 810 7 is_stmt 1 view .LVU803
 2442              		.loc 1 810 11 is_stmt 0 view .LVU804
 2443 001a D968     		ldr	r1, [r3, #12]
 2444              		.loc 1 810 21 view .LVU805
 2445 001c 0139     		subs	r1, r1, #1
 2446 001e D960     		str	r1, [r3, #12]
 811:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 2447              		.loc 1 811 7 is_stmt 1 view .LVU806
 2448              		.loc 1 811 20 is_stmt 0 view .LVU807
 2449 0020 D969     		ldr	r1, [r3, #28]
 2450 0022 0A44     		add	r2, r2, r1
 812:lib/chibios/os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 2451              		.loc 1 812 10 view .LVU808
 2452 0024 9969     		ldr	r1, [r3, #24]
 811:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 2453              		.loc 1 811 20 view .LVU809
 2454 0026 1A61     		str	r2, [r3, #16]
 2455              		.loc 1 812 7 is_stmt 1 view .LVU810
 2456              		.loc 1 812 10 is_stmt 0 view .LVU811
 2457 0028 8A42     		cmp	r2, r1
 813:lib/chibios/os/hal/src/hal_buffers.c ****         obqp->bwrptr = obqp->buffers;
 2458              		.loc 1 813 9 is_stmt 1 view .LVU812
 2459              		.loc 1 813 22 is_stmt 0 view .LVU813
 2460 002a 24BF     		itt	cs
 2461 002c 5A6A     		ldrcs	r2, [r3, #36]
 2462 002e 1A61     		strcs	r2, [r3, #16]
 814:lib/chibios/os/hal/src/hal_buffers.c ****       }
 815:lib/chibios/os/hal/src/hal_buffers.c **** 
 816:lib/chibios/os/hal/src/hal_buffers.c ****       /* No "current" buffer.*/
 817:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr = NULL;
 2463              		.loc 1 817 7 is_stmt 1 view .LVU814
 2464              		.loc 1 817 17 is_stmt 0 view .LVU815
 2465 0030 0022     		movs	r2, #0
 2466 0032 9A62     		str	r2, [r3, #40]
 818:lib/chibios/os/hal/src/hal_buffers.c **** 
 819:lib/chibios/os/hal/src/hal_buffers.c ****       return true;
 2467              		.loc 1 819 7 is_stmt 1 view .LVU816
 2468              		.loc 1 819 14 is_stmt 0 view .LVU817
 2469 0034 0120     		movs	r0, #1
 2470              	.LVL126:
 2471              		.loc 1 819 14 view .LVU818
 2472 0036 7047     		bx	lr
 2473              	.LVL127:
 2474              	.L78:
 2475              		.loc 1 819 14 view .LVU819
 2476              	.LBE478:
 820:lib/chibios/os/hal/src/hal_buffers.c ****     }
 821:lib/chibios/os/hal/src/hal_buffers.c ****   }
 822:lib/chibios/os/hal/src/hal_buffers.c ****   return false;
 2477              		.loc 1 822 10 view .LVU820
 2478 0038 0020     		movs	r0, #0
 2479              	.LVL128:
 2480              	.L76:
 823:lib/chibios/os/hal/src/hal_buffers.c **** }
 2481              		.loc 1 823 1 view .LVU821
 2482 003a 7047     		bx	lr
 2483              		.cfi_endproc
 2484              	.LFE348:
 2486              		.section	.text.obqFlush,"ax",%progbits
 2487              		.align	1
 2488              		.global	obqFlush
 2489              		.syntax unified
 2490              		.thumb
 2491              		.thumb_func
 2493              	obqFlush:
 2494              	.LVL129:
 2495              	.LFB349:
 824:lib/chibios/os/hal/src/hal_buffers.c **** 
 825:lib/chibios/os/hal/src/hal_buffers.c **** /**
 826:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Flushes the current, partially filled, buffer to the queue.
 827:lib/chibios/os/hal/src/hal_buffers.c ****  *
 828:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 829:lib/chibios/os/hal/src/hal_buffers.c ****  *
 830:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 831:lib/chibios/os/hal/src/hal_buffers.c ****  */
 832:lib/chibios/os/hal/src/hal_buffers.c **** void obqFlush(output_buffers_queue_t *obqp) {
 2496              		.loc 1 832 45 is_stmt 1 view -0
 2497              		.cfi_startproc
 2498              		@ args = 0, pretend = 0, frame = 0
 2499              		@ frame_needed = 0, uses_anonymous_args = 0
 833:lib/chibios/os/hal/src/hal_buffers.c **** 
 834:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 2500              		.loc 1 834 3 view .LVU823
 2501              	.LBB479:
 2502              	.LBI479:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2503              		.loc 2 573 20 view .LVU824
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2504              		.loc 2 575 3 view .LVU825
 2505              	.LBB480:
 2506              	.LBI480:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 2507              		.loc 5 355 20 view .LVU826
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2508              		.loc 5 357 3 view .LVU827
 2509              	.LBB481:
 2510              	.LBI481:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2511              		.loc 6 669 27 view .LVU828
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2512              		.loc 6 677 3 view .LVU829
 2513              	.LBB482:
 2514              	.LBI482:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2515              		.loc 7 491 27 view .LVU830
 2516              	.LBB483:
 2517              		.loc 7 493 3 view .LVU831
 2518              	.LBE483:
 2519              	.LBE482:
 2520              	.LBE481:
 2521              	.LBE480:
 2522              	.LBE479:
 832:lib/chibios/os/hal/src/hal_buffers.c **** 
 2523              		.loc 1 832 45 is_stmt 0 view .LVU832
 2524 0000 08B5     		push	{r3, lr}
 2525              		.cfi_def_cfa_offset 8
 2526              		.cfi_offset 3, -8
 2527              		.cfi_offset 14, -4
 2528              	.LBB488:
 2529              	.LBB487:
 2530              	.LBB486:
 2531              	.LBB485:
 2532              	.LBB484:
 2533              		.loc 7 493 3 view .LVU833
 2534 0002 2022     		movs	r2, #32
 2535              		.syntax unified
 2536              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2537 0004 82F31188 		MSR basepri, r2
 2538              	@ 0 "" 2
 2539              	.LVL130:
 2540              		.loc 7 493 3 view .LVU834
 2541              		.thumb
 2542              		.syntax unified
 2543              	.LBE484:
 2544              	.LBE485:
 2545              	.LBE486:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2546              		.loc 5 358 34 is_stmt 1 view .LVU835
 359:./lib/chibios/os/rt/include/chsys.h **** }
 2547              		.loc 5 359 20 view .LVU836
 2548              	.LBE487:
 2549              	.LBE488:
 835:lib/chibios/os/hal/src/hal_buffers.c **** 
 836:lib/chibios/os/hal/src/hal_buffers.c ****   /* If there is a buffer partially filled and not being written.*/
 837:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->ptr != NULL) {
 2550              		.loc 1 837 3 view .LVU837
 2551              		.loc 1 837 11 is_stmt 0 view .LVU838
 2552 0008 816A     		ldr	r1, [r0, #40]
 2553              		.loc 1 837 6 view .LVU839
 2554 000a 29B1     		cbz	r1, .L83
 2555              	.LBB489:
 838:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = ((size_t)obqp->ptr - (size_t)obqp->bwrptr) - sizeof (size_t);
 2556              		.loc 1 838 5 is_stmt 1 view .LVU840
 2557              		.loc 1 838 12 is_stmt 0 view .LVU841
 2558 000c 0369     		ldr	r3, [r0, #16]
 2559 000e 0439     		subs	r1, r1, #4
 2560              	.LVL131:
 839:lib/chibios/os/hal/src/hal_buffers.c **** 
 840:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > 0U) {
 2561              		.loc 1 840 5 is_stmt 1 view .LVU842
 2562              		.loc 1 840 8 is_stmt 0 view .LVU843
 2563 0010 C91A     		subs	r1, r1, r3
 2564              	.LVL132:
 2565              		.loc 1 840 8 view .LVU844
 2566 0012 01D0     		beq	.L83
 841:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, size);
 2567              		.loc 1 841 7 is_stmt 1 view .LVU845
 2568 0014 FFF7FEFF 		bl	obqPostFullBufferS
 2569              	.LVL133:
 2570              	.L83:
 2571              		.loc 1 841 7 is_stmt 0 view .LVU846
 2572              	.LBE489:
 842:lib/chibios/os/hal/src/hal_buffers.c ****     }
 843:lib/chibios/os/hal/src/hal_buffers.c ****   }
 844:lib/chibios/os/hal/src/hal_buffers.c **** 
 845:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 2573              		.loc 1 845 3 is_stmt 1 view .LVU847
 2574              	.LBB490:
 2575              	.LBI490:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2576              		.loc 2 584 20 view .LVU848
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2577              		.loc 2 586 3 view .LVU849
 2578              	.LBB491:
 2579              	.LBI491:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 2580              		.loc 5 367 20 view .LVU850
 2581              	.LBB492:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2582              		.loc 5 369 22 view .LVU851
 370:./lib/chibios/os/rt/include/chsys.h **** 
 2583              		.loc 5 370 33 view .LVU852
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2584              		.loc 5 376 3 view .LVU853
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2585              		.loc 5 376 3 view .LVU854
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 2586              		.loc 5 376 3 view .LVU855
 2587              		.loc 5 380 3 view .LVU856
 2588              	.LBB493:
 2589              	.LBI493:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2590              		.loc 6 693 27 view .LVU857
 2591              		.loc 6 696 3 view .LVU858
 2592              	.LBB494:
 2593              	.LBI494:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2594              		.loc 7 491 27 view .LVU859
 2595              	.LBB495:
 2596              		.loc 7 493 3 view .LVU860
 2597 0018 0023     		movs	r3, #0
 2598              		.syntax unified
 2599              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2600 001a 83F31188 		MSR basepri, r3
 2601              	@ 0 "" 2
 2602              	.LVL134:
 2603              		.loc 7 493 3 is_stmt 0 view .LVU861
 2604              		.thumb
 2605              		.syntax unified
 2606              	.LBE495:
 2607              	.LBE494:
 2608              	.LBE493:
 2609              	.LBE492:
 2610              	.LBE491:
 2611              	.LBE490:
 846:lib/chibios/os/hal/src/hal_buffers.c **** }
 2612              		.loc 1 846 1 view .LVU862
 2613 001e 08BD     		pop	{r3, pc}
 2614              		.cfi_endproc
 2615              	.LFE349:
 2617              		.text
 2618              	.Letext0:
 2619              		.file 8 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 2620              		.file 9 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2621              		.file 10 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2622              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2623              		.file 12 "./lib/chibios/os/rt/include/chsystypes.h"
 2624              		.file 13 "./lib/chibios/os/rt/include/chschd.h"
 2625              		.file 14 "./lib/chibios/os/rt/include/chtime.h"
 2626              		.file 15 "./lib/chibios/os/hal/include/hal_buffers.h"
 2627              		.file 16 "/usr/arm-none-eabi/include/string.h"
 2628              		.file 17 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_buffers.c
     /tmp/cc9es6OD.s:21     .text.ibqObjectInit:0000000000000000 $t
     /tmp/cc9es6OD.s:27     .text.ibqObjectInit:0000000000000000 ibqObjectInit
     /tmp/cc9es6OD.s:126    .text.ibqResetI:0000000000000000 $t
     /tmp/cc9es6OD.s:132    .text.ibqResetI:0000000000000000 ibqResetI
     /tmp/cc9es6OD.s:171    .text.ibqGetEmptyBufferI:0000000000000000 $t
     /tmp/cc9es6OD.s:177    .text.ibqGetEmptyBufferI:0000000000000000 ibqGetEmptyBufferI
     /tmp/cc9es6OD.s:212    .text.ibqPostFullBufferI:0000000000000000 $t
     /tmp/cc9es6OD.s:218    .text.ibqPostFullBufferI:0000000000000000 ibqPostFullBufferI
     /tmp/cc9es6OD.s:279    .text.ibqGetFullBufferTimeoutS:0000000000000000 $t
     /tmp/cc9es6OD.s:285    .text.ibqGetFullBufferTimeoutS:0000000000000000 ibqGetFullBufferTimeoutS
     /tmp/cc9es6OD.s:381    .text.ibqGetFullBufferTimeout:0000000000000000 $t
     /tmp/cc9es6OD.s:387    .text.ibqGetFullBufferTimeout:0000000000000000 ibqGetFullBufferTimeout
     /tmp/cc9es6OD.s:498    .text.ibqReleaseEmptyBufferS:0000000000000000 $t
     /tmp/cc9es6OD.s:504    .text.ibqReleaseEmptyBufferS:0000000000000000 ibqReleaseEmptyBufferS
     /tmp/cc9es6OD.s:559    .text.ibqReleaseEmptyBuffer:0000000000000000 $t
     /tmp/cc9es6OD.s:565    .text.ibqReleaseEmptyBuffer:0000000000000000 ibqReleaseEmptyBuffer
     /tmp/cc9es6OD.s:670    .text.ibqGetTimeout:0000000000000000 $t
     /tmp/cc9es6OD.s:676    .text.ibqGetTimeout:0000000000000000 ibqGetTimeout
     /tmp/cc9es6OD.s:873    .text.ibqReadTimeout:0000000000000000 $t
     /tmp/cc9es6OD.s:879    .text.ibqReadTimeout:0000000000000000 ibqReadTimeout
     /tmp/cc9es6OD.s:1204   .text.obqObjectInit:0000000000000000 $t
     /tmp/cc9es6OD.s:1210   .text.obqObjectInit:0000000000000000 obqObjectInit
     /tmp/cc9es6OD.s:1304   .text.obqResetI:0000000000000000 $t
     /tmp/cc9es6OD.s:1310   .text.obqResetI:0000000000000000 obqResetI
     /tmp/cc9es6OD.s:1351   .text.obqGetFullBufferI:0000000000000000 $t
     /tmp/cc9es6OD.s:1357   .text.obqGetFullBufferI:0000000000000000 obqGetFullBufferI
     /tmp/cc9es6OD.s:1398   .text.obqReleaseEmptyBufferI:0000000000000000 $t
     /tmp/cc9es6OD.s:1404   .text.obqReleaseEmptyBufferI:0000000000000000 obqReleaseEmptyBufferI
     /tmp/cc9es6OD.s:1457   .text.obqGetEmptyBufferTimeoutS:0000000000000000 $t
     /tmp/cc9es6OD.s:1463   .text.obqGetEmptyBufferTimeoutS:0000000000000000 obqGetEmptyBufferTimeoutS
     /tmp/cc9es6OD.s:1558   .text.obqGetEmptyBufferTimeout:0000000000000000 $t
     /tmp/cc9es6OD.s:1564   .text.obqGetEmptyBufferTimeout:0000000000000000 obqGetEmptyBufferTimeout
     /tmp/cc9es6OD.s:1672   .text.obqPostFullBufferS:0000000000000000 $t
     /tmp/cc9es6OD.s:1678   .text.obqPostFullBufferS:0000000000000000 obqPostFullBufferS
     /tmp/cc9es6OD.s:1739   .text.obqPostFullBuffer:0000000000000000 $t
     /tmp/cc9es6OD.s:1745   .text.obqPostFullBuffer:0000000000000000 obqPostFullBuffer
     /tmp/cc9es6OD.s:1850   .text.obqPutTimeout:0000000000000000 $t
     /tmp/cc9es6OD.s:1856   .text.obqPutTimeout:0000000000000000 obqPutTimeout
     /tmp/cc9es6OD.s:2060   .text.obqWriteTimeout:0000000000000000 $t
     /tmp/cc9es6OD.s:2066   .text.obqWriteTimeout:0000000000000000 obqWriteTimeout
     /tmp/cc9es6OD.s:2395   .text.obqTryFlushI:0000000000000000 $t
     /tmp/cc9es6OD.s:2401   .text.obqTryFlushI:0000000000000000 obqTryFlushI
     /tmp/cc9es6OD.s:2487   .text.obqFlush:0000000000000000 $t
     /tmp/cc9es6OD.s:2493   .text.obqFlush:0000000000000000 obqFlush

UNDEFINED SYMBOLS
chThdDequeueAllI
chThdDequeueNextI
chThdEnqueueTimeoutS
memcpy
