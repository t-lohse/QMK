   1               		.file	"bitwise.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.bitpop,"ax",@progbits
  11               	.global	bitpop
  13               	bitpop:
  14               	.LVL0:
  15               	.LFB0:
  16               		.file 1 "quantum/bitwise.c"
   1:quantum/bitwise.c **** /*
   2:quantum/bitwise.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:quantum/bitwise.c **** 
   4:quantum/bitwise.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/bitwise.c **** it under the terms of the GNU General Public License as published by
   6:quantum/bitwise.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/bitwise.c **** (at your option) any later version.
   8:quantum/bitwise.c **** 
   9:quantum/bitwise.c **** This program is distributed in the hope that it will be useful,
  10:quantum/bitwise.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/bitwise.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/bitwise.c **** GNU General Public License for more details.
  13:quantum/bitwise.c **** 
  14:quantum/bitwise.c **** You should have received a copy of the GNU General Public License
  15:quantum/bitwise.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/bitwise.c **** */
  17:quantum/bitwise.c **** 
  18:quantum/bitwise.c **** #include "util.h"
  19:quantum/bitwise.c **** 
  20:quantum/bitwise.c **** // bit population - return number of on-bit
  21:quantum/bitwise.c **** __attribute__((noinline)) uint8_t bitpop(uint8_t bits) {
  17               		.loc 1 21 56 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  22:quantum/bitwise.c ****     uint8_t c;
  23               		.loc 1 22 5 view .LVU1
  23:quantum/bitwise.c ****     for (c = 0; bits; c++) bits &= bits - 1;
  24               		.loc 1 23 5 view .LVU2
  25               		.loc 1 23 17 view .LVU3
  26 0000 90E0      		ldi r25,0
  27 0002 0E94 0000 		call __popcounthi2
  24:quantum/bitwise.c ****     return c;
  28               		.loc 1 24 5 view .LVU4
  29               	/* epilogue start */
  25:quantum/bitwise.c ****     /*
  26:quantum/bitwise.c ****         const uint8_t bit_count[] = { 0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4 };
  27:quantum/bitwise.c ****         return bit_count[bits>>4] + bit_count[bits&0x0F]
  28:quantum/bitwise.c ****     */
  29:quantum/bitwise.c **** }
  30               		.loc 1 29 1 is_stmt 0 view .LVU5
  31 0006 0895      		ret
  32               		.cfi_endproc
  33               	.LFE0:
  35               		.section	.text.bitpop16,"ax",@progbits
  36               	.global	bitpop16
  38               	bitpop16:
  39               	.LVL1:
  40               	.LFB1:
  30:quantum/bitwise.c **** 
  31:quantum/bitwise.c **** uint8_t bitpop16(uint16_t bits) {
  41               		.loc 1 31 33 is_stmt 1 view -0
  42               		.cfi_startproc
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  32:quantum/bitwise.c ****     uint8_t c;
  47               		.loc 1 32 5 view .LVU7
  33:quantum/bitwise.c ****     for (c = 0; bits; c++) bits &= bits - 1;
  48               		.loc 1 33 5 view .LVU8
  49               		.loc 1 33 17 view .LVU9
  50 0000 0E94 0000 		call __popcounthi2
  34:quantum/bitwise.c ****     return c;
  51               		.loc 1 34 5 view .LVU10
  52               	/* epilogue start */
  35:quantum/bitwise.c **** }
  53               		.loc 1 35 1 is_stmt 0 view .LVU11
  54 0004 0895      		ret
  55               		.cfi_endproc
  56               	.LFE1:
  58               		.section	.text.bitpop32,"ax",@progbits
  59               	.global	bitpop32
  61               	bitpop32:
  62               	.LVL2:
  63               	.LFB2:
  36:quantum/bitwise.c **** 
  37:quantum/bitwise.c **** uint8_t bitpop32(uint32_t bits) {
  64               		.loc 1 37 33 is_stmt 1 view -0
  65               		.cfi_startproc
  66               	/* prologue: function */
  67               	/* frame size = 0 */
  68               	/* stack size = 0 */
  69               	.L__stack_usage = 0
  38:quantum/bitwise.c ****     uint8_t c;
  70               		.loc 1 38 5 view .LVU13
  39:quantum/bitwise.c ****     for (c = 0; bits; c++) bits &= bits - 1;
  71               		.loc 1 39 5 view .LVU14
  72               		.loc 1 39 17 view .LVU15
  73 0000 0E94 0000 		call __popcountsi2
  40:quantum/bitwise.c ****     return c;
  74               		.loc 1 40 5 view .LVU16
  75               	/* epilogue start */
  41:quantum/bitwise.c **** }
  76               		.loc 1 41 1 is_stmt 0 view .LVU17
  77 0004 0895      		ret
  78               		.cfi_endproc
  79               	.LFE2:
  81               		.section	.text.biton,"ax",@progbits
  82               	.global	biton
  84               	biton:
  85               	.LVL3:
  86               	.LFB3:
  42:quantum/bitwise.c **** 
  43:quantum/bitwise.c **** // most significant on-bit - return highest location of on-bit
  44:quantum/bitwise.c **** // NOTE: return 0 when bit0 is on or all bits are off
  45:quantum/bitwise.c **** __attribute__((noinline)) uint8_t biton(uint8_t bits) {
  87               		.loc 1 45 55 is_stmt 1 view -0
  88               		.cfi_startproc
  89               	/* prologue: function */
  90               	/* frame size = 0 */
  91               	/* stack size = 0 */
  92               	.L__stack_usage = 0
  93               		.loc 1 45 55 is_stmt 0 view .LVU19
  94 0000 982F      		mov r25,r24
  46:quantum/bitwise.c ****     uint8_t n = 0;
  95               		.loc 1 46 5 is_stmt 1 view .LVU20
  96               	.LVL4:
  47:quantum/bitwise.c ****     if (bits >> 4) {
  97               		.loc 1 47 5 view .LVU21
  98               		.loc 1 47 9 is_stmt 0 view .LVU22
  99 0002 8295      		swap r24
 100               	.LVL5:
 101               		.loc 1 47 9 view .LVU23
 102 0004 8F70      		andi r24,lo8(15)
 103               		.loc 1 47 8 view .LVU24
 104 0006 01F0      		breq .L5
 105 0008 982F      		mov r25,r24
 106               	.LVL6:
  48:quantum/bitwise.c ****         bits >>= 4;
  49:quantum/bitwise.c ****         n += 4;
 107               		.loc 1 49 11 view .LVU25
 108 000a 84E0      		ldi r24,lo8(4)
 109               	.L5:
 110               	.LVL7:
  50:quantum/bitwise.c ****     }
  51:quantum/bitwise.c ****     if (bits >> 2) {
 111               		.loc 1 51 5 is_stmt 1 view .LVU26
 112               		.loc 1 51 9 is_stmt 0 view .LVU27
 113 000c 292F      		mov r18,r25
 114 000e 2695      		lsr r18
 115 0010 2695      		lsr r18
 116               		.loc 1 51 8 view .LVU28
 117 0012 01F0      		breq .L6
  52:quantum/bitwise.c ****         bits >>= 2;
 118               		.loc 1 52 9 is_stmt 1 view .LVU29
 119               	.LVL8:
  53:quantum/bitwise.c ****         n += 2;
 120               		.loc 1 53 9 view .LVU30
 121               		.loc 1 53 11 is_stmt 0 view .LVU31
 122 0014 8E5F      		subi r24,lo8(-(2))
 123               	.LVL9:
 124               		.loc 1 53 11 view .LVU32
 125 0016 922F      		mov r25,r18
 126               	.LVL10:
 127               	.L6:
  54:quantum/bitwise.c ****     }
  55:quantum/bitwise.c ****     if (bits >> 1) {
 128               		.loc 1 55 5 is_stmt 1 view .LVU33
 129               		.loc 1 55 9 is_stmt 0 view .LVU34
 130 0018 9695      		lsr r25
 131               	.LVL11:
 132               		.loc 1 55 8 view .LVU35
 133 001a 01F0      		breq .L4
  56:quantum/bitwise.c ****         bits >>= 1;
 134               		.loc 1 56 9 is_stmt 1 view .LVU36
 135               	.LVL12:
  57:quantum/bitwise.c ****         n += 1;
 136               		.loc 1 57 9 view .LVU37
 137               		.loc 1 57 11 is_stmt 0 view .LVU38
 138 001c 8F5F      		subi r24,lo8(-(1))
 139               	.LVL13:
  58:quantum/bitwise.c ****     }
  59:quantum/bitwise.c ****     return n;
 140               		.loc 1 59 5 is_stmt 1 view .LVU39
 141               	.L4:
 142               	/* epilogue start */
  60:quantum/bitwise.c **** }
 143               		.loc 1 60 1 is_stmt 0 view .LVU40
 144 001e 0895      		ret
 145               		.cfi_endproc
 146               	.LFE3:
 148               		.section	.text.biton16,"ax",@progbits
 149               	.global	biton16
 151               	biton16:
 152               	.LVL14:
 153               	.LFB4:
  61:quantum/bitwise.c **** 
  62:quantum/bitwise.c **** uint8_t biton16(uint16_t bits) {
 154               		.loc 1 62 32 is_stmt 1 view -0
 155               		.cfi_startproc
 156               	/* prologue: function */
 157               	/* frame size = 0 */
 158               	/* stack size = 0 */
 159               	.L__stack_usage = 0
 160               		.loc 1 62 32 is_stmt 0 view .LVU42
 161 0000 9C01      		movw r18,r24
  63:quantum/bitwise.c ****     uint8_t n = 0;
 162               		.loc 1 63 5 is_stmt 1 view .LVU43
 163               	.LVL15:
  64:quantum/bitwise.c ****     if (bits >> 8) {
 164               		.loc 1 64 5 view .LVU44
 165               		.loc 1 64 14 is_stmt 0 view .LVU45
 166 0002 892F      		mov r24,r25
 167 0004 9927      		clr r25
 168               	.LVL16:
 169               		.loc 1 64 8 view .LVU46
 170 0006 0097      		sbiw r24,0
 171 0008 01F0      		breq .L22
 172 000a 9C01      		movw r18,r24
 173               	.LVL17:
  65:quantum/bitwise.c ****         bits >>= 8;
  66:quantum/bitwise.c ****         n += 8;
 174               		.loc 1 66 11 view .LVU47
 175 000c 88E0      		ldi r24,lo8(8)
 176               	.L18:
 177               	.LVL18:
  67:quantum/bitwise.c ****     }
  68:quantum/bitwise.c ****     if (bits >> 4) {
 178               		.loc 1 68 5 is_stmt 1 view .LVU48
 179               		.loc 1 68 14 is_stmt 0 view .LVU49
 180 000e A901      		movw r20,r18
 181 0010 74E0      		ldi r23,4
 182               		1:
 183 0012 5695      		lsr r21
 184 0014 4795      		ror r20
 185 0016 7A95      		dec r23
 186 0018 01F4      		brne 1b
 187               		.loc 1 68 8 view .LVU50
 188 001a 4115      		cp r20,__zero_reg__
 189 001c 5105      		cpc r21,__zero_reg__
 190 001e 01F0      		breq .L19
  69:quantum/bitwise.c ****         bits >>= 4;
 191               		.loc 1 69 9 is_stmt 1 view .LVU51
 192               	.LVL19:
  70:quantum/bitwise.c ****         n += 4;
 193               		.loc 1 70 9 view .LVU52
 194               		.loc 1 70 11 is_stmt 0 view .LVU53
 195 0020 8C5F      		subi r24,lo8(-(4))
 196               	.LVL20:
 197               		.loc 1 70 11 view .LVU54
 198 0022 9A01      		movw r18,r20
 199               	.LVL21:
 200               	.L19:
  71:quantum/bitwise.c ****     }
  72:quantum/bitwise.c ****     if (bits >> 2) {
 201               		.loc 1 72 5 is_stmt 1 view .LVU55
 202               		.loc 1 72 14 is_stmt 0 view .LVU56
 203 0024 A901      		movw r20,r18
 204 0026 5695      		lsr r21
 205 0028 4795      		ror r20
 206 002a 5695      		lsr r21
 207 002c 4795      		ror r20
 208               		.loc 1 72 8 view .LVU57
 209 002e 4115      		cp r20,__zero_reg__
 210 0030 5105      		cpc r21,__zero_reg__
 211 0032 01F0      		breq .L20
  73:quantum/bitwise.c ****         bits >>= 2;
 212               		.loc 1 73 9 is_stmt 1 view .LVU58
 213               	.LVL22:
  74:quantum/bitwise.c ****         n += 2;
 214               		.loc 1 74 9 view .LVU59
 215               		.loc 1 74 11 is_stmt 0 view .LVU60
 216 0034 8E5F      		subi r24,lo8(-(2))
 217               	.LVL23:
 218               		.loc 1 74 11 view .LVU61
 219 0036 9A01      		movw r18,r20
 220               	.LVL24:
 221               	.L20:
  75:quantum/bitwise.c ****     }
  76:quantum/bitwise.c ****     if (bits >> 1) {
 222               		.loc 1 76 5 is_stmt 1 view .LVU62
 223               		.loc 1 76 14 is_stmt 0 view .LVU63
 224 0038 3695      		lsr r19
 225 003a 2795      		ror r18
 226               	.LVL25:
 227               		.loc 1 76 8 view .LVU64
 228 003c 232B      		or r18,r19
 229 003e 01F0      		breq .L17
  77:quantum/bitwise.c ****         bits >>= 1;
 230               		.loc 1 77 9 is_stmt 1 view .LVU65
 231               	.LVL26:
  78:quantum/bitwise.c ****         n += 1;
 232               		.loc 1 78 9 view .LVU66
 233               		.loc 1 78 11 is_stmt 0 view .LVU67
 234 0040 8F5F      		subi r24,lo8(-(1))
 235               	.LVL27:
  79:quantum/bitwise.c ****     }
  80:quantum/bitwise.c ****     return n;
 236               		.loc 1 80 5 is_stmt 1 view .LVU68
 237               	.L17:
 238               	/* epilogue start */
  81:quantum/bitwise.c **** }
 239               		.loc 1 81 1 is_stmt 0 view .LVU69
 240 0042 0895      		ret
 241               	.LVL28:
 242               	.L22:
  63:quantum/bitwise.c ****     if (bits >> 8) {
 243               		.loc 1 63 13 view .LVU70
 244 0044 80E0      		ldi r24,0
 245 0046 00C0      		rjmp .L18
 246               		.cfi_endproc
 247               	.LFE4:
 249               		.section	.text.biton32,"ax",@progbits
 250               	.global	biton32
 252               	biton32:
 253               	.LVL29:
 254               	.LFB5:
  82:quantum/bitwise.c **** 
  83:quantum/bitwise.c **** uint8_t biton32(uint32_t bits) {
 255               		.loc 1 83 32 is_stmt 1 view -0
 256               		.cfi_startproc
 257               		.loc 1 83 32 is_stmt 0 view .LVU72
 258 0000 0F93      		push r16
 259               	.LCFI0:
 260               		.cfi_def_cfa_offset 3
 261               		.cfi_offset 16, -2
 262 0002 1F93      		push r17
 263               	.LCFI1:
 264               		.cfi_def_cfa_offset 4
 265               		.cfi_offset 17, -3
 266               	/* prologue: function */
 267               	/* frame size = 0 */
 268               	/* stack size = 2 */
 269               	.L__stack_usage = 2
 270 0004 462F      		mov r20,r22
 271 0006 572F      		mov r21,r23
 272 0008 BC01      		movw r22,r24
 273               	.LVL30:
  84:quantum/bitwise.c ****     uint8_t n = 0;
 274               		.loc 1 84 5 is_stmt 1 view .LVU73
  85:quantum/bitwise.c ****     if (bits >> 16) {
 275               		.loc 1 85 5 view .LVU74
 276               		.loc 1 85 14 is_stmt 0 view .LVU75
 277 000a CB01      		movw r24,r22
 278 000c AA27      		clr r26
 279 000e BB27      		clr r27
 280               		.loc 1 85 8 view .LVU76
 281 0010 0097      		sbiw r24,0
 282 0012 A105      		cpc r26,__zero_reg__
 283 0014 B105      		cpc r27,__zero_reg__
 284 0016 01F0      		breq .L38
 285 0018 AC01      		movw r20,r24
 286 001a BD01      		movw r22,r26
  86:quantum/bitwise.c ****         bits >>= 16;
  87:quantum/bitwise.c ****         n += 16;
 287               		.loc 1 87 11 view .LVU77
 288 001c 80E1      		ldi r24,lo8(16)
 289               	.L33:
 290               	.LVL31:
  88:quantum/bitwise.c ****     }
  89:quantum/bitwise.c ****     if (bits >> 8) {
 291               		.loc 1 89 5 is_stmt 1 view .LVU78
 292               		.loc 1 89 14 is_stmt 0 view .LVU79
 293 001e 052F      		mov r16,r21
 294 0020 162F      		mov r17,r22
 295 0022 272F      		mov r18,r23
 296 0024 3327      		clr r19
 297               		.loc 1 89 8 view .LVU80
 298 0026 0115      		cp r16,__zero_reg__
 299 0028 1105      		cpc r17,__zero_reg__
 300 002a 2105      		cpc r18,__zero_reg__
 301 002c 3105      		cpc r19,__zero_reg__
 302 002e 01F0      		breq .L34
  90:quantum/bitwise.c ****         bits >>= 8;
 303               		.loc 1 90 9 is_stmt 1 view .LVU81
 304               	.LVL32:
  91:quantum/bitwise.c ****         n += 8;
 305               		.loc 1 91 9 view .LVU82
 306               		.loc 1 91 11 is_stmt 0 view .LVU83
 307 0030 885F      		subi r24,lo8(-(8))
 308               	.LVL33:
 309               		.loc 1 91 11 view .LVU84
 310 0032 B901      		movw r22,r18
 311 0034 A801      		movw r20,r16
 312               	.LVL34:
 313               	.L34:
  92:quantum/bitwise.c ****     }
  93:quantum/bitwise.c ****     if (bits >> 4) {
 314               		.loc 1 93 5 is_stmt 1 view .LVU85
 315               		.loc 1 93 14 is_stmt 0 view .LVU86
 316 0036 8A01      		movw r16,r20
 317 0038 9B01      		movw r18,r22
 318 003a F4E0      		ldi r31,4
 319               		1:
 320 003c 3695      		lsr r19
 321 003e 2795      		ror r18
 322 0040 1795      		ror r17
 323 0042 0795      		ror r16
 324 0044 FA95      		dec r31
 325 0046 01F4      		brne 1b
 326               		.loc 1 93 8 view .LVU87
 327 0048 0115      		cp r16,__zero_reg__
 328 004a 1105      		cpc r17,__zero_reg__
 329 004c 2105      		cpc r18,__zero_reg__
 330 004e 3105      		cpc r19,__zero_reg__
 331 0050 01F0      		breq .L35
  94:quantum/bitwise.c ****         bits >>= 4;
 332               		.loc 1 94 9 is_stmt 1 view .LVU88
 333               	.LVL35:
  95:quantum/bitwise.c ****         n += 4;
 334               		.loc 1 95 9 view .LVU89
 335               		.loc 1 95 11 is_stmt 0 view .LVU90
 336 0052 8C5F      		subi r24,lo8(-(4))
 337               	.LVL36:
 338               		.loc 1 95 11 view .LVU91
 339 0054 B901      		movw r22,r18
 340 0056 A801      		movw r20,r16
 341               	.LVL37:
 342               	.L35:
  96:quantum/bitwise.c ****     }
  97:quantum/bitwise.c ****     if (bits >> 2) {
 343               		.loc 1 97 5 is_stmt 1 view .LVU92
 344               		.loc 1 97 14 is_stmt 0 view .LVU93
 345 0058 8A01      		movw r16,r20
 346 005a 9B01      		movw r18,r22
 347 005c E2E0      		ldi r30,2
 348               		1:
 349 005e 3695      		lsr r19
 350 0060 2795      		ror r18
 351 0062 1795      		ror r17
 352 0064 0795      		ror r16
 353 0066 EA95      		dec r30
 354 0068 01F4      		brne 1b
 355               		.loc 1 97 8 view .LVU94
 356 006a 0115      		cp r16,__zero_reg__
 357 006c 1105      		cpc r17,__zero_reg__
 358 006e 2105      		cpc r18,__zero_reg__
 359 0070 3105      		cpc r19,__zero_reg__
 360 0072 01F0      		breq .L36
  98:quantum/bitwise.c ****         bits >>= 2;
 361               		.loc 1 98 9 is_stmt 1 view .LVU95
 362               	.LVL38:
  99:quantum/bitwise.c ****         n += 2;
 363               		.loc 1 99 9 view .LVU96
 364               		.loc 1 99 11 is_stmt 0 view .LVU97
 365 0074 8E5F      		subi r24,lo8(-(2))
 366               	.LVL39:
 367               		.loc 1 99 11 view .LVU98
 368 0076 B901      		movw r22,r18
 369 0078 A801      		movw r20,r16
 370               	.LVL40:
 371               	.L36:
 100:quantum/bitwise.c ****     }
 101:quantum/bitwise.c ****     if (bits >> 1) {
 372               		.loc 1 101 5 is_stmt 1 view .LVU99
 373               		.loc 1 101 14 is_stmt 0 view .LVU100
 374 007a 7695      		lsr r23
 375 007c 6795      		ror r22
 376 007e 5795      		ror r21
 377 0080 4795      		ror r20
 378               	.LVL41:
 379               		.loc 1 101 8 view .LVU101
 380 0082 452B      		or r20,r21
 381 0084 462B      		or r20,r22
 382 0086 472B      		or r20,r23
 383 0088 01F0      		breq .L32
 102:quantum/bitwise.c ****         bits >>= 1;
 384               		.loc 1 102 9 is_stmt 1 view .LVU102
 385               	.LVL42:
 103:quantum/bitwise.c ****         n += 1;
 386               		.loc 1 103 9 view .LVU103
 387               		.loc 1 103 11 is_stmt 0 view .LVU104
 388 008a 8F5F      		subi r24,lo8(-(1))
 389               	.LVL43:
 104:quantum/bitwise.c ****     }
 105:quantum/bitwise.c ****     return n;
 390               		.loc 1 105 5 is_stmt 1 view .LVU105
 391               	.L32:
 392               	/* epilogue start */
 106:quantum/bitwise.c **** }
 393               		.loc 1 106 1 is_stmt 0 view .LVU106
 394 008c 1F91      		pop r17
 395 008e 0F91      		pop r16
 396 0090 0895      		ret
 397               	.LVL44:
 398               	.L38:
  84:quantum/bitwise.c ****     if (bits >> 16) {
 399               		.loc 1 84 13 view .LVU107
 400 0092 80E0      		ldi r24,0
 401 0094 00C0      		rjmp .L33
 402               		.cfi_endproc
 403               	.LFE5:
 405               		.section	.text.bitrev,"ax",@progbits
 406               	.global	bitrev
 408               	bitrev:
 409               	.LVL45:
 410               	.LFB6:
 107:quantum/bitwise.c **** 
 108:quantum/bitwise.c **** __attribute__((noinline)) uint8_t bitrev(uint8_t bits) {
 411               		.loc 1 108 56 is_stmt 1 view -0
 412               		.cfi_startproc
 413               	/* prologue: function */
 414               	/* frame size = 0 */
 415               	/* stack size = 0 */
 416               	.L__stack_usage = 0
 109:quantum/bitwise.c ****     bits = (bits & 0x0f) << 4 | (bits & 0xf0) >> 4;
 417               		.loc 1 109 5 view .LVU109
 110:quantum/bitwise.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 418               		.loc 1 110 5 view .LVU110
 109:quantum/bitwise.c ****     bits = (bits & 0x0f) << 4 | (bits & 0xf0) >> 4;
 419               		.loc 1 109 10 is_stmt 0 view .LVU111
 420 0000 8295      		swap r24
 421               	.LVL46:
 111:quantum/bitwise.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 422               		.loc 1 111 5 is_stmt 1 view .LVU112
 110:quantum/bitwise.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 423               		.loc 1 110 32 is_stmt 0 view .LVU113
 424 0002 94E0      		ldi r25,lo8(4)
 425 0004 899F      		mul r24,r25
 426 0006 9001      		movw r18,r0
 427 0008 1124      		clr __zero_reg__
 428 000a 2C7C      		andi r18,lo8(-52)
 110:quantum/bitwise.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 429               		.loc 1 110 59 view .LVU114
 430 000c 8695      		lsr r24
 431 000e 8695      		lsr r24
 432               	.LVL47:
 110:quantum/bitwise.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 433               		.loc 1 110 59 view .LVU115
 434 0010 8373      		andi r24,lo8(51)
 110:quantum/bitwise.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 435               		.loc 1 110 37 view .LVU116
 436 0012 282B      		or r18,r24
 437               		.loc 1 111 32 view .LVU117
 438 0014 30E0      		ldi r19,0
 439               	.LVL48:
 112:quantum/bitwise.c ****     return bits;
 440               		.loc 1 112 5 is_stmt 1 view .LVU118
 111:quantum/bitwise.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 441               		.loc 1 111 32 is_stmt 0 view .LVU119
 442 0016 C901      		movw r24,r18
 443 0018 880F      		lsl r24
 444 001a 991F      		rol r25
 445 001c 8A7A      		andi r24,lo8(-86)
 111:quantum/bitwise.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 446               		.loc 1 111 59 view .LVU120
 447 001e 3595      		asr r19
 448 0020 2795      		ror r18
 449               	.LVL49:
 111:quantum/bitwise.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 450               		.loc 1 111 59 view .LVU121
 451 0022 2575      		andi r18,lo8(85)
 113:quantum/bitwise.c **** }
 452               		.loc 1 113 1 view .LVU122
 453 0024 822B      		or r24,r18
 454               	/* epilogue start */
 455 0026 0895      		ret
 456               		.cfi_endproc
 457               	.LFE6:
 459               		.section	.text.bitrev16,"ax",@progbits
 460               	.global	bitrev16
 462               	bitrev16:
 463               	.LVL50:
 464               	.LFB7:
 114:quantum/bitwise.c **** 
 115:quantum/bitwise.c **** uint16_t bitrev16(uint16_t bits) {
 465               		.loc 1 115 34 is_stmt 1 view -0
 466               		.cfi_startproc
 467               		.loc 1 115 34 is_stmt 0 view .LVU124
 468 0000 CF93      		push r28
 469               	.LCFI2:
 470               		.cfi_def_cfa_offset 3
 471               		.cfi_offset 28, -2
 472 0002 DF93      		push r29
 473               	.LCFI3:
 474               		.cfi_def_cfa_offset 4
 475               		.cfi_offset 29, -3
 476               	/* prologue: function */
 477               	/* frame size = 0 */
 478               	/* stack size = 2 */
 479               	.L__stack_usage = 2
 480 0004 D92F      		mov r29,r25
 116:quantum/bitwise.c ****     bits = bitrev(bits & 0x00ff) << 8 | bitrev((bits & 0xff00) >> 8);
 481               		.loc 1 116 5 is_stmt 1 view .LVU125
 482               		.loc 1 116 12 is_stmt 0 view .LVU126
 483 0006 0E94 0000 		call bitrev
 484               	.LVL51:
 485               		.loc 1 116 12 view .LVU127
 486 000a C82F      		mov r28,r24
 487               		.loc 1 116 41 view .LVU128
 488 000c 8D2F      		mov r24,r29
 489 000e 0E94 0000 		call bitrev
 490               	.LVL52:
 117:quantum/bitwise.c ****     return bits;
 491               		.loc 1 117 5 is_stmt 1 view .LVU129
 118:quantum/bitwise.c **** }
 492               		.loc 1 118 1 is_stmt 0 view .LVU130
 493 0012 9C2F      		mov r25,r28
 494               	/* epilogue start */
 495 0014 DF91      		pop r29
 496 0016 CF91      		pop r28
 497               	.LVL53:
 498               		.loc 1 118 1 view .LVU131
 499 0018 0895      		ret
 500               		.cfi_endproc
 501               	.LFE7:
 503               		.section	.text.bitrev32,"ax",@progbits
 504               	.global	bitrev32
 506               	bitrev32:
 507               	.LVL54:
 508               	.LFB8:
 119:quantum/bitwise.c **** 
 120:quantum/bitwise.c **** uint32_t bitrev32(uint32_t bits) {
 509               		.loc 1 120 34 is_stmt 1 view -0
 510               		.cfi_startproc
 511               		.loc 1 120 34 is_stmt 0 view .LVU133
 512 0000 0F93      		push r16
 513               	.LCFI4:
 514               		.cfi_def_cfa_offset 3
 515               		.cfi_offset 16, -2
 516 0002 1F93      		push r17
 517               	.LCFI5:
 518               		.cfi_def_cfa_offset 4
 519               		.cfi_offset 17, -3
 520 0004 CF93      		push r28
 521               	.LCFI6:
 522               		.cfi_def_cfa_offset 5
 523               		.cfi_offset 28, -4
 524 0006 DF93      		push r29
 525               	.LCFI7:
 526               		.cfi_def_cfa_offset 6
 527               		.cfi_offset 29, -5
 528 0008 00D0      		rcall .
 529 000a 00D0      		rcall .
 530               	.LCFI8:
 531               		.cfi_def_cfa_offset 10
 532 000c CDB7      		in r28,__SP_L__
 533 000e DEB7      		in r29,__SP_H__
 534               	.LCFI9:
 535               		.cfi_def_cfa_register 28
 536               	/* prologue: function */
 537               	/* frame size = 4 */
 538               	/* stack size = 8 */
 539               	.L__stack_usage = 8
 540 0010 8C01      		movw r16,r24
 121:quantum/bitwise.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 541               		.loc 1 121 5 is_stmt 1 view .LVU134
 542               		.loc 1 121 22 is_stmt 0 view .LVU135
 543 0012 CB01      		movw r24,r22
 544 0014 0E94 0000 		call bitrev16
 545               	.LVL55:
 546               		.loc 1 121 22 view .LVU136
 547 0018 8983      		std Y+1,r24
 548 001a 9A83      		std Y+2,r25
 549               		.loc 1 121 58 view .LVU137
 550 001c C801      		movw r24,r16
 551 001e 0E94 0000 		call bitrev16
 552               	.LVL56:
 122:quantum/bitwise.c ****     return bits;
 553               		.loc 1 122 5 is_stmt 1 view .LVU138
 121:quantum/bitwise.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 554               		.loc 1 121 12 is_stmt 0 view .LVU139
 555 0022 0981      		ldd r16,Y+1
 556 0024 1A81      		ldd r17,Y+2
 557 0026 A801      		movw r20,r16
 558 0028 70E0      		ldi r23,0
 559 002a 60E0      		ldi r22,0
 121:quantum/bitwise.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 560               		.loc 1 121 50 view .LVU140
 561 002c BA01      		movw r22,r20
 562 002e 5527      		clr r21
 563 0030 4427      		clr r20
 121:quantum/bitwise.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 564               		.loc 1 121 58 view .LVU141
 565 0032 B0E0      		ldi r27,0
 566 0034 A0E0      		ldi r26,0
 121:quantum/bitwise.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 567               		.loc 1 121 10 view .LVU142
 568 0036 8A01      		movw r16,r20
 569 0038 9B01      		movw r18,r22
 570 003a 082B      		or r16,r24
 571 003c 192B      		or r17,r25
 572 003e 2A2B      		or r18,r26
 573 0040 3B2B      		or r19,r27
 123:quantum/bitwise.c **** }
 574               		.loc 1 123 1 view .LVU143
 575 0042 C901      		movw r24,r18
 576               	.LVL57:
 577               		.loc 1 123 1 view .LVU144
 578 0044 B801      		movw r22,r16
 579               	/* epilogue start */
 580 0046 0F90      		pop __tmp_reg__
 581 0048 0F90      		pop __tmp_reg__
 582 004a 0F90      		pop __tmp_reg__
 583 004c 0F90      		pop __tmp_reg__
 584 004e DF91      		pop r29
 585 0050 CF91      		pop r28
 586 0052 1F91      		pop r17
 587 0054 0F91      		pop r16
 588 0056 0895      		ret
 589               		.cfi_endproc
 590               	.LFE8:
 592               		.text
 593               	.Letext0:
 594               		.file 2 "/usr/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bitwise.c
     /tmp/ccqgaUXk.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccqgaUXk.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccqgaUXk.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccqgaUXk.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccqgaUXk.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccqgaUXk.s:13     .text.bitpop:0000000000000000 bitpop
     /tmp/ccqgaUXk.s:38     .text.bitpop16:0000000000000000 bitpop16
     /tmp/ccqgaUXk.s:61     .text.bitpop32:0000000000000000 bitpop32
     /tmp/ccqgaUXk.s:84     .text.biton:0000000000000000 biton
     /tmp/ccqgaUXk.s:151    .text.biton16:0000000000000000 biton16
     /tmp/ccqgaUXk.s:252    .text.biton32:0000000000000000 biton32
     /tmp/ccqgaUXk.s:408    .text.bitrev:0000000000000000 bitrev
     /tmp/ccqgaUXk.s:462    .text.bitrev16:0000000000000000 bitrev16
     /tmp/ccqgaUXk.s:506    .text.bitrev32:0000000000000000 bitrev32

UNDEFINED SYMBOLS
__popcounthi2
__popcountsi2
