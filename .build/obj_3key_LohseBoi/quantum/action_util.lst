   1               		.file	"action_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.add_key,"ax",@progbits
  11               	.global	add_key
  13               	add_key:
  14               	.LVL0:
  15               	.LFB102:
  16               		.file 1 "quantum/action_util.h"
   1:quantum/action_util.h **** /*
   2:quantum/action_util.h **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.h **** 
   4:quantum/action_util.h **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.h **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.h **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.h **** (at your option) any later version.
   8:quantum/action_util.h **** 
   9:quantum/action_util.h **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.h **** GNU General Public License for more details.
  13:quantum/action_util.h **** 
  14:quantum/action_util.h **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.h **** */
  17:quantum/action_util.h **** 
  18:quantum/action_util.h **** #pragma once
  19:quantum/action_util.h **** 
  20:quantum/action_util.h **** #include <stdint.h>
  21:quantum/action_util.h **** #include "report.h"
  22:quantum/action_util.h **** 
  23:quantum/action_util.h **** #ifdef __cplusplus
  24:quantum/action_util.h **** extern "C" {
  25:quantum/action_util.h **** #endif
  26:quantum/action_util.h **** 
  27:quantum/action_util.h **** extern report_keyboard_t *keyboard_report;
  28:quantum/action_util.h **** 
  29:quantum/action_util.h **** void send_keyboard_report(void);
  30:quantum/action_util.h **** 
  31:quantum/action_util.h **** /* key */
  32:quantum/action_util.h **** inline void add_key(uint8_t key) { add_key_to_report(keyboard_report, key); }
  17               		.loc 1 32 34 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 32 34 is_stmt 0 view .LVU1
  24 0000 682F      		mov r22,r24
  25               		.loc 1 32 36 is_stmt 1 view .LVU2
  26 0002 8091 0000 		lds r24,keyboard_report
  27 0006 9091 0000 		lds r25,keyboard_report+1
  28               	.LVL1:
  29               		.loc 1 32 36 is_stmt 0 view .LVU3
  30 000a 0C94 0000 		jmp add_key_to_report
  31               	.LVL2:
  32               		.loc 1 32 36 view .LVU4
  33               		.cfi_endproc
  34               	.LFE102:
  36               		.section	.text.del_key,"ax",@progbits
  37               	.global	del_key
  39               	del_key:
  40               	.LVL3:
  41               	.LFB103:
  33:quantum/action_util.h **** 
  34:quantum/action_util.h **** inline void del_key(uint8_t key) { del_key_from_report(keyboard_report, key); }
  42               		.loc 1 34 34 is_stmt 1 view -0
  43               		.cfi_startproc
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 0 */
  47               	.L__stack_usage = 0
  48               		.loc 1 34 34 is_stmt 0 view .LVU6
  49 0000 682F      		mov r22,r24
  50               		.loc 1 34 36 is_stmt 1 view .LVU7
  51 0002 8091 0000 		lds r24,keyboard_report
  52 0006 9091 0000 		lds r25,keyboard_report+1
  53               	.LVL4:
  54               		.loc 1 34 36 is_stmt 0 view .LVU8
  55 000a 0C94 0000 		jmp del_key_from_report
  56               	.LVL5:
  57               		.loc 1 34 36 view .LVU9
  58               		.cfi_endproc
  59               	.LFE103:
  61               		.section	.text.clear_keys,"ax",@progbits
  62               	.global	clear_keys
  64               	clear_keys:
  65               	.LFB104:
  35:quantum/action_util.h **** 
  36:quantum/action_util.h **** inline void clear_keys(void) { clear_keys_from_report(keyboard_report); }
  66               		.loc 1 36 30 is_stmt 1 view -0
  67               		.cfi_startproc
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
  72               		.loc 1 36 32 view .LVU11
  73 0000 8091 0000 		lds r24,keyboard_report
  74 0004 9091 0000 		lds r25,keyboard_report+1
  75 0008 0C94 0000 		jmp clear_keys_from_report
  76               	.LVL6:
  77               		.cfi_endproc
  78               	.LFE104:
  80               		.section	.text.get_oneshot_locked_mods,"ax",@progbits
  81               	.global	get_oneshot_locked_mods
  83               	get_oneshot_locked_mods:
  84               	.LFB110:
  85               		.file 2 "quantum/action_util.c"
   1:quantum/action_util.c **** /*
   2:quantum/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.c **** 
   4:quantum/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.c **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.c **** (at your option) any later version.
   8:quantum/action_util.c **** 
   9:quantum/action_util.c **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.c **** GNU General Public License for more details.
  13:quantum/action_util.c **** 
  14:quantum/action_util.c **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.c **** */
  17:quantum/action_util.c **** #include "host.h"
  18:quantum/action_util.c **** #include "report.h"
  19:quantum/action_util.c **** #include "debug.h"
  20:quantum/action_util.c **** #include "action_util.h"
  21:quantum/action_util.c **** #include "action_layer.h"
  22:quantum/action_util.c **** #include "timer.h"
  23:quantum/action_util.c **** #include "keycode_config.h"
  24:quantum/action_util.c **** 
  25:quantum/action_util.c **** extern keymap_config_t keymap_config;
  26:quantum/action_util.c **** 
  27:quantum/action_util.c **** static uint8_t real_mods  = 0;
  28:quantum/action_util.c **** static uint8_t weak_mods  = 0;
  29:quantum/action_util.c **** static uint8_t macro_mods = 0;
  30:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
  31:quantum/action_util.c **** static uint8_t weak_override_mods = 0;
  32:quantum/action_util.c **** static uint8_t suppressed_mods    = 0;
  33:quantum/action_util.c **** #endif
  34:quantum/action_util.c **** 
  35:quantum/action_util.c **** // TODO: pointer variable is not needed
  36:quantum/action_util.c **** // report_keyboard_t keyboard_report = {};
  37:quantum/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  38:quantum/action_util.c **** 
  39:quantum/action_util.c **** extern inline void add_key(uint8_t key);
  40:quantum/action_util.c **** extern inline void del_key(uint8_t key);
  41:quantum/action_util.c **** extern inline void clear_keys(void);
  42:quantum/action_util.c **** 
  43:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  44:quantum/action_util.c **** static uint8_t oneshot_mods        = 0;
  45:quantum/action_util.c **** static uint8_t oneshot_locked_mods = 0;
  46:quantum/action_util.c **** uint8_t        get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
  86               		.loc 2 46 46 view -0
  87               		.cfi_startproc
  88               	/* prologue: function */
  89               	/* frame size = 0 */
  90               	/* stack size = 0 */
  91               	.L__stack_usage = 0
  92               		.loc 2 46 48 view .LVU13
  93               		.loc 2 46 76 is_stmt 0 view .LVU14
  94 0000 8091 0000 		lds r24,oneshot_locked_mods
  95               	/* epilogue start */
  96 0004 0895      		ret
  97               		.cfi_endproc
  98               	.LFE110:
 100               		.section	.text.has_oneshot_mods_timed_out,"ax",@progbits
 101               	.global	has_oneshot_mods_timed_out
 103               	has_oneshot_mods_timed_out:
 104               	.LFB113:
  47:quantum/action_util.c **** void           set_oneshot_locked_mods(uint8_t mods) {
  48:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
  49:quantum/action_util.c ****         oneshot_locked_mods = mods;
  50:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  51:quantum/action_util.c ****     }
  52:quantum/action_util.c **** }
  53:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
  54:quantum/action_util.c ****     if (oneshot_locked_mods) {
  55:quantum/action_util.c ****         oneshot_locked_mods = 0;
  56:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  57:quantum/action_util.c ****     }
  58:quantum/action_util.c **** }
  59:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  60:quantum/action_util.c **** static uint16_t oneshot_time = 0;
  61:quantum/action_util.c **** bool            has_oneshot_mods_timed_out(void) { return TIMER_DIFF_16(timer_read(), oneshot_time)
  62:quantum/action_util.c **** #    else
  63:quantum/action_util.c **** bool has_oneshot_mods_timed_out(void) { return false; }
 105               		.loc 2 63 39 is_stmt 1 view -0
 106               		.cfi_startproc
 107               	/* prologue: function */
 108               	/* frame size = 0 */
 109               	/* stack size = 0 */
 110               	.L__stack_usage = 0
 111               		.loc 2 63 41 view .LVU16
 112               		.loc 2 63 55 is_stmt 0 view .LVU17
 113 0000 80E0      		ldi r24,0
 114               	/* epilogue start */
 115 0002 0895      		ret
 116               		.cfi_endproc
 117               	.LFE113:
 119               		.section	.text.get_oneshot_layer,"ax",@progbits
 120               	.global	get_oneshot_layer
 122               	get_oneshot_layer:
 123               	.LFB114:
  64:quantum/action_util.c **** #    endif
  65:quantum/action_util.c **** #endif
  66:quantum/action_util.c **** 
  67:quantum/action_util.c **** /* oneshot layer */
  68:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  69:quantum/action_util.c **** /** \brief oneshot_layer_data bits
  70:quantum/action_util.c ****  * LLLL LSSS
  71:quantum/action_util.c ****  * where:
  72:quantum/action_util.c ****  *   L => are layer bits
  73:quantum/action_util.c ****  *   S => oneshot state bits
  74:quantum/action_util.c ****  */
  75:quantum/action_util.c **** static int8_t oneshot_layer_data = 0;
  76:quantum/action_util.c **** 
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
 124               		.loc 2 77 40 is_stmt 1 view -0
 125               		.cfi_startproc
 126               	/* prologue: function */
 127               	/* frame size = 0 */
 128               	/* stack size = 0 */
 129               	.L__stack_usage = 0
 130               		.loc 2 77 42 view .LVU19
 131               		.loc 2 77 68 is_stmt 0 view .LVU20
 132 0000 8091 0000 		lds r24,oneshot_layer_data
 133               		.loc 2 77 74 view .LVU21
 134 0004 8595      		asr r24
 135 0006 8595      		asr r24
 136 0008 8595      		asr r24
 137               	/* epilogue start */
 138 000a 0895      		ret
 139               		.cfi_endproc
 140               	.LFE114:
 142               		.section	.text.get_oneshot_layer_state,"ax",@progbits
 143               	.global	get_oneshot_layer_state
 145               	get_oneshot_layer_state:
 146               	.LFB115:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 147               		.loc 2 78 46 is_stmt 1 view -0
 148               		.cfi_startproc
 149               	/* prologue: function */
 150               	/* frame size = 0 */
 151               	/* stack size = 0 */
 152               	.L__stack_usage = 0
 153               		.loc 2 78 48 view .LVU23
 154               		.loc 2 78 74 is_stmt 0 view .LVU24
 155 0000 8091 0000 		lds r24,oneshot_layer_data
 156               		.loc 2 78 83 view .LVU25
 157 0004 8770      		andi r24,lo8(7)
 158               	/* epilogue start */
 159 0006 0895      		ret
 160               		.cfi_endproc
 161               	.LFE115:
 163               		.section	.text.is_oneshot_layer_active,"ax",@progbits
 164               	.global	is_oneshot_layer_active
 166               	is_oneshot_layer_active:
 167               	.LFB119:
  79:quantum/action_util.c **** 
  80:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  81:quantum/action_util.c **** enum {
  82:quantum/action_util.c ****     SHO_OFF,
  83:quantum/action_util.c ****     SHO_ACTIVE,   // Swap hands button was pressed, and we didn't send any swapped keys yet
  84:quantum/action_util.c ****     SHO_PRESSED,  // Swap hands button is currently pressed
  85:quantum/action_util.c ****     SHO_USED,     // Swap hands button is still pressed, and we already sent swapped keys
  86:quantum/action_util.c **** } swap_hands_oneshot = SHO_OFF;
  87:quantum/action_util.c **** #    endif
  88:quantum/action_util.c **** 
  89:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  90:quantum/action_util.c **** static uint16_t oneshot_layer_time = 0;
  91:quantum/action_util.c **** inline bool     has_oneshot_layer_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_layer_ti
  92:quantum/action_util.c **** #        ifdef SWAP_HANDS_ENABLE
  93:quantum/action_util.c **** static uint16_t oneshot_swaphands_time = 0;
  94:quantum/action_util.c **** inline bool     has_oneshot_swaphands_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_swap
  95:quantum/action_util.c **** #        endif
  96:quantum/action_util.c **** #    endif
  97:quantum/action_util.c **** 
  98:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  99:quantum/action_util.c **** 
 100:quantum/action_util.c **** void set_oneshot_swaphands(void) {
 101:quantum/action_util.c ****     swap_hands_oneshot = SHO_PRESSED;
 102:quantum/action_util.c ****     swap_hands         = true;
 103:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 104:quantum/action_util.c ****     oneshot_swaphands_time = timer_read();
 105:quantum/action_util.c ****     if (oneshot_layer_time != 0) {
 106:quantum/action_util.c ****         oneshot_layer_time = oneshot_swaphands_time;
 107:quantum/action_util.c ****     }
 108:quantum/action_util.c **** #        endif
 109:quantum/action_util.c **** }
 110:quantum/action_util.c **** 
 111:quantum/action_util.c **** void release_oneshot_swaphands(void) {
 112:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 113:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 114:quantum/action_util.c ****     }
 115:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_USED) {
 116:quantum/action_util.c ****         clear_oneshot_swaphands();
 117:quantum/action_util.c ****     }
 118:quantum/action_util.c **** }
 119:quantum/action_util.c **** 
 120:quantum/action_util.c **** void use_oneshot_swaphands(void) {
 121:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 122:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 123:quantum/action_util.c ****     }
 124:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_ACTIVE) {
 125:quantum/action_util.c ****         clear_oneshot_swaphands();
 126:quantum/action_util.c ****     }
 127:quantum/action_util.c **** }
 128:quantum/action_util.c **** 
 129:quantum/action_util.c **** void clear_oneshot_swaphands(void) {
 130:quantum/action_util.c ****     swap_hands_oneshot = SHO_OFF;
 131:quantum/action_util.c ****     swap_hands         = false;
 132:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 133:quantum/action_util.c ****     oneshot_swaphands_time = 0;
 134:quantum/action_util.c **** #        endif
 135:quantum/action_util.c **** }
 136:quantum/action_util.c **** 
 137:quantum/action_util.c **** #    endif
 138:quantum/action_util.c **** 
 139:quantum/action_util.c **** /** \brief Set oneshot layer
 140:quantum/action_util.c ****  *
 141:quantum/action_util.c ****  * FIXME: needs doc
 142:quantum/action_util.c ****  */
 143:quantum/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state) {
 144:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 145:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 146:quantum/action_util.c ****         layer_on(layer);
 147:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 148:quantum/action_util.c ****         oneshot_layer_time = timer_read();
 149:quantum/action_util.c **** #    endif
 150:quantum/action_util.c ****         oneshot_layer_changed_kb(get_oneshot_layer());
 151:quantum/action_util.c ****     } else {
 152:quantum/action_util.c ****         layer_on(layer);
 153:quantum/action_util.c ****     }
 154:quantum/action_util.c **** }
 155:quantum/action_util.c **** /** \brief Reset oneshot layer
 156:quantum/action_util.c ****  *
 157:quantum/action_util.c ****  * FIXME: needs doc
 158:quantum/action_util.c ****  */
 159:quantum/action_util.c **** void reset_oneshot_layer(void) {
 160:quantum/action_util.c ****     oneshot_layer_data = 0;
 161:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 162:quantum/action_util.c ****     oneshot_layer_time = 0;
 163:quantum/action_util.c **** #    endif
 164:quantum/action_util.c ****     oneshot_layer_changed_kb(get_oneshot_layer());
 165:quantum/action_util.c **** }
 166:quantum/action_util.c **** /** \brief Clear oneshot layer
 167:quantum/action_util.c ****  *
 168:quantum/action_util.c ****  * FIXME: needs doc
 169:quantum/action_util.c ****  */
 170:quantum/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state) {
 171:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 172:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 173:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 174:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 175:quantum/action_util.c ****         reset_oneshot_layer();
 176:quantum/action_util.c ****     }
 177:quantum/action_util.c **** }
 178:quantum/action_util.c **** /** \brief Is oneshot layer active
 179:quantum/action_util.c ****  *
 180:quantum/action_util.c ****  * FIXME: needs doc
 181:quantum/action_util.c ****  */
 182:quantum/action_util.c **** bool is_oneshot_layer_active(void) { return get_oneshot_layer_state(); }
 168               		.loc 2 182 36 is_stmt 1 view -0
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 174               		.loc 2 182 38 view .LVU27
 175               	.LBB12:
 176               	.LBI12:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 177               		.loc 2 78 16 view .LVU28
 178               	.LBB13:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 179               		.loc 2 78 48 view .LVU29
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 180               		.loc 2 78 74 is_stmt 0 view .LVU30
 181 0000 9091 0000 		lds r25,oneshot_layer_data
 182 0004 9770      		andi r25,lo8(7)
 183               	.LBE13:
 184               	.LBE12:
 185               		.loc 2 182 45 view .LVU31
 186 0006 81E0      		ldi r24,lo8(1)
 187 0008 01F4      		brne .L9
 188 000a 80E0      		ldi r24,0
 189               	.L9:
 190               	/* epilogue start */
 191               		.loc 2 182 72 view .LVU32
 192 000c 0895      		ret
 193               		.cfi_endproc
 194               	.LFE119:
 196               		.section	.text.oneshot_set,"ax",@progbits
 197               	.global	oneshot_set
 199               	oneshot_set:
 200               	.LVL7:
 201               	.LFB120:
 183:quantum/action_util.c **** 
 184:quantum/action_util.c **** /** \brief set oneshot
 185:quantum/action_util.c ****  *
 186:quantum/action_util.c ****  * FIXME: needs doc
 187:quantum/action_util.c ****  */
 188:quantum/action_util.c **** void oneshot_set(bool active) {
 202               		.loc 2 188 31 is_stmt 1 view -0
 203               		.cfi_startproc
 204               	/* prologue: function */
 205               	/* frame size = 0 */
 206               	/* stack size = 0 */
 207               	.L__stack_usage = 0
 189:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 208               		.loc 2 189 5 view .LVU34
 209               		.loc 2 189 22 is_stmt 0 view .LVU35
 210 0000 9091 0000 		lds r25,keymap_config+1
 211 0004 92FB      		bst r25,2
 212 0006 2227      		clr r18
 213 0008 20F9      		bld r18,0
 214               		.loc 2 189 8 view .LVU36
 215 000a 2817      		cp r18,r24
 216 000c 01F0      		breq .L10
 190:quantum/action_util.c ****         keymap_config.oneshot_disable = active;
 217               		.loc 2 190 9 is_stmt 1 view .LVU37
 218               		.loc 2 190 39 is_stmt 0 view .LVU38
 219 000e 80FB      		bst r24,0
 220 0010 92F9      		bld r25,2
 221 0012 9093 0000 		sts keymap_config+1,r25
 191:quantum/action_util.c ****         eeconfig_update_keymap(keymap_config.raw);
 222               		.loc 2 191 9 is_stmt 1 view .LVU39
 223 0016 8091 0000 		lds r24,keymap_config
 224 001a 9091 0000 		lds r25,keymap_config+1
 225               	.LVL8:
 226               		.loc 2 191 9 is_stmt 0 view .LVU40
 227 001e 0C94 0000 		jmp eeconfig_update_keymap
 228               	.LVL9:
 229               	.L10:
 230               	/* epilogue start */
 192:quantum/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 193:quantum/action_util.c ****     }
 194:quantum/action_util.c **** }
 231               		.loc 2 194 1 view .LVU41
 232 0022 0895      		ret
 233               		.cfi_endproc
 234               	.LFE120:
 236               		.section	.text.oneshot_toggle,"ax",@progbits
 237               	.global	oneshot_toggle
 239               	oneshot_toggle:
 240               	.LFB121:
 195:quantum/action_util.c **** 
 196:quantum/action_util.c **** /** \brief toggle oneshot
 197:quantum/action_util.c ****  *
 198:quantum/action_util.c ****  * FIXME: needs doc
 199:quantum/action_util.c ****  */
 200:quantum/action_util.c **** void oneshot_toggle(void) { oneshot_set(!keymap_config.oneshot_disable); }
 241               		.loc 2 200 27 is_stmt 1 view -0
 242               		.cfi_startproc
 243               	/* prologue: function */
 244               	/* frame size = 0 */
 245               	/* stack size = 0 */
 246               	.L__stack_usage = 0
 247               		.loc 2 200 29 view .LVU43
 248               		.loc 2 200 55 is_stmt 0 view .LVU44
 249 0000 8091 0000 		lds r24,keymap_config+1
 250 0004 82FB      		bst r24,2
 251 0006 8827      		clr r24
 252 0008 80F9      		bld r24,0
 253               		.loc 2 200 29 view .LVU45
 254 000a 91E0      		ldi r25,lo8(1)
 255 000c 8927      		eor r24,r25
 256 000e 0C94 0000 		jmp oneshot_set
 257               	.LVL10:
 258               		.cfi_endproc
 259               	.LFE121:
 261               		.section	.text.oneshot_enable,"ax",@progbits
 262               	.global	oneshot_enable
 264               	oneshot_enable:
 265               	.LFB122:
 201:quantum/action_util.c **** 
 202:quantum/action_util.c **** /** \brief enable oneshot
 203:quantum/action_util.c ****  *
 204:quantum/action_util.c ****  * FIXME: needs doc
 205:quantum/action_util.c ****  */
 206:quantum/action_util.c **** void oneshot_enable(void) { oneshot_set(true); }
 266               		.loc 2 206 27 is_stmt 1 view -0
 267               		.cfi_startproc
 268               	/* prologue: function */
 269               	/* frame size = 0 */
 270               	/* stack size = 0 */
 271               	.L__stack_usage = 0
 272               		.loc 2 206 29 view .LVU47
 273 0000 81E0      		ldi r24,lo8(1)
 274 0002 0C94 0000 		jmp oneshot_set
 275               	.LVL11:
 276               		.cfi_endproc
 277               	.LFE122:
 279               		.section	.text.oneshot_disable,"ax",@progbits
 280               	.global	oneshot_disable
 282               	oneshot_disable:
 283               	.LFB123:
 207:quantum/action_util.c **** 
 208:quantum/action_util.c **** /** \brief disable oneshot
 209:quantum/action_util.c ****  *
 210:quantum/action_util.c ****  * FIXME: needs doc
 211:quantum/action_util.c ****  */
 212:quantum/action_util.c **** void oneshot_disable(void) { oneshot_set(false); }
 284               		.loc 2 212 28 view -0
 285               		.cfi_startproc
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 288               	/* stack size = 0 */
 289               	.L__stack_usage = 0
 290               		.loc 2 212 30 view .LVU49
 291 0000 80E0      		ldi r24,0
 292 0002 0C94 0000 		jmp oneshot_set
 293               	.LVL12:
 294               		.cfi_endproc
 295               	.LFE123:
 297               		.section	.text.is_oneshot_enabled,"ax",@progbits
 298               	.global	is_oneshot_enabled
 300               	is_oneshot_enabled:
 301               	.LFB124:
 213:quantum/action_util.c **** 
 214:quantum/action_util.c **** bool is_oneshot_enabled(void) { return keymap_config.oneshot_disable; }
 302               		.loc 2 214 31 view -0
 303               		.cfi_startproc
 304               	/* prologue: function */
 305               	/* frame size = 0 */
 306               	/* stack size = 0 */
 307               	.L__stack_usage = 0
 308               		.loc 2 214 33 view .LVU51
 309               		.loc 2 214 53 is_stmt 0 view .LVU52
 310 0000 8091 0000 		lds r24,keymap_config+1
 311               		.loc 2 214 71 view .LVU53
 312 0004 82FB      		bst r24,2
 313 0006 8827      		clr r24
 314 0008 80F9      		bld r24,0
 315               	/* epilogue start */
 316 000a 0895      		ret
 317               		.cfi_endproc
 318               	.LFE124:
 320               		.section	.text.get_mods,"ax",@progbits
 321               	.global	get_mods
 323               	get_mods:
 324               	.LFB126:
 215:quantum/action_util.c **** 
 216:quantum/action_util.c **** #endif
 217:quantum/action_util.c **** 
 218:quantum/action_util.c **** /** \brief Send keyboard report
 219:quantum/action_util.c ****  *
 220:quantum/action_util.c ****  * FIXME: needs doc
 221:quantum/action_util.c ****  */
 222:quantum/action_util.c **** void send_keyboard_report(void) {
 223:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 224:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 225:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 226:quantum/action_util.c **** 
 227:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 228:quantum/action_util.c ****     if (oneshot_mods) {
 229:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 230:quantum/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 231:quantum/action_util.c ****             dprintf("Oneshot: timeout\n");
 232:quantum/action_util.c ****             clear_oneshot_mods();
 233:quantum/action_util.c ****         }
 234:quantum/action_util.c **** #    endif
 235:quantum/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 236:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 237:quantum/action_util.c ****             clear_oneshot_mods();
 238:quantum/action_util.c ****         }
 239:quantum/action_util.c ****     }
 240:quantum/action_util.c **** 
 241:quantum/action_util.c **** #endif
 242:quantum/action_util.c **** 
 243:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 244:quantum/action_util.c ****     // These need to be last to be able to properly control key overrides
 245:quantum/action_util.c ****     keyboard_report->mods &= ~suppressed_mods;
 246:quantum/action_util.c ****     keyboard_report->mods |= weak_override_mods;
 247:quantum/action_util.c **** #endif
 248:quantum/action_util.c **** 
 249:quantum/action_util.c ****     host_keyboard_send(keyboard_report);
 250:quantum/action_util.c **** }
 251:quantum/action_util.c **** 
 252:quantum/action_util.c **** /** \brief Get mods
 253:quantum/action_util.c ****  *
 254:quantum/action_util.c ****  * FIXME: needs doc
 255:quantum/action_util.c ****  */
 256:quantum/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 325               		.loc 2 256 24 is_stmt 1 view -0
 326               		.cfi_startproc
 327               	/* prologue: function */
 328               	/* frame size = 0 */
 329               	/* stack size = 0 */
 330               	.L__stack_usage = 0
 331               		.loc 2 256 26 view .LVU55
 332               		.loc 2 256 44 is_stmt 0 view .LVU56
 333 0000 8091 0000 		lds r24,real_mods
 334               	/* epilogue start */
 335 0004 0895      		ret
 336               		.cfi_endproc
 337               	.LFE126:
 339               		.section	.text.add_mods,"ax",@progbits
 340               	.global	add_mods
 342               	add_mods:
 343               	.LVL13:
 344               	.LFB127:
 257:quantum/action_util.c **** /** \brief add mods
 258:quantum/action_util.c ****  *
 259:quantum/action_util.c ****  * FIXME: needs doc
 260:quantum/action_util.c ****  */
 261:quantum/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 345               		.loc 2 261 29 is_stmt 1 view -0
 346               		.cfi_startproc
 347               	/* prologue: function */
 348               	/* frame size = 0 */
 349               	/* stack size = 0 */
 350               	.L__stack_usage = 0
 351               		.loc 2 261 31 view .LVU58
 352               		.loc 2 261 41 is_stmt 0 view .LVU59
 353 0000 9091 0000 		lds r25,real_mods
 354 0004 982B      		or r25,r24
 355 0006 9093 0000 		sts real_mods,r25
 356               	/* epilogue start */
 357               		.loc 2 261 50 view .LVU60
 358 000a 0895      		ret
 359               		.cfi_endproc
 360               	.LFE127:
 362               		.section	.text.del_mods,"ax",@progbits
 363               	.global	del_mods
 365               	del_mods:
 366               	.LVL14:
 367               	.LFB128:
 262:quantum/action_util.c **** /** \brief del mods
 263:quantum/action_util.c ****  *
 264:quantum/action_util.c ****  * FIXME: needs doc
 265:quantum/action_util.c ****  */
 266:quantum/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 368               		.loc 2 266 29 is_stmt 1 view -0
 369               		.cfi_startproc
 370               	/* prologue: function */
 371               	/* frame size = 0 */
 372               	/* stack size = 0 */
 373               	.L__stack_usage = 0
 374               		.loc 2 266 31 view .LVU62
 375               		.loc 2 266 41 is_stmt 0 view .LVU63
 376 0000 982F      		mov r25,r24
 377 0002 9095      		com r25
 378 0004 8091 0000 		lds r24,real_mods
 379               	.LVL15:
 380               		.loc 2 266 41 view .LVU64
 381 0008 8923      		and r24,r25
 382 000a 8093 0000 		sts real_mods,r24
 383               	/* epilogue start */
 384               		.loc 2 266 51 view .LVU65
 385 000e 0895      		ret
 386               		.cfi_endproc
 387               	.LFE128:
 389               		.section	.text.set_mods,"ax",@progbits
 390               	.global	set_mods
 392               	set_mods:
 393               	.LVL16:
 394               	.LFB129:
 267:quantum/action_util.c **** /** \brief set mods
 268:quantum/action_util.c ****  *
 269:quantum/action_util.c ****  * FIXME: needs doc
 270:quantum/action_util.c ****  */
 271:quantum/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 395               		.loc 2 271 29 is_stmt 1 view -0
 396               		.cfi_startproc
 397               	/* prologue: function */
 398               	/* frame size = 0 */
 399               	/* stack size = 0 */
 400               	.L__stack_usage = 0
 401               		.loc 2 271 31 view .LVU67
 402               		.loc 2 271 41 is_stmt 0 view .LVU68
 403 0000 8093 0000 		sts real_mods,r24
 404               	/* epilogue start */
 405               		.loc 2 271 49 view .LVU69
 406 0004 0895      		ret
 407               		.cfi_endproc
 408               	.LFE129:
 410               		.section	.text.clear_mods,"ax",@progbits
 411               	.global	clear_mods
 413               	clear_mods:
 414               	.LFB130:
 272:quantum/action_util.c **** /** \brief clear mods
 273:quantum/action_util.c ****  *
 274:quantum/action_util.c ****  * FIXME: needs doc
 275:quantum/action_util.c ****  */
 276:quantum/action_util.c **** void clear_mods(void) { real_mods = 0; }
 415               		.loc 2 276 23 is_stmt 1 view -0
 416               		.cfi_startproc
 417               	/* prologue: function */
 418               	/* frame size = 0 */
 419               	/* stack size = 0 */
 420               	.L__stack_usage = 0
 421               		.loc 2 276 25 view .LVU71
 422               		.loc 2 276 35 is_stmt 0 view .LVU72
 423 0000 1092 0000 		sts real_mods,__zero_reg__
 424               	/* epilogue start */
 425               		.loc 2 276 40 view .LVU73
 426 0004 0895      		ret
 427               		.cfi_endproc
 428               	.LFE130:
 430               		.section	.text.get_weak_mods,"ax",@progbits
 431               	.global	get_weak_mods
 433               	get_weak_mods:
 434               	.LFB131:
 277:quantum/action_util.c **** 
 278:quantum/action_util.c **** /** \brief get weak mods
 279:quantum/action_util.c ****  *
 280:quantum/action_util.c ****  * FIXME: needs doc
 281:quantum/action_util.c ****  */
 282:quantum/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 435               		.loc 2 282 29 is_stmt 1 view -0
 436               		.cfi_startproc
 437               	/* prologue: function */
 438               	/* frame size = 0 */
 439               	/* stack size = 0 */
 440               	.L__stack_usage = 0
 441               		.loc 2 282 31 view .LVU75
 442               		.loc 2 282 49 is_stmt 0 view .LVU76
 443 0000 8091 0000 		lds r24,weak_mods
 444               	/* epilogue start */
 445 0004 0895      		ret
 446               		.cfi_endproc
 447               	.LFE131:
 449               		.section	.text.add_weak_mods,"ax",@progbits
 450               	.global	add_weak_mods
 452               	add_weak_mods:
 453               	.LVL17:
 454               	.LFB132:
 283:quantum/action_util.c **** /** \brief add weak mods
 284:quantum/action_util.c ****  *
 285:quantum/action_util.c ****  * FIXME: needs doc
 286:quantum/action_util.c ****  */
 287:quantum/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 455               		.loc 2 287 34 is_stmt 1 view -0
 456               		.cfi_startproc
 457               	/* prologue: function */
 458               	/* frame size = 0 */
 459               	/* stack size = 0 */
 460               	.L__stack_usage = 0
 461               		.loc 2 287 36 view .LVU78
 462               		.loc 2 287 46 is_stmt 0 view .LVU79
 463 0000 9091 0000 		lds r25,weak_mods
 464 0004 982B      		or r25,r24
 465 0006 9093 0000 		sts weak_mods,r25
 466               	/* epilogue start */
 467               		.loc 2 287 55 view .LVU80
 468 000a 0895      		ret
 469               		.cfi_endproc
 470               	.LFE132:
 472               		.section	.text.del_weak_mods,"ax",@progbits
 473               	.global	del_weak_mods
 475               	del_weak_mods:
 476               	.LVL18:
 477               	.LFB133:
 288:quantum/action_util.c **** /** \brief del weak mods
 289:quantum/action_util.c ****  *
 290:quantum/action_util.c ****  * FIXME: needs doc
 291:quantum/action_util.c ****  */
 292:quantum/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 478               		.loc 2 292 34 is_stmt 1 view -0
 479               		.cfi_startproc
 480               	/* prologue: function */
 481               	/* frame size = 0 */
 482               	/* stack size = 0 */
 483               	.L__stack_usage = 0
 484               		.loc 2 292 36 view .LVU82
 485               		.loc 2 292 46 is_stmt 0 view .LVU83
 486 0000 982F      		mov r25,r24
 487 0002 9095      		com r25
 488 0004 8091 0000 		lds r24,weak_mods
 489               	.LVL19:
 490               		.loc 2 292 46 view .LVU84
 491 0008 8923      		and r24,r25
 492 000a 8093 0000 		sts weak_mods,r24
 493               	/* epilogue start */
 494               		.loc 2 292 56 view .LVU85
 495 000e 0895      		ret
 496               		.cfi_endproc
 497               	.LFE133:
 499               		.section	.text.set_weak_mods,"ax",@progbits
 500               	.global	set_weak_mods
 502               	set_weak_mods:
 503               	.LVL20:
 504               	.LFB134:
 293:quantum/action_util.c **** /** \brief set weak mods
 294:quantum/action_util.c ****  *
 295:quantum/action_util.c ****  * FIXME: needs doc
 296:quantum/action_util.c ****  */
 297:quantum/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 505               		.loc 2 297 34 is_stmt 1 view -0
 506               		.cfi_startproc
 507               	/* prologue: function */
 508               	/* frame size = 0 */
 509               	/* stack size = 0 */
 510               	.L__stack_usage = 0
 511               		.loc 2 297 36 view .LVU87
 512               		.loc 2 297 46 is_stmt 0 view .LVU88
 513 0000 8093 0000 		sts weak_mods,r24
 514               	/* epilogue start */
 515               		.loc 2 297 54 view .LVU89
 516 0004 0895      		ret
 517               		.cfi_endproc
 518               	.LFE134:
 520               		.section	.text.clear_weak_mods,"ax",@progbits
 521               	.global	clear_weak_mods
 523               	clear_weak_mods:
 524               	.LFB135:
 298:quantum/action_util.c **** /** \brief clear weak mods
 299:quantum/action_util.c ****  *
 300:quantum/action_util.c ****  * FIXME: needs doc
 301:quantum/action_util.c ****  */
 302:quantum/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 525               		.loc 2 302 28 is_stmt 1 view -0
 526               		.cfi_startproc
 527               	/* prologue: function */
 528               	/* frame size = 0 */
 529               	/* stack size = 0 */
 530               	.L__stack_usage = 0
 531               		.loc 2 302 30 view .LVU91
 532               		.loc 2 302 40 is_stmt 0 view .LVU92
 533 0000 1092 0000 		sts weak_mods,__zero_reg__
 534               	/* epilogue start */
 535               		.loc 2 302 45 view .LVU93
 536 0004 0895      		ret
 537               		.cfi_endproc
 538               	.LFE135:
 540               		.section	.text.get_macro_mods,"ax",@progbits
 541               	.global	get_macro_mods
 543               	get_macro_mods:
 544               	.LFB136:
 303:quantum/action_util.c **** 
 304:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 305:quantum/action_util.c **** /** \brief set weak mods used by key overrides. DO not call this manually
 306:quantum/action_util.c ****  */
 307:quantum/action_util.c **** void set_weak_override_mods(uint8_t mods) { weak_override_mods = mods; }
 308:quantum/action_util.c **** /** \brief clear weak mods used by key overrides. DO not call this manually
 309:quantum/action_util.c ****  */
 310:quantum/action_util.c **** void clear_weak_override_mods(void) { weak_override_mods = 0; }
 311:quantum/action_util.c **** 
 312:quantum/action_util.c **** /** \brief set suppressed mods used by key overrides. DO not call this manually
 313:quantum/action_util.c ****  */
 314:quantum/action_util.c **** void set_suppressed_override_mods(uint8_t mods) { suppressed_mods = mods; }
 315:quantum/action_util.c **** /** \brief clear suppressed mods used by key overrides. DO not call this manually
 316:quantum/action_util.c ****  */
 317:quantum/action_util.c **** void clear_suppressed_override_mods(void) { suppressed_mods = 0; }
 318:quantum/action_util.c **** #endif
 319:quantum/action_util.c **** 
 320:quantum/action_util.c **** /* macro modifier */
 321:quantum/action_util.c **** /** \brief get macro mods
 322:quantum/action_util.c ****  *
 323:quantum/action_util.c ****  * FIXME: needs doc
 324:quantum/action_util.c ****  */
 325:quantum/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 545               		.loc 2 325 30 is_stmt 1 view -0
 546               		.cfi_startproc
 547               	/* prologue: function */
 548               	/* frame size = 0 */
 549               	/* stack size = 0 */
 550               	.L__stack_usage = 0
 551               		.loc 2 325 32 view .LVU95
 552               		.loc 2 325 51 is_stmt 0 view .LVU96
 553 0000 8091 0000 		lds r24,macro_mods
 554               	/* epilogue start */
 555 0004 0895      		ret
 556               		.cfi_endproc
 557               	.LFE136:
 559               		.section	.text.add_macro_mods,"ax",@progbits
 560               	.global	add_macro_mods
 562               	add_macro_mods:
 563               	.LVL21:
 564               	.LFB137:
 326:quantum/action_util.c **** /** \brief add macro mods
 327:quantum/action_util.c ****  *
 328:quantum/action_util.c ****  * FIXME: needs doc
 329:quantum/action_util.c ****  */
 330:quantum/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 565               		.loc 2 330 35 is_stmt 1 view -0
 566               		.cfi_startproc
 567               	/* prologue: function */
 568               	/* frame size = 0 */
 569               	/* stack size = 0 */
 570               	.L__stack_usage = 0
 571               		.loc 2 330 37 view .LVU98
 572               		.loc 2 330 48 is_stmt 0 view .LVU99
 573 0000 9091 0000 		lds r25,macro_mods
 574 0004 982B      		or r25,r24
 575 0006 9093 0000 		sts macro_mods,r25
 576               	/* epilogue start */
 577               		.loc 2 330 57 view .LVU100
 578 000a 0895      		ret
 579               		.cfi_endproc
 580               	.LFE137:
 582               		.section	.text.del_macro_mods,"ax",@progbits
 583               	.global	del_macro_mods
 585               	del_macro_mods:
 586               	.LVL22:
 587               	.LFB138:
 331:quantum/action_util.c **** /** \brief del macro mods
 332:quantum/action_util.c ****  *
 333:quantum/action_util.c ****  * FIXME: needs doc
 334:quantum/action_util.c ****  */
 335:quantum/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 588               		.loc 2 335 35 is_stmt 1 view -0
 589               		.cfi_startproc
 590               	/* prologue: function */
 591               	/* frame size = 0 */
 592               	/* stack size = 0 */
 593               	.L__stack_usage = 0
 594               		.loc 2 335 37 view .LVU102
 595               		.loc 2 335 48 is_stmt 0 view .LVU103
 596 0000 982F      		mov r25,r24
 597 0002 9095      		com r25
 598 0004 8091 0000 		lds r24,macro_mods
 599               	.LVL23:
 600               		.loc 2 335 48 view .LVU104
 601 0008 8923      		and r24,r25
 602 000a 8093 0000 		sts macro_mods,r24
 603               	/* epilogue start */
 604               		.loc 2 335 58 view .LVU105
 605 000e 0895      		ret
 606               		.cfi_endproc
 607               	.LFE138:
 609               		.section	.text.set_macro_mods,"ax",@progbits
 610               	.global	set_macro_mods
 612               	set_macro_mods:
 613               	.LVL24:
 614               	.LFB139:
 336:quantum/action_util.c **** /** \brief set macro mods
 337:quantum/action_util.c ****  *
 338:quantum/action_util.c ****  * FIXME: needs doc
 339:quantum/action_util.c ****  */
 340:quantum/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 615               		.loc 2 340 35 is_stmt 1 view -0
 616               		.cfi_startproc
 617               	/* prologue: function */
 618               	/* frame size = 0 */
 619               	/* stack size = 0 */
 620               	.L__stack_usage = 0
 621               		.loc 2 340 37 view .LVU107
 622               		.loc 2 340 48 is_stmt 0 view .LVU108
 623 0000 8093 0000 		sts macro_mods,r24
 624               	/* epilogue start */
 625               		.loc 2 340 56 view .LVU109
 626 0004 0895      		ret
 627               		.cfi_endproc
 628               	.LFE139:
 630               		.section	.text.clear_macro_mods,"ax",@progbits
 631               	.global	clear_macro_mods
 633               	clear_macro_mods:
 634               	.LFB140:
 341:quantum/action_util.c **** /** \brief clear macro mods
 342:quantum/action_util.c ****  *
 343:quantum/action_util.c ****  * FIXME: needs doc
 344:quantum/action_util.c ****  */
 345:quantum/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 635               		.loc 2 345 29 is_stmt 1 view -0
 636               		.cfi_startproc
 637               	/* prologue: function */
 638               	/* frame size = 0 */
 639               	/* stack size = 0 */
 640               	.L__stack_usage = 0
 641               		.loc 2 345 31 view .LVU111
 642               		.loc 2 345 42 is_stmt 0 view .LVU112
 643 0000 1092 0000 		sts macro_mods,__zero_reg__
 644               	/* epilogue start */
 645               		.loc 2 345 47 view .LVU113
 646 0004 0895      		ret
 647               		.cfi_endproc
 648               	.LFE140:
 650               		.section	.text.get_oneshot_mods,"ax",@progbits
 651               	.global	get_oneshot_mods
 653               	get_oneshot_mods:
 654               	.LFB141:
 346:quantum/action_util.c **** 
 347:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 348:quantum/action_util.c **** /** \brief get oneshot mods
 349:quantum/action_util.c ****  *
 350:quantum/action_util.c ****  * FIXME: needs doc
 351:quantum/action_util.c ****  */
 352:quantum/action_util.c **** uint8_t get_oneshot_mods(void) { return oneshot_mods; }
 655               		.loc 2 352 32 is_stmt 1 view -0
 656               		.cfi_startproc
 657               	/* prologue: function */
 658               	/* frame size = 0 */
 659               	/* stack size = 0 */
 660               	.L__stack_usage = 0
 661               		.loc 2 352 34 view .LVU115
 662               		.loc 2 352 55 is_stmt 0 view .LVU116
 663 0000 8091 0000 		lds r24,oneshot_mods
 664               	/* epilogue start */
 665 0004 0895      		ret
 666               		.cfi_endproc
 667               	.LFE141:
 669               		.section	.text.oneshot_locked_mods_changed_user,"ax",@progbits
 670               		.weak	oneshot_locked_mods_changed_user
 672               	oneshot_locked_mods_changed_user:
 673               	.LVL25:
 674               	.LFB146:
 353:quantum/action_util.c **** 
 354:quantum/action_util.c **** void add_oneshot_mods(uint8_t mods) {
 355:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 356:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 357:quantum/action_util.c ****         oneshot_time = timer_read();
 358:quantum/action_util.c **** #    endif
 359:quantum/action_util.c ****         oneshot_mods |= mods;
 360:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 361:quantum/action_util.c ****     }
 362:quantum/action_util.c **** }
 363:quantum/action_util.c **** 
 364:quantum/action_util.c **** void del_oneshot_mods(uint8_t mods) {
 365:quantum/action_util.c ****     if (oneshot_mods & mods) {
 366:quantum/action_util.c ****         oneshot_mods &= ~mods;
 367:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 368:quantum/action_util.c ****         oneshot_time = oneshot_mods ? timer_read() : 0;
 369:quantum/action_util.c **** #    endif
 370:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 371:quantum/action_util.c ****     }
 372:quantum/action_util.c **** }
 373:quantum/action_util.c **** 
 374:quantum/action_util.c **** /** \brief set oneshot mods
 375:quantum/action_util.c ****  *
 376:quantum/action_util.c ****  * FIXME: needs doc
 377:quantum/action_util.c ****  */
 378:quantum/action_util.c **** void set_oneshot_mods(uint8_t mods) {
 379:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 380:quantum/action_util.c ****         if (oneshot_mods != mods) {
 381:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 382:quantum/action_util.c ****             oneshot_time = timer_read();
 383:quantum/action_util.c **** #    endif
 384:quantum/action_util.c ****             oneshot_mods = mods;
 385:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 386:quantum/action_util.c ****         }
 387:quantum/action_util.c ****     }
 388:quantum/action_util.c **** }
 389:quantum/action_util.c **** 
 390:quantum/action_util.c **** /** \brief clear oneshot mods
 391:quantum/action_util.c ****  *
 392:quantum/action_util.c ****  * FIXME: needs doc
 393:quantum/action_util.c ****  */
 394:quantum/action_util.c **** void clear_oneshot_mods(void) {
 395:quantum/action_util.c ****     if (oneshot_mods) {
 396:quantum/action_util.c ****         oneshot_mods = 0;
 397:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 398:quantum/action_util.c ****         oneshot_time = 0;
 399:quantum/action_util.c **** #    endif
 400:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 401:quantum/action_util.c ****     }
 402:quantum/action_util.c **** }
 403:quantum/action_util.c **** #endif
 404:quantum/action_util.c **** 
 405:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 406:quantum/action_util.c ****  *
 407:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 408:quantum/action_util.c ****  */
 409:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_user(uint8_t mods) {}
 675               		.loc 2 409 75 is_stmt 1 view -0
 676               		.cfi_startproc
 677               	/* prologue: function */
 678               	/* frame size = 0 */
 679               	/* stack size = 0 */
 680               	.L__stack_usage = 0
 681               		.loc 2 409 76 view .LVU118
 682               	/* epilogue start */
 683 0000 0895      		ret
 684               		.cfi_endproc
 685               	.LFE146:
 687               		.set	oneshot_locked_mods_changed_user.localalias,oneshot_locked_mods_changed_user
 688               		.section	.text.oneshot_locked_mods_changed_kb,"ax",@progbits
 689               		.weak	oneshot_locked_mods_changed_kb
 691               	oneshot_locked_mods_changed_kb:
 692               	.LVL26:
 693               	.LFB147:
 410:quantum/action_util.c **** 
 411:quantum/action_util.c **** /** \brief Called when the locked one shot modifiers have been changed.
 412:quantum/action_util.c ****  *
 413:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 414:quantum/action_util.c ****  */
 415:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_kb(uint8_t mods) { oneshot_locked_mods_chang
 694               		.loc 2 415 73 view -0
 695               		.cfi_startproc
 696               	/* prologue: function */
 697               	/* frame size = 0 */
 698               	/* stack size = 0 */
 699               	.L__stack_usage = 0
 700               		.loc 2 415 75 view .LVU120
 701 0000 0C94 0000 		jmp oneshot_locked_mods_changed_user
 702               	.LVL27:
 703               		.loc 2 415 75 is_stmt 0 view .LVU121
 704               		.cfi_endproc
 705               	.LFE147:
 707               		.section	.text.set_oneshot_locked_mods,"ax",@progbits
 708               	.global	set_oneshot_locked_mods
 710               	set_oneshot_locked_mods:
 711               	.LVL28:
 712               	.LFB111:
  47:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
 713               		.loc 2 47 54 is_stmt 1 view -0
 714               		.cfi_startproc
 715               	/* prologue: function */
 716               	/* frame size = 0 */
 717               	/* stack size = 0 */
 718               	.L__stack_usage = 0
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 719               		.loc 2 48 5 view .LVU123
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 720               		.loc 2 48 8 is_stmt 0 view .LVU124
 721 0000 9091 0000 		lds r25,oneshot_locked_mods
 722 0004 9817      		cp r25,r24
 723 0006 01F0      		breq .L34
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 724               		.loc 2 49 9 is_stmt 1 view .LVU125
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 725               		.loc 2 49 29 is_stmt 0 view .LVU126
 726 0008 8093 0000 		sts oneshot_locked_mods,r24
  50:quantum/action_util.c ****     }
 727               		.loc 2 50 9 is_stmt 1 view .LVU127
 728 000c 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 729               	.LVL29:
 730               	.L34:
 731               	/* epilogue start */
  52:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
 732               		.loc 2 52 1 is_stmt 0 view .LVU128
 733 0010 0895      		ret
 734               		.cfi_endproc
 735               	.LFE111:
 737               		.section	.text.clear_oneshot_locked_mods,"ax",@progbits
 738               	.global	clear_oneshot_locked_mods
 740               	clear_oneshot_locked_mods:
 741               	.LFB112:
  53:quantum/action_util.c ****     if (oneshot_locked_mods) {
 742               		.loc 2 53 38 is_stmt 1 view -0
 743               		.cfi_startproc
 744               	/* prologue: function */
 745               	/* frame size = 0 */
 746               	/* stack size = 0 */
 747               	.L__stack_usage = 0
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 748               		.loc 2 54 5 view .LVU130
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 749               		.loc 2 54 8 is_stmt 0 view .LVU131
 750 0000 8091 0000 		lds r24,oneshot_locked_mods
 751 0004 8823      		tst r24
 752 0006 01F0      		breq .L36
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 753               		.loc 2 55 9 is_stmt 1 view .LVU132
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 754               		.loc 2 55 29 is_stmt 0 view .LVU133
 755 0008 1092 0000 		sts oneshot_locked_mods,__zero_reg__
  56:quantum/action_util.c ****     }
 756               		.loc 2 56 9 is_stmt 1 view .LVU134
 757 000c 80E0      		ldi r24,0
 758 000e 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 759               	.LVL30:
 760               	.L36:
 761               	/* epilogue start */
  58:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 762               		.loc 2 58 1 is_stmt 0 view .LVU135
 763 0012 0895      		ret
 764               		.cfi_endproc
 765               	.LFE112:
 767               		.section	.text.oneshot_mods_changed_user,"ax",@progbits
 768               		.weak	oneshot_mods_changed_user
 770               	oneshot_mods_changed_user:
 771               	.LFB154:
 772               		.cfi_startproc
 773               	/* prologue: function */
 774               	/* frame size = 0 */
 775               	/* stack size = 0 */
 776               	.L__stack_usage = 0
 777               	/* epilogue start */
 778 0000 0895      		ret
 779               		.cfi_endproc
 780               	.LFE154:
 782               		.section	.text.oneshot_mods_changed_kb,"ax",@progbits
 783               		.weak	oneshot_mods_changed_kb
 785               	oneshot_mods_changed_kb:
 786               	.LVL31:
 787               	.LFB149:
 416:quantum/action_util.c **** 
 417:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 418:quantum/action_util.c ****  *
 419:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 420:quantum/action_util.c ****  */
 421:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_user(uint8_t mods) {}
 422:quantum/action_util.c **** 
 423:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 424:quantum/action_util.c ****  *
 425:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 426:quantum/action_util.c ****  */
 427:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_kb(uint8_t mods) { oneshot_mods_changed_user(mods);
 788               		.loc 2 427 66 is_stmt 1 view -0
 789               		.cfi_startproc
 790               	/* prologue: function */
 791               	/* frame size = 0 */
 792               	/* stack size = 0 */
 793               	.L__stack_usage = 0
 794               		.loc 2 427 68 view .LVU137
 795 0000 0C94 0000 		jmp oneshot_mods_changed_user
 796               	.LVL32:
 797               		.loc 2 427 68 is_stmt 0 view .LVU138
 798               		.cfi_endproc
 799               	.LFE149:
 801               		.section	.text.add_oneshot_mods,"ax",@progbits
 802               	.global	add_oneshot_mods
 804               	add_oneshot_mods:
 805               	.LVL33:
 806               	.LFB142:
 354:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 807               		.loc 2 354 37 is_stmt 1 view -0
 808               		.cfi_startproc
 809               	/* prologue: function */
 810               	/* frame size = 0 */
 811               	/* stack size = 0 */
 812               	.L__stack_usage = 0
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 813               		.loc 2 355 5 view .LVU140
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 814               		.loc 2 355 31 is_stmt 0 view .LVU141
 815 0000 9091 0000 		lds r25,oneshot_mods
 816 0004 292F      		mov r18,r25
 817 0006 2823      		and r18,r24
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 818               		.loc 2 355 8 view .LVU142
 819 0008 2817      		cp r18,r24
 820 000a 01F0      		breq .L40
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 821               		.loc 2 359 9 is_stmt 1 view .LVU143
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 822               		.loc 2 359 22 is_stmt 0 view .LVU144
 823 000c 982B      		or r25,r24
 824 000e 9093 0000 		sts oneshot_mods,r25
 360:quantum/action_util.c ****     }
 825               		.loc 2 360 9 is_stmt 1 view .LVU145
 826 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 827               	.LVL34:
 828               	.L40:
 829               	/* epilogue start */
 362:quantum/action_util.c **** 
 830               		.loc 2 362 1 is_stmt 0 view .LVU146
 831 0016 0895      		ret
 832               		.cfi_endproc
 833               	.LFE142:
 835               		.section	.text.del_oneshot_mods,"ax",@progbits
 836               	.global	del_oneshot_mods
 838               	del_oneshot_mods:
 839               	.LVL35:
 840               	.LFB143:
 364:quantum/action_util.c ****     if (oneshot_mods & mods) {
 841               		.loc 2 364 37 is_stmt 1 view -0
 842               		.cfi_startproc
 843               	/* prologue: function */
 844               	/* frame size = 0 */
 845               	/* stack size = 0 */
 846               	.L__stack_usage = 0
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 847               		.loc 2 365 5 view .LVU148
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 848               		.loc 2 365 9 is_stmt 0 view .LVU149
 849 0000 9091 0000 		lds r25,oneshot_mods
 850 0004 292F      		mov r18,r25
 851 0006 2823      		and r18,r24
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 852               		.loc 2 365 8 view .LVU150
 853 0008 01F0      		breq .L42
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 854               		.loc 2 366 9 is_stmt 1 view .LVU151
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 855               		.loc 2 366 22 is_stmt 0 view .LVU152
 856 000a 8095      		com r24
 857               	.LVL36:
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 858               		.loc 2 366 22 view .LVU153
 859 000c 8923      		and r24,r25
 860               	.LVL37:
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 861               		.loc 2 366 22 view .LVU154
 862 000e 8093 0000 		sts oneshot_mods,r24
 370:quantum/action_util.c ****     }
 863               		.loc 2 370 9 is_stmt 1 view .LVU155
 864 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 865               	.LVL38:
 866               	.L42:
 867               	/* epilogue start */
 372:quantum/action_util.c **** 
 868               		.loc 2 372 1 is_stmt 0 view .LVU156
 869 0016 0895      		ret
 870               		.cfi_endproc
 871               	.LFE143:
 873               		.section	.text.set_oneshot_mods,"ax",@progbits
 874               	.global	set_oneshot_mods
 876               	set_oneshot_mods:
 877               	.LVL39:
 878               	.LFB144:
 378:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 879               		.loc 2 378 37 is_stmt 1 view -0
 880               		.cfi_startproc
 881               	/* prologue: function */
 882               	/* frame size = 0 */
 883               	/* stack size = 0 */
 884               	.L__stack_usage = 0
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 885               		.loc 2 379 5 view .LVU158
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 886               		.loc 2 379 23 is_stmt 0 view .LVU159
 887 0000 9091 0000 		lds r25,keymap_config+1
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 888               		.loc 2 379 8 view .LVU160
 889 0004 92FD      		sbrc r25,2
 890 0006 00C0      		rjmp .L44
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 891               		.loc 2 380 9 is_stmt 1 view .LVU161
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 892               		.loc 2 380 12 is_stmt 0 view .LVU162
 893 0008 9091 0000 		lds r25,oneshot_mods
 894 000c 9817      		cp r25,r24
 895 000e 01F0      		breq .L44
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 896               		.loc 2 384 13 is_stmt 1 view .LVU163
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 897               		.loc 2 384 26 is_stmt 0 view .LVU164
 898 0010 8093 0000 		sts oneshot_mods,r24
 385:quantum/action_util.c ****         }
 899               		.loc 2 385 13 is_stmt 1 view .LVU165
 900 0014 0C94 0000 		jmp oneshot_mods_changed_kb
 901               	.LVL40:
 902               	.L44:
 903               	/* epilogue start */
 388:quantum/action_util.c **** 
 904               		.loc 2 388 1 is_stmt 0 view .LVU166
 905 0018 0895      		ret
 906               		.cfi_endproc
 907               	.LFE144:
 909               		.section	.text.clear_oneshot_mods,"ax",@progbits
 910               	.global	clear_oneshot_mods
 912               	clear_oneshot_mods:
 913               	.LFB145:
 394:quantum/action_util.c ****     if (oneshot_mods) {
 914               		.loc 2 394 31 is_stmt 1 view -0
 915               		.cfi_startproc
 916               	/* prologue: function */
 917               	/* frame size = 0 */
 918               	/* stack size = 0 */
 919               	.L__stack_usage = 0
 395:quantum/action_util.c ****         oneshot_mods = 0;
 920               		.loc 2 395 5 view .LVU168
 395:quantum/action_util.c ****         oneshot_mods = 0;
 921               		.loc 2 395 8 is_stmt 0 view .LVU169
 922 0000 8091 0000 		lds r24,oneshot_mods
 923 0004 8823      		tst r24
 924 0006 01F0      		breq .L46
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 925               		.loc 2 396 9 is_stmt 1 view .LVU170
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 926               		.loc 2 396 22 is_stmt 0 view .LVU171
 927 0008 1092 0000 		sts oneshot_mods,__zero_reg__
 400:quantum/action_util.c ****     }
 928               		.loc 2 400 9 is_stmt 1 view .LVU172
 929 000c 80E0      		ldi r24,0
 930 000e 0C94 0000 		jmp oneshot_mods_changed_kb
 931               	.LVL41:
 932               	.L46:
 933               	/* epilogue start */
 402:quantum/action_util.c **** #endif
 934               		.loc 2 402 1 is_stmt 0 view .LVU173
 935 0012 0895      		ret
 936               		.cfi_endproc
 937               	.LFE145:
 939               		.section	.text.send_keyboard_report,"ax",@progbits
 940               	.global	send_keyboard_report
 942               	send_keyboard_report:
 943               	.LFB125:
 222:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 944               		.loc 2 222 33 is_stmt 1 view -0
 945               		.cfi_startproc
 946               	/* prologue: function */
 947               	/* frame size = 0 */
 948               	/* stack size = 0 */
 949               	.L__stack_usage = 0
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 950               		.loc 2 223 5 view .LVU175
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 951               		.loc 2 223 20 is_stmt 0 view .LVU176
 952 0000 E091 0000 		lds r30,keyboard_report
 953 0004 F091 0000 		lds r31,keyboard_report+1
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 954               		.loc 2 223 27 view .LVU177
 955 0008 8091 0000 		lds r24,real_mods
 956 000c 8083      		st Z,r24
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 957               		.loc 2 224 5 is_stmt 1 view .LVU178
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 958               		.loc 2 224 27 is_stmt 0 view .LVU179
 959 000e E091 0000 		lds r30,keyboard_report
 960 0012 F091 0000 		lds r31,keyboard_report+1
 961 0016 8081      		ld r24,Z
 962 0018 9091 0000 		lds r25,weak_mods
 963 001c 892B      		or r24,r25
 964 001e 8083      		st Z,r24
 225:quantum/action_util.c **** 
 965               		.loc 2 225 5 is_stmt 1 view .LVU180
 225:quantum/action_util.c **** 
 966               		.loc 2 225 27 is_stmt 0 view .LVU181
 967 0020 E091 0000 		lds r30,keyboard_report
 968 0024 F091 0000 		lds r31,keyboard_report+1
 969 0028 8081      		ld r24,Z
 970 002a 9091 0000 		lds r25,macro_mods
 971 002e 892B      		or r24,r25
 972 0030 8083      		st Z,r24
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 973               		.loc 2 228 5 is_stmt 1 view .LVU182
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 974               		.loc 2 228 9 is_stmt 0 view .LVU183
 975 0032 9091 0000 		lds r25,oneshot_mods
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 976               		.loc 2 228 8 view .LVU184
 977 0036 9923      		tst r25
 978 0038 01F0      		breq .L50
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 979               		.loc 2 235 9 is_stmt 1 view .LVU185
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 980               		.loc 2 235 31 is_stmt 0 view .LVU186
 981 003a E091 0000 		lds r30,keyboard_report
 982 003e F091 0000 		lds r31,keyboard_report+1
 983 0042 8081      		ld r24,Z
 984 0044 892B      		or r24,r25
 985 0046 8083      		st Z,r24
 236:quantum/action_util.c ****             clear_oneshot_mods();
 986               		.loc 2 236 9 is_stmt 1 view .LVU187
 236:quantum/action_util.c ****             clear_oneshot_mods();
 987               		.loc 2 236 13 is_stmt 0 view .LVU188
 988 0048 8091 0000 		lds r24,keyboard_report
 989 004c 9091 0000 		lds r25,keyboard_report+1
 990 0050 0E94 0000 		call has_anykey
 991               	.LVL42:
 236:quantum/action_util.c ****             clear_oneshot_mods();
 992               		.loc 2 236 12 view .LVU189
 993 0054 8111      		cpse r24,__zero_reg__
 237:quantum/action_util.c ****         }
 994               		.loc 2 237 13 is_stmt 1 view .LVU190
 995 0056 0E94 0000 		call clear_oneshot_mods
 996               	.LVL43:
 997               	.L50:
 249:quantum/action_util.c **** }
 998               		.loc 2 249 5 view .LVU191
 999 005a 8091 0000 		lds r24,keyboard_report
 1000 005e 9091 0000 		lds r25,keyboard_report+1
 1001 0062 0C94 0000 		jmp host_keyboard_send
 1002               	.LVL44:
 1003               		.cfi_endproc
 1004               	.LFE125:
 1006               		.section	.text.oneshot_layer_changed_user,"ax",@progbits
 1007               		.weak	oneshot_layer_changed_user
 1009               	oneshot_layer_changed_user:
 1010               	.LFB156:
 1011               		.cfi_startproc
 1012               	/* prologue: function */
 1013               	/* frame size = 0 */
 1014               	/* stack size = 0 */
 1015               	.L__stack_usage = 0
 1016               	/* epilogue start */
 1017 0000 0895      		ret
 1018               		.cfi_endproc
 1019               	.LFE156:
 1021               		.section	.text.oneshot_layer_changed_kb,"ax",@progbits
 1022               		.weak	oneshot_layer_changed_kb
 1024               	oneshot_layer_changed_kb:
 1025               	.LVL45:
 1026               	.LFB151:
 428:quantum/action_util.c **** 
 429:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 430:quantum/action_util.c ****  *
 431:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 432:quantum/action_util.c ****  */
 433:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_user(uint8_t layer) {}
 434:quantum/action_util.c **** 
 435:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 436:quantum/action_util.c ****  *
 437:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 438:quantum/action_util.c ****  */
 439:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_kb(uint8_t layer) { oneshot_layer_changed_user(lay
 1027               		.loc 2 439 68 view -0
 1028               		.cfi_startproc
 1029               	/* prologue: function */
 1030               	/* frame size = 0 */
 1031               	/* stack size = 0 */
 1032               	.L__stack_usage = 0
 1033               		.loc 2 439 70 view .LVU193
 1034 0000 0C94 0000 		jmp oneshot_layer_changed_user
 1035               	.LVL46:
 1036               		.loc 2 439 70 is_stmt 0 view .LVU194
 1037               		.cfi_endproc
 1038               	.LFE151:
 1040               		.section	.text.set_oneshot_layer,"ax",@progbits
 1041               	.global	set_oneshot_layer
 1043               	set_oneshot_layer:
 1044               	.LVL47:
 1045               	.LFB116:
 143:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1046               		.loc 2 143 54 is_stmt 1 view -0
 1047               		.cfi_startproc
 1048               	/* prologue: function */
 1049               	/* frame size = 0 */
 1050               	/* stack size = 0 */
 1051               	.L__stack_usage = 0
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1052               		.loc 2 144 5 view .LVU196
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1053               		.loc 2 144 23 is_stmt 0 view .LVU197
 1054 0000 9091 0000 		lds r25,keymap_config+1
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1055               		.loc 2 144 8 view .LVU198
 1056 0004 92FD      		sbrc r25,2
 1057 0006 00C0      		rjmp .L58
 145:quantum/action_util.c ****         layer_on(layer);
 1058               		.loc 2 145 9 is_stmt 1 view .LVU199
 145:quantum/action_util.c ****         layer_on(layer);
 1059               		.loc 2 145 36 is_stmt 0 view .LVU200
 1060 0008 98E0      		ldi r25,lo8(8)
 1061 000a 899F      		mul r24,r25
 1062 000c 9001      		movw r18,r0
 1063 000e 1124      		clr __zero_reg__
 145:quantum/action_util.c ****         layer_on(layer);
 1064               		.loc 2 145 41 view .LVU201
 1065 0010 622B      		or r22,r18
 1066               	.LVL48:
 145:quantum/action_util.c ****         layer_on(layer);
 1067               		.loc 2 145 28 view .LVU202
 1068 0012 6093 0000 		sts oneshot_layer_data,r22
 146:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1069               		.loc 2 146 9 is_stmt 1 view .LVU203
 1070 0016 0E94 0000 		call layer_on
 1071               	.LVL49:
 150:quantum/action_util.c ****     } else {
 1072               		.loc 2 150 9 view .LVU204
 1073               	.LBB14:
 1074               	.LBI14:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1075               		.loc 2 77 16 view .LVU205
 1076               	.LBB15:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1077               		.loc 2 77 42 view .LVU206
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1078               		.loc 2 77 68 is_stmt 0 view .LVU207
 1079 001a 8091 0000 		lds r24,oneshot_layer_data
 1080               	.LBE15:
 1081               	.LBE14:
 150:quantum/action_util.c ****     } else {
 1082               		.loc 2 150 9 view .LVU208
 1083 001e 8595      		asr r24
 1084 0020 8595      		asr r24
 1085 0022 8595      		asr r24
 1086 0024 0C94 0000 		jmp oneshot_layer_changed_kb
 1087               	.LVL50:
 1088               	.L58:
 152:quantum/action_util.c ****     }
 1089               		.loc 2 152 9 is_stmt 1 view .LVU209
 1090 0028 0C94 0000 		jmp layer_on
 1091               	.LVL51:
 152:quantum/action_util.c ****     }
 1092               		.loc 2 152 9 is_stmt 0 view .LVU210
 1093               		.cfi_endproc
 1094               	.LFE116:
 1096               		.section	.text.reset_oneshot_layer,"ax",@progbits
 1097               	.global	reset_oneshot_layer
 1099               	reset_oneshot_layer:
 1100               	.LFB117:
 159:quantum/action_util.c ****     oneshot_layer_data = 0;
 1101               		.loc 2 159 32 is_stmt 1 view -0
 1102               		.cfi_startproc
 1103               	/* prologue: function */
 1104               	/* frame size = 0 */
 1105               	/* stack size = 0 */
 1106               	.L__stack_usage = 0
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1107               		.loc 2 160 5 view .LVU212
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1108               		.loc 2 160 24 is_stmt 0 view .LVU213
 1109 0000 1092 0000 		sts oneshot_layer_data,__zero_reg__
 164:quantum/action_util.c **** }
 1110               		.loc 2 164 5 is_stmt 1 view .LVU214
 1111 0004 80E0      		ldi r24,0
 1112 0006 0C94 0000 		jmp oneshot_layer_changed_kb
 1113               	.LVL52:
 1114               		.cfi_endproc
 1115               	.LFE117:
 1117               		.section	.text.clear_oneshot_layer_state,"ax",@progbits
 1118               	.global	clear_oneshot_layer_state
 1120               	clear_oneshot_layer_state:
 1121               	.LVL53:
 1122               	.LFB118:
 170:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1123               		.loc 2 170 62 view -0
 1124               		.cfi_startproc
 1125               	/* prologue: function */
 1126               	/* frame size = 0 */
 1127               	/* stack size = 0 */
 1128               	.L__stack_usage = 0
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1129               		.loc 2 171 5 view .LVU216
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1130               		.loc 2 171 13 is_stmt 0 view .LVU217
 1131 0000 9091 0000 		lds r25,oneshot_layer_data
 1132               	.LVL54:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1133               		.loc 2 172 5 is_stmt 1 view .LVU218
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1134               		.loc 2 172 24 is_stmt 0 view .LVU219
 1135 0004 8095      		com r24
 1136               	.LVL55:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1137               		.loc 2 172 24 view .LVU220
 1138 0006 8923      		and r24,r25
 1139               	.LVL56:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1140               		.loc 2 172 24 view .LVU221
 1141 0008 8093 0000 		sts oneshot_layer_data,r24
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1142               		.loc 2 173 5 is_stmt 1 view .LVU222
 1143               	.LBB16:
 1144               	.LBI16:
  78:quantum/action_util.c **** 
 1145               		.loc 2 78 16 view .LVU223
 1146               	.LBB17:
  78:quantum/action_util.c **** 
 1147               		.loc 2 78 48 view .LVU224
  78:quantum/action_util.c **** 
 1148               		.loc 2 78 74 is_stmt 0 view .LVU225
 1149 000c 282F      		mov r18,r24
 1150 000e 2770      		andi r18,lo8(7)
 1151               	.LBE17:
 1152               	.LBE16:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1153               		.loc 2 173 8 view .LVU226
 1154 0010 01F4      		brne .L61
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1155               		.loc 2 173 52 discriminator 1 view .LVU227
 1156 0012 282F      		mov r18,r24
 1157 0014 082E      		mov __tmp_reg__,r24
 1158 0016 000C      		lsl r0
 1159 0018 330B      		sbc r19,r19
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1160               		.loc 2 173 37 discriminator 1 view .LVU228
 1161 001a 9217      		cp r25,r18
 1162 001c 1306      		cpc __zero_reg__,r19
 1163 001e 01F4      		brne .L62
 1164               	.L61:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1165               		.loc 2 173 75 discriminator 3 view .LVU229
 1166 0020 9091 0000 		lds r25,keymap_config+1
 1167               	.LVL57:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1168               		.loc 2 173 75 discriminator 3 view .LVU230
 1169 0024 92FF      		sbrs r25,2
 1170 0026 00C0      		rjmp .L60
 1171               	.L62:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1172               		.loc 2 174 9 is_stmt 1 view .LVU231
 1173               	.LBB18:
 1174               	.LBI18:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1175               		.loc 2 77 16 view .LVU232
 1176               	.LBB19:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1177               		.loc 2 77 42 view .LVU233
 1178               	.LBE19:
 1179               	.LBE18:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1180               		.loc 2 174 9 is_stmt 0 view .LVU234
 1181 0028 8595      		asr r24
 1182 002a 8595      		asr r24
 1183 002c 8595      		asr r24
 1184 002e 0E94 0000 		call layer_off
 1185               	.LVL58:
 175:quantum/action_util.c ****     }
 1186               		.loc 2 175 9 is_stmt 1 view .LVU235
 1187 0032 0C94 0000 		jmp reset_oneshot_layer
 1188               	.LVL59:
 1189               	.L60:
 1190               	/* epilogue start */
 177:quantum/action_util.c **** /** \brief Is oneshot layer active
 1191               		.loc 2 177 1 is_stmt 0 view .LVU236
 1192 0036 0895      		ret
 1193               		.cfi_endproc
 1194               	.LFE118:
 1196               		.section	.text.has_anymod,"ax",@progbits
 1197               	.global	has_anymod
 1199               	has_anymod:
 1200               	.LFB152:
 440:quantum/action_util.c **** 
 441:quantum/action_util.c **** /** \brief inspect keyboard state
 442:quantum/action_util.c ****  *
 443:quantum/action_util.c ****  * FIXME: needs doc
 444:quantum/action_util.c ****  */
 445:quantum/action_util.c **** uint8_t has_anymod(void) { return bitpop(real_mods); }
 1201               		.loc 2 445 26 is_stmt 1 view -0
 1202               		.cfi_startproc
 1203               	/* prologue: function */
 1204               	/* frame size = 0 */
 1205               	/* stack size = 0 */
 1206               	.L__stack_usage = 0
 1207               		.loc 2 445 28 view .LVU238
 1208               		.loc 2 445 35 is_stmt 0 view .LVU239
 1209 0000 8091 0000 		lds r24,real_mods
 1210 0004 0C94 0000 		jmp bitpop
 1211               	.LVL60:
 1212               		.cfi_endproc
 1213               	.LFE152:
 1215               		.section	.bss.oneshot_layer_data,"aw",@nobits
 1218               	oneshot_layer_data:
 1219 0000 00        		.zero	1
 1220               		.section	.bss.oneshot_locked_mods,"aw",@nobits
 1223               	oneshot_locked_mods:
 1224 0000 00        		.zero	1
 1225               		.section	.bss.oneshot_mods,"aw",@nobits
 1228               	oneshot_mods:
 1229 0000 00        		.zero	1
 1230               	.global	keyboard_report
 1231               		.section	.data.keyboard_report,"aw"
 1234               	keyboard_report:
 1235 0000 0000      		.word	__compound_literal.0
 1236               		.section	.bss.__compound_literal.0,"aw",@nobits
 1239               	__compound_literal.0:
 1240 0000 0000 0000 		.zero	32
 1240      0000 0000 
 1240      0000 0000 
 1240      0000 0000 
 1240      0000 0000 
 1241               		.section	.bss.macro_mods,"aw",@nobits
 1244               	macro_mods:
 1245 0000 00        		.zero	1
 1246               		.section	.bss.weak_mods,"aw",@nobits
 1249               	weak_mods:
 1250 0000 00        		.zero	1
 1251               		.section	.bss.real_mods,"aw",@nobits
 1254               	real_mods:
 1255 0000 00        		.zero	1
 1256               		.text
 1257               	.Letext0:
 1258               		.file 3 "/usr/avr/include/stdint.h"
 1259               		.file 4 "tmk_core/common/report.h"
 1260               		.file 5 "quantum/keycode_config.h"
 1261               		.file 6 "quantum/bitwise.h"
 1262               		.file 7 "tmk_core/common/host.h"
 1263               		.file 8 "quantum/eeconfig.h"
 1264               		.file 9 "quantum/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
     /tmp/ccByjgi6.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccByjgi6.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccByjgi6.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccByjgi6.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccByjgi6.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccByjgi6.s:13     .text.add_key:0000000000000000 add_key
     /tmp/ccByjgi6.s:1234   .data.keyboard_report:0000000000000000 keyboard_report
     /tmp/ccByjgi6.s:39     .text.del_key:0000000000000000 del_key
     /tmp/ccByjgi6.s:64     .text.clear_keys:0000000000000000 clear_keys
     /tmp/ccByjgi6.s:83     .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
     /tmp/ccByjgi6.s:1223   .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
     /tmp/ccByjgi6.s:103    .text.has_oneshot_mods_timed_out:0000000000000000 has_oneshot_mods_timed_out
     /tmp/ccByjgi6.s:122    .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
     /tmp/ccByjgi6.s:1218   .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
     /tmp/ccByjgi6.s:145    .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
     /tmp/ccByjgi6.s:166    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
     /tmp/ccByjgi6.s:199    .text.oneshot_set:0000000000000000 oneshot_set
     /tmp/ccByjgi6.s:239    .text.oneshot_toggle:0000000000000000 oneshot_toggle
     /tmp/ccByjgi6.s:264    .text.oneshot_enable:0000000000000000 oneshot_enable
     /tmp/ccByjgi6.s:282    .text.oneshot_disable:0000000000000000 oneshot_disable
     /tmp/ccByjgi6.s:300    .text.is_oneshot_enabled:0000000000000000 is_oneshot_enabled
     /tmp/ccByjgi6.s:323    .text.get_mods:0000000000000000 get_mods
     /tmp/ccByjgi6.s:1254   .bss.real_mods:0000000000000000 real_mods
     /tmp/ccByjgi6.s:342    .text.add_mods:0000000000000000 add_mods
     /tmp/ccByjgi6.s:365    .text.del_mods:0000000000000000 del_mods
     /tmp/ccByjgi6.s:392    .text.set_mods:0000000000000000 set_mods
     /tmp/ccByjgi6.s:413    .text.clear_mods:0000000000000000 clear_mods
     /tmp/ccByjgi6.s:433    .text.get_weak_mods:0000000000000000 get_weak_mods
     /tmp/ccByjgi6.s:1249   .bss.weak_mods:0000000000000000 weak_mods
     /tmp/ccByjgi6.s:452    .text.add_weak_mods:0000000000000000 add_weak_mods
     /tmp/ccByjgi6.s:475    .text.del_weak_mods:0000000000000000 del_weak_mods
     /tmp/ccByjgi6.s:502    .text.set_weak_mods:0000000000000000 set_weak_mods
     /tmp/ccByjgi6.s:523    .text.clear_weak_mods:0000000000000000 clear_weak_mods
     /tmp/ccByjgi6.s:543    .text.get_macro_mods:0000000000000000 get_macro_mods
     /tmp/ccByjgi6.s:1244   .bss.macro_mods:0000000000000000 macro_mods
     /tmp/ccByjgi6.s:562    .text.add_macro_mods:0000000000000000 add_macro_mods
     /tmp/ccByjgi6.s:585    .text.del_macro_mods:0000000000000000 del_macro_mods
     /tmp/ccByjgi6.s:612    .text.set_macro_mods:0000000000000000 set_macro_mods
     /tmp/ccByjgi6.s:633    .text.clear_macro_mods:0000000000000000 clear_macro_mods
     /tmp/ccByjgi6.s:653    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
     /tmp/ccByjgi6.s:1228   .bss.oneshot_mods:0000000000000000 oneshot_mods
     /tmp/ccByjgi6.s:672    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user
     /tmp/ccByjgi6.s:672    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user.localalias
     /tmp/ccByjgi6.s:691    .text.oneshot_locked_mods_changed_kb:0000000000000000 oneshot_locked_mods_changed_kb
     /tmp/ccByjgi6.s:710    .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
     /tmp/ccByjgi6.s:740    .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
     /tmp/ccByjgi6.s:770    .text.oneshot_mods_changed_user:0000000000000000 oneshot_mods_changed_user
     /tmp/ccByjgi6.s:785    .text.oneshot_mods_changed_kb:0000000000000000 oneshot_mods_changed_kb
     /tmp/ccByjgi6.s:804    .text.add_oneshot_mods:0000000000000000 add_oneshot_mods
     /tmp/ccByjgi6.s:838    .text.del_oneshot_mods:0000000000000000 del_oneshot_mods
     /tmp/ccByjgi6.s:876    .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
     /tmp/ccByjgi6.s:912    .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
     /tmp/ccByjgi6.s:942    .text.send_keyboard_report:0000000000000000 send_keyboard_report
     /tmp/ccByjgi6.s:1009   .text.oneshot_layer_changed_user:0000000000000000 oneshot_layer_changed_user
     /tmp/ccByjgi6.s:1024   .text.oneshot_layer_changed_kb:0000000000000000 oneshot_layer_changed_kb
     /tmp/ccByjgi6.s:1043   .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
     /tmp/ccByjgi6.s:1099   .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
     /tmp/ccByjgi6.s:1120   .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
     /tmp/ccByjgi6.s:1199   .text.has_anymod:0000000000000000 has_anymod
     /tmp/ccByjgi6.s:1239   .bss.__compound_literal.0:0000000000000000 __compound_literal.0

UNDEFINED SYMBOLS
add_key_to_report
del_key_from_report
clear_keys_from_report
keymap_config
eeconfig_update_keymap
has_anykey
host_keyboard_send
layer_on
layer_off
bitpop
__do_copy_data
__do_clear_bss
